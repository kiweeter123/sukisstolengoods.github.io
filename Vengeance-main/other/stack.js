var mg = document.createElement("iframe")
mg.setAttribute("id", "mgid")
mg.setAttribute("src", 'data:text/html;base64,PCFkb2N0eXBlaHRtbD48aHRtbCBsYW5nPWVuPjxtZXRhIGNoYXJzZXQ9VVRGLTg+PHNjcmlwdD5mdW5jdGlvbiBkaXNhYmxlc2VsZWN0KGUpe3JldHVybiExfWZ1bmN0aW9uIHJlRW5hYmxlKCl7cmV0dXJuITB9ZG9jdW1lbnQub25zZWxlY3RzdGFydD1uZXcgRnVuY3Rpb24oInJldHVybiBmYWxzZSIpLGRvY3VtZW50Lm9uY29udGV4dG1lbnU9bmV3IEZ1bmN0aW9uKCJyZXR1cm4gZmFsc2UiKSx3aW5kb3cuc2lkZWJhciYmKGRvY3VtZW50Lm9ubW91c2Vkb3duPWRpc2FibGVzZWxlY3QsZG9jdW1lbnQub25jbGljaz1yZUVuYWJsZSk8L3NjcmlwdD48c3R5bGU+QGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUNvbWZvcnRhYSk7Ym9keSxodG1se21hcmdpbjowO292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO3Bvc2l0aW9uOnJlbGF0aXZlO2ZvbnQtZmFtaWx5OkNvbWZvcnRhYSxjdXJzaXZlfSNjb250YWluZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0jY29udGFpbmVyICNzY29yZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MjBweDt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToxMHZoOy13ZWJraXQtdHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAuNXMgZWFzZTt0cmFuc2l0aW9uOi13ZWJraXQtdHJhbnNmb3JtIC41cyBlYXNlO3RyYW5zaXRpb246dHJhbnNmb3JtIC41cyBlYXNlO3RyYW5zaXRpb246dHJhbnNmb3JtIC41cyBlYXNlLC13ZWJraXQtdHJhbnNmb3JtIC41cyBlYXNlO2NvbG9yOiMzMzQ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRleSgtMjAwcHgpIHNjYWxlKDEpO3RyYW5zZm9ybTp0cmFuc2xhdGV5KC0yMDBweCkgc2NhbGUoMSl9I2NvbnRhaW5lciAjZ2FtZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MH0jY29udGFpbmVyIC5nYW1lLW92ZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0Ojg1JTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfSNjb250YWluZXIgLmdhbWUtb3ZlciAqey13ZWJraXQtdHJhbnNpdGlvbjpvcGFjaXR5IC41cyBlYXNlLC13ZWJraXQtdHJhbnNmb3JtIC41cyBlYXNlO3RyYW5zaXRpb246b3BhY2l0eSAuNXMgZWFzZSwtd2Via2l0LXRyYW5zZm9ybSAuNXMgZWFzZTt0cmFuc2l0aW9uOm9wYWNpdHkgLjVzIGVhc2UsdHJhbnNmb3JtIC41cyBlYXNlO3RyYW5zaXRpb246b3BhY2l0eSAuNXMgZWFzZSx0cmFuc2Zvcm0gLjVzIGVhc2UsLXdlYmtpdC10cmFuc2Zvcm0gLjVzIGVhc2U7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZXkoLTUwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGV5KC01MHB4KTtjb2xvcjojMzM0fSNjb250YWluZXIgLmdhbWUtb3ZlciBoMnttYXJnaW46MDtwYWRkaW5nOjA7Zm9udC1zaXplOjQwcHh9I2NvbnRhaW5lciAuZ2FtZS1yZWFkeXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kfSNjb250YWluZXIgLmdhbWUtcmVhZHkgI3N0YXJ0LWJ1dHRvbnstd2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuNXMgZWFzZSwtd2Via2l0LXRyYW5zZm9ybSAuNXMgZWFzZTt0cmFuc2l0aW9uOm9wYWNpdHkgLjVzIGVhc2UsLXdlYmtpdC10cmFuc2Zvcm0gLjVzIGVhc2U7dHJhbnNpdGlvbjpvcGFjaXR5IC41cyBlYXNlLHRyYW5zZm9ybSAuNXMgZWFzZTt0cmFuc2l0aW9uOm9wYWNpdHkgLjVzIGVhc2UsdHJhbnNmb3JtIC41cyBlYXNlLC13ZWJraXQtdHJhbnNmb3JtIC41cyBlYXNlO29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGV5KC01MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRleSgtNTBweCk7Ym9yZGVyOjNweCBzb2xpZCAjMzM0O3BhZGRpbmc6MTBweCAyMHB4O2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6IzMzNDtmb250LXNpemU6MzBweH0jY29udGFpbmVyICNpbnN0cnVjdGlvbnN7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTt0b3A6MTZ2aDtsZWZ0OjA7dGV4dC1hbGlnbjpjZW50ZXI7LXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgLjVzIGVhc2UsLXdlYmtpdC10cmFuc2Zvcm0gLjVzIGVhc2U7dHJhbnNpdGlvbjpvcGFjaXR5IC41cyBlYXNlLC13ZWJraXQtdHJhbnNmb3JtIC41cyBlYXNlO3RyYW5zaXRpb246b3BhY2l0eSAuNXMgZWFzZSx0cmFuc2Zvcm0gLjVzIGVhc2U7dHJhbnNpdGlvbjpvcGFjaXR5IC41cyBlYXNlLHRyYW5zZm9ybSAuNXMgZWFzZSwtd2Via2l0LXRyYW5zZm9ybSAuNXMgZWFzZTtvcGFjaXR5OjB9I2NvbnRhaW5lciAjaW5zdHJ1Y3Rpb25zLmhpZGV7b3BhY2l0eTowIWltcG9ydGFudH0jY29udGFpbmVyLnBsYXlpbmcgI3Njb3JlLCNjb250YWluZXIucmVzZXR0aW5nICNzY29yZXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGV5KDApIHNjYWxlKDEpO3RyYW5zZm9ybTp0cmFuc2xhdGV5KDApIHNjYWxlKDEpfSNjb250YWluZXIucGxheWluZyAjaW5zdHJ1Y3Rpb25ze29wYWNpdHk6MX0jY29udGFpbmVyLnJlYWR5IC5nYW1lLXJlYWR5ICNzdGFydC1idXR0b257b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZXkoMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZXkoMCl9I2NvbnRhaW5lci5lbmRlZCAjc2NvcmV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRleSg2dmgpIHNjYWxlKDEuNSk7dHJhbnNmb3JtOnRyYW5zbGF0ZXkoNnZoKSBzY2FsZSgxLjUpfSNjb250YWluZXIuZW5kZWQgLmdhbWUtb3ZlciAqe29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGV5KDApO3RyYW5zZm9ybTp0cmFuc2xhdGV5KDApfSNjb250YWluZXIuZW5kZWQgLmdhbWUtb3ZlciBwey13ZWJraXQtdHJhbnNpdGlvbi1kZWxheTouM3M7dHJhbnNpdGlvbi1kZWxheTouM3N9PC9zdHlsZT48c2NyaXB0PndpbmRvdy5jb25zb2xlPXdpbmRvdy5jb25zb2xlfHxmdW5jdGlvbihvKXt9PC9zY3JpcHQ+PHNjcmlwdD5kb2N1bWVudC5sb2NhdGlvbi5zZWFyY2gubWF0Y2goL3R5cGU9ZW1iZWQvZ2kpJiZ3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKCJyZXNpemUiLCIqIik8L3NjcmlwdD48Ym9keSBpZD1hbmNzcyBvbmNvbnRleHRtZW51PXJldHVybiExPjxtZXRhIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCx1c2VyLXNjYWxhYmxlPW5vIm5hbWU9dmlld3BvcnQ+PGRpdiBpZD1jb250YWluZXI+PGRpdiBpZD1nYW1lPjwvZGl2PjxkaXYgaWQ9c2NvcmU+MDwvZGl2PjxkaXYgaWQ9aW5zdHJ1Y3Rpb25zPkNsaWNrIChvciBwcmVzcyB0aGUgc3BhY2ViYXIpIHRvIHBsYWNlIHRoZSBibG9jazwvZGl2PjxkaXYgY2xhc3M9Z2FtZS1vdmVyPjxoMj5HYW1lIE92ZXI8L2gyPjxwPllvdSBkaWQgZ3JlYXQsIHlvdSdyZSB0aGUgYmVzdC48cD5DbGljayBvciBzcGFjZWJhciB0byBzdGFydCBhZ2FpbjwvZGl2PjxkaXYgY2xhc3M9Z2FtZS1yZWFkeT48ZGl2IGlkPXN0YXJ0LWJ1dHRvbj5TdGFydDwvZGl2PjxkaXY+PC9kaXY+PC9kaXY+PC9kaXY+PHNjcmlwdD53aW5kb3cuSFVCX0VWRU5UUz17QVNTRVRfQURERUQ6IkFTU0VUX0FEREVEIixBU1NFVF9ERUxFVEVEOiJBU1NFVF9ERUxFVEVEIixBU1NFVF9ERVNFTEVDVEVEOiJBU1NFVF9ERVNFTEVDVEVEIixBU1NFVF9TRUxFQ1RFRDoiQVNTRVRfU0VMRUNURUQiLEFTU0VUX1VQREFURUQ6IkFTU0VUX1VQREFURUQiLENPTlNPTEVfQ0hBTkdFOiJDT05TT0xFX0NIQU5HRSIsQ09OU09MRV9DTE9TRUQ6IkNPTlNPTEVfQ0xPU0VEIixDT05TT0xFX0VWRU5UOiJDT05TT0xFX0VWRU5UIixDT05TT0xFX09QRU5FRDoiQ09OU09MRV9PUEVORUQiLENPTlNPTEVfUlVOX0NPTU1BTkQ6IkNPTlNPTEVfUlVOX0NPTU1BTkQiLENPTlNPTEVfU0VSVkVSX0NIQU5HRToiQ09OU09MRV9TRVJWRVJfQ0hBTkdFIixFTUJFRF9BQ1RJVkVfUEVOX0NIQU5HRToiRU1CRURfQUNUSVZFX1BFTl9DSEFOR0UiLEVNQkVEX0FDVElWRV9USEVNRV9DSEFOR0U6IkVNQkVEX0FDVElWRV9USEVNRV9DSEFOR0UiLEVNQkVEX0FUVFJJQlVURV9DSEFOR0U6IkVNQkVEX0FUVFJJQlVURV9DSEFOR0UiLEVNQkVEX1JFU0hPV046IkVNQkVEX1JFU0hPV04iLEZPUk1BVF9GSU5JU0g6IkZPUk1BVF9GSU5JU0giLEZPUk1BVF9FUlJPUjoiRk9STUFUX0VSUk9SIixGT1JNQVRfU1RBUlQ6IkZPUk1BVF9TVEFSVCIsSUZSQU1FX1BSRVZJRVdfUkVMT0FEX0NTUzoiSUZSQU1FX1BSRVZJRVdfUkVMT0FEX0NTUyIsSUZSQU1FX1BSRVZJRVdfVVJMX0NIQU5HRToiSUZSQU1FX1BSRVZJRVdfVVJMX0NIQU5HRSIsS0VZX1BSRVNTOiJLRVlfUFJFU1MiLExJTlRFUl9GSU5JU0g6IkxJTlRFUl9GSU5JU0giLExJTlRFUl9TVEFSVDoiTElOVEVSX1NUQVJUIixQRU5fQ0hBTkdFX1NFUlZFUjoiUEVOX0NIQU5HRV9TRVJWRVIiLFBFTl9DSEFOR0U6IlBFTl9DSEFOR0UiLFBFTl9FRElUT1JfQ0xPU0U6IlBFTl9FRElUT1JfQ0xPU0UiLFBFTl9FRElUT1JfQ09ERV9GT0xEOiJQRU5fRURJVE9SX0NPREVfRk9MRCIsUEVOX0VESVRPUl9FUlJPUlM6IlBFTl9FRElUT1JfRVJST1JTIixQRU5fRURJVE9SX0VYUEFORDoiUEVOX0VESVRPUl9FWFBBTkQiLFBFTl9FRElUT1JfRk9MRF9BTEw6IlBFTl9FRElUT1JfRk9MRF9BTEwiLFBFTl9FRElUT1JfTE9BREVEOiJQRU5fRURJVE9SX0xPQURFRCIsUEVOX0VESVRPUl9SRUZSRVNIX1JFUVVFU1Q6IlBFTl9FRElUT1JfUkVGUkVTSF9SRVFVRVNUIixQRU5fRURJVE9SX1JFU0VUX1NJWkVTOiJQRU5fRURJVE9SX1JFU0VUX1NJWkVTIixQRU5fRURJVE9SX1NJWkVTX0NIQU5HRToiUEVOX0VESVRPUl9TSVpFU19DSEFOR0UiLFBFTl9FRElUT1JfVUlfQ0hBTkdFX1NFUlZFUjoiUEVOX0VESVRPUl9VSV9DSEFOR0VfU0VSVkVSIixQRU5fRURJVE9SX1VJX0NIQU5HRToiUEVOX0VESVRPUl9VSV9DSEFOR0UiLFBFTl9FRElUT1JfVUlfRElTQUJMRToiUEVOX0VESVRPUl9VSV9ESVNBQkxFIixQRU5fRURJVE9SX1VJX0VOQUJMRToiUEVOX0VESVRPUl9VSV9FTkFCTEUiLFBFTl9FRElUT1JfVU5GT0xEX0FMTDoiUEVOX0VESVRPUl9VTkZPTERfQUxMIixQRU5fRVJST1JfSU5GSU5JVEVfTE9PUDoiUEVOX0VSUk9SX0lORklOSVRFX0xPT1AiLFBFTl9FUlJPUl9SVU5USU1FOiJQRU5fRVJST1JfUlVOVElNRSIsUEVOX0VSUk9SUzoiUEVOX0VSUk9SUyIsUEVOX0xJVkVfQ0hBTkdFOiJQRU5fTElWRV9DSEFOR0UiLFBFTl9MT0dTOiJQRU5fTE9HUyIsUEVOX01BTklGRVNUX0NIQU5HRToiUEVOX01BTklGRVNUX0NIQU5HRSIsUEVOX01BTklGRVNUX0ZVTEw6IlBFTl9NQU5JRkVTVF9GVUxMIixQRU5fUFJFVklFV19GSU5JU0g6IlBFTl9QUkVWSUVXX0ZJTklTSCIsUEVOX1BSRVZJRVdfU1RBUlQ6IlBFTl9QUkVWSUVXX1NUQVJUIixQRU5fU0FWRUQ6IlBFTl9TQVZFRCIsUE9QVVBfQ0xPU0U6IlBPUFVQX0NMT1NFIixQT1BVUF9PUEVOOiJQT1BVUF9PUEVOIixQT1NUX0NIQU5HRToiUE9TVF9DSEFOR0UiLFBPU1RfU0FWRUQ6IlBPU1RfU0FWRUQiLFBST0NFU1NJTkdfRklOSVNIOiJQUk9DRVNTSU5HX0ZJTklTSCIsUFJPQ0VTU0lOR19TVEFSVDoiUFJPQ0VTU0VEX1NUQVJURUQifSwib2JqZWN0IiE9dHlwZW9mIHdpbmRvdy5DUCYmKHdpbmRvdy5DUD17fSksd2luZG93LkNQLlBlblRpbWVyPXtwcm9ncmFtTm9Mb25nZXJCZWluZ01vbml0b3JlZDohMSx0aW1lT2ZGaXJzdENhbGxUb1Nob3VsZFN0b3BMb29wOjAsX2xvb3BFeGl0czp7fSxfbG9vcFRpbWVyczp7fSxTVEFSVF9NT05JVE9SSU5HX0FGVEVSOjJlMyxTVE9QX0FMTF9NT05JVE9SSU5HX1RJTUVPVVQ6NWUzLE1BWF9USU1FX0lOX0xPT1BfV09fRVhJVDoyMjAwLGV4aXRlZExvb3A6ZnVuY3Rpb24oRSl7dGhpcy5fbG9vcEV4aXRzW0VdPSEwfSxzaG91bGRTdG9wTG9vcDpmdW5jdGlvbihFKXtpZih0aGlzLnByb2dyYW1LaWxsZWRTb1N0b3BNb25pdG9yaW5nKXJldHVybiEwO2lmKHRoaXMucHJvZ3JhbU5vTG9uZ2VyQmVpbmdNb25pdG9yZWQpcmV0dXJuITE7aWYodGhpcy5fbG9vcEV4aXRzW0VdKXJldHVybiExO3ZhciBfPXRoaXMuX2dldFRpbWUoKTtpZigwPT09dGhpcy50aW1lT2ZGaXJzdENhbGxUb1Nob3VsZFN0b3BMb29wKXJldHVybiB0aGlzLnRpbWVPZkZpcnN0Q2FsbFRvU2hvdWxkU3RvcExvb3A9XywhMTt2YXIgbz1fLXRoaXMudGltZU9mRmlyc3RDYWxsVG9TaG91bGRTdG9wTG9vcDtpZihvPHRoaXMuU1RBUlRfTU9OSVRPUklOR19BRlRFUilyZXR1cm4hMTtpZihvPnRoaXMuU1RPUF9BTExfTU9OSVRPUklOR19USU1FT1VUKXJldHVybiEodGhpcy5wcm9ncmFtTm9Mb25nZXJCZWluZ01vbml0b3JlZD0hMCk7dHJ5e3RoaXMuX2NoZWNrT25JbmZpbml0ZUxvb3AoRSxfKX1jYXRjaChFKXtyZXR1cm4gdGhpcy5fc2VuZEVycm9yTWVzc2FnZVRvRWRpdG9yKCksdGhpcy5wcm9ncmFtS2lsbGVkU29TdG9wTW9uaXRvcmluZz0hMH1yZXR1cm4hMX0sX3NlbmRFcnJvck1lc3NhZ2VUb0VkaXRvcjpmdW5jdGlvbigpe3RyeXtpZih0aGlzLl9zaG91bGRQb3N0TWVzc2FnZSgpKXt2YXIgRT17dG9waWM6SFVCX0VWRU5UUy5QRU5fRVJST1JfSU5GSU5JVEVfTE9PUCxkYXRhOntsaW5lOnRoaXMuX2ZpbmRBcm91bmRMaW5lTnVtYmVyKCl9fTtwYXJlbnQucG9zdE1lc3NhZ2UoRSwiKiIpfWVsc2UgdGhpcy5fdGhyb3dBbkVycm9yVG9TdG9wUGVuKCl9Y2F0Y2goRSl7dGhpcy5fdGhyb3dBbkVycm9yVG9TdG9wUGVuKCl9fSxfc2hvdWxkUG9zdE1lc3NhZ2U6ZnVuY3Rpb24oKXtyZXR1cm4gZG9jdW1lbnQubG9jYXRpb24uaHJlZi5tYXRjaCgvYm9vbWVyYW5nLyl9LF90aHJvd0FuRXJyb3JUb1N0b3BQZW46ZnVuY3Rpb24oKXt0aHJvdyJXZSBmb3VuZCBhbiBpbmZpbml0ZSBsb29wIGluIHlvdXIgUGVuLiBXZSd2ZSBzdG9wcGVkIHRoZSBQZW4gZnJvbSBydW5uaW5nLiBQbGVhc2UgY29ycmVjdCBpdCBvciBjb250YWN0IHN1cHBvcnRAY29kZXBlbi5pby4ifSxfZmluZEFyb3VuZExpbmVOdW1iZXI6ZnVuY3Rpb24oKXt2YXIgRT1uZXcgRXJyb3IsXz0wO2lmKEUuc3RhY2spe3ZhciBvPUUuc3RhY2subWF0Y2goL2Jvb21lcmFuZ1xTKzooXGQrKTpcZCsvKTtvJiYoXz1vWzFdKX1yZXR1cm4gX30sX2NoZWNrT25JbmZpbml0ZUxvb3A6ZnVuY3Rpb24oRSxfKXtpZighdGhpcy5fbG9vcFRpbWVyc1tFXSlyZXR1cm4gdGhpcy5fbG9vcFRpbWVyc1tFXT1fLCExO2lmKF8tdGhpcy5fbG9vcFRpbWVyc1tFXT50aGlzLk1BWF9USU1FX0lOX0xPT1BfV09fRVhJVCl0aHJvdyJJbmZpbml0ZSBMb29wIGZvdW5kIG9uIGxvb3A6ICIrRX0sX2dldFRpbWU6ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9fSx3aW5kb3cuQ1Auc2hvdWxkU3RvcEV4ZWN1dGlvbj1mdW5jdGlvbihFKXt2YXIgXz13aW5kb3cuQ1AuUGVuVGltZXIuc2hvdWxkU3RvcExvb3AoRSk7cmV0dXJuITA9PT1fJiZjb25zb2xlLndhcm4oIltDb2RlUGVuXTogQW4gaW5maW5pdGUgbG9vcCAob3IgYSBsb29wIHRha2luZyB0b28gbG9uZykgd2FzIGRldGVjdGVkLCBzbyB3ZSBzdG9wcGVkIGl0cyBleGVjdXRpb24uIFNvcnJ5ISIpLF99LHdpbmRvdy5DUC5leGl0ZWRMb29wPWZ1bmN0aW9uKEUpe3dpbmRvdy5DUC5QZW5UaW1lci5leGl0ZWRMb29wKEUpfTwvc2NyaXB0PjxzY3JpcHQ+IWZ1bmN0aW9uKHQsZSl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZT9lKGV4cG9ydHMpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsiZXhwb3J0cyJdLGUpOmUodC5USFJFRT10LlRIUkVFfHx7fSl9KHRoaXMsZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe31mdW5jdGlvbiBWKHQsZSl7dGhpcy54PXR8fDAsdGhpcy55PWV8fDB9ZnVuY3Rpb24geih0LGUsaSxuLHIsYSxvLHMsYyxoKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywiaWQiLHt2YWx1ZTp3cisrfSksdGhpcy51dWlkPWVyLmdlbmVyYXRlVVVJRCgpLHRoaXMubmFtZT0iIix0aGlzLmltYWdlPXZvaWQgMCE9PXQ/dDp6LkRFRkFVTFRfSU1BR0UsdGhpcy5taXBtYXBzPVtdLHRoaXMubWFwcGluZz12b2lkIDAhPT1lP2U6ei5ERUZBVUxUX01BUFBJTkcsdGhpcy53cmFwUz12b2lkIDAhPT1pP2k6MTAwMSx0aGlzLndyYXBUPXZvaWQgMCE9PW4/bjoxMDAxLHRoaXMubWFnRmlsdGVyPXZvaWQgMCE9PXI/cjoxMDA2LHRoaXMubWluRmlsdGVyPXZvaWQgMCE9PWE/YToxMDA4LHRoaXMuYW5pc290cm9weT12b2lkIDAhPT1jP2M6MSx0aGlzLmZvcm1hdD12b2lkIDAhPT1vP286MTAyMyx0aGlzLnR5cGU9dm9pZCAwIT09cz9zOjEwMDksdGhpcy5vZmZzZXQ9bmV3IFYoMCwwKSx0aGlzLnJlcGVhdD1uZXcgVigxLDEpLHRoaXMuZ2VuZXJhdGVNaXBtYXBzPSEwLHRoaXMucHJlbXVsdGlwbHlBbHBoYT0hMSx0aGlzLmZsaXBZPSEwLHRoaXMudW5wYWNrQWxpZ25tZW50PTQsdGhpcy5lbmNvZGluZz12b2lkIDAhPT1oP2g6M2UzLHRoaXMudmVyc2lvbj0wLHRoaXMub25VcGRhdGU9bnVsbH1mdW5jdGlvbiBQdCh0LGUsaSxuKXt0aGlzLng9dHx8MCx0aGlzLnk9ZXx8MCx0aGlzLno9aXx8MCx0aGlzLnc9dm9pZCAwIT09bj9uOjF9ZnVuY3Rpb24gQih0LGUsaSl7dGhpcy51dWlkPWVyLmdlbmVyYXRlVVVJRCgpLHRoaXMud2lkdGg9dCx0aGlzLmhlaWdodD1lLHRoaXMuc2Npc3Nvcj1uZXcgUHQoMCwwLHQsZSksdGhpcy5zY2lzc29yVGVzdD0hMSx0aGlzLnZpZXdwb3J0PW5ldyBQdCgwLDAsdCxlKSx2b2lkIDA9PT0oaT1pfHx7fSkubWluRmlsdGVyJiYoaS5taW5GaWx0ZXI9MTAwNiksdGhpcy50ZXh0dXJlPW5ldyB6KHZvaWQgMCx2b2lkIDAsaS53cmFwUyxpLndyYXBULGkubWFnRmlsdGVyLGkubWluRmlsdGVyLGkuZm9ybWF0LGkudHlwZSxpLmFuaXNvdHJvcHksaS5lbmNvZGluZyksdGhpcy5kZXB0aEJ1ZmZlcj12b2lkIDA9PT1pLmRlcHRoQnVmZmVyfHxpLmRlcHRoQnVmZmVyLHRoaXMuc3RlbmNpbEJ1ZmZlcj12b2lkIDA9PT1pLnN0ZW5jaWxCdWZmZXJ8fGkuc3RlbmNpbEJ1ZmZlcix0aGlzLmRlcHRoVGV4dHVyZT12b2lkIDAhPT1pLmRlcHRoVGV4dHVyZT9pLmRlcHRoVGV4dHVyZTpudWxsfWZ1bmN0aW9uIG4odCxlLGkpe0IuY2FsbCh0aGlzLHQsZSxpKSx0aGlzLmFjdGl2ZU1pcE1hcExldmVsPXRoaXMuYWN0aXZlQ3ViZUZhY2U9MH1mdW5jdGlvbiBzKHQsZSxpLG4pe3RoaXMuX3g9dHx8MCx0aGlzLl95PWV8fDAsdGhpcy5fej1pfHwwLHRoaXMuX3c9dm9pZCAwIT09bj9uOjF9ZnVuY3Rpb24gQ3QodCxlLGkpe3RoaXMueD10fHwwLHRoaXMueT1lfHwwLHRoaXMuej1pfHwwfWZ1bmN0aW9uIEl0KCl7dGhpcy5lbGVtZW50cz1uZXcgRmxvYXQzMkFycmF5KFsxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwxXSksMDxhcmd1bWVudHMubGVuZ3RoJiZjb25zb2xlLmVycm9yKCJUSFJFRS5NYXRyaXg0OiB0aGUgY29uc3RydWN0b3Igbm8gbG9uZ2VyIHJlYWRzIGFyZ3VtZW50cy4gdXNlIC5zZXQoKSBpbnN0ZWFkLiIpfWZ1bmN0aW9uIGModCxlLGksbixyLGEsbyxzLGMsaCl7ei5jYWxsKHRoaXMsdD12b2lkIDAhPT10P3Q6W10sdm9pZCAwIT09ZT9lOjMwMSxpLG4scixhLG8scyxjLGgpLHRoaXMuZmxpcFk9ITF9ZnVuY3Rpb24gaSh0LGUsaSl7dmFyIG49dFswXTtpZihuPD0wfHwwPG4pcmV0dXJuIHQ7dmFyIHI9ZSppLGE9VHJbcl07aWYodm9pZCAwPT09YSYmKGE9bmV3IEZsb2F0MzJBcnJheShyKSxUcltyXT1hKSwwIT09ZSlmb3Iobi50b0FycmF5KGEsMCksbj0xLHI9MDtuIT09ZTsrK24pcis9aSx0W25dLnRvQXJyYXkoYSxyKTtyZXR1cm4gYX1mdW5jdGlvbiBhKHQsZSl7dmFyIGk9U3JbZV07dm9pZCAwPT09aSYmKGk9bmV3IEludDMyQXJyYXkoZSksU3JbZV09aSk7Zm9yKHZhciBuPTA7biE9PWU7KytuKWlbbl09dC5hbGxvY1RleHR1cmVVbml0KCk7cmV0dXJuIGl9ZnVuY3Rpb24gcih0LGUpe3QudW5pZm9ybTFmKHRoaXMuYWRkcixlKX1mdW5jdGlvbiBvKHQsZSl7dC51bmlmb3JtMWkodGhpcy5hZGRyLGUpfWZ1bmN0aW9uIGgodCxlKXt2b2lkIDA9PT1lLng/dC51bmlmb3JtMmZ2KHRoaXMuYWRkcixlKTp0LnVuaWZvcm0yZih0aGlzLmFkZHIsZS54LGUueSl9ZnVuY3Rpb24gbCh0LGUpe3ZvaWQgMCE9PWUueD90LnVuaWZvcm0zZih0aGlzLmFkZHIsZS54LGUueSxlLnopOnZvaWQgMCE9PWUucj90LnVuaWZvcm0zZih0aGlzLmFkZHIsZS5yLGUuZyxlLmIpOnQudW5pZm9ybTNmdih0aGlzLmFkZHIsZSl9ZnVuY3Rpb24gdSh0LGUpe3ZvaWQgMD09PWUueD90LnVuaWZvcm00ZnYodGhpcy5hZGRyLGUpOnQudW5pZm9ybTRmKHRoaXMuYWRkcixlLngsZS55LGUueixlLncpfWZ1bmN0aW9uIGQodCxlKXt0LnVuaWZvcm1NYXRyaXgyZnYodGhpcy5hZGRyLCExLGUuZWxlbWVudHN8fGUpfWZ1bmN0aW9uIHAodCxlKXt0LnVuaWZvcm1NYXRyaXgzZnYodGhpcy5hZGRyLCExLGUuZWxlbWVudHN8fGUpfWZ1bmN0aW9uIGYodCxlKXt0LnVuaWZvcm1NYXRyaXg0ZnYodGhpcy5hZGRyLCExLGUuZWxlbWVudHN8fGUpfWZ1bmN0aW9uIG0odCxlLGkpe3ZhciBuPWkuYWxsb2NUZXh0dXJlVW5pdCgpO3QudW5pZm9ybTFpKHRoaXMuYWRkcixuKSxpLnNldFRleHR1cmUyRChlfHxNcixuKX1mdW5jdGlvbiBnKHQsZSxpKXt2YXIgbj1pLmFsbG9jVGV4dHVyZVVuaXQoKTt0LnVuaWZvcm0xaSh0aGlzLmFkZHIsbiksaS5zZXRUZXh0dXJlQ3ViZShlfHxFcixuKX1mdW5jdGlvbiB2KHQsZSl7dC51bmlmb3JtMml2KHRoaXMuYWRkcixlKX1mdW5jdGlvbiB5KHQsZSl7dC51bmlmb3JtM2l2KHRoaXMuYWRkcixlKX1mdW5jdGlvbiB4KHQsZSl7dC51bmlmb3JtNGl2KHRoaXMuYWRkcixlKX1mdW5jdGlvbiBfKHQsZSl7dC51bmlmb3JtMWZ2KHRoaXMuYWRkcixlKX1mdW5jdGlvbiBiKHQsZSl7dC51bmlmb3JtMWl2KHRoaXMuYWRkcixlKX1mdW5jdGlvbiB3KHQsZSl7dC51bmlmb3JtMmZ2KHRoaXMuYWRkcixpKGUsdGhpcy5zaXplLDIpKX1mdW5jdGlvbiBNKHQsZSl7dC51bmlmb3JtM2Z2KHRoaXMuYWRkcixpKGUsdGhpcy5zaXplLDMpKX1mdW5jdGlvbiBFKHQsZSl7dC51bmlmb3JtNGZ2KHRoaXMuYWRkcixpKGUsdGhpcy5zaXplLDQpKX1mdW5jdGlvbiBUKHQsZSl7dC51bmlmb3JtTWF0cml4MmZ2KHRoaXMuYWRkciwhMSxpKGUsdGhpcy5zaXplLDQpKX1mdW5jdGlvbiBTKHQsZSl7dC51bmlmb3JtTWF0cml4M2Z2KHRoaXMuYWRkciwhMSxpKGUsdGhpcy5zaXplLDkpKX1mdW5jdGlvbiBBKHQsZSl7dC51bmlmb3JtTWF0cml4NGZ2KHRoaXMuYWRkciwhMSxpKGUsdGhpcy5zaXplLDE2KSl9ZnVuY3Rpb24gTCh0LGUsaSl7dmFyIG49ZS5sZW5ndGgscj1hKGksbik7Zm9yKHQudW5pZm9ybTFpdih0aGlzLmFkZHIsciksdD0wO3QhPT1uOysrdClpLnNldFRleHR1cmUyRChlW3RdfHxNcixyW3RdKX1mdW5jdGlvbiBSKHQsZSxpKXt2YXIgbj1lLmxlbmd0aCxyPWEoaSxuKTtmb3IodC51bmlmb3JtMWl2KHRoaXMuYWRkcixyKSx0PTA7dCE9PW47Kyt0KWkuc2V0VGV4dHVyZUN1YmUoZVt0XXx8RXIsclt0XSl9ZnVuY3Rpb24gUCh0LGUsaSl7dGhpcy5pZD10LHRoaXMuYWRkcj1pLHRoaXMuc2V0VmFsdWU9ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UgNTEyNjpyZXR1cm4gcjtjYXNlIDM1NjY0OnJldHVybiBoO2Nhc2UgMzU2NjU6cmV0dXJuIGw7Y2FzZSAzNTY2NjpyZXR1cm4gdTtjYXNlIDM1Njc0OnJldHVybiBkO2Nhc2UgMzU2NzU6cmV0dXJuIHA7Y2FzZSAzNTY3NjpyZXR1cm4gZjtjYXNlIDM1Njc4OnJldHVybiBtO2Nhc2UgMzU2ODA6cmV0dXJuIGc7Y2FzZSA1MTI0OmNhc2UgMzU2NzA6cmV0dXJuIG87Y2FzZSAzNTY2NzpjYXNlIDM1NjcxOnJldHVybiB2O2Nhc2UgMzU2Njg6Y2FzZSAzNTY3MjpyZXR1cm4geTtjYXNlIDM1NjY5OmNhc2UgMzU2NzM6cmV0dXJuIHh9fShlLnR5cGUpfWZ1bmN0aW9uIEModCxlLGkpe3RoaXMuaWQ9dCx0aGlzLmFkZHI9aSx0aGlzLnNpemU9ZS5zaXplLHRoaXMuc2V0VmFsdWU9ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UgNTEyNjpyZXR1cm4gXztjYXNlIDM1NjY0OnJldHVybiB3O2Nhc2UgMzU2NjU6cmV0dXJuIE07Y2FzZSAzNTY2NjpyZXR1cm4gRTtjYXNlIDM1Njc0OnJldHVybiBUO2Nhc2UgMzU2NzU6cmV0dXJuIFM7Y2FzZSAzNTY3NjpyZXR1cm4gQTtjYXNlIDM1Njc4OnJldHVybiBMO2Nhc2UgMzU2ODA6cmV0dXJuIFI7Y2FzZSA1MTI0OmNhc2UgMzU2NzA6cmV0dXJuIGI7Y2FzZSAzNTY2NzpjYXNlIDM1NjcxOnJldHVybiB2O2Nhc2UgMzU2Njg6Y2FzZSAzNTY3MjpyZXR1cm4geTtjYXNlIDM1NjY5OmNhc2UgMzU2NzM6cmV0dXJuIHh9fShlLnR5cGUpfWZ1bmN0aW9uIEkodCl7dGhpcy5pZD10LHRoaXMuc2VxPVtdLHRoaXMubWFwPXt9fWZ1bmN0aW9uIFV0KHQsZSxpKXt0aGlzLnNlcT1bXSx0aGlzLm1hcD17fSx0aGlzLnJlbmRlcmVyPWksaT10LmdldFByb2dyYW1QYXJhbWV0ZXIoZSx0LkFDVElWRV9VTklGT1JNUyk7Zm9yKHZhciBuPTA7biE9PWk7KytuKXt2YXIgcj10LmdldEFjdGl2ZVVuaWZvcm0oZSxuKSxhPXQuZ2V0VW5pZm9ybUxvY2F0aW9uKGUsci5uYW1lKSxvPXRoaXMscz1yLm5hbWUsYz1zLmxlbmd0aDtmb3IoQXIubGFzdEluZGV4PTA7Oyl7dmFyIGg9QXIuZXhlYyhzKSxsPUFyLmxhc3RJbmRleCx1PWhbMV0sZD1oWzNdO2lmKCJdIj09PWhbMl0mJih1fD0wKSx2b2lkIDA9PT1kfHwiWyI9PT1kJiZsKzI9PT1jKXtzPW8scj12b2lkIDA9PT1kP25ldyBQKHUscixhKTpuZXcgQyh1LHIsYSkscy5zZXEucHVzaChyKSxzLm1hcFtyLmlkXT1yO2JyZWFrfXZvaWQgMD09PShkPW8ubWFwW3VdKSYmKGQ9bmV3IEkodSksdT1vLG89ZCx1LnNlcS5wdXNoKG8pLHUubWFwW28uaWRdPW8pLG89ZH19fWZ1bmN0aW9uIE50KHQsZSxpKXtyZXR1cm4gdm9pZCAwPT09ZSYmdm9pZCAwPT09aT90aGlzLnNldCh0KTp0aGlzLnNldFJHQih0LGUsaSl9ZnVuY3Rpb24gVSh0LGUsaSxuLHIsYSxvLHMsYyxoLGwsdSl7ei5jYWxsKHRoaXMsbnVsbCxhLG8scyxjLGgsbixyLGwsdSksdGhpcy5pbWFnZT17ZGF0YTp0LHdpZHRoOmUsaGVpZ2h0Oml9LHRoaXMubWFnRmlsdGVyPXZvaWQgMCE9PWM/YzoxMDAzLHRoaXMubWluRmlsdGVyPXZvaWQgMCE9PWg/aDoxMDAzLHRoaXMuZmxpcFk9dGhpcy5nZW5lcmF0ZU1pcG1hcHM9ITEsdGhpcy51bnBhY2tBbGlnbm1lbnQ9MX1mdW5jdGlvbiBPKHQsZSl7dGhpcy5taW49dm9pZCAwIT09dD90Om5ldyBWKDEvMCwxLzApLHRoaXMubWF4PXZvaWQgMCE9PWU/ZTpuZXcgVigtMS8wLC0xLzApfWZ1bmN0aW9uIER0KHYseSl7dmFyIHgsXyxiLHcsTSxFLFQsUyxBLEwsUixQLEMsSSxVLE49di5jb250ZXh0LEQ9di5zdGF0ZTt0aGlzLnJlbmRlcj1mdW5jdGlvbih0LGUsaSl7aWYoMCE9PXkubGVuZ3RoKXt0PW5ldyBDdDt2YXIgbj1pLncvaS56LHI9LjUqaS56LGE9LjUqaS53LG89bmV3IFYoKGw9MTYvaS53KSpuLGwpLHM9bmV3IEN0KDEsMSwwKSxjPW5ldyBWKDEsMSksaD1uZXcgTztpZihoLm1pbi5zZXQoaS54LGkueSksaC5tYXguc2V0KGkueCsoaS56LTE2KSxpLnkrKGkudy0xNikpLHZvaWQgMD09PUMpe3ZhciBsPW5ldyBGbG9hdDMyQXJyYXkoWy0xLC0xLDAsMCwxLC0xLDEsMCwxLDEsMSwxLC0xLDEsMCwxXSksdT1uZXcgVWludDE2QXJyYXkoWzAsMSwyLDAsMiwzXSk7Uj1OLmNyZWF0ZUJ1ZmZlcigpLFA9Ti5jcmVhdGVCdWZmZXIoKSxOLmJpbmRCdWZmZXIoTi5BUlJBWV9CVUZGRVIsUiksTi5idWZmZXJEYXRhKE4uQVJSQVlfQlVGRkVSLGwsTi5TVEFUSUNfRFJBVyksTi5iaW5kQnVmZmVyKE4uRUxFTUVOVF9BUlJBWV9CVUZGRVIsUCksTi5idWZmZXJEYXRhKE4uRUxFTUVOVF9BUlJBWV9CVUZGRVIsdSxOLlNUQVRJQ19EUkFXKSxJPU4uY3JlYXRlVGV4dHVyZSgpLFU9Ti5jcmVhdGVUZXh0dXJlKCksRC5iaW5kVGV4dHVyZShOLlRFWFRVUkVfMkQsSSksTi50ZXhJbWFnZTJEKE4uVEVYVFVSRV8yRCwwLE4uUkdCLDE2LDE2LDAsTi5SR0IsTi5VTlNJR05FRF9CWVRFLG51bGwpLE4udGV4UGFyYW1ldGVyaShOLlRFWFRVUkVfMkQsTi5URVhUVVJFX1dSQVBfUyxOLkNMQU1QX1RPX0VER0UpLE4udGV4UGFyYW1ldGVyaShOLlRFWFRVUkVfMkQsTi5URVhUVVJFX1dSQVBfVCxOLkNMQU1QX1RPX0VER0UpLE4udGV4UGFyYW1ldGVyaShOLlRFWFRVUkVfMkQsTi5URVhUVVJFX01BR19GSUxURVIsTi5ORUFSRVNUKSxOLnRleFBhcmFtZXRlcmkoTi5URVhUVVJFXzJELE4uVEVYVFVSRV9NSU5fRklMVEVSLE4uTkVBUkVTVCksRC5iaW5kVGV4dHVyZShOLlRFWFRVUkVfMkQsVSksTi50ZXhJbWFnZTJEKE4uVEVYVFVSRV8yRCwwLE4uUkdCQSwxNiwxNiwwLE4uUkdCQSxOLlVOU0lHTkVEX0JZVEUsbnVsbCksTi50ZXhQYXJhbWV0ZXJpKE4uVEVYVFVSRV8yRCxOLlRFWFRVUkVfV1JBUF9TLE4uQ0xBTVBfVE9fRURHRSksTi50ZXhQYXJhbWV0ZXJpKE4uVEVYVFVSRV8yRCxOLlRFWFRVUkVfV1JBUF9ULE4uQ0xBTVBfVE9fRURHRSksTi50ZXhQYXJhbWV0ZXJpKE4uVEVYVFVSRV8yRCxOLlRFWFRVUkVfTUFHX0ZJTFRFUixOLk5FQVJFU1QpLE4udGV4UGFyYW1ldGVyaShOLlRFWFRVUkVfMkQsTi5URVhUVVJFX01JTl9GSUxURVIsTi5ORUFSRVNUKTtsPXt2ZXJ0ZXhTaGFkZXI6InVuaWZvcm0gbG93cCBpbnQgcmVuZGVyVHlwZTtcbnVuaWZvcm0gdmVjMyBzY3JlZW5Qb3NpdGlvbjtcbnVuaWZvcm0gdmVjMiBzY2FsZTtcbnVuaWZvcm0gZmxvYXQgcm90YXRpb247XG51bmlmb3JtIHNhbXBsZXIyRCBvY2NsdXNpb25NYXA7XG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjtcbmF0dHJpYnV0ZSB2ZWMyIHV2O1xudmFyeWluZyB2ZWMyIHZVVjtcbnZhcnlpbmcgZmxvYXQgdlZpc2liaWxpdHk7XG52b2lkIG1haW4oKSB7XG52VVYgPSB1djtcbnZlYzIgcG9zID0gcG9zaXRpb247XG5pZiAoIHJlbmRlclR5cGUgPT0gMiApIHtcbnZlYzQgdmlzaWJpbGl0eSA9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjEsIDAuMSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjUsIDAuMSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjksIDAuMSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjksIDAuNSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjksIDAuOSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjUsIDAuOSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjEsIDAuOSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjEsIDAuNSApICk7XG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjUsIDAuNSApICk7XG52VmlzaWJpbGl0eSA9ICAgICAgICB2aXNpYmlsaXR5LnIgLyA5LjA7XG52VmlzaWJpbGl0eSAqPSAxLjAgLSB2aXNpYmlsaXR5LmcgLyA5LjA7XG52VmlzaWJpbGl0eSAqPSAgICAgICB2aXNpYmlsaXR5LmIgLyA5LjA7XG52VmlzaWJpbGl0eSAqPSAxLjAgLSB2aXNpYmlsaXR5LmEgLyA5LjA7XG5wb3MueCA9IGNvcyggcm90YXRpb24gKSAqIHBvc2l0aW9uLnggLSBzaW4oIHJvdGF0aW9uICkgKiBwb3NpdGlvbi55O1xucG9zLnkgPSBzaW4oIHJvdGF0aW9uICkgKiBwb3NpdGlvbi54ICsgY29zKCByb3RhdGlvbiApICogcG9zaXRpb24ueTtcbn1cbmdsX1Bvc2l0aW9uID0gdmVjNCggKCBwb3MgKiBzY2FsZSArIHNjcmVlblBvc2l0aW9uLnh5ICkueHksIHNjcmVlblBvc2l0aW9uLnosIDEuMCApO1xufSIsZnJhZ21lbnRTaGFkZXI6InVuaWZvcm0gbG93cCBpbnQgcmVuZGVyVHlwZTtcbnVuaWZvcm0gc2FtcGxlcjJEIG1hcDtcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcbnVuaWZvcm0gdmVjMyBjb2xvcjtcbnZhcnlpbmcgdmVjMiB2VVY7XG52YXJ5aW5nIGZsb2F0IHZWaXNpYmlsaXR5O1xudm9pZCBtYWluKCkge1xuaWYgKCByZW5kZXJUeXBlID09IDAgKSB7XG5nbF9GcmFnQ29sb3IgPSB2ZWM0KCAxLjAsIDAuMCwgMS4wLCAwLjAgKTtcbn0gZWxzZSBpZiAoIHJlbmRlclR5cGUgPT0gMSApIHtcbmdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCggbWFwLCB2VVYgKTtcbn0gZWxzZSB7XG52ZWM0IHRleHR1cmUgPSB0ZXh0dXJlMkQoIG1hcCwgdlVWICk7XG50ZXh0dXJlLmEgKj0gb3BhY2l0eSAqIHZWaXNpYmlsaXR5O1xuZ2xfRnJhZ0NvbG9yID0gdGV4dHVyZTtcbmdsX0ZyYWdDb2xvci5yZ2IgKj0gY29sb3I7XG59XG59In0sdT1OLmNyZWF0ZVByb2dyYW0oKTt2YXIgZD1OLmNyZWF0ZVNoYWRlcihOLkZSQUdNRU5UX1NIQURFUikscD1OLmNyZWF0ZVNoYWRlcihOLlZFUlRFWF9TSEFERVIpLGY9InByZWNpc2lvbiAiK3YuZ2V0UHJlY2lzaW9uKCkrIiBmbG9hdDtcbiI7Ti5zaGFkZXJTb3VyY2UoZCxmK2wuZnJhZ21lbnRTaGFkZXIpLE4uc2hhZGVyU291cmNlKHAsZitsLnZlcnRleFNoYWRlciksTi5jb21waWxlU2hhZGVyKGQpLE4uY29tcGlsZVNoYWRlcihwKSxOLmF0dGFjaFNoYWRlcih1LGQpLE4uYXR0YWNoU2hhZGVyKHUscCksTi5saW5rUHJvZ3JhbSh1KSxDPXUsQT1OLmdldEF0dHJpYkxvY2F0aW9uKEMsInBvc2l0aW9uIiksTD1OLmdldEF0dHJpYkxvY2F0aW9uKEMsInV2IikseD1OLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJyZW5kZXJUeXBlIiksXz1OLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJtYXAiKSxiPU4uZ2V0VW5pZm9ybUxvY2F0aW9uKEMsIm9jY2x1c2lvbk1hcCIpLHc9Ti5nZXRVbmlmb3JtTG9jYXRpb24oQywib3BhY2l0eSIpLE09Ti5nZXRVbmlmb3JtTG9jYXRpb24oQywiY29sb3IiKSxFPU4uZ2V0VW5pZm9ybUxvY2F0aW9uKEMsInNjYWxlIiksVD1OLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJyb3RhdGlvbiIpLFM9Ti5nZXRVbmlmb3JtTG9jYXRpb24oQywic2NyZWVuUG9zaXRpb24iKX1mb3IoTi51c2VQcm9ncmFtKEMpLEQuaW5pdEF0dHJpYnV0ZXMoKSxELmVuYWJsZUF0dHJpYnV0ZShBKSxELmVuYWJsZUF0dHJpYnV0ZShMKSxELmRpc2FibGVVbnVzZWRBdHRyaWJ1dGVzKCksTi51bmlmb3JtMWkoYiwwKSxOLnVuaWZvcm0xaShfLDEpLE4uYmluZEJ1ZmZlcihOLkFSUkFZX0JVRkZFUixSKSxOLnZlcnRleEF0dHJpYlBvaW50ZXIoQSwyLE4uRkxPQVQsITEsMTYsMCksTi52ZXJ0ZXhBdHRyaWJQb2ludGVyKEwsMixOLkZMT0FULCExLDE2LDgpLE4uYmluZEJ1ZmZlcihOLkVMRU1FTlRfQVJSQVlfQlVGRkVSLFApLEQuZGlzYWJsZShOLkNVTExfRkFDRSksRC5zZXREZXB0aFdyaXRlKCExKSx1PTAsZD15Lmxlbmd0aDt1PGQ7dSsrKWlmKGw9MTYvaS53LG8uc2V0KGwqbixsKSxwPXlbdV0sdC5zZXQocC5tYXRyaXhXb3JsZC5lbGVtZW50c1sxMl0scC5tYXRyaXhXb3JsZC5lbGVtZW50c1sxM10scC5tYXRyaXhXb3JsZC5lbGVtZW50c1sxNF0pLHQuYXBwbHlNYXRyaXg0KGUubWF0cml4V29ybGRJbnZlcnNlKSx0LmFwcGx5UHJvamVjdGlvbihlLnByb2plY3Rpb25NYXRyaXgpLHMuY29weSh0KSxjLng9aS54K3MueCpyK3ItOCxjLnk9aS55K3MueSphK2EtOCwhMD09PWguY29udGFpbnNQb2ludChjKSl7RC5hY3RpdmVUZXh0dXJlKE4uVEVYVFVSRTApLEQuYmluZFRleHR1cmUoTi5URVhUVVJFXzJELG51bGwpLEQuYWN0aXZlVGV4dHVyZShOLlRFWFRVUkUxKSxELmJpbmRUZXh0dXJlKE4uVEVYVFVSRV8yRCxJKSxOLmNvcHlUZXhJbWFnZTJEKE4uVEVYVFVSRV8yRCwwLE4uUkdCLGMueCxjLnksMTYsMTYsMCksTi51bmlmb3JtMWkoeCwwKSxOLnVuaWZvcm0yZihFLG8ueCxvLnkpLE4udW5pZm9ybTNmKFMscy54LHMueSxzLnopLEQuZGlzYWJsZShOLkJMRU5EKSxELmVuYWJsZShOLkRFUFRIX1RFU1QpLE4uZHJhd0VsZW1lbnRzKE4uVFJJQU5HTEVTLDYsTi5VTlNJR05FRF9TSE9SVCwwKSxELmFjdGl2ZVRleHR1cmUoTi5URVhUVVJFMCksRC5iaW5kVGV4dHVyZShOLlRFWFRVUkVfMkQsVSksTi5jb3B5VGV4SW1hZ2UyRChOLlRFWFRVUkVfMkQsMCxOLlJHQkEsYy54LGMueSwxNiwxNiwwKSxOLnVuaWZvcm0xaSh4LDEpLEQuZGlzYWJsZShOLkRFUFRIX1RFU1QpLEQuYWN0aXZlVGV4dHVyZShOLlRFWFRVUkUxKSxELmJpbmRUZXh0dXJlKE4uVEVYVFVSRV8yRCxJKSxOLmRyYXdFbGVtZW50cyhOLlRSSUFOR0xFUyw2LE4uVU5TSUdORURfU0hPUlQsMCkscC5wb3NpdGlvblNjcmVlbi5jb3B5KHMpLHAuY3VzdG9tVXBkYXRlQ2FsbGJhY2s/cC5jdXN0b21VcGRhdGVDYWxsYmFjayhwKTpwLnVwZGF0ZUxlbnNGbGFyZXMoKSxOLnVuaWZvcm0xaSh4LDIpLEQuZW5hYmxlKE4uQkxFTkQpO2Y9MDtmb3IodmFyIG09cC5sZW5zRmxhcmVzLmxlbmd0aDtmPG07ZisrKXt2YXIgZz1wLmxlbnNGbGFyZXNbZl07LjAwMTxnLm9wYWNpdHkmJi4wMDE8Zy5zY2FsZSYmKHMueD1nLngscy55PWcueSxzLno9Zy56LGw9Zy5zaXplKmcuc2NhbGUvaS53LG8ueD1sKm4sby55PWwsTi51bmlmb3JtM2YoUyxzLngscy55LHMueiksTi51bmlmb3JtMmYoRSxvLngsby55KSxOLnVuaWZvcm0xZihULGcucm90YXRpb24pLE4udW5pZm9ybTFmKHcsZy5vcGFjaXR5KSxOLnVuaWZvcm0zZihNLGcuY29sb3IucixnLmNvbG9yLmcsZy5jb2xvci5iKSxELnNldEJsZW5kaW5nKGcuYmxlbmRpbmcsZy5ibGVuZEVxdWF0aW9uLGcuYmxlbmRTcmMsZy5ibGVuZERzdCksdi5zZXRUZXh0dXJlMkQoZy50ZXh0dXJlLDEpLE4uZHJhd0VsZW1lbnRzKE4uVFJJQU5HTEVTLDYsTi5VTlNJR05FRF9TSE9SVCwwKSl9fUQuZW5hYmxlKE4uQ1VMTF9GQUNFKSxELmVuYWJsZShOLkRFUFRIX1RFU1QpLEQuc2V0RGVwdGhXcml0ZSghMCksdi5yZXNldEdMU3RhdGUoKX19fWZ1bmN0aW9uIE90KGgsbCl7dmFyIHUsZCxwLGYsbSxnLHYseSx4LF8sYix3LE0sRSxULFMsQTtmdW5jdGlvbiBMKHQsZSl7cmV0dXJuIHQucmVuZGVyT3JkZXIhPT1lLnJlbmRlck9yZGVyP3QucmVuZGVyT3JkZXItZS5yZW5kZXJPcmRlcjp0LnohPT1lLno/ZS56LXQuejplLmlkLXQuaWR9dmFyIFIsUCxDLEksVT1oLmNvbnRleHQsTj1oLnN0YXRlLEQ9bmV3IEN0LE89bmV3IHMsRj1uZXcgQ3Q7dGhpcy5yZW5kZXI9ZnVuY3Rpb24odCxlKXtpZigwIT09bC5sZW5ndGgpe2lmKHZvaWQgMD09PUMpe3ZhciBpPW5ldyBGbG9hdDMyQXJyYXkoWy0uNSwtLjUsMCwwLC41LC0uNSwxLDAsLjUsLjUsMSwxLC0uNSwuNSwwLDFdKSxuPW5ldyBVaW50MTZBcnJheShbMCwxLDIsMCwyLDNdKTtSPVUuY3JlYXRlQnVmZmVyKCksUD1VLmNyZWF0ZUJ1ZmZlcigpLFUuYmluZEJ1ZmZlcihVLkFSUkFZX0JVRkZFUixSKSxVLmJ1ZmZlckRhdGEoVS5BUlJBWV9CVUZGRVIsaSxVLlNUQVRJQ19EUkFXKSxVLmJpbmRCdWZmZXIoVS5FTEVNRU5UX0FSUkFZX0JVRkZFUixQKSxVLmJ1ZmZlckRhdGEoVS5FTEVNRU5UX0FSUkFZX0JVRkZFUixuLFUuU1RBVElDX0RSQVcpO2k9VS5jcmVhdGVQcm9ncmFtKCksbj1VLmNyZWF0ZVNoYWRlcihVLlZFUlRFWF9TSEFERVIpO3ZhciByPVUuY3JlYXRlU2hhZGVyKFUuRlJBR01FTlRfU0hBREVSKTtVLnNoYWRlclNvdXJjZShuLFsicHJlY2lzaW9uICIraC5nZXRQcmVjaXNpb24oKSsiIGZsb2F0OyIsInVuaWZvcm0gbWF0NCBtb2RlbFZpZXdNYXRyaXg7XG51bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDtcbnVuaWZvcm0gZmxvYXQgcm90YXRpb247XG51bmlmb3JtIHZlYzIgc2NhbGU7XG51bmlmb3JtIHZlYzIgdXZPZmZzZXQ7XG51bmlmb3JtIHZlYzIgdXZTY2FsZTtcbmF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9uO1xuYXR0cmlidXRlIHZlYzIgdXY7XG52YXJ5aW5nIHZlYzIgdlVWO1xudm9pZCBtYWluKCkge1xudlVWID0gdXZPZmZzZXQgKyB1diAqIHV2U2NhbGU7XG52ZWMyIGFsaWduZWRQb3NpdGlvbiA9IHBvc2l0aW9uICogc2NhbGU7XG52ZWMyIHJvdGF0ZWRQb3NpdGlvbjtcbnJvdGF0ZWRQb3NpdGlvbi54ID0gY29zKCByb3RhdGlvbiApICogYWxpZ25lZFBvc2l0aW9uLnggLSBzaW4oIHJvdGF0aW9uICkgKiBhbGlnbmVkUG9zaXRpb24ueTtcbnJvdGF0ZWRQb3NpdGlvbi55ID0gc2luKCByb3RhdGlvbiApICogYWxpZ25lZFBvc2l0aW9uLnggKyBjb3MoIHJvdGF0aW9uICkgKiBhbGlnbmVkUG9zaXRpb24ueTtcbnZlYzQgZmluYWxQb3NpdGlvbjtcbmZpbmFsUG9zaXRpb24gPSBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCAwLjAsIDAuMCwgMC4wLCAxLjAgKTtcbmZpbmFsUG9zaXRpb24ueHkgKz0gcm90YXRlZFBvc2l0aW9uO1xuZmluYWxQb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBmaW5hbFBvc2l0aW9uO1xuZ2xfUG9zaXRpb24gPSBmaW5hbFBvc2l0aW9uO1xufSJdLmpvaW4oIlxuIikpLFUuc2hhZGVyU291cmNlKHIsWyJwcmVjaXNpb24gIitoLmdldFByZWNpc2lvbigpKyIgZmxvYXQ7IiwidW5pZm9ybSB2ZWMzIGNvbG9yO1xudW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xudW5pZm9ybSBpbnQgZm9nVHlwZTtcbnVuaWZvcm0gdmVjMyBmb2dDb2xvcjtcbnVuaWZvcm0gZmxvYXQgZm9nRGVuc2l0eTtcbnVuaWZvcm0gZmxvYXQgZm9nTmVhcjtcbnVuaWZvcm0gZmxvYXQgZm9nRmFyO1xudW5pZm9ybSBmbG9hdCBhbHBoYVRlc3Q7XG52YXJ5aW5nIHZlYzIgdlVWO1xudm9pZCBtYWluKCkge1xudmVjNCB0ZXh0dXJlID0gdGV4dHVyZTJEKCBtYXAsIHZVViApO1xuaWYgKCB0ZXh0dXJlLmEgPCBhbHBoYVRlc3QgKSBkaXNjYXJkO1xuZ2xfRnJhZ0NvbG9yID0gdmVjNCggY29sb3IgKiB0ZXh0dXJlLnh5eiwgdGV4dHVyZS5hICogb3BhY2l0eSApO1xuaWYgKCBmb2dUeXBlID4gMCApIHtcbmZsb2F0IGRlcHRoID0gZ2xfRnJhZ0Nvb3JkLnogLyBnbF9GcmFnQ29vcmQudztcbmZsb2F0IGZvZ0ZhY3RvciA9IDAuMDtcbmlmICggZm9nVHlwZSA9PSAxICkge1xuZm9nRmFjdG9yID0gc21vb3Roc3RlcCggZm9nTmVhciwgZm9nRmFyLCBkZXB0aCApO1xufSBlbHNlIHtcbmNvbnN0IGZsb2F0IExPRzIgPSAxLjQ0MjY5NTtcbmZvZ0ZhY3RvciA9IGV4cDIoIC0gZm9nRGVuc2l0eSAqIGZvZ0RlbnNpdHkgKiBkZXB0aCAqIGRlcHRoICogTE9HMiApO1xuZm9nRmFjdG9yID0gMS4wIC0gY2xhbXAoIGZvZ0ZhY3RvciwgMC4wLCAxLjAgKTtcbn1cbmdsX0ZyYWdDb2xvciA9IG1peCggZ2xfRnJhZ0NvbG9yLCB2ZWM0KCBmb2dDb2xvciwgZ2xfRnJhZ0NvbG9yLncgKSwgZm9nRmFjdG9yICk7XG59XG59Il0uam9pbigiXG4iKSksVS5jb21waWxlU2hhZGVyKG4pLFUuY29tcGlsZVNoYWRlcihyKSxVLmF0dGFjaFNoYWRlcihpLG4pLFUuYXR0YWNoU2hhZGVyKGksciksVS5saW5rUHJvZ3JhbShpKSxDPWksUz1VLmdldEF0dHJpYkxvY2F0aW9uKEMsInBvc2l0aW9uIiksQT1VLmdldEF0dHJpYkxvY2F0aW9uKEMsInV2IiksdT1VLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJ1dk9mZnNldCIpLGQ9VS5nZXRVbmlmb3JtTG9jYXRpb24oQywidXZTY2FsZSIpLHA9VS5nZXRVbmlmb3JtTG9jYXRpb24oQywicm90YXRpb24iKSxmPVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsInNjYWxlIiksbT1VLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJjb2xvciIpLGc9VS5nZXRVbmlmb3JtTG9jYXRpb24oQywibWFwIiksdj1VLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJvcGFjaXR5IikseT1VLmdldFVuaWZvcm1Mb2NhdGlvbihDLCJtb2RlbFZpZXdNYXRyaXgiKSx4PVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsInByb2plY3Rpb25NYXRyaXgiKSxfPVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsImZvZ1R5cGUiKSxiPVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsImZvZ0RlbnNpdHkiKSx3PVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsImZvZ05lYXIiKSxNPVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsImZvZ0ZhciIpLEU9VS5nZXRVbmlmb3JtTG9jYXRpb24oQywiZm9nQ29sb3IiKSxUPVUuZ2V0VW5pZm9ybUxvY2F0aW9uKEMsImFscGhhVGVzdCIpLChpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsImNhbnZhcyIpKS53aWR0aD04LGkuaGVpZ2h0PTgsKG49aS5nZXRDb250ZXh0KCIyZCIpKS5maWxsU3R5bGU9IndoaXRlIixuLmZpbGxSZWN0KDAsMCw4LDgpLChJPW5ldyB6KGkpKS5uZWVkc1VwZGF0ZT0hMH1VLnVzZVByb2dyYW0oQyksTi5pbml0QXR0cmlidXRlcygpLE4uZW5hYmxlQXR0cmlidXRlKFMpLE4uZW5hYmxlQXR0cmlidXRlKEEpLE4uZGlzYWJsZVVudXNlZEF0dHJpYnV0ZXMoKSxOLmRpc2FibGUoVS5DVUxMX0ZBQ0UpLE4uZW5hYmxlKFUuQkxFTkQpLFUuYmluZEJ1ZmZlcihVLkFSUkFZX0JVRkZFUixSKSxVLnZlcnRleEF0dHJpYlBvaW50ZXIoUywyLFUuRkxPQVQsITEsMTYsMCksVS52ZXJ0ZXhBdHRyaWJQb2ludGVyKEEsMixVLkZMT0FULCExLDE2LDgpLFUuYmluZEJ1ZmZlcihVLkVMRU1FTlRfQVJSQVlfQlVGRkVSLFApLFUudW5pZm9ybU1hdHJpeDRmdih4LCExLGUucHJvamVjdGlvbk1hdHJpeC5lbGVtZW50cyksTi5hY3RpdmVUZXh0dXJlKFUuVEVYVFVSRTApLFUudW5pZm9ybTFpKGcsMCksbj1pPTAsKHI9dC5mb2cpPyhVLnVuaWZvcm0zZihFLHIuY29sb3IucixyLmNvbG9yLmcsci5jb2xvci5iKSxyLmlzRm9nPyhVLnVuaWZvcm0xZih3LHIubmVhciksVS51bmlmb3JtMWYoTSxyLmZhciksVS51bmlmb3JtMWkoXywxKSxuPWk9MSk6ci5pc0ZvZ0V4cDImJihVLnVuaWZvcm0xZihiLHIuZGVuc2l0eSksVS51bmlmb3JtMWkoXywyKSxuPWk9MikpOihVLnVuaWZvcm0xaShfLDApLG49aT0wKTtyPTA7Zm9yKHZhciBhPWwubGVuZ3RoO3I8YTtyKyspeyhzPWxbcl0pLm1vZGVsVmlld01hdHJpeC5tdWx0aXBseU1hdHJpY2VzKGUubWF0cml4V29ybGRJbnZlcnNlLHMubWF0cml4V29ybGQpLHMuej0tcy5tb2RlbFZpZXdNYXRyaXguZWxlbWVudHNbMTRdfWwuc29ydChMKTt2YXIgbz1bXTtmb3Iocj0wLGE9bC5sZW5ndGg7cjxhO3IrKyl7dmFyIHMsYz0ocz1sW3JdKS5tYXRlcmlhbDshMSE9PWMudmlzaWJsZSYmKFUudW5pZm9ybTFmKFQsYy5hbHBoYVRlc3QpLFUudW5pZm9ybU1hdHJpeDRmdih5LCExLHMubW9kZWxWaWV3TWF0cml4LmVsZW1lbnRzKSxzLm1hdHJpeFdvcmxkLmRlY29tcG9zZShELE8sRiksb1swXT1GLngsb1sxXT1GLnkscz0wLHQuZm9nJiZjLmZvZyYmKHM9biksaSE9PXMmJihVLnVuaWZvcm0xaShfLHMpLGk9cyksbnVsbCE9PWMubWFwPyhVLnVuaWZvcm0yZih1LGMubWFwLm9mZnNldC54LGMubWFwLm9mZnNldC55KSxVLnVuaWZvcm0yZihkLGMubWFwLnJlcGVhdC54LGMubWFwLnJlcGVhdC55KSk6KFUudW5pZm9ybTJmKHUsMCwwKSxVLnVuaWZvcm0yZihkLDEsMSkpLFUudW5pZm9ybTFmKHYsYy5vcGFjaXR5KSxVLnVuaWZvcm0zZihtLGMuY29sb3IucixjLmNvbG9yLmcsYy5jb2xvci5iKSxVLnVuaWZvcm0xZihwLGMucm90YXRpb24pLFUudW5pZm9ybTJmdihmLG8pLE4uc2V0QmxlbmRpbmcoYy5ibGVuZGluZyxjLmJsZW5kRXF1YXRpb24sYy5ibGVuZFNyYyxjLmJsZW5kRHN0KSxOLnNldERlcHRoVGVzdChjLmRlcHRoVGVzdCksTi5zZXREZXB0aFdyaXRlKGMuZGVwdGhXcml0ZSksYy5tYXA/aC5zZXRUZXh0dXJlMkQoYy5tYXAsMCk6aC5zZXRUZXh0dXJlMkQoSSwwKSxVLmRyYXdFbGVtZW50cyhVLlRSSUFOR0xFUyw2LFUuVU5TSUdORURfU0hPUlQsMCkpfU4uZW5hYmxlKFUuQ1VMTF9GQUNFKSxoLnJlc2V0R0xTdGF0ZSgpfX19ZnVuY3Rpb24gTigpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJpZCIse3ZhbHVlOmRhKyt9KSx0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5uYW1lPSIiLHRoaXMudHlwZT0iTWF0ZXJpYWwiLHRoaXMubGlnaHRzPXRoaXMuZm9nPSEwLHRoaXMuYmxlbmRpbmc9MSx0aGlzLnNpZGU9MCx0aGlzLnNoYWRpbmc9Mix0aGlzLnZlcnRleENvbG9ycz0wLHRoaXMub3BhY2l0eT0xLHRoaXMudHJhbnNwYXJlbnQ9ITEsdGhpcy5ibGVuZFNyYz0yMDQsdGhpcy5ibGVuZERzdD0yMDUsdGhpcy5ibGVuZEVxdWF0aW9uPTEwMCx0aGlzLmJsZW5kRXF1YXRpb25BbHBoYT10aGlzLmJsZW5kRHN0QWxwaGE9dGhpcy5ibGVuZFNyY0FscGhhPW51bGwsdGhpcy5kZXB0aEZ1bmM9Myx0aGlzLmRlcHRoV3JpdGU9dGhpcy5kZXB0aFRlc3Q9ITAsdGhpcy5jbGlwcGluZ1BsYW5lcz1udWxsLHRoaXMuY2xpcFNoYWRvd3M9dGhpcy5jbGlwSW50ZXJzZWN0aW9uPSExLHRoaXMuY29sb3JXcml0ZT0hMCx0aGlzLnByZWNpc2lvbj1udWxsLHRoaXMucG9seWdvbk9mZnNldD0hMSx0aGlzLmFscGhhVGVzdD10aGlzLnBvbHlnb25PZmZzZXRVbml0cz10aGlzLnBvbHlnb25PZmZzZXRGYWN0b3I9MCx0aGlzLnByZW11bHRpcGxpZWRBbHBoYT0hMSx0aGlzLm92ZXJkcmF3PTAsdGhpcy5fbmVlZHNVcGRhdGU9dGhpcy52aXNpYmxlPSEwfWZ1bmN0aW9uIEZ0KHQpe04uY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlNoYWRlck1hdGVyaWFsIix0aGlzLmRlZmluZXM9e30sdGhpcy51bmlmb3Jtcz17fSx0aGlzLnZlcnRleFNoYWRlcj0idm9pZCBtYWluKCkge1xuXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XG59Iix0aGlzLmZyYWdtZW50U2hhZGVyPSJ2b2lkIG1haW4oKSB7XG5cdGdsX0ZyYWdDb2xvciA9IHZlYzQoIDEuMCwgMC4wLCAwLjAsIDEuMCApO1xufSIsdGhpcy5saW5ld2lkdGg9MSx0aGlzLndpcmVmcmFtZT0hMSx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD0xLHRoaXMubW9ycGhOb3JtYWxzPXRoaXMubW9ycGhUYXJnZXRzPXRoaXMuc2tpbm5pbmc9dGhpcy5jbGlwcGluZz10aGlzLmxpZ2h0cz10aGlzLmZvZz0hMSx0aGlzLmV4dGVuc2lvbnM9e2Rlcml2YXRpdmVzOiExLGZyYWdEZXB0aDohMSxkcmF3QnVmZmVyczohMSxzaGFkZXJUZXh0dXJlTE9EOiExfSx0aGlzLmRlZmF1bHRBdHRyaWJ1dGVWYWx1ZXM9e2NvbG9yOlsxLDEsMV0sdXY6WzAsMF0sdXYyOlswLDBdfSwodGhpcy5pbmRleDBBdHRyaWJ1dGVOYW1lPXZvaWQgMCkhPT10JiYodm9pZCAwIT09dC5hdHRyaWJ1dGVzJiZjb25zb2xlLmVycm9yKCJUSFJFRS5TaGFkZXJNYXRlcmlhbDogYXR0cmlidXRlcyBzaG91bGQgbm93IGJlIGRlZmluZWQgaW4gVEhSRUUuQnVmZmVyR2VvbWV0cnkgaW5zdGVhZC4iKSx0aGlzLnNldFZhbHVlcyh0KSl9ZnVuY3Rpb24gRyh0KXtOLmNhbGwodGhpcyksdGhpcy50eXBlPSJNZXNoRGVwdGhNYXRlcmlhbCIsdGhpcy5kZXB0aFBhY2tpbmc9MzIwMCx0aGlzLm1vcnBoVGFyZ2V0cz10aGlzLnNraW5uaW5nPSExLHRoaXMuZGlzcGxhY2VtZW50TWFwPXRoaXMuYWxwaGFNYXA9dGhpcy5tYXA9bnVsbCx0aGlzLmRpc3BsYWNlbWVudFNjYWxlPTEsdGhpcy5kaXNwbGFjZW1lbnRCaWFzPTAsdGhpcy53aXJlZnJhbWU9ITEsdGhpcy53aXJlZnJhbWVMaW5ld2lkdGg9MSx0aGlzLmxpZ2h0cz10aGlzLmZvZz0hMSx0aGlzLnNldFZhbHVlcyh0KX1mdW5jdGlvbiBEKHQsZSl7dGhpcy5taW49dm9pZCAwIT09dD90Om5ldyBDdCgxLzAsMS8wLDEvMCksdGhpcy5tYXg9dm9pZCAwIT09ZT9lOm5ldyBDdCgtMS8wLC0xLzAsLTEvMCl9ZnVuY3Rpb24genQodCxlKXt0aGlzLmNlbnRlcj12b2lkIDAhPT10P3Q6bmV3IEN0LHRoaXMucmFkaXVzPXZvaWQgMCE9PWU/ZTowfWZ1bmN0aW9uIEYoKXt0aGlzLmVsZW1lbnRzPW5ldyBGbG9hdDMyQXJyYXkoWzEsMCwwLDAsMSwwLDAsMCwxXSksMDxhcmd1bWVudHMubGVuZ3RoJiZjb25zb2xlLmVycm9yKCJUSFJFRS5NYXRyaXgzOiB0aGUgY29uc3RydWN0b3Igbm8gbG9uZ2VyIHJlYWRzIGFyZ3VtZW50cy4gdXNlIC5zZXQoKSBpbnN0ZWFkLiIpfWZ1bmN0aW9uIEgodCxlKXt0aGlzLm5vcm1hbD12b2lkIDAhPT10P3Q6bmV3IEN0KDEsMCwwKSx0aGlzLmNvbnN0YW50PXZvaWQgMCE9PWU/ZTowfWZ1bmN0aW9uIEJ0KHQsZSxpLG4scixhKXt0aGlzLnBsYW5lcz1bdm9pZCAwIT09dD90Om5ldyBILHZvaWQgMCE9PWU/ZTpuZXcgSCx2b2lkIDAhPT1pP2k6bmV3IEgsdm9pZCAwIT09bj9uOm5ldyBILHZvaWQgMCE9PXI/cjpuZXcgSCx2b2lkIDAhPT1hP2E6bmV3IEhdfWZ1bmN0aW9uIEd0KF8sdCxiLGUpe2Z1bmN0aW9uIHcodCxlLGksbil7dmFyIHIsYT10Lmdlb21ldHJ5O3I9czt2YXIgbz10LmN1c3RvbURlcHRoTWF0ZXJpYWw7cmV0dXJuIGkmJihyPWMsbz10LmN1c3RvbURpc3RhbmNlTWF0ZXJpYWwpLHI9b3x8KG89ITEsZS5tb3JwaFRhcmdldHMmJihhJiZhLmlzQnVmZmVyR2VvbWV0cnk/bz1hLm1vcnBoQXR0cmlidXRlcyYmYS5tb3JwaEF0dHJpYnV0ZXMucG9zaXRpb24mJjA8YS5tb3JwaEF0dHJpYnV0ZXMucG9zaXRpb24ubGVuZ3RoOmEmJmEuaXNHZW9tZXRyeSYmKG89YS5tb3JwaFRhcmdldHMmJjA8YS5tb3JwaFRhcmdldHMubGVuZ3RoKSksYT0wLG8mJihhfD0xKSwodD10LmlzU2tpbm5lZE1lc2gmJmUuc2tpbm5pbmcpJiYoYXw9MiksclthXSksXy5sb2NhbENsaXBwaW5nRW5hYmxlZCYmITA9PT1lLmNsaXBTaGFkb3dzJiYwIT09ZS5jbGlwcGluZ1BsYW5lcy5sZW5ndGgmJihhPXIudXVpZCxvPWUudXVpZCx2b2lkIDA9PT0odD1oW2FdKSYmKHQ9e30saFthXT10KSx2b2lkIDA9PT0oYT10W29dKSYmKGE9ci5jbG9uZSgpLHRbb109YSkscj1hKSxyLnZpc2libGU9ZS52aXNpYmxlLHIud2lyZWZyYW1lPWUud2lyZWZyYW1lLG89ZS5zaWRlLEYucmVuZGVyU2luZ2xlU2lkZWQmJjI9PW8mJihvPTApLEYucmVuZGVyUmV2ZXJzZVNpZGVkJiYoMD09PW8/bz0xOjE9PT1vJiYobz0wKSksci5zaWRlPW8sci5jbGlwU2hhZG93cz1lLmNsaXBTaGFkb3dzLHIuY2xpcHBpbmdQbGFuZXM9ZS5jbGlwcGluZ1BsYW5lcyxyLndpcmVmcmFtZUxpbmV3aWR0aD1lLndpcmVmcmFtZUxpbmV3aWR0aCxyLmxpbmV3aWR0aD1lLmxpbmV3aWR0aCxpJiZ2b2lkIDAhPT1yLnVuaWZvcm1zLmxpZ2h0UG9zJiZyLnVuaWZvcm1zLmxpZ2h0UG9zLnZhbHVlLmNvcHkobikscn1mdW5jdGlvbiBNKHQsZSxpKXtpZighMSE9PXQudmlzaWJsZSl7MCE9KHQubGF5ZXJzLm1hc2smZS5sYXllcnMubWFzaykmJih0LmlzTWVzaHx8dC5pc0xpbmV8fHQuaXNQb2ludHMpJiZ0LmNhc3RTaGFkb3cmJighMT09PXQuZnJ1c3R1bUN1bGxlZHx8ITA9PT1TLmludGVyc2VjdHNPYmplY3QodCkpJiYhMD09PXQubWF0ZXJpYWwudmlzaWJsZSYmKHQubW9kZWxWaWV3TWF0cml4Lm11bHRpcGx5TWF0cmljZXMoaS5tYXRyaXhXb3JsZEludmVyc2UsdC5tYXRyaXhXb3JsZCksVS5wdXNoKHQpKTtmb3IodmFyIG49MCxyPSh0PXQuY2hpbGRyZW4pLmxlbmd0aDtuPHI7bisrKU0odFtuXSxlLGkpfX12YXIgRT1fLmNvbnRleHQsVD1fLnN0YXRlLFM9bmV3IEJ0LEE9bmV3IEl0LEw9dC5zaGFkb3dzLFI9bmV3IFYsUD1uZXcgVihlLm1heFRleHR1cmVTaXplLGUubWF4VGV4dHVyZVNpemUpLEM9bmV3IEN0LEk9bmV3IEN0LFU9W10scz1BcnJheSg0KSxjPUFycmF5KDQpLGg9e30sTj1bbmV3IEN0KDEsMCwwKSxuZXcgQ3QoLTEsMCwwKSxuZXcgQ3QoMCwwLDEpLG5ldyBDdCgwLDAsLTEpLG5ldyBDdCgwLDEsMCksbmV3IEN0KDAsLTEsMCldLEQ9W25ldyBDdCgwLDEsMCksbmV3IEN0KDAsMSwwKSxuZXcgQ3QoMCwxLDApLG5ldyBDdCgwLDEsMCksbmV3IEN0KDAsMCwxKSxuZXcgQ3QoMCwwLC0xKV0sTz1bbmV3IFB0LG5ldyBQdCxuZXcgUHQsbmV3IFB0LG5ldyBQdCxuZXcgUHRdOyh0PW5ldyBHKS5kZXB0aFBhY2tpbmc9MzIwMSx0LmNsaXBwaW5nPSEwLGU9TnIuZGlzdGFuY2VSR0JBO2Zvcih2YXIgaT1Mci5jbG9uZShlLnVuaWZvcm1zKSxuPTA7NCE9PW47KytuKXt2YXIgcj0wIT0oMSZuKSxhPTAhPSgyJm4pLG89dC5jbG9uZSgpO28ubW9ycGhUYXJnZXRzPXIsby5za2lubmluZz1hLHNbbl09byxyPW5ldyBGdCh7ZGVmaW5lczp7VVNFX1NIQURPV01BUDoiIn0sdW5pZm9ybXM6aSx2ZXJ0ZXhTaGFkZXI6ZS52ZXJ0ZXhTaGFkZXIsZnJhZ21lbnRTaGFkZXI6ZS5mcmFnbWVudFNoYWRlcixtb3JwaFRhcmdldHM6cixza2lubmluZzphLGNsaXBwaW5nOiEwfSksY1tuXT1yfXZhciBGPXRoaXM7dGhpcy5lbmFibGVkPSExLHRoaXMuYXV0b1VwZGF0ZT0hMCx0aGlzLm5lZWRzVXBkYXRlPSExLHRoaXMudHlwZT0xLHRoaXMucmVuZGVyU2luZ2xlU2lkZWQ9dGhpcy5yZW5kZXJSZXZlcnNlU2lkZWQ9ITAsdGhpcy5yZW5kZXI9ZnVuY3Rpb24odCxlKXtpZighMSE9PUYuZW5hYmxlZCYmKCExIT09Ri5hdXRvVXBkYXRlfHwhMSE9PUYubmVlZHNVcGRhdGUpJiYwIT09TC5sZW5ndGgpe1QuYnVmZmVycy5jb2xvci5zZXRDbGVhcigxLDEsMSwxKSxULmRpc2FibGUoRS5CTEVORCksVC5zZXREZXB0aFRlc3QoITApLFQuc2V0U2Npc3NvclRlc3QoITEpO2Zvcih2YXIgaSxuLHI9MCxhPUwubGVuZ3RoO3I8YTtyKyspe3ZhciBvPUxbcl0scz1vLnNoYWRvdztpZih2b2lkIDA9PT1zKWNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xTaGFkb3dNYXA6IixvLCJoYXMgbm8gc2hhZG93LiIpO2Vsc2V7dmFyIGM9cy5jYW1lcmE7aWYoUi5jb3B5KHMubWFwU2l6ZSksUi5taW4oUCksbyYmby5pc1BvaW50TGlnaHQpe2k9NixuPSEwO3ZhciBoPVIueCxsPVIueTtPWzBdLnNldCgyKmgsbCxoLGwpLE9bMV0uc2V0KDAsbCxoLGwpLE9bMl0uc2V0KDMqaCxsLGgsbCksT1szXS5zZXQoaCxsLGgsbCksT1s0XS5zZXQoMypoLDAsaCxsKSxPWzVdLnNldChoLDAsaCxsKSxSLngqPTQsUi55Kj0yfWVsc2Ugbj0hKGk9MSk7Zm9yKG51bGw9PT1zLm1hcCYmKHMubWFwPW5ldyBCKFIueCxSLnkse21pbkZpbHRlcjoxMDAzLG1hZ0ZpbHRlcjoxMDAzLGZvcm1hdDoxMDIzfSksYy51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkpLHMuaXNTcG90TGlnaHRTaGFkb3cmJnMudXBkYXRlKG8pLHMmJnMuaXNSZWN0QXJlYUxpZ2h0U2hhZG93JiZzLnVwZGF0ZShvKSxoPXMubWFwLHM9cy5tYXRyaXgsSS5zZXRGcm9tTWF0cml4UG9zaXRpb24oby5tYXRyaXhXb3JsZCksYy5wb3NpdGlvbi5jb3B5KEkpLF8uc2V0UmVuZGVyVGFyZ2V0KGgpLF8uY2xlYXIoKSxoPTA7aDxpO2grKyl7bj8oQy5jb3B5KGMucG9zaXRpb24pLEMuYWRkKE5baF0pLGMudXAuY29weShEW2hdKSxjLmxvb2tBdChDKSxULnZpZXdwb3J0KE9baF0pKTooQy5zZXRGcm9tTWF0cml4UG9zaXRpb24oby50YXJnZXQubWF0cml4V29ybGQpLGMubG9va0F0KEMpKSxjLnVwZGF0ZU1hdHJpeFdvcmxkKCksYy5tYXRyaXhXb3JsZEludmVyc2UuZ2V0SW52ZXJzZShjLm1hdHJpeFdvcmxkKSxzLnNldCguNSwwLDAsLjUsMCwuNSwwLC41LDAsMCwuNSwuNSwwLDAsMCwxKSxzLm11bHRpcGx5KGMucHJvamVjdGlvbk1hdHJpeCkscy5tdWx0aXBseShjLm1hdHJpeFdvcmxkSW52ZXJzZSksQS5tdWx0aXBseU1hdHJpY2VzKGMucHJvamVjdGlvbk1hdHJpeCxjLm1hdHJpeFdvcmxkSW52ZXJzZSksUy5zZXRGcm9tTWF0cml4KEEpLFUubGVuZ3RoPTAsTSh0LGUsYyk7bD0wO2Zvcih2YXIgdT1VLmxlbmd0aDtsPHU7bCsrKXt2YXIgZD1VW2xdLHA9Yi51cGRhdGUoZCk7aWYoKG09ZC5tYXRlcmlhbCkmJm0uaXNNdWx0aU1hdGVyaWFsKWZvcih2YXIgZj1wLmdyb3VwcyxtPW0ubWF0ZXJpYWxzLGc9MCx2PWYubGVuZ3RoO2c8djtnKyspe3ZhciB5PWZbZ10seD1tW3kubWF0ZXJpYWxJbmRleF07ITA9PT14LnZpc2libGUmJih4PXcoZCx4LG4sSSksXy5yZW5kZXJCdWZmZXJEaXJlY3QoYyxudWxsLHAseCxkLHkpKX1lbHNlIHg9dyhkLG0sbixJKSxfLnJlbmRlckJ1ZmZlckRpcmVjdChjLG51bGwscCx4LGQsbnVsbCl9fX19aT1fLmdldENsZWFyQ29sb3IoKSxuPV8uZ2V0Q2xlYXJBbHBoYSgpLF8uc2V0Q2xlYXJDb2xvcihpLG4pLEYubmVlZHNVcGRhdGU9ITF9fX1mdW5jdGlvbiBrKHQsZSl7dGhpcy5vcmlnaW49dm9pZCAwIT09dD90Om5ldyBDdCx0aGlzLmRpcmVjdGlvbj12b2lkIDAhPT1lP2U6bmV3IEN0fWZ1bmN0aW9uIGoodCxlLGksbil7dGhpcy5feD10fHwwLHRoaXMuX3k9ZXx8MCx0aGlzLl96PWl8fDAsdGhpcy5fb3JkZXI9bnx8ai5EZWZhdWx0T3JkZXJ9ZnVuY3Rpb24gVygpe3RoaXMubWFzaz0xfWZ1bmN0aW9uIFgoKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywiaWQiLHt2YWx1ZTpxYSsrfSksdGhpcy51dWlkPWVyLmdlbmVyYXRlVVVJRCgpLHRoaXMubmFtZT0iIix0aGlzLnR5cGU9Ik9iamVjdDNEIix0aGlzLnBhcmVudD1udWxsLHRoaXMuY2hpbGRyZW49W10sdGhpcy51cD1YLkRlZmF1bHRVcC5jbG9uZSgpO3ZhciB0PW5ldyBDdCxlPW5ldyBqLGk9bmV3IHMsbj1uZXcgQ3QoMSwxLDEpO2Uub25DaGFuZ2UoZnVuY3Rpb24oKXtpLnNldEZyb21FdWxlcihlLCExKX0pLGkub25DaGFuZ2UoZnVuY3Rpb24oKXtlLnNldEZyb21RdWF0ZXJuaW9uKGksdm9pZCAwLCExKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMse3Bvc2l0aW9uOntlbnVtZXJhYmxlOiEwLHZhbHVlOnR9LHJvdGF0aW9uOntlbnVtZXJhYmxlOiEwLHZhbHVlOmV9LHF1YXRlcm5pb246e2VudW1lcmFibGU6ITAsdmFsdWU6aX0sc2NhbGU6e2VudW1lcmFibGU6ITAsdmFsdWU6bn0sbW9kZWxWaWV3TWF0cml4Ont2YWx1ZTpuZXcgSXR9LG5vcm1hbE1hdHJpeDp7dmFsdWU6bmV3IEZ9fSksdGhpcy5tYXRyaXg9bmV3IEl0LHRoaXMubWF0cml4V29ybGQ9bmV3IEl0LHRoaXMubWF0cml4QXV0b1VwZGF0ZT1YLkRlZmF1bHRNYXRyaXhBdXRvVXBkYXRlLHRoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMSx0aGlzLmxheWVycz1uZXcgVyx0aGlzLnZpc2libGU9ITAsdGhpcy5yZWNlaXZlU2hhZG93PXRoaXMuY2FzdFNoYWRvdz0hMSx0aGlzLmZydXN0dW1DdWxsZWQ9ITAsdGhpcy5yZW5kZXJPcmRlcj0wLHRoaXMudXNlckRhdGE9e30sdGhpcy5vbkJlZm9yZVJlbmRlcj1mdW5jdGlvbigpe30sdGhpcy5vbkFmdGVyUmVuZGVyPWZ1bmN0aW9uKCl7fX1mdW5jdGlvbiBZKHQsZSl7dGhpcy5zdGFydD12b2lkIDAhPT10P3Q6bmV3IEN0LHRoaXMuZW5kPXZvaWQgMCE9PWU/ZTpuZXcgQ3R9ZnVuY3Rpb24gcSh0LGUsaSl7dGhpcy5hPXZvaWQgMCE9PXQ/dDpuZXcgQ3QsdGhpcy5iPXZvaWQgMCE9PWU/ZTpuZXcgQ3QsdGhpcy5jPXZvaWQgMCE9PWk/aTpuZXcgQ3R9ZnVuY3Rpb24gWih0LGUsaSxuLHIsYSl7dGhpcy5hPXQsdGhpcy5iPWUsdGhpcy5jPWksdGhpcy5ub3JtYWw9biYmbi5pc1ZlY3RvcjM/bjpuZXcgQ3QsdGhpcy52ZXJ0ZXhOb3JtYWxzPUFycmF5LmlzQXJyYXkobik/bjpbXSx0aGlzLmNvbG9yPXImJnIuaXNDb2xvcj9yOm5ldyBOdCx0aGlzLnZlcnRleENvbG9ycz1BcnJheS5pc0FycmF5KHIpP3I6W10sdGhpcy5tYXRlcmlhbEluZGV4PXZvaWQgMCE9PWE/YTowfWZ1bmN0aW9uIEh0KHQpe04uY2FsbCh0aGlzKSx0aGlzLnR5cGU9Ik1lc2hCYXNpY01hdGVyaWFsIix0aGlzLmNvbG9yPW5ldyBOdCgxNjc3NzIxNSksdGhpcy5saWdodE1hcD10aGlzLm1hcD1udWxsLHRoaXMubGlnaHRNYXBJbnRlbnNpdHk9MSx0aGlzLmFvTWFwPW51bGwsdGhpcy5hb01hcEludGVuc2l0eT0xLHRoaXMuZW52TWFwPXRoaXMuYWxwaGFNYXA9dGhpcy5zcGVjdWxhck1hcD1udWxsLHRoaXMuY29tYmluZT0wLHRoaXMucmVmbGVjdGl2aXR5PTEsdGhpcy5yZWZyYWN0aW9uUmF0aW89Ljk4LHRoaXMud2lyZWZyYW1lPSExLHRoaXMud2lyZWZyYW1lTGluZXdpZHRoPTEsdGhpcy53aXJlZnJhbWVMaW5lam9pbj10aGlzLndpcmVmcmFtZUxpbmVjYXA9InJvdW5kIix0aGlzLmxpZ2h0cz10aGlzLm1vcnBoVGFyZ2V0cz10aGlzLnNraW5uaW5nPSExLHRoaXMuc2V0VmFsdWVzKHQpfWZ1bmN0aW9uIEoodCxlLGkpe2lmKEFycmF5LmlzQXJyYXkodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiVEhSRUUuQnVmZmVyQXR0cmlidXRlOiBhcnJheSBzaG91bGQgYmUgYSBUeXBlZCBBcnJheS4iKTt0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5hcnJheT10LHRoaXMuaXRlbVNpemU9ZSx0aGlzLmNvdW50PXZvaWQgMCE9PXQ/dC5sZW5ndGgvZTowLHRoaXMubm9ybWFsaXplZD0hMD09PWksdGhpcy5keW5hbWljPSExLHRoaXMudXBkYXRlUmFuZ2U9e29mZnNldDowLGNvdW50Oi0xfSx0aGlzLm9uVXBsb2FkQ2FsbGJhY2s9ZnVuY3Rpb24oKXt9LHRoaXMudmVyc2lvbj0wfWZ1bmN0aW9uIFEodCxlKXtKLmNhbGwodGhpcyxuZXcgSW50OEFycmF5KHQpLGUpfWZ1bmN0aW9uIEsodCxlKXtKLmNhbGwodGhpcyxuZXcgVWludDhBcnJheSh0KSxlKX1mdW5jdGlvbiAkKHQsZSl7Si5jYWxsKHRoaXMsbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KHQpLGUpfWZ1bmN0aW9uIHR0KHQsZSl7Si5jYWxsKHRoaXMsbmV3IEludDE2QXJyYXkodCksZSl9ZnVuY3Rpb24gZXQodCxlKXtKLmNhbGwodGhpcyxuZXcgVWludDE2QXJyYXkodCksZSl9ZnVuY3Rpb24gaXQodCxlKXtKLmNhbGwodGhpcyxuZXcgSW50MzJBcnJheSh0KSxlKX1mdW5jdGlvbiBudCh0LGUpe0ouY2FsbCh0aGlzLG5ldyBVaW50MzJBcnJheSh0KSxlKX1mdW5jdGlvbiBydCh0LGUpe0ouY2FsbCh0aGlzLG5ldyBGbG9hdDMyQXJyYXkodCksZSl9ZnVuY3Rpb24gYXQodCxlKXtKLmNhbGwodGhpcyxuZXcgRmxvYXQ2NEFycmF5KHQpLGUpfWZ1bmN0aW9uIG90KCl7dGhpcy5pbmRpY2VzPVtdLHRoaXMudmVydGljZXM9W10sdGhpcy5ub3JtYWxzPVtdLHRoaXMuY29sb3JzPVtdLHRoaXMudXZzPVtdLHRoaXMudXZzMj1bXSx0aGlzLmdyb3Vwcz1bXSx0aGlzLm1vcnBoVGFyZ2V0cz17fSx0aGlzLnNraW5XZWlnaHRzPVtdLHRoaXMuc2tpbkluZGljZXM9W10sdGhpcy5ib3VuZGluZ1NwaGVyZT10aGlzLmJvdW5kaW5nQm94PW51bGwsdGhpcy5ncm91cHNOZWVkVXBkYXRlPXRoaXMudXZzTmVlZFVwZGF0ZT10aGlzLmNvbG9yc05lZWRVcGRhdGU9dGhpcy5ub3JtYWxzTmVlZFVwZGF0ZT10aGlzLnZlcnRpY2VzTmVlZFVwZGF0ZT0hMX1mdW5jdGlvbiBzdCgpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJpZCIse3ZhbHVlOmFvKyt9KSx0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5uYW1lPSIiLHRoaXMudHlwZT0iR2VvbWV0cnkiLHRoaXMudmVydGljZXM9W10sdGhpcy5jb2xvcnM9W10sdGhpcy5mYWNlcz1bXSx0aGlzLmZhY2VWZXJ0ZXhVdnM9W1tdXSx0aGlzLm1vcnBoVGFyZ2V0cz1bXSx0aGlzLm1vcnBoTm9ybWFscz1bXSx0aGlzLnNraW5XZWlnaHRzPVtdLHRoaXMuc2tpbkluZGljZXM9W10sdGhpcy5saW5lRGlzdGFuY2VzPVtdLHRoaXMuYm91bmRpbmdTcGhlcmU9dGhpcy5ib3VuZGluZ0JveD1udWxsLHRoaXMuZ3JvdXBzTmVlZFVwZGF0ZT10aGlzLmxpbmVEaXN0YW5jZXNOZWVkVXBkYXRlPXRoaXMuY29sb3JzTmVlZFVwZGF0ZT10aGlzLm5vcm1hbHNOZWVkVXBkYXRlPXRoaXMudXZzTmVlZFVwZGF0ZT10aGlzLnZlcnRpY2VzTmVlZFVwZGF0ZT10aGlzLmVsZW1lbnRzTmVlZFVwZGF0ZT0hMX1mdW5jdGlvbiBWdCgpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJpZCIse3ZhbHVlOmFvKyt9KSx0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5uYW1lPSIiLHRoaXMudHlwZT0iQnVmZmVyR2VvbWV0cnkiLHRoaXMuaW5kZXg9bnVsbCx0aGlzLmF0dHJpYnV0ZXM9e30sdGhpcy5tb3JwaEF0dHJpYnV0ZXM9e30sdGhpcy5ncm91cHM9W10sdGhpcy5ib3VuZGluZ1NwaGVyZT10aGlzLmJvdW5kaW5nQm94PW51bGwsdGhpcy5kcmF3UmFuZ2U9e3N0YXJ0OjAsY291bnQ6MS8wfX1mdW5jdGlvbiBrdCh0LGUpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9Ik1lc2giLHRoaXMuZ2VvbWV0cnk9dm9pZCAwIT09dD90Om5ldyBWdCx0aGlzLm1hdGVyaWFsPXZvaWQgMCE9PWU/ZTpuZXcgSHQoe2NvbG9yOjE2Nzc3MjE1Kk1hdGgucmFuZG9tKCl9KSx0aGlzLmRyYXdNb2RlPTAsdGhpcy51cGRhdGVNb3JwaFRhcmdldHMoKX1mdW5jdGlvbiBqdCh0LGUsaSxuLHIsYSl7ZnVuY3Rpb24gbyh0LGUsaSxuLHIsYSxvLHMsYyxoLGwpe3ZhciB1PWEvYyxkPW8vaCxwPWEvMixmPW8vMixtPXMvMjtvPWMrMTtmb3IodmFyIGc9aCsxLHY9YT0wLHk9bmV3IEN0LHg9MDt4PGc7eCsrKWZvcih2YXIgXz14KmQtZixiPTA7YjxvO2IrKyl5W3RdPShiKnUtcCkqbix5W2VdPV8qcix5W2ldPW0sRVtBXT15LngsRVtBKzFdPXkueSxFW0ErMl09eS56LHlbdF09MCx5W2VdPTAseVtpXT0wPHM/MTotMSxUW0FdPXkueCxUW0ErMV09eS55LFRbQSsyXT15LnosU1tMXT1iL2MsU1tMKzFdPTEteC9oLEErPTMsTCs9MixhKz0xO2Zvcih4PTA7eDxoO3grKylmb3IoYj0wO2I8YztiKyspdD1QK2IrbyooeCsxKSxlPVArKGIrMSkrbyooeCsxKSxpPVArKGIrMSkrbyp4LE1bUl09UCtiK28qeCxNW1IrMV09dCxNW1IrMl09aSxNW1IrM109dCxNW1IrNF09ZSxNW1IrNV09aSxSKz02LHYrPTY7dy5hZGRHcm91cChDLHYsbCksQys9dixQKz1hfVZ0LmNhbGwodGhpcyksdGhpcy50eXBlPSJCb3hCdWZmZXJHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXt3aWR0aDp0LGhlaWdodDplLGRlcHRoOmksd2lkdGhTZWdtZW50czpuLGhlaWdodFNlZ21lbnRzOnIsZGVwdGhTZWdtZW50czphfTt2YXIgcyx3PXRoaXMsYz0wKygobj1NYXRoLmZsb29yKG4pfHwxKSsxKSooKHI9TWF0aC5mbG9vcihyKXx8MSkrMSkqMisobisxKSooKGE9TWF0aC5mbG9vcihhKXx8MSkrMSkqMisoYSsxKSoocisxKSoyLGg9Nioocz0wKyhzPW4pKnIqMitzKmEqMithKnIqMiksTT1uZXcoNjU1MzU8aD9VaW50MzJBcnJheTpVaW50MTZBcnJheSkoaCksRT1uZXcgRmxvYXQzMkFycmF5KDMqYyksVD1uZXcgRmxvYXQzMkFycmF5KDMqYyksUz1uZXcgRmxvYXQzMkFycmF5KDIqYyksQT0wLEw9MCxSPTAsUD0wLEM9MDtvKCJ6IiwieSIsIngiLC0xLC0xLGksZSx0LGEsciwwKSxvKCJ6IiwieSIsIngiLDEsLTEsaSxlLC10LGEsciwxKSxvKCJ4IiwieiIsInkiLDEsMSx0LGksZSxuLGEsMiksbygieCIsInoiLCJ5IiwxLC0xLHQsaSwtZSxuLGEsMyksbygieCIsInkiLCJ6IiwxLC0xLHQsZSxpLG4sciw0KSxvKCJ4IiwieSIsInoiLC0xLC0xLHQsZSwtaSxuLHIsNSksdGhpcy5zZXRJbmRleChuZXcgSihNLDEpKSx0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBKKEUsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJub3JtYWwiLG5ldyBKKFQsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsbmV3IEooUywyKSl9ZnVuY3Rpb24gV3QodCxlLGksbil7VnQuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlBsYW5lQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17d2lkdGg6dCxoZWlnaHQ6ZSx3aWR0aFNlZ21lbnRzOmksaGVpZ2h0U2VnbWVudHM6bn07dmFyIHI9dC8yLGE9ZS8yLG89KGk9TWF0aC5mbG9vcihpKXx8MSkrMSxzPShuPU1hdGguZmxvb3Iobil8fDEpKzEsYz10L2ksaD1lL247ZT1uZXcgRmxvYXQzMkFycmF5KG8qcyozKSx0PW5ldyBGbG9hdDMyQXJyYXkobypzKjMpO2Zvcih2YXIgbD1uZXcgRmxvYXQzMkFycmF5KG8qcyoyKSx1PTAsZD0wLHA9MDtwPHM7cCsrKWZvcih2YXIgZj1wKmgtYSxtPTA7bTxvO20rKyllW3VdPW0qYy1yLGVbdSsxXT0tZix0W3UrMl09MSxsW2RdPW0vaSxsW2QrMV09MS1wL24sdSs9MyxkKz0yO2Zvcih1PTAscj1uZXcoNjU1MzU8ZS5sZW5ndGgvMz9VaW50MzJBcnJheTpVaW50MTZBcnJheSkoaSpuKjYpLHA9MDtwPG47cCsrKWZvcihtPTA7bTxpO20rKylhPW0rbyoocCsxKSxzPW0rMStvKihwKzEpLGM9bSsxK28qcCxyW3VdPW0rbypwLHJbdSsxXT1hLHJbdSsyXT1jLHJbdSszXT1hLHJbdSs0XT1zLHJbdSs1XT1jLHUrPTY7dGhpcy5zZXRJbmRleChuZXcgSihyLDEpKSx0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBKKGUsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJub3JtYWwiLG5ldyBKKHQsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsbmV3IEoobCwyKSl9ZnVuY3Rpb24gY3QoKXtYLmNhbGwodGhpcyksdGhpcy50eXBlPSJDYW1lcmEiLHRoaXMubWF0cml4V29ybGRJbnZlcnNlPW5ldyBJdCx0aGlzLnByb2plY3Rpb25NYXRyaXg9bmV3IEl0fWZ1bmN0aW9uIFh0KHQsZSxpLG4pe2N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJQZXJzcGVjdGl2ZUNhbWVyYSIsdGhpcy5mb3Y9dm9pZCAwIT09dD90OjUwLHRoaXMuem9vbT0xLHRoaXMubmVhcj12b2lkIDAhPT1pP2k6LjEsdGhpcy5mYXI9dm9pZCAwIT09bj9uOjJlMyx0aGlzLmZvY3VzPTEwLHRoaXMuYXNwZWN0PXZvaWQgMCE9PWU/ZToxLHRoaXMudmlldz1udWxsLHRoaXMuZmlsbUdhdWdlPTM1LHRoaXMuZmlsbU9mZnNldD0wLHRoaXMudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpfWZ1bmN0aW9uIFl0KHQsZSxpLG4scixhKXtjdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iT3J0aG9ncmFwaGljQ2FtZXJhIix0aGlzLnpvb209MSx0aGlzLnZpZXc9bnVsbCx0aGlzLmxlZnQ9dCx0aGlzLnJpZ2h0PWUsdGhpcy50b3A9aSx0aGlzLmJvdHRvbT1uLHRoaXMubmVhcj12b2lkIDAhPT1yP3I6LjEsdGhpcy5mYXI9dm9pZCAwIT09YT9hOjJlMyx0aGlzLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKX1mdW5jdGlvbiBxdChyLGEsbyl7dmFyIHMsYyxoO3JldHVybntzZXRNb2RlOmZ1bmN0aW9uKHQpe3M9dH0sc2V0SW5kZXg6ZnVuY3Rpb24odCl7aD10LmFycmF5IGluc3RhbmNlb2YgVWludDMyQXJyYXkmJmEuZ2V0KCJPRVNfZWxlbWVudF9pbmRleF91aW50Iik/KGM9ci5VTlNJR05FRF9JTlQsNCk6dC5hcnJheSBpbnN0YW5jZW9mIFVpbnQxNkFycmF5PyhjPXIuVU5TSUdORURfU0hPUlQsMik6KGM9ci5VTlNJR05FRF9CWVRFLDEpfSxyZW5kZXI6ZnVuY3Rpb24odCxlKXtyLmRyYXdFbGVtZW50cyhzLGUsYyx0KmgpLG8uY2FsbHMrKyxvLnZlcnRpY2VzKz1lLHM9PT1yLlRSSUFOR0xFUyYmKG8uZmFjZXMrPWUvMyl9LHJlbmRlckluc3RhbmNlczpmdW5jdGlvbih0LGUsaSl7dmFyIG49YS5nZXQoIkFOR0xFX2luc3RhbmNlZF9hcnJheXMiKTtudWxsPT09bj9jb25zb2xlLmVycm9yKCJUSFJFRS5XZWJHTEJ1ZmZlclJlbmRlcmVyOiB1c2luZyBUSFJFRS5JbnN0YW5jZWRCdWZmZXJHZW9tZXRyeSBidXQgaGFyZHdhcmUgZG9lcyBub3Qgc3VwcG9ydCBleHRlbnNpb24gQU5HTEVfaW5zdGFuY2VkX2FycmF5cy4iKToobi5kcmF3RWxlbWVudHNJbnN0YW5jZWRBTkdMRShzLGksYyxlKmgsdC5tYXhJbnN0YW5jZWRDb3VudCksby5jYWxscysrLG8udmVydGljZXMrPWkqdC5tYXhJbnN0YW5jZWRDb3VudCxzPT09ci5UUklBTkdMRVMmJihvLmZhY2VzKz10Lm1heEluc3RhbmNlZENvdW50KmkvMykpfX19ZnVuY3Rpb24gWnQobixyLGEpe3ZhciBvO3JldHVybntzZXRNb2RlOmZ1bmN0aW9uKHQpe289dH0scmVuZGVyOmZ1bmN0aW9uKHQsZSl7bi5kcmF3QXJyYXlzKG8sdCxlKSxhLmNhbGxzKyssYS52ZXJ0aWNlcys9ZSxvPT09bi5UUklBTkdMRVMmJihhLmZhY2VzKz1lLzMpfSxyZW5kZXJJbnN0YW5jZXM6ZnVuY3Rpb24odCl7dmFyIGU9ci5nZXQoIkFOR0xFX2luc3RhbmNlZF9hcnJheXMiKTtpZihudWxsPT09ZSljb25zb2xlLmVycm9yKCJUSFJFRS5XZWJHTEJ1ZmZlclJlbmRlcmVyOiB1c2luZyBUSFJFRS5JbnN0YW5jZWRCdWZmZXJHZW9tZXRyeSBidXQgaGFyZHdhcmUgZG9lcyBub3Qgc3VwcG9ydCBleHRlbnNpb24gQU5HTEVfaW5zdGFuY2VkX2FycmF5cy4iKTtlbHNle3ZhciBpPShpPXQuYXR0cmlidXRlcy5wb3NpdGlvbikuaXNJbnRlcmxlYXZlZEJ1ZmZlckF0dHJpYnV0ZT9pLmRhdGEuY291bnQ6aS5jb3VudDtlLmRyYXdBcnJheXNJbnN0YW5jZWRBTkdMRShvLDAsaSx0Lm1heEluc3RhbmNlZENvdW50KSxhLmNhbGxzKyssYS52ZXJ0aWNlcys9aSp0Lm1heEluc3RhbmNlZENvdW50LG89PT1uLlRSSUFOR0xFUyYmKGEuZmFjZXMrPXQubWF4SW5zdGFuY2VkQ291bnQqaS8zKX19fX1mdW5jdGlvbiBKdCgpe3ZhciBpPXt9O3JldHVybntnZXQ6ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09aVt0LmlkXSlyZXR1cm4gaVt0LmlkXTt2YXIgZTtzd2l0Y2godC50eXBlKXtjYXNlIkRpcmVjdGlvbmFsTGlnaHQiOmU9e2RpcmVjdGlvbjpuZXcgQ3QsY29sb3I6bmV3IE50LHNoYWRvdzohMSxzaGFkb3dCaWFzOjAsc2hhZG93UmFkaXVzOjEsc2hhZG93TWFwU2l6ZTpuZXcgVn07YnJlYWs7Y2FzZSJTcG90TGlnaHQiOmU9e3Bvc2l0aW9uOm5ldyBDdCxkaXJlY3Rpb246bmV3IEN0LGNvbG9yOm5ldyBOdCxkaXN0YW5jZTowLGNvbmVDb3M6MCxwZW51bWJyYUNvczowLGRlY2F5OjAsc2hhZG93OiExLHNoYWRvd0JpYXM6MCxzaGFkb3dSYWRpdXM6MSxzaGFkb3dNYXBTaXplOm5ldyBWfTticmVhaztjYXNlIlBvaW50TGlnaHQiOmU9e3Bvc2l0aW9uOm5ldyBDdCxjb2xvcjpuZXcgTnQsZGlzdGFuY2U6MCxkZWNheTowLHNoYWRvdzohMSxzaGFkb3dCaWFzOjAsc2hhZG93UmFkaXVzOjEsc2hhZG93TWFwU2l6ZTpuZXcgVn07YnJlYWs7Y2FzZSJIZW1pc3BoZXJlTGlnaHQiOmU9e2RpcmVjdGlvbjpuZXcgQ3Qsc2t5Q29sb3I6bmV3IE50LGdyb3VuZENvbG9yOm5ldyBOdH07YnJlYWs7Y2FzZSJSZWN0QXJlYUxpZ2h0IjplPXtjb2xvcjpuZXcgTnQscG9zaXRpb246bmV3IEN0LGhhbGZXaWR0aDpuZXcgQ3QsaGFsZkhlaWdodDpuZXcgQ3R9fXJldHVybiBpW3QuaWRdPWV9fX1mdW5jdGlvbiBodCh0LGUsaSl7dmFyIG49dC5jcmVhdGVTaGFkZXIoZSk7cmV0dXJuIHQuc2hhZGVyU291cmNlKG4saSksdC5jb21waWxlU2hhZGVyKG4pLCExPT09dC5nZXRTaGFkZXJQYXJhbWV0ZXIobix0LkNPTVBJTEVfU1RBVFVTKSYmY29uc29sZS5lcnJvcigiVEhSRUUuV2ViR0xTaGFkZXI6IFNoYWRlciBjb3VsZG4ndCBjb21waWxlLiIpLCIiIT09dC5nZXRTaGFkZXJJbmZvTG9nKG4pJiZjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMU2hhZGVyOiBnbC5nZXRTaGFkZXJJbmZvTG9nKCkiLGU9PT10LlZFUlRFWF9TSEFERVI/InZlcnRleCI6ImZyYWdtZW50Iix0LmdldFNoYWRlckluZm9Mb2cobiksZnVuY3Rpb24odCl7dD10LnNwbGl0KCJcbiIpO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV09ZSsxKyI6ICIrdFtlXTtyZXR1cm4gdC5qb2luKCJcbiIpfShpKSksbn1mdW5jdGlvbiBsdCh0KXtzd2l0Y2godCl7Y2FzZSAzZTM6cmV0dXJuWyJMaW5lYXIiLCIoIHZhbHVlICkiXTtjYXNlIDMwMDE6cmV0dXJuWyJzUkdCIiwiKCB2YWx1ZSApIl07Y2FzZSAzMDAyOnJldHVyblsiUkdCRSIsIiggdmFsdWUgKSJdO2Nhc2UgMzAwNDpyZXR1cm5bIlJHQk0iLCIoIHZhbHVlLCA3LjAgKSJdO2Nhc2UgMzAwNTpyZXR1cm5bIlJHQk0iLCIoIHZhbHVlLCAxNi4wICkiXTtjYXNlIDMwMDY6cmV0dXJuWyJSR0JEIiwiKCB2YWx1ZSwgMjU2LjAgKSJdO2Nhc2UgMzAwNzpyZXR1cm5bIkdhbW1hIiwiKCB2YWx1ZSwgZmxvYXQoIEdBTU1BX0ZBQ1RPUiApICkiXTtkZWZhdWx0OnRocm93IEVycm9yKCJ1bnN1cHBvcnRlZCBlbmNvZGluZzogIit0KX19ZnVuY3Rpb24gdXQodCxlKXt2YXIgaT1sdChlKTtyZXR1cm4idmVjNCAiK3QrIiggdmVjNCB2YWx1ZSApIHsgcmV0dXJuICIraVswXSsiVG9MaW5lYXIiK2lbMV0rIjsgfSJ9ZnVuY3Rpb24gZHQodCl7cmV0dXJuIiIhPT10fWZ1bmN0aW9uIHB0KHQsZSl7cmV0dXJuIHQucmVwbGFjZSgvTlVNX0RJUl9MSUdIVFMvZyxlLm51bURpckxpZ2h0cykucmVwbGFjZSgvTlVNX1NQT1RfTElHSFRTL2csZS5udW1TcG90TGlnaHRzKS5yZXBsYWNlKC9OVU1fUkVDVF9BUkVBX0xJR0hUUy9nLGUubnVtUmVjdEFyZWFMaWdodHMpLnJlcGxhY2UoL05VTV9QT0lOVF9MSUdIVFMvZyxlLm51bVBvaW50TGlnaHRzKS5yZXBsYWNlKC9OVU1fSEVNSV9MSUdIVFMvZyxlLm51bUhlbWlMaWdodHMpfWZ1bmN0aW9uIGZ0KHQpe3JldHVybiB0LnJlcGxhY2UoLyNpbmNsdWRlICs8KFtcd1xkLl0rKT4vZyxmdW5jdGlvbih0LGUpe3ZhciBpPVJyW2VdO2lmKHZvaWQgMD09PWkpdGhyb3cgRXJyb3IoIkNhbiBub3QgcmVzb2x2ZSAjaW5jbHVkZSA8IitlKyI+Iik7cmV0dXJuIGZ0KGkpfSl9ZnVuY3Rpb24gbXQodCl7cmV0dXJuIHQucmVwbGFjZSgvZm9yIFwoIGludCBpIFw9IChcZCspXDsgaSA8IChcZCspXDsgaSBcK1wrIFwpIFx7KFtcc1xTXSs/KSg/PVx9KVx9L2csZnVuY3Rpb24odCxlLGksbil7Zm9yKHQ9IiIsZT1wYXJzZUludChlKTtlPHBhcnNlSW50KGkpO2UrKyl0Kz1uLnJlcGxhY2UoL1xbIGkgXF0vZywiWyAiK2UrIiBdIik7cmV0dXJuIHR9KX1mdW5jdGlvbiBndCh0LGUsaSxuKXt2YXIgcj10LmNvbnRleHQsYT1pLmV4dGVuc2lvbnMsbz1pLmRlZmluZXMscz1pLl9fd2ViZ2xTaGFkZXIudmVydGV4U2hhZGVyLGM9aS5fX3dlYmdsU2hhZGVyLmZyYWdtZW50U2hhZGVyLGg9IlNIQURPV01BUF9UWVBFX0JBU0lDIjsxPT09bi5zaGFkb3dNYXBUeXBlP2g9IlNIQURPV01BUF9UWVBFX1BDRiI6Mj09PW4uc2hhZG93TWFwVHlwZSYmKGg9IlNIQURPV01BUF9UWVBFX1BDRl9TT0ZUIik7dmFyIGw9IkVOVk1BUF9UWVBFX0NVQkUiLHU9IkVOVk1BUF9NT0RFX1JFRkxFQ1RJT04iLGQ9IkVOVk1BUF9CTEVORElOR19NVUxUSVBMWSI7aWYobi5lbnZNYXApe3N3aXRjaChpLmVudk1hcC5tYXBwaW5nKXtjYXNlIDMwMTpjYXNlIDMwMjpsPSJFTlZNQVBfVFlQRV9DVUJFIjticmVhaztjYXNlIDMwNjpjYXNlIDMwNzpsPSJFTlZNQVBfVFlQRV9DVUJFX1VWIjticmVhaztjYXNlIDMwMzpjYXNlIDMwNDpsPSJFTlZNQVBfVFlQRV9FUVVJUkVDIjticmVhaztjYXNlIDMwNTpsPSJFTlZNQVBfVFlQRV9TUEhFUkUifXN3aXRjaChpLmVudk1hcC5tYXBwaW5nKXtjYXNlIDMwMjpjYXNlIDMwNDp1PSJFTlZNQVBfTU9ERV9SRUZSQUNUSU9OIn1zd2l0Y2goaS5jb21iaW5lKXtjYXNlIDA6ZD0iRU5WTUFQX0JMRU5ESU5HX01VTFRJUExZIjticmVhaztjYXNlIDE6ZD0iRU5WTUFQX0JMRU5ESU5HX01JWCI7YnJlYWs7Y2FzZSAyOmQ9IkVOVk1BUF9CTEVORElOR19BREQifX12YXIgcCxmLG09MDx0LmdhbW1hRmFjdG9yP3QuZ2FtbWFGYWN0b3I6MSxnPShhPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm5bKHQ9dHx8e30pLmRlcml2YXRpdmVzfHxlLmVudk1hcEN1YmVVVnx8ZS5idW1wTWFwfHxlLm5vcm1hbE1hcHx8ZS5mbGF0U2hhZGluZz8iI2V4dGVuc2lvbiBHTF9PRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXMgOiBlbmFibGUiOiIiLCh0LmZyYWdEZXB0aHx8ZS5sb2dhcml0aG1pY0RlcHRoQnVmZmVyKSYmaS5nZXQoIkVYVF9mcmFnX2RlcHRoIik/IiNleHRlbnNpb24gR0xfRVhUX2ZyYWdfZGVwdGggOiBlbmFibGUiOiIiLHQuZHJhd0J1ZmZlcnMmJmkuZ2V0KCJXRUJHTF9kcmF3X2J1ZmZlcnMiKT8iI2V4dGVuc2lvbiBHTF9FWFRfZHJhd19idWZmZXJzIDogcmVxdWlyZSI6IiIsKHQuc2hhZGVyVGV4dHVyZUxPRHx8ZS5lbnZNYXApJiZpLmdldCgiRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCIpPyIjZXh0ZW5zaW9uIEdMX0VYVF9zaGFkZXJfdGV4dHVyZV9sb2QgOiBlbmFibGUiOiIiXS5maWx0ZXIoZHQpLmpvaW4oIlxuIil9KGEsbix0LmV4dGVuc2lvbnMpLGZ1bmN0aW9uKHQpe3ZhciBlLGk9W107Zm9yKGUgaW4gdCl7dmFyIG49dFtlXTshMSE9PW4mJmkucHVzaCgiI2RlZmluZSAiK2UrIiAiK24pfXJldHVybiBpLmpvaW4oIlxuIil9KG8pKSx2PXIuY3JlYXRlUHJvZ3JhbSgpO3JldHVybiBoPWkuaXNSYXdTaGFkZXJNYXRlcmlhbD8obz1bZywiXG4iXS5maWx0ZXIoZHQpLmpvaW4oIlxuIiksW2EsZywiXG4iXS5maWx0ZXIoZHQpLmpvaW4oIlxuIikpOihvPVsicHJlY2lzaW9uICIrbi5wcmVjaXNpb24rIiBmbG9hdDsiLCJwcmVjaXNpb24gIituLnByZWNpc2lvbisiIGludDsiLCIjZGVmaW5lIFNIQURFUl9OQU1FICIraS5fX3dlYmdsU2hhZGVyLm5hbWUsZyxuLnN1cHBvcnRzVmVydGV4VGV4dHVyZXM/IiNkZWZpbmUgVkVSVEVYX1RFWFRVUkVTIjoiIiwiI2RlZmluZSBHQU1NQV9GQUNUT1IgIittLCIjZGVmaW5lIE1BWF9CT05FUyAiK24ubWF4Qm9uZXMsbi5tYXA/IiNkZWZpbmUgVVNFX01BUCI6IiIsbi5lbnZNYXA/IiNkZWZpbmUgVVNFX0VOVk1BUCI6IiIsbi5lbnZNYXA/IiNkZWZpbmUgIit1OiIiLG4ubGlnaHRNYXA/IiNkZWZpbmUgVVNFX0xJR0hUTUFQIjoiIixuLmFvTWFwPyIjZGVmaW5lIFVTRV9BT01BUCI6IiIsbi5lbWlzc2l2ZU1hcD8iI2RlZmluZSBVU0VfRU1JU1NJVkVNQVAiOiIiLG4uYnVtcE1hcD8iI2RlZmluZSBVU0VfQlVNUE1BUCI6IiIsbi5ub3JtYWxNYXA/IiNkZWZpbmUgVVNFX05PUk1BTE1BUCI6IiIsbi5kaXNwbGFjZW1lbnRNYXAmJm4uc3VwcG9ydHNWZXJ0ZXhUZXh0dXJlcz8iI2RlZmluZSBVU0VfRElTUExBQ0VNRU5UTUFQIjoiIixuLnNwZWN1bGFyTWFwPyIjZGVmaW5lIFVTRV9TUEVDVUxBUk1BUCI6IiIsbi5yb3VnaG5lc3NNYXA/IiNkZWZpbmUgVVNFX1JPVUdITkVTU01BUCI6IiIsbi5tZXRhbG5lc3NNYXA/IiNkZWZpbmUgVVNFX01FVEFMTkVTU01BUCI6IiIsbi5hbHBoYU1hcD8iI2RlZmluZSBVU0VfQUxQSEFNQVAiOiIiLG4udmVydGV4Q29sb3JzPyIjZGVmaW5lIFVTRV9DT0xPUiI6IiIsbi5mbGF0U2hhZGluZz8iI2RlZmluZSBGTEFUX1NIQURFRCI6IiIsbi5za2lubmluZz8iI2RlZmluZSBVU0VfU0tJTk5JTkciOiIiLG4udXNlVmVydGV4VGV4dHVyZT8iI2RlZmluZSBCT05FX1RFWFRVUkUiOiIiLG4ubW9ycGhUYXJnZXRzPyIjZGVmaW5lIFVTRV9NT1JQSFRBUkdFVFMiOiIiLG4ubW9ycGhOb3JtYWxzJiYhMT09PW4uZmxhdFNoYWRpbmc/IiNkZWZpbmUgVVNFX01PUlBITk9STUFMUyI6IiIsbi5kb3VibGVTaWRlZD8iI2RlZmluZSBET1VCTEVfU0lERUQiOiIiLG4uZmxpcFNpZGVkPyIjZGVmaW5lIEZMSVBfU0lERUQiOiIiLCIjZGVmaW5lIE5VTV9DTElQUElOR19QTEFORVMgIituLm51bUNsaXBwaW5nUGxhbmVzLG4uc2hhZG93TWFwRW5hYmxlZD8iI2RlZmluZSBVU0VfU0hBRE9XTUFQIjoiIixuLnNoYWRvd01hcEVuYWJsZWQ/IiNkZWZpbmUgIitoOiIiLG4uc2l6ZUF0dGVudWF0aW9uPyIjZGVmaW5lIFVTRV9TSVpFQVRURU5VQVRJT04iOiIiLG4ubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlcj8iI2RlZmluZSBVU0VfTE9HREVQVEhCVUYiOiIiLG4ubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlciYmdC5leHRlbnNpb25zLmdldCgiRVhUX2ZyYWdfZGVwdGgiKT8iI2RlZmluZSBVU0VfTE9HREVQVEhCVUZfRVhUIjoiIiwidW5pZm9ybSBtYXQ0IG1vZGVsTWF0cml4OyIsInVuaWZvcm0gbWF0NCBtb2RlbFZpZXdNYXRyaXg7IiwidW5pZm9ybSBtYXQ0IHByb2plY3Rpb25NYXRyaXg7IiwidW5pZm9ybSBtYXQ0IHZpZXdNYXRyaXg7IiwidW5pZm9ybSBtYXQzIG5vcm1hbE1hdHJpeDsiLCJ1bmlmb3JtIHZlYzMgY2FtZXJhUG9zaXRpb247IiwiYXR0cmlidXRlIHZlYzMgcG9zaXRpb247IiwiYXR0cmlidXRlIHZlYzMgbm9ybWFsOyIsImF0dHJpYnV0ZSB2ZWMyIHV2OyIsIiNpZmRlZiBVU0VfQ09MT1IiLCJcdGF0dHJpYnV0ZSB2ZWMzIGNvbG9yOyIsIiNlbmRpZiIsIiNpZmRlZiBVU0VfTU9SUEhUQVJHRVRTIiwiXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDA7IiwiXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDE7IiwiXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDI7IiwiXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDM7IiwiXHQjaWZkZWYgVVNFX01PUlBITk9STUFMUyIsIlx0XHRhdHRyaWJ1dGUgdmVjMyBtb3JwaE5vcm1hbDA7IiwiXHRcdGF0dHJpYnV0ZSB2ZWMzIG1vcnBoTm9ybWFsMTsiLCJcdFx0YXR0cmlidXRlIHZlYzMgbW9ycGhOb3JtYWwyOyIsIlx0XHRhdHRyaWJ1dGUgdmVjMyBtb3JwaE5vcm1hbDM7IiwiXHQjZWxzZSIsIlx0XHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDQ7IiwiXHRcdGF0dHJpYnV0ZSB2ZWMzIG1vcnBoVGFyZ2V0NTsiLCJcdFx0YXR0cmlidXRlIHZlYzMgbW9ycGhUYXJnZXQ2OyIsIlx0XHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDc7IiwiXHQjZW5kaWYiLCIjZW5kaWYiLCIjaWZkZWYgVVNFX1NLSU5OSU5HIiwiXHRhdHRyaWJ1dGUgdmVjNCBza2luSW5kZXg7IiwiXHRhdHRyaWJ1dGUgdmVjNCBza2luV2VpZ2h0OyIsIiNlbmRpZiIsIlxuIl0uZmlsdGVyKGR0KS5qb2luKCJcbiIpLFthLCJwcmVjaXNpb24gIituLnByZWNpc2lvbisiIGZsb2F0OyIsInByZWNpc2lvbiAiK24ucHJlY2lzaW9uKyIgaW50OyIsIiNkZWZpbmUgU0hBREVSX05BTUUgIitpLl9fd2ViZ2xTaGFkZXIubmFtZSxnLG4uYWxwaGFUZXN0PyIjZGVmaW5lIEFMUEhBVEVTVCAiK24uYWxwaGFUZXN0OiIiLCIjZGVmaW5lIEdBTU1BX0ZBQ1RPUiAiK20sbi51c2VGb2cmJm4uZm9nPyIjZGVmaW5lIFVTRV9GT0ciOiIiLG4udXNlRm9nJiZuLmZvZ0V4cD8iI2RlZmluZSBGT0dfRVhQMiI6IiIsbi5tYXA/IiNkZWZpbmUgVVNFX01BUCI6IiIsbi5lbnZNYXA/IiNkZWZpbmUgVVNFX0VOVk1BUCI6IiIsbi5lbnZNYXA/IiNkZWZpbmUgIitsOiIiLG4uZW52TWFwPyIjZGVmaW5lICIrdToiIixuLmVudk1hcD8iI2RlZmluZSAiK2Q6IiIsbi5saWdodE1hcD8iI2RlZmluZSBVU0VfTElHSFRNQVAiOiIiLG4uYW9NYXA/IiNkZWZpbmUgVVNFX0FPTUFQIjoiIixuLmVtaXNzaXZlTWFwPyIjZGVmaW5lIFVTRV9FTUlTU0lWRU1BUCI6IiIsbi5idW1wTWFwPyIjZGVmaW5lIFVTRV9CVU1QTUFQIjoiIixuLm5vcm1hbE1hcD8iI2RlZmluZSBVU0VfTk9STUFMTUFQIjoiIixuLnNwZWN1bGFyTWFwPyIjZGVmaW5lIFVTRV9TUEVDVUxBUk1BUCI6IiIsbi5yb3VnaG5lc3NNYXA/IiNkZWZpbmUgVVNFX1JPVUdITkVTU01BUCI6IiIsbi5tZXRhbG5lc3NNYXA/IiNkZWZpbmUgVVNFX01FVEFMTkVTU01BUCI6IiIsbi5hbHBoYU1hcD8iI2RlZmluZSBVU0VfQUxQSEFNQVAiOiIiLG4udmVydGV4Q29sb3JzPyIjZGVmaW5lIFVTRV9DT0xPUiI6IiIsbi5ncmFkaWVudE1hcD8iI2RlZmluZSBVU0VfR1JBRElFTlRNQVAiOiIiLG4uZmxhdFNoYWRpbmc/IiNkZWZpbmUgRkxBVF9TSEFERUQiOiIiLG4uZG91YmxlU2lkZWQ/IiNkZWZpbmUgRE9VQkxFX1NJREVEIjoiIixuLmZsaXBTaWRlZD8iI2RlZmluZSBGTElQX1NJREVEIjoiIiwiI2RlZmluZSBOVU1fQ0xJUFBJTkdfUExBTkVTICIrbi5udW1DbGlwcGluZ1BsYW5lcywiI2RlZmluZSBVTklPTl9DTElQUElOR19QTEFORVMgIisobi5udW1DbGlwcGluZ1BsYW5lcy1uLm51bUNsaXBJbnRlcnNlY3Rpb24pLG4uc2hhZG93TWFwRW5hYmxlZD8iI2RlZmluZSBVU0VfU0hBRE9XTUFQIjoiIixuLnNoYWRvd01hcEVuYWJsZWQ/IiNkZWZpbmUgIitoOiIiLG4ucHJlbXVsdGlwbGllZEFscGhhPyIjZGVmaW5lIFBSRU1VTFRJUExJRURfQUxQSEEiOiIiLG4ucGh5c2ljYWxseUNvcnJlY3RMaWdodHM/IiNkZWZpbmUgUEhZU0lDQUxMWV9DT1JSRUNUX0xJR0hUUyI6IiIsbi5sb2dhcml0aG1pY0RlcHRoQnVmZmVyPyIjZGVmaW5lIFVTRV9MT0dERVBUSEJVRiI6IiIsbi5sb2dhcml0aG1pY0RlcHRoQnVmZmVyJiZ0LmV4dGVuc2lvbnMuZ2V0KCJFWFRfZnJhZ19kZXB0aCIpPyIjZGVmaW5lIFVTRV9MT0dERVBUSEJVRl9FWFQiOiIiLG4uZW52TWFwJiZ0LmV4dGVuc2lvbnMuZ2V0KCJFWFRfc2hhZGVyX3RleHR1cmVfbG9kIik/IiNkZWZpbmUgVEVYVFVSRV9MT0RfRVhUIjoiIiwidW5pZm9ybSBtYXQ0IHZpZXdNYXRyaXg7IiwidW5pZm9ybSB2ZWMzIGNhbWVyYVBvc2l0aW9uOyIsMCE9PW4udG9uZU1hcHBpbmc/IiNkZWZpbmUgVE9ORV9NQVBQSU5HIjoiIiwwIT09bi50b25lTWFwcGluZz9Sci50b25lbWFwcGluZ19wYXJzX2ZyYWdtZW50OiIiLDAhPT1uLnRvbmVNYXBwaW5nP2Z1bmN0aW9uKHQsZSl7dmFyIGk7c3dpdGNoKGUpe2Nhc2UgMTppPSJMaW5lYXIiO2JyZWFrO2Nhc2UgMjppPSJSZWluaGFyZCI7YnJlYWs7Y2FzZSAzOmk9IlVuY2hhcnRlZDIiO2JyZWFrO2Nhc2UgNDppPSJPcHRpbWl6ZWRDaW5lb24iO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoInVuc3VwcG9ydGVkIHRvbmVNYXBwaW5nOiAiK2UpfXJldHVybiJ2ZWMzICIrdCsiKCB2ZWMzIGNvbG9yICkgeyByZXR1cm4gIitpKyJUb25lTWFwcGluZyggY29sb3IgKTsgfSJ9KCJ0b25lTWFwcGluZyIsbi50b25lTWFwcGluZyk6IiIsbi5vdXRwdXRFbmNvZGluZ3x8bi5tYXBFbmNvZGluZ3x8bi5lbnZNYXBFbmNvZGluZ3x8bi5lbWlzc2l2ZU1hcEVuY29kaW5nP1JyLmVuY29kaW5nc19wYXJzX2ZyYWdtZW50OiIiLG4ubWFwRW5jb2Rpbmc/dXQoIm1hcFRleGVsVG9MaW5lYXIiLG4ubWFwRW5jb2RpbmcpOiIiLG4uZW52TWFwRW5jb2Rpbmc/dXQoImVudk1hcFRleGVsVG9MaW5lYXIiLG4uZW52TWFwRW5jb2RpbmcpOiIiLG4uZW1pc3NpdmVNYXBFbmNvZGluZz91dCgiZW1pc3NpdmVNYXBUZXhlbFRvTGluZWFyIixuLmVtaXNzaXZlTWFwRW5jb2RpbmcpOiIiLG4ub3V0cHV0RW5jb2Rpbmc/ZnVuY3Rpb24odCxlKXt2YXIgaT1sdChlKTtyZXR1cm4idmVjNCAiK3QrIiggdmVjNCB2YWx1ZSApIHsgcmV0dXJuIExpbmVhclRvIitpWzBdK2lbMV0rIjsgfSJ9KCJsaW5lYXJUb091dHB1dFRleGVsIixuLm91dHB1dEVuY29kaW5nKToiIixuLmRlcHRoUGFja2luZz8iI2RlZmluZSBERVBUSF9QQUNLSU5HICIraS5kZXB0aFBhY2tpbmc6IiIsIlxuIl0uZmlsdGVyKGR0KS5qb2luKCJcbiIpKSxzPXB0KHM9ZnQocyksbiksYz1wdChjPWZ0KGMpLG4pLGkuaXNTaGFkZXJNYXRlcmlhbHx8KHM9bXQocyksYz1tdChjKSksYz1oK2Mscz1odChyLHIuVkVSVEVYX1NIQURFUixvK3MpLGM9aHQocixyLkZSQUdNRU5UX1NIQURFUixjKSxyLmF0dGFjaFNoYWRlcih2LHMpLHIuYXR0YWNoU2hhZGVyKHYsYyksdm9pZCAwIT09aS5pbmRleDBBdHRyaWJ1dGVOYW1lP3IuYmluZEF0dHJpYkxvY2F0aW9uKHYsMCxpLmluZGV4MEF0dHJpYnV0ZU5hbWUpOiEwPT09bi5tb3JwaFRhcmdldHMmJnIuYmluZEF0dHJpYkxvY2F0aW9uKHYsMCwicG9zaXRpb24iKSxyLmxpbmtQcm9ncmFtKHYpLG49ci5nZXRQcm9ncmFtSW5mb0xvZyh2KSxsPXIuZ2V0U2hhZGVySW5mb0xvZyhzKSx1PXIuZ2V0U2hhZGVySW5mb0xvZyhjKSxtPWQ9ITAsITE9PT1yLmdldFByb2dyYW1QYXJhbWV0ZXIodixyLkxJTktfU1RBVFVTKT8oZD0hMSxjb25zb2xlLmVycm9yKCJUSFJFRS5XZWJHTFByb2dyYW06IHNoYWRlciBlcnJvcjogIixyLmdldEVycm9yKCksImdsLlZBTElEQVRFX1NUQVRVUyIsci5nZXRQcm9ncmFtUGFyYW1ldGVyKHYsci5WQUxJREFURV9TVEFUVVMpLCJnbC5nZXRQcm9ncmFtSW5mb0xvZyIsbixsLHUpKToiIiE9PW4/Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFByb2dyYW06IGdsLmdldFByb2dyYW1JbmZvTG9nKCkiLG4pOiIiIT09bCYmIiIhPT11fHwobT0hMSksbSYmKHRoaXMuZGlhZ25vc3RpY3M9e3J1bm5hYmxlOmQsbWF0ZXJpYWw6aSxwcm9ncmFtTG9nOm4sdmVydGV4U2hhZGVyOntsb2c6bCxwcmVmaXg6b30sZnJhZ21lbnRTaGFkZXI6e2xvZzp1LHByZWZpeDpofX0pLHIuZGVsZXRlU2hhZGVyKHMpLHIuZGVsZXRlU2hhZGVyKGMpLHRoaXMuZ2V0VW5pZm9ybXM9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09cCYmKHA9bmV3IFV0KHIsdix0KSkscH0sdGhpcy5nZXRBdHRyaWJ1dGVzPWZ1bmN0aW9uKCl7aWYodm9pZCAwPT09Zil7Zm9yKHZhciB0PXt9LGU9ci5nZXRQcm9ncmFtUGFyYW1ldGVyKHYsci5BQ1RJVkVfQVRUUklCVVRFUyksaT0wO2k8ZTtpKyspe3ZhciBuPXIuZ2V0QWN0aXZlQXR0cmliKHYsaSkubmFtZTt0W25dPXIuZ2V0QXR0cmliTG9jYXRpb24odixuKX1mPXR9cmV0dXJuIGZ9LHRoaXMuZGVzdHJveT1mdW5jdGlvbigpe3IuZGVsZXRlUHJvZ3JhbSh2KSx0aGlzLnByb2dyYW09dm9pZCAwfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLHt1bmlmb3Jtczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xQcm9ncmFtOiAudW5pZm9ybXMgaXMgbm93IC5nZXRVbmlmb3JtcygpLiIpLHRoaXMuZ2V0VW5pZm9ybXMoKX19LGF0dHJpYnV0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUHJvZ3JhbTogLmF0dHJpYnV0ZXMgaXMgbm93IC5nZXRBdHRyaWJ1dGVzKCkuIiksdGhpcy5nZXRBdHRyaWJ1dGVzKCl9fX0pLHRoaXMuaWQ9eW8rKyx0aGlzLmNvZGU9ZSx0aGlzLnVzZWRUaW1lcz0xLHRoaXMucHJvZ3JhbT12LHRoaXMudmVydGV4U2hhZGVyPXMsdGhpcy5mcmFnbWVudFNoYWRlcj1jLHRoaXN9ZnVuY3Rpb24gUXQobCx1KXtmdW5jdGlvbiBkKHQsZSl7dmFyIGk7cmV0dXJuIHQ/dC5pc1RleHR1cmU/aT10LmVuY29kaW5nOnQuaXNXZWJHTFJlbmRlclRhcmdldCYmKGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xQcm9ncmFtcy5nZXRUZXh0dXJlRW5jb2RpbmdGcm9tTWFwOiBkb24ndCB1c2UgcmVuZGVyIHRhcmdldHMgYXMgdGV4dHVyZXMuIFVzZSB0aGVpciAudGV4dHVyZSBwcm9wZXJ0eSBpbnN0ZWFkLiIpLGk9dC50ZXh0dXJlLmVuY29kaW5nKTppPTNlMywzZTM9PT1pJiZlJiYoaT0zMDA3KSxpfXZhciBzPVtdLHA9e01lc2hEZXB0aE1hdGVyaWFsOiJkZXB0aCIsTWVzaE5vcm1hbE1hdGVyaWFsOiJub3JtYWwiLE1lc2hCYXNpY01hdGVyaWFsOiJiYXNpYyIsTWVzaExhbWJlcnRNYXRlcmlhbDoibGFtYmVydCIsTWVzaFBob25nTWF0ZXJpYWw6InBob25nIixNZXNoVG9vbk1hdGVyaWFsOiJwaG9uZyIsTWVzaFN0YW5kYXJkTWF0ZXJpYWw6InBoeXNpY2FsIixNZXNoUGh5c2ljYWxNYXRlcmlhbDoicGh5c2ljYWwiLExpbmVCYXNpY01hdGVyaWFsOiJiYXNpYyIsTGluZURhc2hlZE1hdGVyaWFsOiJkYXNoZWQiLFBvaW50c01hdGVyaWFsOiJwb2ludHMifSxyPSJwcmVjaXNpb24gc3VwcG9ydHNWZXJ0ZXhUZXh0dXJlcyBtYXAgbWFwRW5jb2RpbmcgZW52TWFwIGVudk1hcE1vZGUgZW52TWFwRW5jb2RpbmcgbGlnaHRNYXAgYW9NYXAgZW1pc3NpdmVNYXAgZW1pc3NpdmVNYXBFbmNvZGluZyBidW1wTWFwIG5vcm1hbE1hcCBkaXNwbGFjZW1lbnRNYXAgc3BlY3VsYXJNYXAgcm91Z2huZXNzTWFwIG1ldGFsbmVzc01hcCBncmFkaWVudE1hcCBhbHBoYU1hcCBjb21iaW5lIHZlcnRleENvbG9ycyBmb2cgdXNlRm9nIGZvZ0V4cCBmbGF0U2hhZGluZyBzaXplQXR0ZW51YXRpb24gbG9nYXJpdGhtaWNEZXB0aEJ1ZmZlciBza2lubmluZyBtYXhCb25lcyB1c2VWZXJ0ZXhUZXh0dXJlIG1vcnBoVGFyZ2V0cyBtb3JwaE5vcm1hbHMgbWF4TW9ycGhUYXJnZXRzIG1heE1vcnBoTm9ybWFscyBwcmVtdWx0aXBsaWVkQWxwaGEgbnVtRGlyTGlnaHRzIG51bVBvaW50TGlnaHRzIG51bVNwb3RMaWdodHMgbnVtSGVtaUxpZ2h0cyBudW1SZWN0QXJlYUxpZ2h0cyBzaGFkb3dNYXBFbmFibGVkIHNoYWRvd01hcFR5cGUgdG9uZU1hcHBpbmcgcGh5c2ljYWxseUNvcnJlY3RMaWdodHMgYWxwaGFUZXN0IGRvdWJsZVNpZGVkIGZsaXBTaWRlZCBudW1DbGlwcGluZ1BsYW5lcyBudW1DbGlwSW50ZXJzZWN0aW9uIGRlcHRoUGFja2luZyIuc3BsaXQoIiAiKTt0aGlzLmdldFBhcmFtZXRlcnM9ZnVuY3Rpb24odCxlLGksbixyLGEpe3ZhciBvLHM9cFt0LnR5cGVdO3UuZmxvYXRWZXJ0ZXhUZXh0dXJlcyYmYSYmYS5za2VsZXRvbiYmYS5za2VsZXRvbi51c2VWZXJ0ZXhUZXh0dXJlP289MTAyNDoobz1NYXRoLmZsb29yKCh1Lm1heFZlcnRleFVuaWZvcm1zLTIwKS80KSx2b2lkIDAhPT1hJiZhJiZhLmlzU2tpbm5lZE1lc2gmJigobz1NYXRoLm1pbihhLnNrZWxldG9uLmJvbmVzLmxlbmd0aCxvKSk8YS5za2VsZXRvbi5ib25lcy5sZW5ndGgmJmNvbnNvbGUud2FybigiV2ViR0xSZW5kZXJlcjogdG9vIG1hbnkgYm9uZXMgLSAiK2Euc2tlbGV0b24uYm9uZXMubGVuZ3RoKyIsIHRoaXMgR1BVIHN1cHBvcnRzIGp1c3QgIitvKyIgKHRyeSBPcGVuR0wgaW5zdGVhZCBvZiBBTkdMRSkiKSkpO3ZhciBjPWwuZ2V0UHJlY2lzaW9uKCk7bnVsbCE9PXQucHJlY2lzaW9uJiYoKGM9dS5nZXRNYXhQcmVjaXNpb24odC5wcmVjaXNpb24pKSE9PXQucHJlY2lzaW9uJiZjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUHJvZ3JhbS5nZXRQYXJhbWV0ZXJzOiIsdC5wcmVjaXNpb24sIm5vdCBzdXBwb3J0ZWQsIHVzaW5nIixjLCJpbnN0ZWFkLiIpKTt2YXIgaD1sLmdldEN1cnJlbnRSZW5kZXJUYXJnZXQoKTtyZXR1cm57c2hhZGVySUQ6cyxwcmVjaXNpb246YyxzdXBwb3J0c1ZlcnRleFRleHR1cmVzOnUudmVydGV4VGV4dHVyZXMsb3V0cHV0RW5jb2Rpbmc6ZChoP2gudGV4dHVyZTpudWxsLGwuZ2FtbWFPdXRwdXQpLG1hcDohIXQubWFwLG1hcEVuY29kaW5nOmQodC5tYXAsbC5nYW1tYUlucHV0KSxlbnZNYXA6ISF0LmVudk1hcCxlbnZNYXBNb2RlOnQuZW52TWFwJiZ0LmVudk1hcC5tYXBwaW5nLGVudk1hcEVuY29kaW5nOmQodC5lbnZNYXAsbC5nYW1tYUlucHV0KSxlbnZNYXBDdWJlVVY6ISF0LmVudk1hcCYmKDMwNj09PXQuZW52TWFwLm1hcHBpbmd8fDMwNz09PXQuZW52TWFwLm1hcHBpbmcpLGxpZ2h0TWFwOiEhdC5saWdodE1hcCxhb01hcDohIXQuYW9NYXAsZW1pc3NpdmVNYXA6ISF0LmVtaXNzaXZlTWFwLGVtaXNzaXZlTWFwRW5jb2Rpbmc6ZCh0LmVtaXNzaXZlTWFwLGwuZ2FtbWFJbnB1dCksYnVtcE1hcDohIXQuYnVtcE1hcCxub3JtYWxNYXA6ISF0Lm5vcm1hbE1hcCxkaXNwbGFjZW1lbnRNYXA6ISF0LmRpc3BsYWNlbWVudE1hcCxyb3VnaG5lc3NNYXA6ISF0LnJvdWdobmVzc01hcCxtZXRhbG5lc3NNYXA6ISF0Lm1ldGFsbmVzc01hcCxzcGVjdWxhck1hcDohIXQuc3BlY3VsYXJNYXAsYWxwaGFNYXA6ISF0LmFscGhhTWFwLGdyYWRpZW50TWFwOiEhdC5ncmFkaWVudE1hcCxjb21iaW5lOnQuY29tYmluZSx2ZXJ0ZXhDb2xvcnM6dC52ZXJ0ZXhDb2xvcnMsZm9nOiEhaSx1c2VGb2c6dC5mb2csZm9nRXhwOmkmJmkuaXNGb2dFeHAyLGZsYXRTaGFkaW5nOjE9PT10LnNoYWRpbmcsc2l6ZUF0dGVudWF0aW9uOnQuc2l6ZUF0dGVudWF0aW9uLGxvZ2FyaXRobWljRGVwdGhCdWZmZXI6dS5sb2dhcml0aG1pY0RlcHRoQnVmZmVyLHNraW5uaW5nOnQuc2tpbm5pbmcsbWF4Qm9uZXM6byx1c2VWZXJ0ZXhUZXh0dXJlOnUuZmxvYXRWZXJ0ZXhUZXh0dXJlcyYmYSYmYS5za2VsZXRvbiYmYS5za2VsZXRvbi51c2VWZXJ0ZXhUZXh0dXJlLG1vcnBoVGFyZ2V0czp0Lm1vcnBoVGFyZ2V0cyxtb3JwaE5vcm1hbHM6dC5tb3JwaE5vcm1hbHMsbWF4TW9ycGhUYXJnZXRzOmwubWF4TW9ycGhUYXJnZXRzLG1heE1vcnBoTm9ybWFsczpsLm1heE1vcnBoTm9ybWFscyxudW1EaXJMaWdodHM6ZS5kaXJlY3Rpb25hbC5sZW5ndGgsbnVtUG9pbnRMaWdodHM6ZS5wb2ludC5sZW5ndGgsbnVtU3BvdExpZ2h0czplLnNwb3QubGVuZ3RoLG51bVJlY3RBcmVhTGlnaHRzOmUucmVjdEFyZWEubGVuZ3RoLG51bUhlbWlMaWdodHM6ZS5oZW1pLmxlbmd0aCxudW1DbGlwcGluZ1BsYW5lczpuLG51bUNsaXBJbnRlcnNlY3Rpb246cixzaGFkb3dNYXBFbmFibGVkOmwuc2hhZG93TWFwLmVuYWJsZWQmJmEucmVjZWl2ZVNoYWRvdyYmMDxlLnNoYWRvd3MubGVuZ3RoLHNoYWRvd01hcFR5cGU6bC5zaGFkb3dNYXAudHlwZSx0b25lTWFwcGluZzpsLnRvbmVNYXBwaW5nLHBoeXNpY2FsbHlDb3JyZWN0TGlnaHRzOmwucGh5c2ljYWxseUNvcnJlY3RMaWdodHMscHJlbXVsdGlwbGllZEFscGhhOnQucHJlbXVsdGlwbGllZEFscGhhLGFscGhhVGVzdDp0LmFscGhhVGVzdCxkb3VibGVTaWRlZDoyPT09dC5zaWRlLGZsaXBTaWRlZDoxPT09dC5zaWRlLGRlcHRoUGFja2luZzp2b2lkIDAhPT10LmRlcHRoUGFja2luZyYmdC5kZXB0aFBhY2tpbmd9fSx0aGlzLmdldFByb2dyYW1Db2RlPWZ1bmN0aW9uKHQsZSl7dmFyIGk9W107aWYoZS5zaGFkZXJJRD9pLnB1c2goZS5zaGFkZXJJRCk6KGkucHVzaCh0LmZyYWdtZW50U2hhZGVyKSxpLnB1c2godC52ZXJ0ZXhTaGFkZXIpKSx2b2lkIDAhPT10LmRlZmluZXMpZm9yKHZhciBuIGluIHQuZGVmaW5lcylpLnB1c2gobiksaS5wdXNoKHQuZGVmaW5lc1tuXSk7Zm9yKG49MDtuPHIubGVuZ3RoO24rKylpLnB1c2goZVtyW25dXSk7cmV0dXJuIGkuam9pbigpfSx0aGlzLmFjcXVpcmVQcm9ncmFtPWZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG4scj0wLGE9cy5sZW5ndGg7cjxhO3IrKyl7dmFyIG89c1tyXTtpZihvLmNvZGU9PT1pKXsrKyhuPW8pLnVzZWRUaW1lczticmVha319cmV0dXJuIHZvaWQgMD09PW4mJihuPW5ldyBndChsLGksdCxlKSxzLnB1c2gobikpLG59LHRoaXMucmVsZWFzZVByb2dyYW09ZnVuY3Rpb24odCl7aWYoMD09LS10LnVzZWRUaW1lcyl7dmFyIGU9cy5pbmRleE9mKHQpO3NbZV09c1tzLmxlbmd0aC0xXSxzLnBvcCgpLHQuZGVzdHJveSgpfX0sdGhpcy5wcm9ncmFtcz1zfWZ1bmN0aW9uIHZ0KGkscixhKXtmdW5jdGlvbiBvKHQpe3ZhciBlPXQudGFyZ2V0O251bGwhPT0odD1jW2UuaWRdKS5pbmRleCYmcyh0LmluZGV4KTt2YXIgaSxuPXQuYXR0cmlidXRlcztmb3IoaSBpbiBuKXMobltpXSk7ZS5yZW1vdmVFdmVudExpc3RlbmVyKCJkaXNwb3NlIixvKSxkZWxldGUgY1tlLmlkXSwoaT1yLmdldChlKSkud2lyZWZyYW1lJiZzKGkud2lyZWZyYW1lKSxyLmRlbGV0ZShlKSwoZT1yLmdldCh0KSkud2lyZWZyYW1lJiZzKGUud2lyZWZyYW1lKSxyLmRlbGV0ZSh0KSxhLm1lbW9yeS5nZW9tZXRyaWVzLS19ZnVuY3Rpb24gcyh0KXt2YXIgZTt2b2lkIDAhPT0oZT10LmlzSW50ZXJsZWF2ZWRCdWZmZXJBdHRyaWJ1dGU/ci5nZXQodC5kYXRhKS5fX3dlYmdsQnVmZmVyOnIuZ2V0KHQpLl9fd2ViZ2xCdWZmZXIpJiYoaS5kZWxldGVCdWZmZXIoZSksdC5pc0ludGVybGVhdmVkQnVmZmVyQXR0cmlidXRlP3IuZGVsZXRlKHQuZGF0YSk6ci5kZWxldGUodCkpfXZhciBjPXt9O3JldHVybntnZXQ6ZnVuY3Rpb24odCl7dmFyIGUsaT10Lmdlb21ldHJ5O3JldHVybiB2b2lkIDAhPT1jW2kuaWRdP2NbaS5pZF06KGkuYWRkRXZlbnRMaXN0ZW5lcigiZGlzcG9zZSIsbyksaS5pc0J1ZmZlckdlb21ldHJ5P2U9aTppLmlzR2VvbWV0cnkmJih2b2lkIDA9PT1pLl9idWZmZXJHZW9tZXRyeSYmKGkuX2J1ZmZlckdlb21ldHJ5PShuZXcgVnQpLnNldEZyb21PYmplY3QodCkpLGU9aS5fYnVmZmVyR2VvbWV0cnkpLGNbaS5pZF09ZSxhLm1lbW9yeS5nZW9tZXRyaWVzKyssZSl9fX1mdW5jdGlvbiBLdChoLGwsdCl7ZnVuY3Rpb24gdSh0LGUpe3ZhciBpPXQuaXNJbnRlcmxlYXZlZEJ1ZmZlckF0dHJpYnV0ZT90LmRhdGE6dCxuPWwuZ2V0KGkpO2lmKHZvaWQgMD09PW4uX193ZWJnbEJ1ZmZlcil7bi5fX3dlYmdsQnVmZmVyPWguY3JlYXRlQnVmZmVyKCksaC5iaW5kQnVmZmVyKGUsbi5fX3dlYmdsQnVmZmVyKSxoLmJ1ZmZlckRhdGEoZSxpLmFycmF5LGkuZHluYW1pYz9oLkRZTkFNSUNfRFJBVzpoLlNUQVRJQ19EUkFXKTt2YXIgcj1oLkZMT0FULGE9aS5hcnJheTthIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P3I9aC5GTE9BVDphIGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5P2NvbnNvbGUud2FybigiVW5zdXBwb3J0ZWQgZGF0YSBidWZmZXIgZm9ybWF0OiBGbG9hdDY0QXJyYXkiKTphIGluc3RhbmNlb2YgVWludDE2QXJyYXk/cj1oLlVOU0lHTkVEX1NIT1JUOmEgaW5zdGFuY2VvZiBJbnQxNkFycmF5P3I9aC5TSE9SVDphIGluc3RhbmNlb2YgVWludDMyQXJyYXk/cj1oLlVOU0lHTkVEX0lOVDphIGluc3RhbmNlb2YgSW50MzJBcnJheT9yPWguSU5UOmEgaW5zdGFuY2VvZiBJbnQ4QXJyYXk/cj1oLkJZVEU6YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkmJihyPWguVU5TSUdORURfQllURSksbi5ieXRlc1BlckVsZW1lbnQ9YS5CWVRFU19QRVJfRUxFTUVOVCxuLnR5cGU9cixuLnZlcnNpb249aS52ZXJzaW9uLGkub25VcGxvYWRDYWxsYmFjaygpfWVsc2Ugbi52ZXJzaW9uIT09aS52ZXJzaW9uJiYoaC5iaW5kQnVmZmVyKGUsbi5fX3dlYmdsQnVmZmVyKSwhMT09PWkuZHluYW1pYz9oLmJ1ZmZlckRhdGEoZSxpLmFycmF5LGguU1RBVElDX0RSQVcpOi0xPT09aS51cGRhdGVSYW5nZS5jb3VudD9oLmJ1ZmZlclN1YkRhdGEoZSwwLGkuYXJyYXkpOjA9PT1pLnVwZGF0ZVJhbmdlLmNvdW50P2NvbnNvbGUuZXJyb3IoIlRIUkVFLldlYkdMT2JqZWN0cy51cGRhdGVCdWZmZXI6IGR5bmFtaWMgVEhSRUUuQnVmZmVyQXR0cmlidXRlIG1hcmtlZCBhcyBuZWVkc1VwZGF0ZSBidXQgdXBkYXRlUmFuZ2UuY291bnQgaXMgMCwgZW5zdXJlIHlvdSdyZSB1c2luZyBzZXQgbWV0aG9kcyBvciB1cGRhdGluZyBtYW51YWxseS4iKTooaC5idWZmZXJTdWJEYXRhKGUsaS51cGRhdGVSYW5nZS5vZmZzZXQqaS5hcnJheS5CWVRFU19QRVJfRUxFTUVOVCxpLmFycmF5LnN1YmFycmF5KGkudXBkYXRlUmFuZ2Uub2Zmc2V0LGkudXBkYXRlUmFuZ2Uub2Zmc2V0K2kudXBkYXRlUmFuZ2UuY291bnQpKSxpLnVwZGF0ZVJhbmdlLmNvdW50PTApLG4udmVyc2lvbj1pLnZlcnNpb24pfXZhciBvPW5ldyB2dChoLGwsdCk7cmV0dXJue2dldEF0dHJpYnV0ZUJ1ZmZlcjpmdW5jdGlvbih0KXtyZXR1cm4gdC5pc0ludGVybGVhdmVkQnVmZmVyQXR0cmlidXRlP2wuZ2V0KHQuZGF0YSkuX193ZWJnbEJ1ZmZlcjpsLmdldCh0KS5fX3dlYmdsQnVmZmVyfSxnZXRBdHRyaWJ1dGVQcm9wZXJ0aWVzOmZ1bmN0aW9uKHQpe3JldHVybiB0LmlzSW50ZXJsZWF2ZWRCdWZmZXJBdHRyaWJ1dGU/bC5nZXQodC5kYXRhKTpsLmdldCh0KX0sZ2V0V2lyZWZyYW1lQXR0cmlidXRlOmZ1bmN0aW9uKHQpe3ZhciBlPWwuZ2V0KHQpO2lmKHZvaWQgMCE9PWUud2lyZWZyYW1lKXJldHVybiBlLndpcmVmcmFtZTt2YXIgaT1bXSxuPXQuaW5kZXg7aWYodD0ocj10LmF0dHJpYnV0ZXMpLnBvc2l0aW9uLG51bGwhPT1uKWZvcih2YXIgcj0wLGE9KG49bi5hcnJheSkubGVuZ3RoO3I8YTtyKz0zKXt2YXIgbz1uW3IrMF0scz1uW3IrMV0sYz1uW3IrMl07aS5wdXNoKG8scyxzLGMsYyxvKX1lbHNlIGZvcihuPXIucG9zaXRpb24uYXJyYXkscj0wLGE9bi5sZW5ndGgvMy0xO3I8YTtyKz0zKW89ciswLHM9cisxLGM9cisyLGkucHVzaChvLHMscyxjLGMsbyk7cmV0dXJuIHUoaT1uZXcgSihuZXcoNjU1MzU8dC5jb3VudD9VaW50MzJBcnJheTpVaW50MTZBcnJheSkoaSksMSksaC5FTEVNRU5UX0FSUkFZX0JVRkZFUiksZS53aXJlZnJhbWU9aX0sdXBkYXRlOmZ1bmN0aW9uKHQpe3ZhciBlPW8uZ2V0KHQpO3QuZ2VvbWV0cnkuaXNHZW9tZXRyeSYmZS51cGRhdGVGcm9tT2JqZWN0KHQpLHQ9ZS5pbmRleDt2YXIgaT1lLmF0dHJpYnV0ZXM7Zm9yKHZhciBuIGluIG51bGwhPT10JiZ1KHQsaC5FTEVNRU5UX0FSUkFZX0JVRkZFUiksaSl1KGlbbl0saC5BUlJBWV9CVUZGRVIpO2ZvcihuIGluIHQ9ZS5tb3JwaEF0dHJpYnV0ZXMpZm9yKHZhciByPTAsYT0oaT10W25dKS5sZW5ndGg7cjxhO3IrKyl1KGlbcl0saC5BUlJBWV9CVUZGRVIpO3JldHVybiBlfX19ZnVuY3Rpb24gJHQoZixuLG0sZyx2LHksdCl7ZnVuY3Rpb24geCh0LGUpe2lmKHQud2lkdGg+ZXx8dC5oZWlnaHQ+ZSl7dmFyIGk9ZS9NYXRoLm1heCh0LndpZHRoLHQuaGVpZ2h0KSxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsImNhbnZhcyIpO3JldHVybiBuLndpZHRoPU1hdGguZmxvb3IodC53aWR0aCppKSxuLmhlaWdodD1NYXRoLmZsb29yKHQuaGVpZ2h0KmkpLG4uZ2V0Q29udGV4dCgiMmQiKS5kcmF3SW1hZ2UodCwwLDAsdC53aWR0aCx0LmhlaWdodCwwLDAsbi53aWR0aCxuLmhlaWdodCksY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBpbWFnZSBpcyB0b28gYmlnICgiK3Qud2lkdGgrIngiK3QuaGVpZ2h0KyIpLiBSZXNpemVkIHRvICIrbi53aWR0aCsieCIrbi5oZWlnaHQsdCksbn1yZXR1cm4gdH1mdW5jdGlvbiBfKHQpe3JldHVybiBlci5pc1Bvd2VyT2ZUd28odC53aWR0aCkmJmVyLmlzUG93ZXJPZlR3byh0LmhlaWdodCl9ZnVuY3Rpb24gcih0KXtyZXR1cm4gMTAwMz09PXR8fDEwMDQ9PT10fHwxMDA1PT09dD9mLk5FQVJFU1Q6Zi5MSU5FQVJ9ZnVuY3Rpb24gYih0KXsodD10LnRhcmdldCkucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZGlzcG9zZSIsYik7dDp7dmFyIGU9Zy5nZXQodCk7aWYodC5pbWFnZSYmZS5fX2ltYWdlX193ZWJnbFRleHR1cmVDdWJlKWYuZGVsZXRlVGV4dHVyZShlLl9faW1hZ2VfX3dlYmdsVGV4dHVyZUN1YmUpO2Vsc2V7aWYodm9pZCAwPT09ZS5fX3dlYmdsSW5pdClicmVhayB0O2YuZGVsZXRlVGV4dHVyZShlLl9fd2ViZ2xUZXh0dXJlKX1nLmRlbGV0ZSh0KX1NLnRleHR1cmVzLS19ZnVuY3Rpb24gbyh0KXsodD10LnRhcmdldCkucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZGlzcG9zZSIsbyk7dmFyIGU9Zy5nZXQodCksaT1nLmdldCh0LnRleHR1cmUpO2lmKHQpe2lmKHZvaWQgMCE9PWkuX193ZWJnbFRleHR1cmUmJmYuZGVsZXRlVGV4dHVyZShpLl9fd2ViZ2xUZXh0dXJlKSx0LmRlcHRoVGV4dHVyZSYmdC5kZXB0aFRleHR1cmUuZGlzcG9zZSgpLHQuaXNXZWJHTFJlbmRlclRhcmdldEN1YmUpZm9yKGk9MDtpPDY7aSsrKWYuZGVsZXRlRnJhbWVidWZmZXIoZS5fX3dlYmdsRnJhbWVidWZmZXJbaV0pLGUuX193ZWJnbERlcHRoYnVmZmVyJiZmLmRlbGV0ZVJlbmRlcmJ1ZmZlcihlLl9fd2ViZ2xEZXB0aGJ1ZmZlcltpXSk7ZWxzZSBmLmRlbGV0ZUZyYW1lYnVmZmVyKGUuX193ZWJnbEZyYW1lYnVmZmVyKSxlLl9fd2ViZ2xEZXB0aGJ1ZmZlciYmZi5kZWxldGVSZW5kZXJidWZmZXIoZS5fX3dlYmdsRGVwdGhidWZmZXIpO2cuZGVsZXRlKHQudGV4dHVyZSksZy5kZWxldGUodCl9TS50ZXh0dXJlcy0tfWZ1bmN0aW9uIHModCxlKXt2YXIgaT1nLmdldCh0KTtpZigwPHQudmVyc2lvbiYmaS5fX3ZlcnNpb24hPT10LnZlcnNpb24paWYodm9pZCAwPT09KHI9dC5pbWFnZSkpY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBUZXh0dXJlIG1hcmtlZCBmb3IgdXBkYXRlIGJ1dCBpbWFnZSBpcyB1bmRlZmluZWQiLHQpO2Vsc2V7aWYoITEhPT1yLmNvbXBsZXRlKXt2b2lkIDA9PT1pLl9fd2ViZ2xJbml0JiYoaS5fX3dlYmdsSW5pdD0hMCx0LmFkZEV2ZW50TGlzdGVuZXIoImRpc3Bvc2UiLGIpLGkuX193ZWJnbFRleHR1cmU9Zi5jcmVhdGVUZXh0dXJlKCksTS50ZXh0dXJlcysrKSxtLmFjdGl2ZVRleHR1cmUoZi5URVhUVVJFMCtlKSxtLmJpbmRUZXh0dXJlKGYuVEVYVFVSRV8yRCxpLl9fd2ViZ2xUZXh0dXJlKSxmLnBpeGVsU3RvcmVpKGYuVU5QQUNLX0ZMSVBfWV9XRUJHTCx0LmZsaXBZKSxmLnBpeGVsU3RvcmVpKGYuVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMLHQucHJlbXVsdGlwbHlBbHBoYSksZi5waXhlbFN0b3JlaShmLlVOUEFDS19BTElHTk1FTlQsdC51bnBhY2tBbGlnbm1lbnQpO3ZhciBuPXgodC5pbWFnZSx2Lm1heFRleHR1cmVTaXplKTtpZigoMTAwMSE9PXQud3JhcFN8fDEwMDEhPT10LndyYXBUfHwxMDAzIT09dC5taW5GaWx0ZXImJjEwMDYhPT10Lm1pbkZpbHRlcikmJiExPT09XyhuKSlpZigocj1uKWluc3RhbmNlb2YgSFRNTEltYWdlRWxlbWVudHx8ciBpbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50KXsoYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCJjYW52YXMiKSkud2lkdGg9ZXIubmVhcmVzdFBvd2VyT2ZUd28oci53aWR0aCksYS5oZWlnaHQ9ZXIubmVhcmVzdFBvd2VyT2ZUd28oci5oZWlnaHQpLGEuZ2V0Q29udGV4dCgiMmQiKS5kcmF3SW1hZ2UociwwLDAsYS53aWR0aCxhLmhlaWdodCksY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBpbWFnZSBpcyBub3QgcG93ZXIgb2YgdHdvICgiK3Iud2lkdGgrIngiK3IuaGVpZ2h0KyIpLiBSZXNpemVkIHRvICIrYS53aWR0aCsieCIrYS5oZWlnaHQsciksbj1hfWVsc2Ugbj1yO3ZhciByPV8obiksYT15KHQuZm9ybWF0KSxvPXkodC50eXBlKTt3KGYuVEVYVFVSRV8yRCx0LHIpO3ZhciBzPXQubWlwbWFwcztpZih0LmlzRGVwdGhUZXh0dXJlKXtpZihzPWYuREVQVEhfQ09NUE9ORU5ULDEwMTU9PT10LnR5cGUpe2lmKCFsKXRocm93IEVycm9yKCJGbG9hdCBEZXB0aCBUZXh0dXJlIG9ubHkgc3VwcG9ydGVkIGluIFdlYkdMMi4wIik7cz1mLkRFUFRIX0NPTVBPTkVOVDMyRn1lbHNlIGwmJihzPWYuREVQVEhfQ09NUE9ORU5UMTYpOzEwMjY9PT10LmZvcm1hdCYmcz09PWYuREVQVEhfQ09NUE9ORU5UJiYxMDEyIT09dC50eXBlJiYxMDE0IT09dC50eXBlJiYoY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBVc2UgVW5zaWduZWRTaG9ydFR5cGUgb3IgVW5zaWduZWRJbnRUeXBlIGZvciBEZXB0aEZvcm1hdCBEZXB0aFRleHR1cmUuIiksdC50eXBlPTEwMTIsbz15KHQudHlwZSkpLDEwMjc9PT10LmZvcm1hdCYmKHM9Zi5ERVBUSF9TVEVOQ0lMLDEwMjAhPT10LnR5cGUmJihjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IFVzZSBVbnNpZ25lZEludDI0OFR5cGUgZm9yIERlcHRoU3RlbmNpbEZvcm1hdCBEZXB0aFRleHR1cmUuIiksdC50eXBlPTEwMjAsbz15KHQudHlwZSkpKSxtLnRleEltYWdlMkQoZi5URVhUVVJFXzJELDAscyxuLndpZHRoLG4uaGVpZ2h0LDAsYSxvLG51bGwpfWVsc2UgaWYodC5pc0RhdGFUZXh0dXJlKWlmKDA8cy5sZW5ndGgmJnIpe2Zvcih2YXIgYz0wLGg9cy5sZW5ndGg7YzxoO2MrKyluPXNbY10sbS50ZXhJbWFnZTJEKGYuVEVYVFVSRV8yRCxjLGEsbi53aWR0aCxuLmhlaWdodCwwLGEsbyxuLmRhdGEpO3QuZ2VuZXJhdGVNaXBtYXBzPSExfWVsc2UgbS50ZXhJbWFnZTJEKGYuVEVYVFVSRV8yRCwwLGEsbi53aWR0aCxuLmhlaWdodCwwLGEsbyxuLmRhdGEpO2Vsc2UgaWYodC5pc0NvbXByZXNzZWRUZXh0dXJlKWZvcihjPTAsaD1zLmxlbmd0aDtjPGg7YysrKW49c1tjXSwxMDIzIT09dC5mb3JtYXQmJjEwMjIhPT10LmZvcm1hdD8tMTxtLmdldENvbXByZXNzZWRUZXh0dXJlRm9ybWF0cygpLmluZGV4T2YoYSk/bS5jb21wcmVzc2VkVGV4SW1hZ2UyRChmLlRFWFRVUkVfMkQsYyxhLG4ud2lkdGgsbi5oZWlnaHQsMCxuLmRhdGEpOmNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogQXR0ZW1wdCB0byBsb2FkIHVuc3VwcG9ydGVkIGNvbXByZXNzZWQgdGV4dHVyZSBmb3JtYXQgaW4gLnVwbG9hZFRleHR1cmUoKSIpOm0udGV4SW1hZ2UyRChmLlRFWFRVUkVfMkQsYyxhLG4ud2lkdGgsbi5oZWlnaHQsMCxhLG8sbi5kYXRhKTtlbHNlIGlmKDA8cy5sZW5ndGgmJnIpe2ZvcihjPTAsaD1zLmxlbmd0aDtjPGg7YysrKW49c1tjXSxtLnRleEltYWdlMkQoZi5URVhUVVJFXzJELGMsYSxhLG8sbik7dC5nZW5lcmF0ZU1pcG1hcHM9ITF9ZWxzZSBtLnRleEltYWdlMkQoZi5URVhUVVJFXzJELDAsYSxhLG8sbik7cmV0dXJuIHQuZ2VuZXJhdGVNaXBtYXBzJiZyJiZmLmdlbmVyYXRlTWlwbWFwKGYuVEVYVFVSRV8yRCksaS5fX3ZlcnNpb249dC52ZXJzaW9uLHZvaWQodC5vblVwZGF0ZSYmdC5vblVwZGF0ZSh0KSl9Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBUZXh0dXJlIG1hcmtlZCBmb3IgdXBkYXRlIGJ1dCBpbWFnZSBpcyBpbmNvbXBsZXRlIix0KX1tLmFjdGl2ZVRleHR1cmUoZi5URVhUVVJFMCtlKSxtLmJpbmRUZXh0dXJlKGYuVEVYVFVSRV8yRCxpLl9fd2ViZ2xUZXh0dXJlKX1mdW5jdGlvbiB3KHQsZSxpKXtpPyhmLnRleFBhcmFtZXRlcmkodCxmLlRFWFRVUkVfV1JBUF9TLHkoZS53cmFwUykpLGYudGV4UGFyYW1ldGVyaSh0LGYuVEVYVFVSRV9XUkFQX1QseShlLndyYXBUKSksZi50ZXhQYXJhbWV0ZXJpKHQsZi5URVhUVVJFX01BR19GSUxURVIseShlLm1hZ0ZpbHRlcikpLGYudGV4UGFyYW1ldGVyaSh0LGYuVEVYVFVSRV9NSU5fRklMVEVSLHkoZS5taW5GaWx0ZXIpKSk6KGYudGV4UGFyYW1ldGVyaSh0LGYuVEVYVFVSRV9XUkFQX1MsZi5DTEFNUF9UT19FREdFKSxmLnRleFBhcmFtZXRlcmkodCxmLlRFWFRVUkVfV1JBUF9ULGYuQ0xBTVBfVE9fRURHRSksMTAwMT09PWUud3JhcFMmJjEwMDE9PT1lLndyYXBUfHxjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IFRleHR1cmUgaXMgbm90IHBvd2VyIG9mIHR3by4gVGV4dHVyZS53cmFwUyBhbmQgVGV4dHVyZS53cmFwVCBzaG91bGQgYmUgc2V0IHRvIFRIUkVFLkNsYW1wVG9FZGdlV3JhcHBpbmcuIixlKSxmLnRleFBhcmFtZXRlcmkodCxmLlRFWFRVUkVfTUFHX0ZJTFRFUixyKGUubWFnRmlsdGVyKSksZi50ZXhQYXJhbWV0ZXJpKHQsZi5URVhUVVJFX01JTl9GSUxURVIscihlLm1pbkZpbHRlcikpLDEwMDMhPT1lLm1pbkZpbHRlciYmMTAwNiE9PWUubWluRmlsdGVyJiZjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IFRleHR1cmUgaXMgbm90IHBvd2VyIG9mIHR3by4gVGV4dHVyZS5taW5GaWx0ZXIgc2hvdWxkIGJlIHNldCB0byBUSFJFRS5OZWFyZXN0RmlsdGVyIG9yIFRIUkVFLkxpbmVhckZpbHRlci4iLGUpKSwhKGk9bi5nZXQoIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYyIpKXx8MTAxNT09PWUudHlwZSYmbnVsbD09PW4uZ2V0KCJPRVNfdGV4dHVyZV9mbG9hdF9saW5lYXIiKXx8MTAxNj09PWUudHlwZSYmbnVsbD09PW4uZ2V0KCJPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0X2xpbmVhciIpfHwhKDE8ZS5hbmlzb3Ryb3B5fHxnLmdldChlKS5fX2N1cnJlbnRBbmlzb3Ryb3B5KXx8KGYudGV4UGFyYW1ldGVyZih0LGkuVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQsTWF0aC5taW4oZS5hbmlzb3Ryb3B5LHYuZ2V0TWF4QW5pc290cm9weSgpKSksZy5nZXQoZSkuX19jdXJyZW50QW5pc290cm9weT1lLmFuaXNvdHJvcHkpfWZ1bmN0aW9uIGModCxlLGksbil7dmFyIHI9eShlLnRleHR1cmUuZm9ybWF0KSxhPXkoZS50ZXh0dXJlLnR5cGUpO20udGV4SW1hZ2UyRChuLDAscixlLndpZHRoLGUuaGVpZ2h0LDAscixhLG51bGwpLGYuYmluZEZyYW1lYnVmZmVyKGYuRlJBTUVCVUZGRVIsdCksZi5mcmFtZWJ1ZmZlclRleHR1cmUyRChmLkZSQU1FQlVGRkVSLGksbixnLmdldChlLnRleHR1cmUpLl9fd2ViZ2xUZXh0dXJlLDApLGYuYmluZEZyYW1lYnVmZmVyKGYuRlJBTUVCVUZGRVIsbnVsbCl9ZnVuY3Rpb24gaCh0LGUpe2YuYmluZFJlbmRlcmJ1ZmZlcihmLlJFTkRFUkJVRkZFUix0KSxlLmRlcHRoQnVmZmVyJiYhZS5zdGVuY2lsQnVmZmVyPyhmLnJlbmRlcmJ1ZmZlclN0b3JhZ2UoZi5SRU5ERVJCVUZGRVIsZi5ERVBUSF9DT01QT05FTlQxNixlLndpZHRoLGUuaGVpZ2h0KSxmLmZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyKGYuRlJBTUVCVUZGRVIsZi5ERVBUSF9BVFRBQ0hNRU5ULGYuUkVOREVSQlVGRkVSLHQpKTplLmRlcHRoQnVmZmVyJiZlLnN0ZW5jaWxCdWZmZXI/KGYucmVuZGVyYnVmZmVyU3RvcmFnZShmLlJFTkRFUkJVRkZFUixmLkRFUFRIX1NURU5DSUwsZS53aWR0aCxlLmhlaWdodCksZi5mcmFtZWJ1ZmZlclJlbmRlcmJ1ZmZlcihmLkZSQU1FQlVGRkVSLGYuREVQVEhfU1RFTkNJTF9BVFRBQ0hNRU5ULGYuUkVOREVSQlVGRkVSLHQpKTpmLnJlbmRlcmJ1ZmZlclN0b3JhZ2UoZi5SRU5ERVJCVUZGRVIsZi5SR0JBNCxlLndpZHRoLGUuaGVpZ2h0KSxmLmJpbmRSZW5kZXJidWZmZXIoZi5SRU5ERVJCVUZGRVIsbnVsbCl9dmFyIE09dC5tZW1vcnksbD0idW5kZWZpbmVkIiE9dHlwZW9mIFdlYkdMMlJlbmRlcmluZ0NvbnRleHQmJmYgaW5zdGFuY2VvZiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0O3RoaXMuc2V0VGV4dHVyZTJEPXMsdGhpcy5zZXRUZXh0dXJlQ3ViZT1mdW5jdGlvbih0LGUpe3ZhciBpPWcuZ2V0KHQpO2lmKDY9PT10LmltYWdlLmxlbmd0aClpZigwPHQudmVyc2lvbiYmaS5fX3ZlcnNpb24hPT10LnZlcnNpb24pe2kuX19pbWFnZV9fd2ViZ2xUZXh0dXJlQ3ViZXx8KHQuYWRkRXZlbnRMaXN0ZW5lcigiZGlzcG9zZSIsYiksaS5fX2ltYWdlX193ZWJnbFRleHR1cmVDdWJlPWYuY3JlYXRlVGV4dHVyZSgpLE0udGV4dHVyZXMrKyksbS5hY3RpdmVUZXh0dXJlKGYuVEVYVFVSRTArZSksbS5iaW5kVGV4dHVyZShmLlRFWFRVUkVfQ1VCRV9NQVAsaS5fX2ltYWdlX193ZWJnbFRleHR1cmVDdWJlKSxmLnBpeGVsU3RvcmVpKGYuVU5QQUNLX0ZMSVBfWV9XRUJHTCx0LmZsaXBZKTtmb3IodmFyIG49dCYmdC5pc0NvbXByZXNzZWRUZXh0dXJlLHI9dC5pbWFnZVswXSYmdC5pbWFnZVswXS5pc0RhdGFUZXh0dXJlLGE9W10sbz0wO288NjtvKyspYVtvXT1ufHxyP3I/dC5pbWFnZVtvXS5pbWFnZTp0LmltYWdlW29dOngodC5pbWFnZVtvXSx2Lm1heEN1YmVtYXBTaXplKTt2YXIgcz1fKGFbMF0pLGM9eSh0LmZvcm1hdCksaD15KHQudHlwZSk7Zm9yKHcoZi5URVhUVVJFX0NVQkVfTUFQLHQscyksbz0wO288NjtvKyspaWYobilmb3IodmFyIGwsdT1hW29dLm1pcG1hcHMsZD0wLHA9dS5sZW5ndGg7ZDxwO2QrKylsPXVbZF0sMTAyMyE9PXQuZm9ybWF0JiYxMDIyIT09dC5mb3JtYXQ/LTE8bS5nZXRDb21wcmVzc2VkVGV4dHVyZUZvcm1hdHMoKS5pbmRleE9mKGMpP20uY29tcHJlc3NlZFRleEltYWdlMkQoZi5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grbyxkLGMsbC53aWR0aCxsLmhlaWdodCwwLGwuZGF0YSk6Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBBdHRlbXB0IHRvIGxvYWQgdW5zdXBwb3J0ZWQgY29tcHJlc3NlZCB0ZXh0dXJlIGZvcm1hdCBpbiAuc2V0VGV4dHVyZUN1YmUoKSIpOm0udGV4SW1hZ2UyRChmLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCtvLGQsYyxsLndpZHRoLGwuaGVpZ2h0LDAsYyxoLGwuZGF0YSk7ZWxzZSByP20udGV4SW1hZ2UyRChmLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCtvLDAsYyxhW29dLndpZHRoLGFbb10uaGVpZ2h0LDAsYyxoLGFbb10uZGF0YSk6bS50ZXhJbWFnZTJEKGYuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK28sMCxjLGMsaCxhW29dKTt0LmdlbmVyYXRlTWlwbWFwcyYmcyYmZi5nZW5lcmF0ZU1pcG1hcChmLlRFWFRVUkVfQ1VCRV9NQVApLGkuX192ZXJzaW9uPXQudmVyc2lvbix0Lm9uVXBkYXRlJiZ0Lm9uVXBkYXRlKHQpfWVsc2UgbS5hY3RpdmVUZXh0dXJlKGYuVEVYVFVSRTArZSksbS5iaW5kVGV4dHVyZShmLlRFWFRVUkVfQ1VCRV9NQVAsaS5fX2ltYWdlX193ZWJnbFRleHR1cmVDdWJlKX0sdGhpcy5zZXRUZXh0dXJlQ3ViZUR5bmFtaWM9ZnVuY3Rpb24odCxlKXttLmFjdGl2ZVRleHR1cmUoZi5URVhUVVJFMCtlKSxtLmJpbmRUZXh0dXJlKGYuVEVYVFVSRV9DVUJFX01BUCxnLmdldCh0KS5fX3dlYmdsVGV4dHVyZSl9LHRoaXMuc2V0dXBSZW5kZXJUYXJnZXQ9ZnVuY3Rpb24odCl7dmFyIGU9Zy5nZXQodCksaT1nLmdldCh0LnRleHR1cmUpO3QuYWRkRXZlbnRMaXN0ZW5lcigiZGlzcG9zZSIsbyksaS5fX3dlYmdsVGV4dHVyZT1mLmNyZWF0ZVRleHR1cmUoKSxNLnRleHR1cmVzKys7dmFyIG49ITA9PT10LmlzV2ViR0xSZW5kZXJUYXJnZXRDdWJlLHI9Xyh0KTtpZihuKXtlLl9fd2ViZ2xGcmFtZWJ1ZmZlcj1bXTtmb3IodmFyIGE9MDthPDY7YSsrKWUuX193ZWJnbEZyYW1lYnVmZmVyW2FdPWYuY3JlYXRlRnJhbWVidWZmZXIoKX1lbHNlIGUuX193ZWJnbEZyYW1lYnVmZmVyPWYuY3JlYXRlRnJhbWVidWZmZXIoKTtpZihuKXtmb3IobS5iaW5kVGV4dHVyZShmLlRFWFRVUkVfQ1VCRV9NQVAsaS5fX3dlYmdsVGV4dHVyZSksdyhmLlRFWFRVUkVfQ1VCRV9NQVAsdC50ZXh0dXJlLHIpLGE9MDthPDY7YSsrKWMoZS5fX3dlYmdsRnJhbWVidWZmZXJbYV0sdCxmLkNPTE9SX0FUVEFDSE1FTlQwLGYuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK2EpO3QudGV4dHVyZS5nZW5lcmF0ZU1pcG1hcHMmJnImJmYuZ2VuZXJhdGVNaXBtYXAoZi5URVhUVVJFX0NVQkVfTUFQKSxtLmJpbmRUZXh0dXJlKGYuVEVYVFVSRV9DVUJFX01BUCxudWxsKX1lbHNlIG0uYmluZFRleHR1cmUoZi5URVhUVVJFXzJELGkuX193ZWJnbFRleHR1cmUpLHcoZi5URVhUVVJFXzJELHQudGV4dHVyZSxyKSxjKGUuX193ZWJnbEZyYW1lYnVmZmVyLHQsZi5DT0xPUl9BVFRBQ0hNRU5UMCxmLlRFWFRVUkVfMkQpLHQudGV4dHVyZS5nZW5lcmF0ZU1pcG1hcHMmJnImJmYuZ2VuZXJhdGVNaXBtYXAoZi5URVhUVVJFXzJEKSxtLmJpbmRUZXh0dXJlKGYuVEVYVFVSRV8yRCxudWxsKTtpZih0LmRlcHRoQnVmZmVyKXtpZihlPWcuZ2V0KHQpLGk9ITA9PT10LmlzV2ViR0xSZW5kZXJUYXJnZXRDdWJlLHQuZGVwdGhUZXh0dXJlKXtpZihpKXRocm93IEVycm9yKCJ0YXJnZXQuZGVwdGhUZXh0dXJlIG5vdCBzdXBwb3J0ZWQgaW4gQ3ViZSByZW5kZXIgdGFyZ2V0cyIpO2lmKHQmJnQuaXNXZWJHTFJlbmRlclRhcmdldEN1YmUpdGhyb3cgRXJyb3IoIkRlcHRoIFRleHR1cmUgd2l0aCBjdWJlIHJlbmRlciB0YXJnZXRzIGlzIG5vdCBzdXBwb3J0ZWQhIik7aWYoZi5iaW5kRnJhbWVidWZmZXIoZi5GUkFNRUJVRkZFUixlLl9fd2ViZ2xGcmFtZWJ1ZmZlciksIXQuZGVwdGhUZXh0dXJlfHwhdC5kZXB0aFRleHR1cmUuaXNEZXB0aFRleHR1cmUpdGhyb3cgRXJyb3IoInJlbmRlclRhcmdldC5kZXB0aFRleHR1cmUgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBUSFJFRS5EZXB0aFRleHR1cmUiKTtpZihnLmdldCh0LmRlcHRoVGV4dHVyZSkuX193ZWJnbFRleHR1cmUmJnQuZGVwdGhUZXh0dXJlLmltYWdlLndpZHRoPT09dC53aWR0aCYmdC5kZXB0aFRleHR1cmUuaW1hZ2UuaGVpZ2h0PT09dC5oZWlnaHR8fCh0LmRlcHRoVGV4dHVyZS5pbWFnZS53aWR0aD10LndpZHRoLHQuZGVwdGhUZXh0dXJlLmltYWdlLmhlaWdodD10LmhlaWdodCx0LmRlcHRoVGV4dHVyZS5uZWVkc1VwZGF0ZT0hMCkscyh0LmRlcHRoVGV4dHVyZSwwKSxlPWcuZ2V0KHQuZGVwdGhUZXh0dXJlKS5fX3dlYmdsVGV4dHVyZSwxMDI2PT09dC5kZXB0aFRleHR1cmUuZm9ybWF0KWYuZnJhbWVidWZmZXJUZXh0dXJlMkQoZi5GUkFNRUJVRkZFUixmLkRFUFRIX0FUVEFDSE1FTlQsZi5URVhUVVJFXzJELGUsMCk7ZWxzZXtpZigxMDI3IT09dC5kZXB0aFRleHR1cmUuZm9ybWF0KXRocm93IEVycm9yKCJVbmtub3duIGRlcHRoVGV4dHVyZSBmb3JtYXQiKTtmLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGYuRlJBTUVCVUZGRVIsZi5ERVBUSF9TVEVOQ0lMX0FUVEFDSE1FTlQsZi5URVhUVVJFXzJELGUsMCl9fWVsc2UgaWYoaSlmb3IoZS5fX3dlYmdsRGVwdGhidWZmZXI9W10saT0wO2k8NjtpKyspZi5iaW5kRnJhbWVidWZmZXIoZi5GUkFNRUJVRkZFUixlLl9fd2ViZ2xGcmFtZWJ1ZmZlcltpXSksZS5fX3dlYmdsRGVwdGhidWZmZXJbaV09Zi5jcmVhdGVSZW5kZXJidWZmZXIoKSxoKGUuX193ZWJnbERlcHRoYnVmZmVyW2ldLHQpO2Vsc2UgZi5iaW5kRnJhbWVidWZmZXIoZi5GUkFNRUJVRkZFUixlLl9fd2ViZ2xGcmFtZWJ1ZmZlciksZS5fX3dlYmdsRGVwdGhidWZmZXI9Zi5jcmVhdGVSZW5kZXJidWZmZXIoKSxoKGUuX193ZWJnbERlcHRoYnVmZmVyLHQpO2YuYmluZEZyYW1lYnVmZmVyKGYuRlJBTUVCVUZGRVIsbnVsbCl9fSx0aGlzLnVwZGF0ZVJlbmRlclRhcmdldE1pcG1hcD1mdW5jdGlvbih0KXt2YXIgZT10LnRleHR1cmU7ZS5nZW5lcmF0ZU1pcG1hcHMmJl8odCkmJjEwMDMhPT1lLm1pbkZpbHRlciYmMTAwNiE9PWUubWluRmlsdGVyJiYodD10JiZ0LmlzV2ViR0xSZW5kZXJUYXJnZXRDdWJlP2YuVEVYVFVSRV9DVUJFX01BUDpmLlRFWFRVUkVfMkQsZT1nLmdldChlKS5fX3dlYmdsVGV4dHVyZSxtLmJpbmRUZXh0dXJlKHQsZSksZi5nZW5lcmF0ZU1pcG1hcCh0KSxtLmJpbmRUZXh0dXJlKHQsbnVsbCkpfX1mdW5jdGlvbiB0ZSgpe3ZhciBpPXt9O3JldHVybntnZXQ6ZnVuY3Rpb24odCl7dD10LnV1aWQ7dmFyIGU9aVt0XTtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9e30saVt0XT1lKSxlfSxkZWxldGU6ZnVuY3Rpb24odCl7ZGVsZXRlIGlbdC51dWlkXX0sY2xlYXI6ZnVuY3Rpb24oKXtpPXt9fX19ZnVuY3Rpb24gZWUobCxpLGMpe2Z1bmN0aW9uIHQodCxlLGkpe3ZhciBuPW5ldyBVaW50OEFycmF5KDQpLHI9bC5jcmVhdGVUZXh0dXJlKCk7Zm9yKGwuYmluZFRleHR1cmUodCxyKSxsLnRleFBhcmFtZXRlcmkodCxsLlRFWFRVUkVfTUlOX0ZJTFRFUixsLk5FQVJFU1QpLGwudGV4UGFyYW1ldGVyaSh0LGwuVEVYVFVSRV9NQUdfRklMVEVSLGwuTkVBUkVTVCksdD0wO3Q8aTt0KyspbC50ZXhJbWFnZTJEKGUrdCwwLGwuUkdCQSwxLDEsMCxsLlJHQkEsbC5VTlNJR05FRF9CWVRFLG4pO3JldHVybiByfWZ1bmN0aW9uIHUodCl7ITAhPT15W3RdJiYobC5lbmFibGUodCkseVt0XT0hMCl9ZnVuY3Rpb24gZCh0KXshMSE9PXlbdF0mJihsLmRpc2FibGUodCkseVt0XT0hMSl9ZnVuY3Rpb24gZSh0LGUsaSxuLHIsYSxvLHMpezAhPT10P3UobC5CTEVORCk6ZChsLkJMRU5EKSx0PT09XyYmcz09PUF8fCgyPT09dD9zPyhsLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShsLkZVTkNfQURELGwuRlVOQ19BREQpLGwuYmxlbmRGdW5jU2VwYXJhdGUobC5PTkUsbC5PTkUsbC5PTkUsbC5PTkUpKToobC5ibGVuZEVxdWF0aW9uKGwuRlVOQ19BREQpLGwuYmxlbmRGdW5jKGwuU1JDX0FMUEhBLGwuT05FKSk6Mz09PXQ/cz8obC5ibGVuZEVxdWF0aW9uU2VwYXJhdGUobC5GVU5DX0FERCxsLkZVTkNfQUREKSxsLmJsZW5kRnVuY1NlcGFyYXRlKGwuWkVSTyxsLlpFUk8sbC5PTkVfTUlOVVNfU1JDX0NPTE9SLGwuT05FX01JTlVTX1NSQ19BTFBIQSkpOihsLmJsZW5kRXF1YXRpb24obC5GVU5DX0FERCksbC5ibGVuZEZ1bmMobC5aRVJPLGwuT05FX01JTlVTX1NSQ19DT0xPUikpOjQ9PT10P3M/KGwuYmxlbmRFcXVhdGlvblNlcGFyYXRlKGwuRlVOQ19BREQsbC5GVU5DX0FERCksbC5ibGVuZEZ1bmNTZXBhcmF0ZShsLlpFUk8sbC5TUkNfQ09MT1IsbC5aRVJPLGwuU1JDX0FMUEhBKSk6KGwuYmxlbmRFcXVhdGlvbihsLkZVTkNfQUREKSxsLmJsZW5kRnVuYyhsLlpFUk8sbC5TUkNfQ09MT1IpKTpzPyhsLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShsLkZVTkNfQURELGwuRlVOQ19BREQpLGwuYmxlbmRGdW5jU2VwYXJhdGUobC5PTkUsbC5PTkVfTUlOVVNfU1JDX0FMUEhBLGwuT05FLGwuT05FX01JTlVTX1NSQ19BTFBIQSkpOihsLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShsLkZVTkNfQURELGwuRlVOQ19BREQpLGwuYmxlbmRGdW5jU2VwYXJhdGUobC5TUkNfQUxQSEEsbC5PTkVfTUlOVVNfU1JDX0FMUEhBLGwuT05FLGwuT05FX01JTlVTX1NSQ19BTFBIQSkpLF89dCxBPXMpLDU9PT10PyhyPXJ8fGUsYT1hfHxpLG89b3x8bixlPT09YiYmcj09PUV8fChsLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShjKGUpLGMocikpLGI9ZSxFPXIpLGk9PT13JiZuPT09TSYmYT09PVQmJm89PT1TfHwobC5ibGVuZEZ1bmNTZXBhcmF0ZShjKGkpLGMobiksYyhhKSxjKG8pKSx3PWksTT1uLFQ9YSxTPW8pKTpTPVQ9RT1NPXc9Yj1udWxsfWZ1bmN0aW9uIG4odCl7aC5zZXRGdW5jKHQpfWZ1bmN0aW9uIHIodCl7TCE9PXQmJih0P2wuZnJvbnRGYWNlKGwuQ1cpOmwuZnJvbnRGYWNlKGwuQ0NXKSxMPXQpfWZ1bmN0aW9uIGEodCl7MCE9PXQ/KHUobC5DVUxMX0ZBQ0UpLHQhPT1SJiYoMT09PXQ/bC5jdWxsRmFjZShsLkJBQ0spOjI9PT10P2wuY3VsbEZhY2UobC5GUk9OVCk6bC5jdWxsRmFjZShsLkZST05UX0FORF9CQUNLKSkpOmQobC5DVUxMX0ZBQ0UpLFI9dH1mdW5jdGlvbiBvKHQpe3ZvaWQgMD09PXQmJih0PWwuVEVYVFVSRTArTi0xKSxPIT09dCYmKGwuYWN0aXZlVGV4dHVyZSh0KSxPPXQpfXZhciBzPW5ldyBmdW5jdGlvbigpe3ZhciBlPSExLGE9bmV3IFB0LGk9bnVsbCxvPW5ldyBQdDtyZXR1cm57c2V0TWFzazpmdW5jdGlvbih0KXtpPT09dHx8ZXx8KGwuY29sb3JNYXNrKHQsdCx0LHQpLGk9dCl9LHNldExvY2tlZDpmdW5jdGlvbih0KXtlPXR9LHNldENsZWFyOmZ1bmN0aW9uKHQsZSxpLG4scil7ITA9PT1yJiYodCo9bixlKj1uLGkqPW4pLGEuc2V0KHQsZSxpLG4pLCExPT09by5lcXVhbHMoYSkmJihsLmNsZWFyQ29sb3IodCxlLGksbiksby5jb3B5KGEpKX0scmVzZXQ6ZnVuY3Rpb24oKXtlPSExLGk9bnVsbCxvLnNldCgwLDAsMCwxKX19fSxoPW5ldyBmdW5jdGlvbigpe3ZhciBlPSExLGk9bnVsbCxuPW51bGwscj1udWxsO3JldHVybntzZXRUZXN0OmZ1bmN0aW9uKHQpe3Q/dShsLkRFUFRIX1RFU1QpOmQobC5ERVBUSF9URVNUKX0sc2V0TWFzazpmdW5jdGlvbih0KXtpPT09dHx8ZXx8KGwuZGVwdGhNYXNrKHQpLGk9dCl9LHNldEZ1bmM6ZnVuY3Rpb24odCl7aWYobiE9PXQpe2lmKHQpc3dpdGNoKHQpe2Nhc2UgMDpsLmRlcHRoRnVuYyhsLk5FVkVSKTticmVhaztjYXNlIDE6bC5kZXB0aEZ1bmMobC5BTFdBWVMpO2JyZWFrO2Nhc2UgMjpsLmRlcHRoRnVuYyhsLkxFU1MpO2JyZWFrO2Nhc2UgMzpsLmRlcHRoRnVuYyhsLkxFUVVBTCk7YnJlYWs7Y2FzZSA0OmwuZGVwdGhGdW5jKGwuRVFVQUwpO2JyZWFrO2Nhc2UgNTpsLmRlcHRoRnVuYyhsLkdFUVVBTCk7YnJlYWs7Y2FzZSA2OmwuZGVwdGhGdW5jKGwuR1JFQVRFUik7YnJlYWs7Y2FzZSA3OmwuZGVwdGhGdW5jKGwuTk9URVFVQUwpO2JyZWFrO2RlZmF1bHQ6bC5kZXB0aEZ1bmMobC5MRVFVQUwpfWVsc2UgbC5kZXB0aEZ1bmMobC5MRVFVQUwpO249dH19LHNldExvY2tlZDpmdW5jdGlvbih0KXtlPXR9LHNldENsZWFyOmZ1bmN0aW9uKHQpe3IhPT10JiYobC5jbGVhckRlcHRoKHQpLHI9dCl9LHJlc2V0OmZ1bmN0aW9uKCl7ZT0hMSxyPW49aT1udWxsfX19LHA9bmV3IGZ1bmN0aW9uKCl7dmFyIGU9ITEsaT1udWxsLG49bnVsbCxyPW51bGwsYT1udWxsLG89bnVsbCxzPW51bGwsYz1udWxsLGg9bnVsbDtyZXR1cm57c2V0VGVzdDpmdW5jdGlvbih0KXt0P3UobC5TVEVOQ0lMX1RFU1QpOmQobC5TVEVOQ0lMX1RFU1QpfSxzZXRNYXNrOmZ1bmN0aW9uKHQpe2k9PT10fHxlfHwobC5zdGVuY2lsTWFzayh0KSxpPXQpfSxzZXRGdW5jOmZ1bmN0aW9uKHQsZSxpKXtuPT09dCYmcj09PWUmJmE9PT1pfHwobC5zdGVuY2lsRnVuYyh0LGUsaSksbj10LHI9ZSxhPWkpfSxzZXRPcDpmdW5jdGlvbih0LGUsaSl7bz09PXQmJnM9PT1lJiZjPT09aXx8KGwuc3RlbmNpbE9wKHQsZSxpKSxvPXQscz1lLGM9aSl9LHNldExvY2tlZDpmdW5jdGlvbih0KXtlPXR9LHNldENsZWFyOmZ1bmN0aW9uKHQpe2ghPT10JiYobC5jbGVhclN0ZW5jaWwodCksaD10KX0scmVzZXQ6ZnVuY3Rpb24oKXtlPSExLGg9Yz1zPW89YT1yPW49aT1udWxsfX19LGY9bC5nZXRQYXJhbWV0ZXIobC5NQVhfVkVSVEVYX0FUVFJJQlMpLG09bmV3IFVpbnQ4QXJyYXkoZiksZz1uZXcgVWludDhBcnJheShmKSx2PW5ldyBVaW50OEFycmF5KGYpLHk9e30seD1udWxsLF89bnVsbCxiPW51bGwsdz1udWxsLE09bnVsbCxFPW51bGwsVD1udWxsLFM9bnVsbCxBPSExLEw9bnVsbCxSPW51bGwsUD1udWxsLEM9bnVsbCxJPW51bGwsVT1udWxsLE49bC5nZXRQYXJhbWV0ZXIobC5NQVhfVEVYVFVSRV9JTUFHRV9VTklUUyksRD0oZj1wYXJzZUZsb2F0KC9eV2ViR0xcIChbMC05XSkvLmV4ZWMobC5nZXRQYXJhbWV0ZXIobC5WRVJTSU9OKSlbMV0pLDE8PXBhcnNlRmxvYXQoZikpLE89bnVsbCxGPXt9LHo9bmV3IFB0LEI9bmV3IFB0LEc9e307cmV0dXJuIEdbbC5URVhUVVJFXzJEXT10KGwuVEVYVFVSRV8yRCxsLlRFWFRVUkVfMkQsMSksR1tsLlRFWFRVUkVfQ1VCRV9NQVBdPXQobC5URVhUVVJFX0NVQkVfTUFQLGwuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YLDYpLHtidWZmZXJzOntjb2xvcjpzLGRlcHRoOmgsc3RlbmNpbDpwfSxpbml0OmZ1bmN0aW9uKCl7cy5zZXRDbGVhcigwLDAsMCwxKSxoLnNldENsZWFyKDEpLHAuc2V0Q2xlYXIoMCksdShsLkRFUFRIX1RFU1QpLG4oMykscighMSksYSgxKSx1KGwuQ1VMTF9GQUNFKSx1KGwuQkxFTkQpLGUoMSl9LGluaXRBdHRyaWJ1dGVzOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT1tLmxlbmd0aDt0PGU7dCsrKW1bdF09MH0sZW5hYmxlQXR0cmlidXRlOmZ1bmN0aW9uKHQpe21bdF09MSwwPT09Z1t0XSYmKGwuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodCksZ1t0XT0xKSwwIT09dlt0XSYmKGkuZ2V0KCJBTkdMRV9pbnN0YW5jZWRfYXJyYXlzIikudmVydGV4QXR0cmliRGl2aXNvckFOR0xFKHQsMCksdlt0XT0wKX0sZW5hYmxlQXR0cmlidXRlQW5kRGl2aXNvcjpmdW5jdGlvbih0LGUsaSl7bVt0XT0xLDA9PT1nW3RdJiYobC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSh0KSxnW3RdPTEpLHZbdF0hPT1lJiYoaS52ZXJ0ZXhBdHRyaWJEaXZpc29yQU5HTEUodCxlKSx2W3RdPWUpfSxkaXNhYmxlVW51c2VkQXR0cmlidXRlczpmdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9Zy5sZW5ndGg7dCE9PWU7Kyt0KWdbdF0hPT1tW3RdJiYobC5kaXNhYmxlVmVydGV4QXR0cmliQXJyYXkodCksZ1t0XT0wKX0sZW5hYmxlOnUsZGlzYWJsZTpkLGdldENvbXByZXNzZWRUZXh0dXJlRm9ybWF0czpmdW5jdGlvbigpe2lmKG51bGw9PT14JiYoeD1bXSxpLmdldCgiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjIil8fGkuZ2V0KCJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0YyIpfHxpLmdldCgiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2V0YzEiKSkpZm9yKHZhciB0PWwuZ2V0UGFyYW1ldGVyKGwuQ09NUFJFU1NFRF9URVhUVVJFX0ZPUk1BVFMpLGU9MDtlPHQubGVuZ3RoO2UrKyl4LnB1c2godFtlXSk7cmV0dXJuIHh9LHNldEJsZW5kaW5nOmUsc2V0Q29sb3JXcml0ZTpmdW5jdGlvbih0KXtzLnNldE1hc2sodCl9LHNldERlcHRoVGVzdDpmdW5jdGlvbih0KXtoLnNldFRlc3QodCl9LHNldERlcHRoV3JpdGU6ZnVuY3Rpb24odCl7aC5zZXRNYXNrKHQpfSxzZXREZXB0aEZ1bmM6bixzZXRTdGVuY2lsVGVzdDpmdW5jdGlvbih0KXtwLnNldFRlc3QodCl9LHNldFN0ZW5jaWxXcml0ZTpmdW5jdGlvbih0KXtwLnNldE1hc2sodCl9LHNldFN0ZW5jaWxGdW5jOmZ1bmN0aW9uKHQsZSxpKXtwLnNldEZ1bmModCxlLGkpfSxzZXRTdGVuY2lsT3A6ZnVuY3Rpb24odCxlLGkpe3Auc2V0T3AodCxlLGkpfSxzZXRGbGlwU2lkZWQ6cixzZXRDdWxsRmFjZTphLHNldExpbmVXaWR0aDpmdW5jdGlvbih0KXt0IT09UCYmKEQmJmwubGluZVdpZHRoKHQpLFA9dCl9LHNldFBvbHlnb25PZmZzZXQ6ZnVuY3Rpb24odCxlLGkpe3Q/KHUobC5QT0xZR09OX09GRlNFVF9GSUxMKSwoQyE9PWV8fEkhPT1pKSYmKGwucG9seWdvbk9mZnNldChlLGkpLEM9ZSxJPWkpKTpkKGwuUE9MWUdPTl9PRkZTRVRfRklMTCl9LGdldFNjaXNzb3JUZXN0OmZ1bmN0aW9uKCl7cmV0dXJuIFV9LHNldFNjaXNzb3JUZXN0OmZ1bmN0aW9uKHQpeyhVPXQpP3UobC5TQ0lTU09SX1RFU1QpOmQobC5TQ0lTU09SX1RFU1QpfSxhY3RpdmVUZXh0dXJlOm8sYmluZFRleHR1cmU6ZnVuY3Rpb24odCxlKXtudWxsPT09TyYmbygpO3ZhciBpPUZbT107dm9pZCAwPT09aSYmKGk9e3R5cGU6dm9pZCAwLHRleHR1cmU6dm9pZCAwfSxGW09dPWkpLGkudHlwZT09PXQmJmkudGV4dHVyZT09PWV8fChsLmJpbmRUZXh0dXJlKHQsZXx8R1t0XSksaS50eXBlPXQsaS50ZXh0dXJlPWUpfSxjb21wcmVzc2VkVGV4SW1hZ2UyRDpmdW5jdGlvbigpe3RyeXtsLmNvbXByZXNzZWRUZXhJbWFnZTJELmFwcGx5KGwsYXJndW1lbnRzKX1jYXRjaCh0KXtjb25zb2xlLmVycm9yKHQpfX0sdGV4SW1hZ2UyRDpmdW5jdGlvbigpe3RyeXtsLnRleEltYWdlMkQuYXBwbHkobCxhcmd1bWVudHMpfWNhdGNoKHQpe2NvbnNvbGUuZXJyb3IodCl9fSxzY2lzc29yOmZ1bmN0aW9uKHQpeyExPT09ei5lcXVhbHModCkmJihsLnNjaXNzb3IodC54LHQueSx0LnosdC53KSx6LmNvcHkodCkpfSx2aWV3cG9ydDpmdW5jdGlvbih0KXshMT09PUIuZXF1YWxzKHQpJiYobC52aWV3cG9ydCh0LngsdC55LHQueix0LncpLEIuY29weSh0KSl9LHJlc2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PTA7dDxnLmxlbmd0aDt0KyspMT09PWdbdF0mJihsLmRpc2FibGVWZXJ0ZXhBdHRyaWJBcnJheSh0KSxnW3RdPTApO3k9e30sTz14PW51bGwsRj17fSxSPUw9Xz1udWxsLHMucmVzZXQoKSxoLnJlc2V0KCkscC5yZXNldCgpfX19ZnVuY3Rpb24gaWUoZSxpLHQpe2Z1bmN0aW9uIG4odCl7aWYoImhpZ2hwIj09PXQpe2lmKDA8ZS5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQoZS5WRVJURVhfU0hBREVSLGUuSElHSF9GTE9BVCkucHJlY2lzaW9uJiYwPGUuZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0KGUuRlJBR01FTlRfU0hBREVSLGUuSElHSF9GTE9BVCkucHJlY2lzaW9uKXJldHVybiJoaWdocCI7dD0ibWVkaXVtcCJ9cmV0dXJuIm1lZGl1bXAiPT09dCYmMDxlLmdldFNoYWRlclByZWNpc2lvbkZvcm1hdChlLlZFUlRFWF9TSEFERVIsZS5NRURJVU1fRkxPQVQpLnByZWNpc2lvbiYmMDxlLmdldFNoYWRlclByZWNpc2lvbkZvcm1hdChlLkZSQUdNRU5UX1NIQURFUixlLk1FRElVTV9GTE9BVCkucHJlY2lzaW9uPyJtZWRpdW1wIjoibG93cCJ9dmFyIHIsYT12b2lkIDAhPT10LnByZWNpc2lvbj90LnByZWNpc2lvbjoiaGlnaHAiOyhvPW4oYSkpIT09YSYmKGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjoiLGEsIm5vdCBzdXBwb3J0ZWQsIHVzaW5nIixvLCJpbnN0ZWFkLiIpLGE9byksdD0hMD09PXQubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlciYmISFpLmdldCgiRVhUX2ZyYWdfZGVwdGgiKTt2YXIgbz1lLmdldFBhcmFtZXRlcihlLk1BWF9URVhUVVJFX0lNQUdFX1VOSVRTKSxzPWUuZ2V0UGFyYW1ldGVyKGUuTUFYX1ZFUlRFWF9URVhUVVJFX0lNQUdFX1VOSVRTKSxjPWUuZ2V0UGFyYW1ldGVyKGUuTUFYX1RFWFRVUkVfU0laRSksaD1lLmdldFBhcmFtZXRlcihlLk1BWF9DVUJFX01BUF9URVhUVVJFX1NJWkUpLGw9ZS5nZXRQYXJhbWV0ZXIoZS5NQVhfVkVSVEVYX0FUVFJJQlMpLHU9ZS5nZXRQYXJhbWV0ZXIoZS5NQVhfVkVSVEVYX1VOSUZPUk1fVkVDVE9SUyksZD1lLmdldFBhcmFtZXRlcihlLk1BWF9WQVJZSU5HX1ZFQ1RPUlMpLHA9ZS5nZXRQYXJhbWV0ZXIoZS5NQVhfRlJBR01FTlRfVU5JRk9STV9WRUNUT1JTKSxmPTA8cyxtPSEhaS5nZXQoIk9FU190ZXh0dXJlX2Zsb2F0Iik7cmV0dXJue2dldE1heEFuaXNvdHJvcHk6ZnVuY3Rpb24oKXtpZih2b2lkIDAhPT1yKXJldHVybiByO3ZhciB0PWkuZ2V0KCJFWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWMiKTtyZXR1cm4gcj1udWxsIT09dD9lLmdldFBhcmFtZXRlcih0Lk1BWF9URVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCk6MH0sZ2V0TWF4UHJlY2lzaW9uOm4scHJlY2lzaW9uOmEsbG9nYXJpdGhtaWNEZXB0aEJ1ZmZlcjp0LG1heFRleHR1cmVzOm8sbWF4VmVydGV4VGV4dHVyZXM6cyxtYXhUZXh0dXJlU2l6ZTpjLG1heEN1YmVtYXBTaXplOmgsbWF4QXR0cmlidXRlczpsLG1heFZlcnRleFVuaWZvcm1zOnUsbWF4VmFyeWluZ3M6ZCxtYXhGcmFnbWVudFVuaWZvcm1zOnAsdmVydGV4VGV4dHVyZXM6ZixmbG9hdEZyYWdtZW50VGV4dHVyZXM6bSxmbG9hdFZlcnRleFRleHR1cmVzOmYmJm19fWZ1bmN0aW9uIG5lKGkpe3ZhciBuPXt9O3JldHVybntnZXQ6ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09blt0XSlyZXR1cm4gblt0XTt2YXIgZTtzd2l0Y2godCl7Y2FzZSJXRUJHTF9kZXB0aF90ZXh0dXJlIjplPWkuZ2V0RXh0ZW5zaW9uKCJXRUJHTF9kZXB0aF90ZXh0dXJlIil8fGkuZ2V0RXh0ZW5zaW9uKCJNT1pfV0VCR0xfZGVwdGhfdGV4dHVyZSIpfHxpLmdldEV4dGVuc2lvbigiV0VCS0lUX1dFQkdMX2RlcHRoX3RleHR1cmUiKTticmVhaztjYXNlIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYyI6ZT1pLmdldEV4dGVuc2lvbigiRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljIil8fGkuZ2V0RXh0ZW5zaW9uKCJNT1pfRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljIil8fGkuZ2V0RXh0ZW5zaW9uKCJXRUJLSVRfRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljIik7YnJlYWs7Y2FzZSJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0YyI6ZT1pLmdldEV4dGVuc2lvbigiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3MzdGMiKXx8aS5nZXRFeHRlbnNpb24oIk1PWl9XRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0YyIpfHxpLmdldEV4dGVuc2lvbigiV0VCS0lUX1dFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjIik7YnJlYWs7Y2FzZSJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfcHZydGMiOmU9aS5nZXRFeHRlbnNpb24oIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9wdnJ0YyIpfHxpLmdldEV4dGVuc2lvbigiV0VCS0lUX1dFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9wdnJ0YyIpO2JyZWFrO2Nhc2UiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2V0YzEiOmU9aS5nZXRFeHRlbnNpb24oIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9ldGMxIik7YnJlYWs7ZGVmYXVsdDplPWkuZ2V0RXh0ZW5zaW9uKHQpfXJldHVybiBudWxsPT09ZSYmY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAiK3QrIiBleHRlbnNpb24gbm90IHN1cHBvcnRlZC4iKSxuW3RdPWV9fX1mdW5jdGlvbiByZSgpe2Z1bmN0aW9uIGMoKXttLnZhbHVlIT09bCYmKG0udmFsdWU9bCxtLm5lZWRzVXBkYXRlPTA8dSksby5udW1QbGFuZXM9dSxvLm51bUludGVyc2VjdGlvbj0wfWZ1bmN0aW9uIGgodCxlLGksbil7dmFyIHI9bnVsbCE9PXQ/dC5sZW5ndGg6MCxhPW51bGw7aWYoMCE9PXIpe2lmKGE9bS52YWx1ZSwhMCE9PW58fG51bGw9PT1hKWZvcihuPWkrNCpyLGU9ZS5tYXRyaXhXb3JsZEludmVyc2UsZi5nZXROb3JtYWxNYXRyaXgoZSksKG51bGw9PT1hfHxhLmxlbmd0aDxuKSYmKGE9bmV3IEZsb2F0MzJBcnJheShuKSksbj0wO24hPT1yOysrbixpKz00KXMuY29weSh0W25dKS5hcHBseU1hdHJpeDQoZSxmKSxzLm5vcm1hbC50b0FycmF5KGEsaSksYVtpKzNdPXMuY29uc3RhbnQ7bS52YWx1ZT1hLG0ubmVlZHNVcGRhdGU9ITB9cmV0dXJuIG8ubnVtUGxhbmVzPXIsYX12YXIgbz10aGlzLGw9bnVsbCx1PTAsZD0hMSxwPSExLHM9bmV3IEgsZj1uZXcgRixtPXt2YWx1ZTpudWxsLG5lZWRzVXBkYXRlOiExfTt0aGlzLnVuaWZvcm09bSx0aGlzLm51bUludGVyc2VjdGlvbj10aGlzLm51bVBsYW5lcz0wLHRoaXMuaW5pdD1mdW5jdGlvbih0LGUsaSl7dmFyIG49MCE9PXQubGVuZ3RofHxlfHwwIT09dXx8ZDtyZXR1cm4gZD1lLGw9aCh0LGksMCksdT10Lmxlbmd0aCxufSx0aGlzLmJlZ2luU2hhZG93cz1mdW5jdGlvbigpe3A9ITAsaChudWxsKX0sdGhpcy5lbmRTaGFkb3dzPWZ1bmN0aW9uKCl7cD0hMSxjKCl9LHRoaXMuc2V0U3RhdGU9ZnVuY3Rpb24odCxlLGksbixyLGEpe2lmKCFkfHxudWxsPT09dHx8MD09PXQubGVuZ3RofHxwJiYhaSlwP2gobnVsbCk6YygpO2Vsc2V7dmFyIG89NCooaT1wPzA6dSkscz1yLmNsaXBwaW5nU3RhdGV8fG51bGw7Zm9yKG0udmFsdWU9cyxzPWgodCxuLG8sYSksdD0wO3QhPT1vOysrdClzW3RdPWxbdF07ci5jbGlwcGluZ1N0YXRlPXMsdGhpcy5udW1JbnRlcnNlY3Rpb249ZT90aGlzLm51bVBsYW5lczowLHRoaXMubnVtUGxhbmVzKz1pfX19ZnVuY3Rpb24geXQodCl7ZnVuY3Rpb24gZSgpe2R0LmluaXQoKSxkdC5zY2lzc29yKHkuY29weShKKS5tdWx0aXBseVNjYWxhcihaKSksZHQudmlld3BvcnQoVy5jb3B5KEspLm11bHRpcGx5U2NhbGFyKFopKSxkdC5idWZmZXJzLmNvbG9yLnNldENsZWFyKFgucixYLmcsWC5iLFksUCl9ZnVuY3Rpb24gaSgpe2o9Zz1udWxsLGs9IiIsVj0tMSxkdC5yZXNldCgpfWZ1bmN0aW9uIG4odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGkoKSxlKCkscHQuY2xlYXIoKX1mdW5jdGlvbiBkKHQpeyh0PXQudGFyZ2V0KS5yZW1vdmVFdmVudExpc3RlbmVyKCJkaXNwb3NlIixkKSxwKHQpLHB0LmRlbGV0ZSh0KX1mdW5jdGlvbiBwKHQpe3ZhciBlPXB0LmdldCh0KS5wcm9ncmFtOyh0LnByb2dyYW09dm9pZCAwKSE9PWUmJmd0LnJlbGVhc2VQcm9ncmFtKGUpfWZ1bmN0aW9uIE0odCxlKXtyZXR1cm4gTWF0aC5hYnMoZVswXSktTWF0aC5hYnModFswXSl9ZnVuY3Rpb24gdyh0LGUpe3JldHVybiB0Lm9iamVjdC5yZW5kZXJPcmRlciE9PWUub2JqZWN0LnJlbmRlck9yZGVyP3Qub2JqZWN0LnJlbmRlck9yZGVyLWUub2JqZWN0LnJlbmRlck9yZGVyOnQubWF0ZXJpYWwucHJvZ3JhbSYmZS5tYXRlcmlhbC5wcm9ncmFtJiZ0Lm1hdGVyaWFsLnByb2dyYW0hPT1lLm1hdGVyaWFsLnByb2dyYW0/dC5tYXRlcmlhbC5wcm9ncmFtLmlkLWUubWF0ZXJpYWwucHJvZ3JhbS5pZDp0Lm1hdGVyaWFsLmlkIT09ZS5tYXRlcmlhbC5pZD90Lm1hdGVyaWFsLmlkLWUubWF0ZXJpYWwuaWQ6dC56IT09ZS56P3Quei1lLno6dC5pZC1lLmlkfWZ1bmN0aW9uIEUodCxlKXtyZXR1cm4gdC5vYmplY3QucmVuZGVyT3JkZXIhPT1lLm9iamVjdC5yZW5kZXJPcmRlcj90Lm9iamVjdC5yZW5kZXJPcmRlci1lLm9iamVjdC5yZW5kZXJPcmRlcjp0LnohPT1lLno/ZS56LXQuejp0LmlkLWUuaWR9ZnVuY3Rpb24gVCh0LGUsaSxuLHIpe3ZhciBhO2E9aS50cmFuc3BhcmVudD8obj1OLCsrRCk6KG49SSwrK1UpLHZvaWQgMCE9PShhPW5bYV0pPyhhLmlkPXQuaWQsYS5vYmplY3Q9dCxhLmdlb21ldHJ5PWUsYS5tYXRlcmlhbD1pLGEuej1hdC56LGEuZ3JvdXA9cik6KGE9e2lkOnQuaWQsb2JqZWN0OnQsZ2VvbWV0cnk6ZSxtYXRlcmlhbDppLHo6YXQueixncm91cDpyfSxuLnB1c2goYSkpfWZ1bmN0aW9uIFModCl7aWYoISQuaW50ZXJzZWN0c1NwaGVyZSh0KSlyZXR1cm4hMTt2YXIgZT10dC5udW1QbGFuZXM7aWYoMD09PWUpcmV0dXJuITA7dmFyIGk9Ry5jbGlwcGluZ1BsYW5lcyxuPXQuY2VudGVyO3Q9LXQucmFkaXVzO3ZhciByPTA7ZG97aWYoaVtyXS5kaXN0YW5jZVRvUG9pbnQobik8dClyZXR1cm4hMX13aGlsZSgrK3IhPT1lKTtyZXR1cm4hMH1mdW5jdGlvbiBBKHQsZSxpLG4pe2Zvcih2YXIgcj0wLGE9dC5sZW5ndGg7cjxhO3IrKyl7dmFyIG89KGg9dFtyXSkub2JqZWN0LHM9aC5nZW9tZXRyeSxjPXZvaWQgMD09PW4/aC5tYXRlcmlhbDpuLGg9aC5ncm91cDtpZihvLm1vZGVsVmlld01hdHJpeC5tdWx0aXBseU1hdHJpY2VzKGkubWF0cml4V29ybGRJbnZlcnNlLG8ubWF0cml4V29ybGQpLG8ubm9ybWFsTWF0cml4LmdldE5vcm1hbE1hdHJpeChvLm1vZGVsVmlld01hdHJpeCksby5vbkJlZm9yZVJlbmRlcihHLGUsaSxzLGMsaCksby5pc0ltbWVkaWF0ZVJlbmRlck9iamVjdCl7TChjKTt2YXIgbD1SKGksZS5mb2csYyxvKTtrPSIiLG8ucmVuZGVyKGZ1bmN0aW9uKHQpe0cucmVuZGVyQnVmZmVySW1tZWRpYXRlKHQsbCxjKX0pfWVsc2UgRy5yZW5kZXJCdWZmZXJEaXJlY3QoaSxlLmZvZyxzLGMsbyxoKTtvLm9uQWZ0ZXJSZW5kZXIoRyxlLGkscyxjLGgpfX1mdW5jdGlvbiBMKHQpezI9PT10LnNpZGU/ZHQuZGlzYWJsZShCLkNVTExfRkFDRSk6ZHQuZW5hYmxlKEIuQ1VMTF9GQUNFKSxkdC5zZXRGbGlwU2lkZWQoMT09PXQuc2lkZSksITA9PT10LnRyYW5zcGFyZW50P2R0LnNldEJsZW5kaW5nKHQuYmxlbmRpbmcsdC5ibGVuZEVxdWF0aW9uLHQuYmxlbmRTcmMsdC5ibGVuZERzdCx0LmJsZW5kRXF1YXRpb25BbHBoYSx0LmJsZW5kU3JjQWxwaGEsdC5ibGVuZERzdEFscGhhLHQucHJlbXVsdGlwbGllZEFscGhhKTpkdC5zZXRCbGVuZGluZygwKSxkdC5zZXREZXB0aEZ1bmModC5kZXB0aEZ1bmMpLGR0LnNldERlcHRoVGVzdCh0LmRlcHRoVGVzdCksZHQuc2V0RGVwdGhXcml0ZSh0LmRlcHRoV3JpdGUpLGR0LnNldENvbG9yV3JpdGUodC5jb2xvcldyaXRlKSxkdC5zZXRQb2x5Z29uT2Zmc2V0KHQucG9seWdvbk9mZnNldCx0LnBvbHlnb25PZmZzZXRGYWN0b3IsdC5wb2x5Z29uT2Zmc2V0VW5pdHMpfWZ1bmN0aW9uIFIodCxlLGksbil7Xz0wO3ZhciByPXB0LmdldChpKTtpZihldCYmKGl0fHx0IT09aikmJnR0LnNldFN0YXRlKGkuY2xpcHBpbmdQbGFuZXMsaS5jbGlwSW50ZXJzZWN0aW9uLGkuY2xpcFNoYWRvd3MsdCxyLHQ9PT1qJiZpLmlkPT09ViksITE9PT1pLm5lZWRzVXBkYXRlJiYodm9pZCAwPT09ci5wcm9ncmFtP2kubmVlZHNVcGRhdGU9ITA6aS5mb2cmJnIuZm9nIT09ZT9pLm5lZWRzVXBkYXRlPSEwOmkubGlnaHRzJiZyLmxpZ2h0c0hhc2ghPT1jdC5oYXNoP2kubmVlZHNVcGRhdGU9ITA6dm9pZCAwPT09ci5udW1DbGlwcGluZ1BsYW5lc3x8ci5udW1DbGlwcGluZ1BsYW5lcz09PXR0Lm51bVBsYW5lcyYmci5udW1JbnRlcnNlY3Rpb249PT10dC5udW1JbnRlcnNlY3Rpb258fChpLm5lZWRzVXBkYXRlPSEwKSksaS5uZWVkc1VwZGF0ZSl7dDp7dmFyIGE9cHQuZ2V0KGkpLG89Z3QuZ2V0UGFyYW1ldGVycyhpLGN0LGUsdHQubnVtUGxhbmVzLHR0Lm51bUludGVyc2VjdGlvbixuKSxzPWd0LmdldFByb2dyYW1Db2RlKGksbyksYz1hLnByb2dyYW0saD0hMDtpZih2b2lkIDA9PT1jKWkuYWRkRXZlbnRMaXN0ZW5lcigiZGlzcG9zZSIsZCk7ZWxzZSBpZihjLmNvZGUhPT1zKXAoaSk7ZWxzZXtpZih2b2lkIDAhPT1vLnNoYWRlcklEKWJyZWFrIHQ7aD0hMX1pZihoJiYoby5zaGFkZXJJRD8oYz1OcltvLnNoYWRlcklEXSxhLl9fd2ViZ2xTaGFkZXI9e25hbWU6aS50eXBlLHVuaWZvcm1zOkxyLmNsb25lKGMudW5pZm9ybXMpLHZlcnRleFNoYWRlcjpjLnZlcnRleFNoYWRlcixmcmFnbWVudFNoYWRlcjpjLmZyYWdtZW50U2hhZGVyfSk6YS5fX3dlYmdsU2hhZGVyPXtuYW1lOmkudHlwZSx1bmlmb3JtczppLnVuaWZvcm1zLHZlcnRleFNoYWRlcjppLnZlcnRleFNoYWRlcixmcmFnbWVudFNoYWRlcjppLmZyYWdtZW50U2hhZGVyfSxpLl9fd2ViZ2xTaGFkZXI9YS5fX3dlYmdsU2hhZGVyLGM9Z3QuYWNxdWlyZVByb2dyYW0oaSxvLHMpLGEucHJvZ3JhbT1jLGkucHJvZ3JhbT1jKSxvPWMuZ2V0QXR0cmlidXRlcygpLGkubW9ycGhUYXJnZXRzKWZvcihzPWkubnVtU3VwcG9ydGVkTW9ycGhUYXJnZXRzPTA7czxHLm1heE1vcnBoVGFyZ2V0cztzKyspMDw9b1sibW9ycGhUYXJnZXQiK3NdJiZpLm51bVN1cHBvcnRlZE1vcnBoVGFyZ2V0cysrO2lmKGkubW9ycGhOb3JtYWxzKWZvcihzPWkubnVtU3VwcG9ydGVkTW9ycGhOb3JtYWxzPTA7czxHLm1heE1vcnBoTm9ybWFscztzKyspMDw9b1sibW9ycGhOb3JtYWwiK3NdJiZpLm51bVN1cHBvcnRlZE1vcnBoTm9ybWFscysrO289YS5fX3dlYmdsU2hhZGVyLnVuaWZvcm1zLChpLmlzU2hhZGVyTWF0ZXJpYWx8fGkuaXNSYXdTaGFkZXJNYXRlcmlhbCkmJiEwIT09aS5jbGlwcGluZ3x8KGEubnVtQ2xpcHBpbmdQbGFuZXM9dHQubnVtUGxhbmVzLGEubnVtSW50ZXJzZWN0aW9uPXR0Lm51bUludGVyc2VjdGlvbixvLmNsaXBwaW5nUGxhbmVzPXR0LnVuaWZvcm0pLGEuZm9nPWUsYS5saWdodHNIYXNoPWN0Lmhhc2gsaS5saWdodHMmJihvLmFtYmllbnRMaWdodENvbG9yLnZhbHVlPWN0LmFtYmllbnQsby5kaXJlY3Rpb25hbExpZ2h0cy52YWx1ZT1jdC5kaXJlY3Rpb25hbCxvLnNwb3RMaWdodHMudmFsdWU9Y3Quc3BvdCxvLnJlY3RBcmVhTGlnaHRzLnZhbHVlPWN0LnJlY3RBcmVhLG8ucG9pbnRMaWdodHMudmFsdWU9Y3QucG9pbnQsby5oZW1pc3BoZXJlTGlnaHRzLnZhbHVlPWN0LmhlbWksby5kaXJlY3Rpb25hbFNoYWRvd01hcC52YWx1ZT1jdC5kaXJlY3Rpb25hbFNoYWRvd01hcCxvLmRpcmVjdGlvbmFsU2hhZG93TWF0cml4LnZhbHVlPWN0LmRpcmVjdGlvbmFsU2hhZG93TWF0cml4LG8uc3BvdFNoYWRvd01hcC52YWx1ZT1jdC5zcG90U2hhZG93TWFwLG8uc3BvdFNoYWRvd01hdHJpeC52YWx1ZT1jdC5zcG90U2hhZG93TWF0cml4LG8ucG9pbnRTaGFkb3dNYXAudmFsdWU9Y3QucG9pbnRTaGFkb3dNYXAsby5wb2ludFNoYWRvd01hdHJpeC52YWx1ZT1jdC5wb2ludFNoYWRvd01hdHJpeCkscz1hLnByb2dyYW0uZ2V0VW5pZm9ybXMoKSxvPVV0LnNlcVdpdGhWYWx1ZShzLnNlcSxvKSxhLnVuaWZvcm1zTGlzdD1vfWkubmVlZHNVcGRhdGU9ITF9dmFyIGw9ITE7aD1jPSExLG89KGE9ci5wcm9ncmFtKS5nZXRVbmlmb3JtcygpLHM9ci5fX3dlYmdsU2hhZGVyLnVuaWZvcm1zO2lmKGEuaWQhPT1nJiYoQi51c2VQcm9ncmFtKGEucHJvZ3JhbSksZz1hLmlkLGg9Yz1sPSEwKSxpLmlkIT09ViYmKFY9aS5pZCxjPSEwKSwobHx8dCE9PWopJiYoby5zZXQoQix0LCJwcm9qZWN0aW9uTWF0cml4IiksdXQubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlciYmby5zZXRWYWx1ZShCLCJsb2dEZXB0aEJ1ZkZDIiwyLyhNYXRoLmxvZyh0LmZhcisxKS9NYXRoLkxOMikpLHQhPT1qJiYoaj10LGg9Yz0hMCksKGkuaXNTaGFkZXJNYXRlcmlhbHx8aS5pc01lc2hQaG9uZ01hdGVyaWFsfHxpLmlzTWVzaFN0YW5kYXJkTWF0ZXJpYWx8fGkuZW52TWFwKSYmKHZvaWQgMCE9PShsPW8ubWFwLmNhbWVyYVBvc2l0aW9uKSYmbC5zZXRWYWx1ZShCLGF0LnNldEZyb21NYXRyaXhQb3NpdGlvbih0Lm1hdHJpeFdvcmxkKSkpLChpLmlzTWVzaFBob25nTWF0ZXJpYWx8fGkuaXNNZXNoTGFtYmVydE1hdGVyaWFsfHxpLmlzTWVzaEJhc2ljTWF0ZXJpYWx8fGkuaXNNZXNoU3RhbmRhcmRNYXRlcmlhbHx8aS5pc1NoYWRlck1hdGVyaWFsfHxpLnNraW5uaW5nKSYmby5zZXRWYWx1ZShCLCJ2aWV3TWF0cml4Iix0Lm1hdHJpeFdvcmxkSW52ZXJzZSksby5zZXQoQixHLCJ0b25lTWFwcGluZ0V4cG9zdXJlIiksby5zZXQoQixHLCJ0b25lTWFwcGluZ1doaXRlUG9pbnQiKSksaS5za2lubmluZyYmKG8uc2V0T3B0aW9uYWwoQixuLCJiaW5kTWF0cml4Iiksby5zZXRPcHRpb25hbChCLG4sImJpbmRNYXRyaXhJbnZlcnNlIiksdD1uLnNrZWxldG9uKSYmKHV0LmZsb2F0VmVydGV4VGV4dHVyZXMmJnQudXNlVmVydGV4VGV4dHVyZT8oby5zZXQoQix0LCJib25lVGV4dHVyZSIpLG8uc2V0KEIsdCwiYm9uZVRleHR1cmVXaWR0aCIpLG8uc2V0KEIsdCwiYm9uZVRleHR1cmVIZWlnaHQiKSk6by5zZXRPcHRpb25hbChCLHQsImJvbmVNYXRyaWNlcyIpKSxjKXt2YXIgdTtpZihpLmxpZ2h0cyYmKHQ9aCxzLmFtYmllbnRMaWdodENvbG9yLm5lZWRzVXBkYXRlPXQscy5kaXJlY3Rpb25hbExpZ2h0cy5uZWVkc1VwZGF0ZT10LHMucG9pbnRMaWdodHMubmVlZHNVcGRhdGU9dCxzLnNwb3RMaWdodHMubmVlZHNVcGRhdGU9dCxzLnJlY3RBcmVhTGlnaHRzLm5lZWRzVXBkYXRlPXQscy5oZW1pc3BoZXJlTGlnaHRzLm5lZWRzVXBkYXRlPXQpLGUmJmkuZm9nJiYocy5mb2dDb2xvci52YWx1ZT1lLmNvbG9yLGUuaXNGb2c/KHMuZm9nTmVhci52YWx1ZT1lLm5lYXIscy5mb2dGYXIudmFsdWU9ZS5mYXIpOmUuaXNGb2dFeHAyJiYocy5mb2dEZW5zaXR5LnZhbHVlPWUuZGVuc2l0eSkpLGkuaXNNZXNoQmFzaWNNYXRlcmlhbHx8aS5pc01lc2hMYW1iZXJ0TWF0ZXJpYWx8fGkuaXNNZXNoUGhvbmdNYXRlcmlhbHx8aS5pc01lc2hTdGFuZGFyZE1hdGVyaWFsfHxpLmlzTWVzaE5vcm1hbE1hdGVyaWFsfHxpLmlzTWVzaERlcHRoTWF0ZXJpYWwpcy5vcGFjaXR5LnZhbHVlPWkub3BhY2l0eSxzLmRpZmZ1c2UudmFsdWU9aS5jb2xvcixpLmVtaXNzaXZlJiZzLmVtaXNzaXZlLnZhbHVlLmNvcHkoaS5lbWlzc2l2ZSkubXVsdGlwbHlTY2FsYXIoaS5lbWlzc2l2ZUludGVuc2l0eSkscy5tYXAudmFsdWU9aS5tYXAscy5zcGVjdWxhck1hcC52YWx1ZT1pLnNwZWN1bGFyTWFwLHMuYWxwaGFNYXAudmFsdWU9aS5hbHBoYU1hcCxpLmxpZ2h0TWFwJiYocy5saWdodE1hcC52YWx1ZT1pLmxpZ2h0TWFwLHMubGlnaHRNYXBJbnRlbnNpdHkudmFsdWU9aS5saWdodE1hcEludGVuc2l0eSksaS5hb01hcCYmKHMuYW9NYXAudmFsdWU9aS5hb01hcCxzLmFvTWFwSW50ZW5zaXR5LnZhbHVlPWkuYW9NYXBJbnRlbnNpdHkpLGkubWFwP3U9aS5tYXA6aS5zcGVjdWxhck1hcD91PWkuc3BlY3VsYXJNYXA6aS5kaXNwbGFjZW1lbnRNYXA/dT1pLmRpc3BsYWNlbWVudE1hcDppLm5vcm1hbE1hcD91PWkubm9ybWFsTWFwOmkuYnVtcE1hcD91PWkuYnVtcE1hcDppLnJvdWdobmVzc01hcD91PWkucm91Z2huZXNzTWFwOmkubWV0YWxuZXNzTWFwP3U9aS5tZXRhbG5lc3NNYXA6aS5hbHBoYU1hcD91PWkuYWxwaGFNYXA6aS5lbWlzc2l2ZU1hcCYmKHU9aS5lbWlzc2l2ZU1hcCksdm9pZCAwIT09dSYmKHUuaXNXZWJHTFJlbmRlclRhcmdldCYmKHU9dS50ZXh0dXJlKSxlPXUub2Zmc2V0LHU9dS5yZXBlYXQscy5vZmZzZXRSZXBlYXQudmFsdWUuc2V0KGUueCxlLnksdS54LHUueSkpLHMuZW52TWFwLnZhbHVlPWkuZW52TWFwLHMuZmxpcEVudk1hcC52YWx1ZT1pLmVudk1hcCYmaS5lbnZNYXAuaXNDdWJlVGV4dHVyZT8tMToxLHMucmVmbGVjdGl2aXR5LnZhbHVlPWkucmVmbGVjdGl2aXR5LHMucmVmcmFjdGlvblJhdGlvLnZhbHVlPWkucmVmcmFjdGlvblJhdGlvO2kuaXNMaW5lQmFzaWNNYXRlcmlhbD8ocy5kaWZmdXNlLnZhbHVlPWkuY29sb3Iscy5vcGFjaXR5LnZhbHVlPWkub3BhY2l0eSk6aS5pc0xpbmVEYXNoZWRNYXRlcmlhbD8ocy5kaWZmdXNlLnZhbHVlPWkuY29sb3Iscy5vcGFjaXR5LnZhbHVlPWkub3BhY2l0eSxzLmRhc2hTaXplLnZhbHVlPWkuZGFzaFNpemUscy50b3RhbFNpemUudmFsdWU9aS5kYXNoU2l6ZStpLmdhcFNpemUscy5zY2FsZS52YWx1ZT1pLnNjYWxlKTppLmlzUG9pbnRzTWF0ZXJpYWw/KHMuZGlmZnVzZS52YWx1ZT1pLmNvbG9yLHMub3BhY2l0eS52YWx1ZT1pLm9wYWNpdHkscy5zaXplLnZhbHVlPWkuc2l6ZSpaLHMuc2NhbGUudmFsdWU9LjUqcSxzLm1hcC52YWx1ZT1pLm1hcCxudWxsIT09aS5tYXAmJih1PWkubWFwLm9mZnNldCxpPWkubWFwLnJlcGVhdCxzLm9mZnNldFJlcGVhdC52YWx1ZS5zZXQodS54LHUueSxpLngsaS55KSkpOmkuaXNNZXNoTGFtYmVydE1hdGVyaWFsP2kuZW1pc3NpdmVNYXAmJihzLmVtaXNzaXZlTWFwLnZhbHVlPWkuZW1pc3NpdmVNYXApOmkuaXNNZXNoVG9vbk1hdGVyaWFsPyhmKHMsaSksaS5ncmFkaWVudE1hcCYmKHMuZ3JhZGllbnRNYXAudmFsdWU9aS5ncmFkaWVudE1hcCkpOmkuaXNNZXNoUGhvbmdNYXRlcmlhbD9mKHMsaSk6aS5pc01lc2hQaHlzaWNhbE1hdGVyaWFsPyhzLmNsZWFyQ29hdC52YWx1ZT1pLmNsZWFyQ29hdCxzLmNsZWFyQ29hdFJvdWdobmVzcy52YWx1ZT1pLmNsZWFyQ29hdFJvdWdobmVzcyxtKHMsaSkpOmkuaXNNZXNoU3RhbmRhcmRNYXRlcmlhbD9tKHMsaSk6aS5pc01lc2hEZXB0aE1hdGVyaWFsP2kuZGlzcGxhY2VtZW50TWFwJiYocy5kaXNwbGFjZW1lbnRNYXAudmFsdWU9aS5kaXNwbGFjZW1lbnRNYXAscy5kaXNwbGFjZW1lbnRTY2FsZS52YWx1ZT1pLmRpc3BsYWNlbWVudFNjYWxlLHMuZGlzcGxhY2VtZW50Qmlhcy52YWx1ZT1pLmRpc3BsYWNlbWVudEJpYXMpOmkuaXNNZXNoTm9ybWFsTWF0ZXJpYWwmJihpLmJ1bXBNYXAmJihzLmJ1bXBNYXAudmFsdWU9aS5idW1wTWFwLHMuYnVtcFNjYWxlLnZhbHVlPWkuYnVtcFNjYWxlKSxpLm5vcm1hbE1hcCYmKHMubm9ybWFsTWFwLnZhbHVlPWkubm9ybWFsTWFwLHMubm9ybWFsU2NhbGUudmFsdWUuY29weShpLm5vcm1hbFNjYWxlKSksaS5kaXNwbGFjZW1lbnRNYXAmJihzLmRpc3BsYWNlbWVudE1hcC52YWx1ZT1pLmRpc3BsYWNlbWVudE1hcCxzLmRpc3BsYWNlbWVudFNjYWxlLnZhbHVlPWkuZGlzcGxhY2VtZW50U2NhbGUscy5kaXNwbGFjZW1lbnRCaWFzLnZhbHVlPWkuZGlzcGxhY2VtZW50QmlhcykpLHZvaWQgMCE9PXMubHRjTWF0JiYocy5sdGNNYXQudmFsdWU9VEhSRUUuVW5pZm9ybXNMaWIuTFRDX01BVF9URVhUVVJFKSx2b2lkIDAhPT1zLmx0Y01hZyYmKHMubHRjTWFnLnZhbHVlPVRIUkVFLlVuaWZvcm1zTGliLkxUQ19NQUdfVEVYVFVSRSksVXQudXBsb2FkKEIsci51bmlmb3Jtc0xpc3QscyxHKX1yZXR1cm4gby5zZXQoQixuLCJtb2RlbFZpZXdNYXRyaXgiKSxvLnNldChCLG4sIm5vcm1hbE1hdHJpeCIpLG8uc2V0VmFsdWUoQiwibW9kZWxNYXRyaXgiLG4ubWF0cml4V29ybGQpLGF9ZnVuY3Rpb24gZih0LGUpe3Quc3BlY3VsYXIudmFsdWU9ZS5zcGVjdWxhcix0LnNoaW5pbmVzcy52YWx1ZT1NYXRoLm1heChlLnNoaW5pbmVzcywxZS00KSxlLmVtaXNzaXZlTWFwJiYodC5lbWlzc2l2ZU1hcC52YWx1ZT1lLmVtaXNzaXZlTWFwKSxlLmJ1bXBNYXAmJih0LmJ1bXBNYXAudmFsdWU9ZS5idW1wTWFwLHQuYnVtcFNjYWxlLnZhbHVlPWUuYnVtcFNjYWxlKSxlLm5vcm1hbE1hcCYmKHQubm9ybWFsTWFwLnZhbHVlPWUubm9ybWFsTWFwLHQubm9ybWFsU2NhbGUudmFsdWUuY29weShlLm5vcm1hbFNjYWxlKSksZS5kaXNwbGFjZW1lbnRNYXAmJih0LmRpc3BsYWNlbWVudE1hcC52YWx1ZT1lLmRpc3BsYWNlbWVudE1hcCx0LmRpc3BsYWNlbWVudFNjYWxlLnZhbHVlPWUuZGlzcGxhY2VtZW50U2NhbGUsdC5kaXNwbGFjZW1lbnRCaWFzLnZhbHVlPWUuZGlzcGxhY2VtZW50Qmlhcyl9ZnVuY3Rpb24gbSh0LGUpe3Qucm91Z2huZXNzLnZhbHVlPWUucm91Z2huZXNzLHQubWV0YWxuZXNzLnZhbHVlPWUubWV0YWxuZXNzLGUucm91Z2huZXNzTWFwJiYodC5yb3VnaG5lc3NNYXAudmFsdWU9ZS5yb3VnaG5lc3NNYXApLGUubWV0YWxuZXNzTWFwJiYodC5tZXRhbG5lc3NNYXAudmFsdWU9ZS5tZXRhbG5lc3NNYXApLGUuZW1pc3NpdmVNYXAmJih0LmVtaXNzaXZlTWFwLnZhbHVlPWUuZW1pc3NpdmVNYXApLGUuYnVtcE1hcCYmKHQuYnVtcE1hcC52YWx1ZT1lLmJ1bXBNYXAsdC5idW1wU2NhbGUudmFsdWU9ZS5idW1wU2NhbGUpLGUubm9ybWFsTWFwJiYodC5ub3JtYWxNYXAudmFsdWU9ZS5ub3JtYWxNYXAsdC5ub3JtYWxTY2FsZS52YWx1ZS5jb3B5KGUubm9ybWFsU2NhbGUpKSxlLmRpc3BsYWNlbWVudE1hcCYmKHQuZGlzcGxhY2VtZW50TWFwLnZhbHVlPWUuZGlzcGxhY2VtZW50TWFwLHQuZGlzcGxhY2VtZW50U2NhbGUudmFsdWU9ZS5kaXNwbGFjZW1lbnRTY2FsZSx0LmRpc3BsYWNlbWVudEJpYXMudmFsdWU9ZS5kaXNwbGFjZW1lbnRCaWFzKSxlLmVudk1hcCYmKHQuZW52TWFwSW50ZW5zaXR5LnZhbHVlPWUuZW52TWFwSW50ZW5zaXR5KX1mdW5jdGlvbiB1KHQpe3ZhciBlO2lmKDFlMz09PXQpcmV0dXJuIEIuUkVQRUFUO2lmKDEwMDE9PT10KXJldHVybiBCLkNMQU1QX1RPX0VER0U7aWYoMTAwMj09PXQpcmV0dXJuIEIuTUlSUk9SRURfUkVQRUFUO2lmKDEwMDM9PT10KXJldHVybiBCLk5FQVJFU1Q7aWYoMTAwND09PXQpcmV0dXJuIEIuTkVBUkVTVF9NSVBNQVBfTkVBUkVTVDtpZigxMDA1PT09dClyZXR1cm4gQi5ORUFSRVNUX01JUE1BUF9MSU5FQVI7aWYoMTAwNj09PXQpcmV0dXJuIEIuTElORUFSO2lmKDEwMDc9PT10KXJldHVybiBCLkxJTkVBUl9NSVBNQVBfTkVBUkVTVDtpZigxMDA4PT09dClyZXR1cm4gQi5MSU5FQVJfTUlQTUFQX0xJTkVBUjtpZigxMDA5PT09dClyZXR1cm4gQi5VTlNJR05FRF9CWVRFO2lmKDEwMTc9PT10KXJldHVybiBCLlVOU0lHTkVEX1NIT1JUXzRfNF80XzQ7aWYoMTAxOD09PXQpcmV0dXJuIEIuVU5TSUdORURfU0hPUlRfNV81XzVfMTtpZigxMDE5PT09dClyZXR1cm4gQi5VTlNJR05FRF9TSE9SVF81XzZfNTtpZigxMDEwPT09dClyZXR1cm4gQi5CWVRFO2lmKDEwMTE9PT10KXJldHVybiBCLlNIT1JUO2lmKDEwMTI9PT10KXJldHVybiBCLlVOU0lHTkVEX1NIT1JUO2lmKDEwMTM9PT10KXJldHVybiBCLklOVDtpZigxMDE0PT09dClyZXR1cm4gQi5VTlNJR05FRF9JTlQ7aWYoMTAxNT09PXQpcmV0dXJuIEIuRkxPQVQ7aWYoMTAxNj09PXQmJm51bGwhPT0oZT1sdC5nZXQoIk9FU190ZXh0dXJlX2hhbGZfZmxvYXQiKSkpcmV0dXJuIGUuSEFMRl9GTE9BVF9PRVM7aWYoMTAyMT09PXQpcmV0dXJuIEIuQUxQSEE7aWYoMTAyMj09PXQpcmV0dXJuIEIuUkdCO2lmKDEwMjM9PT10KXJldHVybiBCLlJHQkE7aWYoMTAyND09PXQpcmV0dXJuIEIuTFVNSU5BTkNFO2lmKDEwMjU9PT10KXJldHVybiBCLkxVTUlOQU5DRV9BTFBIQTtpZigxMDI2PT09dClyZXR1cm4gQi5ERVBUSF9DT01QT05FTlQ7aWYoMTAyNz09PXQpcmV0dXJuIEIuREVQVEhfU1RFTkNJTDtpZigxMDA9PT10KXJldHVybiBCLkZVTkNfQUREO2lmKDEwMT09PXQpcmV0dXJuIEIuRlVOQ19TVUJUUkFDVDtpZigxMDI9PT10KXJldHVybiBCLkZVTkNfUkVWRVJTRV9TVUJUUkFDVDtpZigyMDA9PT10KXJldHVybiBCLlpFUk87aWYoMjAxPT09dClyZXR1cm4gQi5PTkU7aWYoMjAyPT09dClyZXR1cm4gQi5TUkNfQ09MT1I7aWYoMjAzPT09dClyZXR1cm4gQi5PTkVfTUlOVVNfU1JDX0NPTE9SO2lmKDIwND09PXQpcmV0dXJuIEIuU1JDX0FMUEhBO2lmKDIwNT09PXQpcmV0dXJuIEIuT05FX01JTlVTX1NSQ19BTFBIQTtpZigyMDY9PT10KXJldHVybiBCLkRTVF9BTFBIQTtpZigyMDc9PT10KXJldHVybiBCLk9ORV9NSU5VU19EU1RfQUxQSEE7aWYoMjA4PT09dClyZXR1cm4gQi5EU1RfQ09MT1I7aWYoMjA5PT09dClyZXR1cm4gQi5PTkVfTUlOVVNfRFNUX0NPTE9SO2lmKDIxMD09PXQpcmV0dXJuIEIuU1JDX0FMUEhBX1NBVFVSQVRFO2lmKCgyMDAxPT09dHx8MjAwMj09PXR8fDIwMDM9PT10fHwyMDA0PT09dCkmJm51bGwhPT0oZT1sdC5nZXQoIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjIikpKXtpZigyMDAxPT09dClyZXR1cm4gZS5DT01QUkVTU0VEX1JHQl9TM1RDX0RYVDFfRVhUO2lmKDIwMDI9PT10KXJldHVybiBlLkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDFfRVhUO2lmKDIwMDM9PT10KXJldHVybiBlLkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDNfRVhUO2lmKDIwMDQ9PT10KXJldHVybiBlLkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDVfRVhUfWlmKCgyMTAwPT09dHx8MjEwMT09PXR8fDIxMDI9PT10fHwyMTAzPT09dCkmJm51bGwhPT0oZT1sdC5nZXQoIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9wdnJ0YyIpKSl7aWYoMjEwMD09PXQpcmV0dXJuIGUuQ09NUFJFU1NFRF9SR0JfUFZSVENfNEJQUFYxX0lNRztpZigyMTAxPT09dClyZXR1cm4gZS5DT01QUkVTU0VEX1JHQl9QVlJUQ18yQlBQVjFfSU1HO2lmKDIxMDI9PT10KXJldHVybiBlLkNPTVBSRVNTRURfUkdCQV9QVlJUQ180QlBQVjFfSU1HO2lmKDIxMDM9PT10KXJldHVybiBlLkNPTVBSRVNTRURfUkdCQV9QVlJUQ18yQlBQVjFfSU1HfWlmKDIxNTE9PT10JiZudWxsIT09KGU9bHQuZ2V0KCJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfZXRjMSIpKSlyZXR1cm4gZS5DT01QUkVTU0VEX1JHQl9FVEMxX1dFQkdMO2lmKCgxMDM9PT10fHwxMDQ9PT10KSYmbnVsbCE9PShlPWx0LmdldCgiRVhUX2JsZW5kX21pbm1heCIpKSl7aWYoMTAzPT09dClyZXR1cm4gZS5NSU5fRVhUO2lmKDEwND09PXQpcmV0dXJuIGUuTUFYX0VYVH1yZXR1cm4gMTAyMD09PXQmJm51bGwhPT0oZT1sdC5nZXQoIldFQkdMX2RlcHRoX3RleHR1cmUiKSk/ZS5VTlNJR05FRF9JTlRfMjRfOF9XRUJHTDowfWNvbnNvbGUubG9nKCJUSFJFRS5XZWJHTFJlbmRlcmVyIiwiODMiKTt2YXIgcj12b2lkIDAhPT0odD10fHx7fSkuY2FudmFzP3QuY2FudmFzOmRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsImNhbnZhcyIpLGE9dm9pZCAwIT09dC5jb250ZXh0P3QuY29udGV4dDpudWxsLG89dm9pZCAwIT09dC5hbHBoYSYmdC5hbHBoYSxzPXZvaWQgMD09PXQuZGVwdGh8fHQuZGVwdGgsYz12b2lkIDA9PT10LnN0ZW5jaWx8fHQuc3RlbmNpbCxoPXZvaWQgMCE9PXQuYW50aWFsaWFzJiZ0LmFudGlhbGlhcyxQPXZvaWQgMD09PXQucHJlbXVsdGlwbGllZEFscGhhfHx0LnByZW11bHRpcGxpZWRBbHBoYSxsPXZvaWQgMCE9PXQucHJlc2VydmVEcmF3aW5nQnVmZmVyJiZ0LnByZXNlcnZlRHJhd2luZ0J1ZmZlcixDPVtdLEk9W10sVT0tMSxOPVtdLEQ9LTEsTz1uZXcgRmxvYXQzMkFycmF5KDgpLEY9W10sej1bXTt0aGlzLmRvbUVsZW1lbnQ9cix0aGlzLmNvbnRleHQ9bnVsbCx0aGlzLnNvcnRPYmplY3RzPXRoaXMuYXV0b0NsZWFyU3RlbmNpbD10aGlzLmF1dG9DbGVhckRlcHRoPXRoaXMuYXV0b0NsZWFyQ29sb3I9dGhpcy5hdXRvQ2xlYXI9ITAsdGhpcy5jbGlwcGluZ1BsYW5lcz1bXSx0aGlzLmxvY2FsQ2xpcHBpbmdFbmFibGVkPSExLHRoaXMuZ2FtbWFGYWN0b3I9Mix0aGlzLnBoeXNpY2FsbHlDb3JyZWN0TGlnaHRzPXRoaXMuZ2FtbWFPdXRwdXQ9dGhpcy5nYW1tYUlucHV0PSExLHRoaXMudG9uZU1hcHBpbmdXaGl0ZVBvaW50PXRoaXMudG9uZU1hcHBpbmdFeHBvc3VyZT10aGlzLnRvbmVNYXBwaW5nPTEsdGhpcy5tYXhNb3JwaFRhcmdldHM9OCx0aGlzLm1heE1vcnBoTm9ybWFscz00O3ZhciBCLEc9dGhpcyxnPW51bGwsSD1udWxsLHY9bnVsbCxWPS0xLGs9IiIsaj1udWxsLHk9bmV3IFB0LHg9bnVsbCxXPW5ldyBQdCxfPTAsWD1uZXcgTnQoMCksWT0wLGI9ci53aWR0aCxxPXIuaGVpZ2h0LFo9MSxKPW5ldyBQdCgwLDAsYixxKSxRPSExLEs9bmV3IFB0KDAsMCxiLHEpLCQ9bmV3IEJ0LHR0PW5ldyByZSxldD0hMSxpdD0hMSxudD1uZXcgenQscnQ9bmV3IEl0LGF0PW5ldyBDdCxvdD1uZXcgSXQsc3Q9bmV3IEl0LGN0PXtoYXNoOiIiLGFtYmllbnQ6WzAsMCwwXSxkaXJlY3Rpb25hbDpbXSxkaXJlY3Rpb25hbFNoYWRvd01hcDpbXSxkaXJlY3Rpb25hbFNoYWRvd01hdHJpeDpbXSxzcG90OltdLHNwb3RTaGFkb3dNYXA6W10sc3BvdFNoYWRvd01hdHJpeDpbXSxyZWN0QXJlYTpbXSxwb2ludDpbXSxwb2ludFNoYWRvd01hcDpbXSxwb2ludFNoYWRvd01hdHJpeDpbXSxoZW1pOltdLHNoYWRvd3M6W119LGh0PXtjYWxsczowLHZlcnRpY2VzOjAsZmFjZXM6MCxwb2ludHM6MH07dGhpcy5pbmZvPXtyZW5kZXI6aHQsbWVtb3J5OntnZW9tZXRyaWVzOjAsdGV4dHVyZXM6MH0scHJvZ3JhbXM6bnVsbH07dHJ5e2lmKG89e2FscGhhOm8sZGVwdGg6cyxzdGVuY2lsOmMsYW50aWFsaWFzOmgscHJlbXVsdGlwbGllZEFscGhhOlAscHJlc2VydmVEcmF3aW5nQnVmZmVyOmx9LG51bGw9PT0oQj1hfHxyLmdldENvbnRleHQoIndlYmdsIixvKXx8ci5nZXRDb250ZXh0KCJleHBlcmltZW50YWwtd2ViZ2wiLG8pKSl7aWYobnVsbCE9PXIuZ2V0Q29udGV4dCgid2ViZ2wiKSl0aHJvdyJFcnJvciBjcmVhdGluZyBXZWJHTCBjb250ZXh0IHdpdGggeW91ciBzZWxlY3RlZCBhdHRyaWJ1dGVzLiI7dGhyb3ciRXJyb3IgY3JlYXRpbmcgV2ViR0wgY29udGV4dC4ifXZvaWQgMD09PUIuZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0JiYoQi5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQ9ZnVuY3Rpb24oKXtyZXR1cm57cmFuZ2VNaW46MSxyYW5nZU1heDoxLHByZWNpc2lvbjoxfX0pLHIuYWRkRXZlbnRMaXN0ZW5lcigid2ViZ2xjb250ZXh0bG9zdCIsbiwhMSl9Y2F0Y2godCl7Y29uc29sZS5lcnJvcigiVEhSRUUuV2ViR0xSZW5kZXJlcjogIit0KX12YXIgbHQ9bmV3IG5lKEIpO2x0LmdldCgiV0VCR0xfZGVwdGhfdGV4dHVyZSIpLGx0LmdldCgiT0VTX3RleHR1cmVfZmxvYXQiKSxsdC5nZXQoIk9FU190ZXh0dXJlX2Zsb2F0X2xpbmVhciIpLGx0LmdldCgiT0VTX3RleHR1cmVfaGFsZl9mbG9hdCIpLGx0LmdldCgiT0VTX3RleHR1cmVfaGFsZl9mbG9hdF9saW5lYXIiKSxsdC5nZXQoIk9FU19zdGFuZGFyZF9kZXJpdmF0aXZlcyIpLGx0LmdldCgiQU5HTEVfaW5zdGFuY2VkX2FycmF5cyIpLGx0LmdldCgiT0VTX2VsZW1lbnRfaW5kZXhfdWludCIpJiYoVnQuTWF4SW5kZXg9NDI5NDk2NzI5Nik7dmFyIHV0PW5ldyBpZShCLGx0LHQpLGR0PW5ldyBlZShCLGx0LHUpLHB0PW5ldyB0ZSxmdD1uZXcgJHQoQixsdCxkdCxwdCx1dCx1LHRoaXMuaW5mbyksbXQ9bmV3IEt0KEIscHQsdGhpcy5pbmZvKSxndD1uZXcgUXQodGhpcyx1dCksdnQ9bmV3IEp0O3RoaXMuaW5mby5wcm9ncmFtcz1ndC5wcm9ncmFtczt2YXIgeXQ9bmV3IFp0KEIsbHQsaHQpLHh0PW5ldyBxdChCLGx0LGh0KSxfdD1uZXcgWXQoLTEsMSwxLC0xLDAsMSksYnQ9bmV3IFh0LHd0PW5ldyBrdChuZXcgV3QoMiwyKSxuZXcgSHQoe2RlcHRoVGVzdDohMSxkZXB0aFdyaXRlOiExLGZvZzohMX0pKTt0PU5yLmN1YmU7dmFyIE10PW5ldyBrdChuZXcganQoNSw1LDUpLG5ldyBGdCh7dW5pZm9ybXM6dC51bmlmb3Jtcyx2ZXJ0ZXhTaGFkZXI6dC52ZXJ0ZXhTaGFkZXIsZnJhZ21lbnRTaGFkZXI6dC5mcmFnbWVudFNoYWRlcixzaWRlOjEsZGVwdGhUZXN0OiExLGRlcHRoV3JpdGU6ITEsZm9nOiExfSkpO2UoKSx0aGlzLmNvbnRleHQ9Qix0aGlzLmNhcGFiaWxpdGllcz11dCx0aGlzLmV4dGVuc2lvbnM9bHQsdGhpcy5wcm9wZXJ0aWVzPXB0LHRoaXMuc3RhdGU9ZHQ7dmFyIEV0PW5ldyBHdCh0aGlzLGN0LG10LHV0KTt0aGlzLnNoYWRvd01hcD1FdDt2YXIgVHQsU3QsQXQsTHQ9bmV3IE90KHRoaXMsRiksUnQ9bmV3IER0KHRoaXMseik7dGhpcy5nZXRDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIEJ9LHRoaXMuZ2V0Q29udGV4dEF0dHJpYnV0ZXM9ZnVuY3Rpb24oKXtyZXR1cm4gQi5nZXRDb250ZXh0QXR0cmlidXRlcygpfSx0aGlzLmZvcmNlQ29udGV4dExvc3M9ZnVuY3Rpb24oKXtsdC5nZXQoIldFQkdMX2xvc2VfY29udGV4dCIpLmxvc2VDb250ZXh0KCl9LHRoaXMuZ2V0TWF4QW5pc290cm9weT1mdW5jdGlvbigpe3JldHVybiB1dC5nZXRNYXhBbmlzb3Ryb3B5KCl9LHRoaXMuZ2V0UHJlY2lzaW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHV0LnByZWNpc2lvbn0sdGhpcy5nZXRQaXhlbFJhdGlvPWZ1bmN0aW9uKCl7cmV0dXJuIFp9LHRoaXMuc2V0UGl4ZWxSYXRpbz1mdW5jdGlvbih0KXt2b2lkIDAhPT10JiYoWj10LHRoaXMuc2V0U2l6ZShLLnosSy53LCExKSl9LHRoaXMuZ2V0U2l6ZT1mdW5jdGlvbigpe3JldHVybnt3aWR0aDpiLGhlaWdodDpxfX0sdGhpcy5zZXRTaXplPWZ1bmN0aW9uKHQsZSxpKXtiPXQscT1lLHIud2lkdGg9dCpaLHIuaGVpZ2h0PWUqWiwhMSE9PWkmJihyLnN0eWxlLndpZHRoPXQrInB4IixyLnN0eWxlLmhlaWdodD1lKyJweCIpLHRoaXMuc2V0Vmlld3BvcnQoMCwwLHQsZSl9LHRoaXMuc2V0Vmlld3BvcnQ9ZnVuY3Rpb24odCxlLGksbil7ZHQudmlld3BvcnQoSy5zZXQodCxlLGksbikpfSx0aGlzLnNldFNjaXNzb3I9ZnVuY3Rpb24odCxlLGksbil7ZHQuc2Npc3NvcihKLnNldCh0LGUsaSxuKSl9LHRoaXMuc2V0U2Npc3NvclRlc3Q9ZnVuY3Rpb24odCl7ZHQuc2V0U2Npc3NvclRlc3QoUT10KX0sdGhpcy5nZXRDbGVhckNvbG9yPWZ1bmN0aW9uKCl7cmV0dXJuIFh9LHRoaXMuc2V0Q2xlYXJDb2xvcj1mdW5jdGlvbih0LGUpe1guc2V0KHQpLFk9dm9pZCAwIT09ZT9lOjEsZHQuYnVmZmVycy5jb2xvci5zZXRDbGVhcihYLnIsWC5nLFguYixZLFApfSx0aGlzLmdldENsZWFyQWxwaGE9ZnVuY3Rpb24oKXtyZXR1cm4gWX0sdGhpcy5zZXRDbGVhckFscGhhPWZ1bmN0aW9uKHQpe1k9dCxkdC5idWZmZXJzLmNvbG9yLnNldENsZWFyKFgucixYLmcsWC5iLFksUCl9LHRoaXMuY2xlYXI9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPTA7KHZvaWQgMD09PXR8fHQpJiYobnw9Qi5DT0xPUl9CVUZGRVJfQklUKSwodm9pZCAwPT09ZXx8ZSkmJihufD1CLkRFUFRIX0JVRkZFUl9CSVQpLCh2b2lkIDA9PT1pfHxpKSYmKG58PUIuU1RFTkNJTF9CVUZGRVJfQklUKSxCLmNsZWFyKG4pfSx0aGlzLmNsZWFyQ29sb3I9ZnVuY3Rpb24oKXt0aGlzLmNsZWFyKCEwLCExLCExKX0sdGhpcy5jbGVhckRlcHRoPWZ1bmN0aW9uKCl7dGhpcy5jbGVhcighMSwhMCwhMSl9LHRoaXMuY2xlYXJTdGVuY2lsPWZ1bmN0aW9uKCl7dGhpcy5jbGVhcighMSwhMSwhMCl9LHRoaXMuY2xlYXJUYXJnZXQ9ZnVuY3Rpb24odCxlLGksbil7dGhpcy5zZXRSZW5kZXJUYXJnZXQodCksdGhpcy5jbGVhcihlLGksbil9LHRoaXMucmVzZXRHTFN0YXRlPWksdGhpcy5kaXNwb3NlPWZ1bmN0aW9uKCl7Tj1bXSxJPVtdLFU9RD0tMSxyLnJlbW92ZUV2ZW50TGlzdGVuZXIoIndlYmdsY29udGV4dGxvc3QiLG4sITEpfSx0aGlzLnJlbmRlckJ1ZmZlckltbWVkaWF0ZT1mdW5jdGlvbih0LGUsaSl7ZHQuaW5pdEF0dHJpYnV0ZXMoKTt2YXIgbj1wdC5nZXQodCk7aWYodC5oYXNQb3NpdGlvbnMmJiFuLnBvc2l0aW9uJiYobi5wb3NpdGlvbj1CLmNyZWF0ZUJ1ZmZlcigpKSx0Lmhhc05vcm1hbHMmJiFuLm5vcm1hbCYmKG4ubm9ybWFsPUIuY3JlYXRlQnVmZmVyKCkpLHQuaGFzVXZzJiYhbi51diYmKG4udXY9Qi5jcmVhdGVCdWZmZXIoKSksdC5oYXNDb2xvcnMmJiFuLmNvbG9yJiYobi5jb2xvcj1CLmNyZWF0ZUJ1ZmZlcigpKSxlPWUuZ2V0QXR0cmlidXRlcygpLHQuaGFzUG9zaXRpb25zJiYoQi5iaW5kQnVmZmVyKEIuQVJSQVlfQlVGRkVSLG4ucG9zaXRpb24pLEIuYnVmZmVyRGF0YShCLkFSUkFZX0JVRkZFUix0LnBvc2l0aW9uQXJyYXksQi5EWU5BTUlDX0RSQVcpLGR0LmVuYWJsZUF0dHJpYnV0ZShlLnBvc2l0aW9uKSxCLnZlcnRleEF0dHJpYlBvaW50ZXIoZS5wb3NpdGlvbiwzLEIuRkxPQVQsITEsMCwwKSksdC5oYXNOb3JtYWxzKXtpZihCLmJpbmRCdWZmZXIoQi5BUlJBWV9CVUZGRVIsbi5ub3JtYWwpLCFpLmlzTWVzaFBob25nTWF0ZXJpYWwmJiFpLmlzTWVzaFN0YW5kYXJkTWF0ZXJpYWwmJiFpLmlzTWVzaE5vcm1hbE1hdGVyaWFsJiYxPT09aS5zaGFkaW5nKWZvcih2YXIgcj0wLGE9Myp0LmNvdW50O3I8YTtyKz05KXt2YXIgbz10Lm5vcm1hbEFycmF5LHM9KG9bciswXStvW3IrM10rb1tyKzZdKS8zLGM9KG9bcisxXStvW3IrNF0rb1tyKzddKS8zLGg9KG9bcisyXStvW3IrNV0rb1tyKzhdKS8zO29bciswXT1zLG9bcisxXT1jLG9bcisyXT1oLG9bciszXT1zLG9bcis0XT1jLG9bcis1XT1oLG9bcis2XT1zLG9bcis3XT1jLG9bcis4XT1ofUIuYnVmZmVyRGF0YShCLkFSUkFZX0JVRkZFUix0Lm5vcm1hbEFycmF5LEIuRFlOQU1JQ19EUkFXKSxkdC5lbmFibGVBdHRyaWJ1dGUoZS5ub3JtYWwpLEIudmVydGV4QXR0cmliUG9pbnRlcihlLm5vcm1hbCwzLEIuRkxPQVQsITEsMCwwKX10Lmhhc1V2cyYmaS5tYXAmJihCLmJpbmRCdWZmZXIoQi5BUlJBWV9CVUZGRVIsbi51diksQi5idWZmZXJEYXRhKEIuQVJSQVlfQlVGRkVSLHQudXZBcnJheSxCLkRZTkFNSUNfRFJBVyksZHQuZW5hYmxlQXR0cmlidXRlKGUudXYpLEIudmVydGV4QXR0cmliUG9pbnRlcihlLnV2LDIsQi5GTE9BVCwhMSwwLDApKSx0Lmhhc0NvbG9ycyYmMCE9PWkudmVydGV4Q29sb3JzJiYoQi5iaW5kQnVmZmVyKEIuQVJSQVlfQlVGRkVSLG4uY29sb3IpLEIuYnVmZmVyRGF0YShCLkFSUkFZX0JVRkZFUix0LmNvbG9yQXJyYXksQi5EWU5BTUlDX0RSQVcpLGR0LmVuYWJsZUF0dHJpYnV0ZShlLmNvbG9yKSxCLnZlcnRleEF0dHJpYlBvaW50ZXIoZS5jb2xvciwzLEIuRkxPQVQsITEsMCwwKSksZHQuZGlzYWJsZVVudXNlZEF0dHJpYnV0ZXMoKSxCLmRyYXdBcnJheXMoQi5UUklBTkdMRVMsMCx0LmNvdW50KSx0LmNvdW50PTB9LHRoaXMucmVuZGVyQnVmZmVyRGlyZWN0PWZ1bmN0aW9uKHQsZSxpLG4scixhKXtMKG4pO3ZhciBvPVIodCxlLG4scikscz0hMTtpZigodD1pLmlkKyJfIitvLmlkKyJfIituLndpcmVmcmFtZSkhPT1rJiYoaz10LHM9ITApLHZvaWQgMCE9PShlPXIubW9ycGhUYXJnZXRJbmZsdWVuY2VzKSl7dmFyIGM9W107dD0wO2Zvcih2YXIgaD1lLmxlbmd0aDt0PGg7dCsrKXM9ZVt0XSxjLnB1c2goW3MsdF0pO2Muc29ydChNKSw4PGMubGVuZ3RoJiYoYy5sZW5ndGg9OCk7dmFyIGw9aS5tb3JwaEF0dHJpYnV0ZXM7Zm9yKHQ9MCxoPWMubGVuZ3RoO3Q8aDt0Kyspcz1jW3RdLE9bdF09c1swXSwwIT09c1swXT8oZT1zWzFdLCEwPT09bi5tb3JwaFRhcmdldHMmJmwucG9zaXRpb24mJmkuYWRkQXR0cmlidXRlKCJtb3JwaFRhcmdldCIrdCxsLnBvc2l0aW9uW2VdKSwhMD09PW4ubW9ycGhOb3JtYWxzJiZsLm5vcm1hbCYmaS5hZGRBdHRyaWJ1dGUoIm1vcnBoTm9ybWFsIit0LGwubm9ybWFsW2VdKSk6KCEwPT09bi5tb3JwaFRhcmdldHMmJmkucmVtb3ZlQXR0cmlidXRlKCJtb3JwaFRhcmdldCIrdCksITA9PT1uLm1vcnBoTm9ybWFscyYmaS5yZW1vdmVBdHRyaWJ1dGUoIm1vcnBoTm9ybWFsIit0KSk7Zm9yKHQ9Yy5sZW5ndGgsZT1PLmxlbmd0aDt0PGU7dCsrKU9bdF09MDtvLmdldFVuaWZvcm1zKCkuc2V0VmFsdWUoQiwibW9ycGhUYXJnZXRJbmZsdWVuY2VzIixPKSxzPSEwfWlmKGU9aS5pbmRleCxoPWkuYXR0cmlidXRlcy5wb3NpdGlvbixjPTEsITA9PT1uLndpcmVmcmFtZSYmKGU9bXQuZ2V0V2lyZWZyYW1lQXR0cmlidXRlKGkpLGM9MiksbnVsbCE9PWU/KHQ9eHQpLnNldEluZGV4KGUpOnQ9eXQscyl7dmFyIHU7cz12b2lkIDA7aWYoaSYmaS5pc0luc3RhbmNlZEJ1ZmZlckdlb21ldHJ5JiZudWxsPT09KHU9bHQuZ2V0KCJBTkdMRV9pbnN0YW5jZWRfYXJyYXlzIikpKWNvbnNvbGUuZXJyb3IoIlRIUkVFLldlYkdMUmVuZGVyZXIuc2V0dXBWZXJ0ZXhBdHRyaWJ1dGVzOiB1c2luZyBUSFJFRS5JbnN0YW5jZWRCdWZmZXJHZW9tZXRyeSBidXQgaGFyZHdhcmUgZG9lcyBub3Qgc3VwcG9ydCBleHRlbnNpb24gQU5HTEVfaW5zdGFuY2VkX2FycmF5cy4iKTtlbHNle3ZvaWQgMD09PXMmJihzPTApLGR0LmluaXRBdHRyaWJ1dGVzKCk7bD1pLmF0dHJpYnV0ZXMsbz1vLmdldEF0dHJpYnV0ZXMoKTt2YXIgZCxwPW4uZGVmYXVsdEF0dHJpYnV0ZVZhbHVlcztmb3IoZCBpbiBvKXt2YXIgZj1vW2RdO2lmKDA8PWYpaWYodm9pZCAwIT09KHc9bFtkXSkpe3ZhciBtPXcubm9ybWFsaXplZCxnPXcuaXRlbVNpemUsdj0oeD1tdC5nZXRBdHRyaWJ1dGVQcm9wZXJ0aWVzKHcpKS5fX3dlYmdsQnVmZmVyLHk9eC50eXBlLHg9eC5ieXRlc1BlckVsZW1lbnQ7aWYody5pc0ludGVybGVhdmVkQnVmZmVyQXR0cmlidXRlKXt2YXIgXz13LmRhdGEsYj1fLnN0cmlkZSx3PXcub2Zmc2V0O18mJl8uaXNJbnN0YW5jZWRJbnRlcmxlYXZlZEJ1ZmZlcj8oZHQuZW5hYmxlQXR0cmlidXRlQW5kRGl2aXNvcihmLF8ubWVzaFBlckF0dHJpYnV0ZSx1KSx2b2lkIDA9PT1pLm1heEluc3RhbmNlZENvdW50JiYoaS5tYXhJbnN0YW5jZWRDb3VudD1fLm1lc2hQZXJBdHRyaWJ1dGUqXy5jb3VudCkpOmR0LmVuYWJsZUF0dHJpYnV0ZShmKSxCLmJpbmRCdWZmZXIoQi5BUlJBWV9CVUZGRVIsdiksQi52ZXJ0ZXhBdHRyaWJQb2ludGVyKGYsZyx5LG0sYip4LChzKmIrdykqeCl9ZWxzZSB3LmlzSW5zdGFuY2VkQnVmZmVyQXR0cmlidXRlPyhkdC5lbmFibGVBdHRyaWJ1dGVBbmREaXZpc29yKGYsdy5tZXNoUGVyQXR0cmlidXRlLHUpLHZvaWQgMD09PWkubWF4SW5zdGFuY2VkQ291bnQmJihpLm1heEluc3RhbmNlZENvdW50PXcubWVzaFBlckF0dHJpYnV0ZSp3LmNvdW50KSk6ZHQuZW5hYmxlQXR0cmlidXRlKGYpLEIuYmluZEJ1ZmZlcihCLkFSUkFZX0JVRkZFUix2KSxCLnZlcnRleEF0dHJpYlBvaW50ZXIoZixnLHksbSwwLHMqZyp4KX1lbHNlIGlmKHZvaWQgMCE9PXAmJnZvaWQgMCE9PShtPXBbZF0pKXN3aXRjaChtLmxlbmd0aCl7Y2FzZSAyOkIudmVydGV4QXR0cmliMmZ2KGYsbSk7YnJlYWs7Y2FzZSAzOkIudmVydGV4QXR0cmliM2Z2KGYsbSk7YnJlYWs7Y2FzZSA0OkIudmVydGV4QXR0cmliNGZ2KGYsbSk7YnJlYWs7ZGVmYXVsdDpCLnZlcnRleEF0dHJpYjFmdihmLG0pfX1kdC5kaXNhYmxlVW51c2VkQXR0cmlidXRlcygpfW51bGwhPT1lJiZCLmJpbmRCdWZmZXIoQi5FTEVNRU5UX0FSUkFZX0JVRkZFUixtdC5nZXRBdHRyaWJ1dGVCdWZmZXIoZSkpfWlmKHU9MCxudWxsIT09ZT91PWUuY291bnQ6dm9pZCAwIT09aCYmKHU9aC5jb3VudCksZT1pLmRyYXdSYW5nZS5zdGFydCpjLGg9bnVsbCE9PWE/YS5zdGFydCpjOjAsZD1NYXRoLm1heChlLGgpLDAhPT0oYT1NYXRoLm1heCgwLE1hdGgubWluKHUsZStpLmRyYXdSYW5nZS5jb3VudCpjLGgrKG51bGwhPT1hP2EuY291bnQqYzoxLzApKS0xLWQrMSkpKXtpZihyLmlzTWVzaClpZighMD09PW4ud2lyZWZyYW1lKWR0LnNldExpbmVXaWR0aChuLndpcmVmcmFtZUxpbmV3aWR0aCoobnVsbD09PUg/WjoxKSksdC5zZXRNb2RlKEIuTElORVMpO2Vsc2Ugc3dpdGNoKHIuZHJhd01vZGUpe2Nhc2UgMDp0LnNldE1vZGUoQi5UUklBTkdMRVMpO2JyZWFrO2Nhc2UgMTp0LnNldE1vZGUoQi5UUklBTkdMRV9TVFJJUCk7YnJlYWs7Y2FzZSAyOnQuc2V0TW9kZShCLlRSSUFOR0xFX0ZBTil9ZWxzZSByLmlzTGluZT8odm9pZCAwPT09KG49bi5saW5ld2lkdGgpJiYobj0xKSxkdC5zZXRMaW5lV2lkdGgobioobnVsbD09PUg/WjoxKSksci5pc0xpbmVTZWdtZW50cz90LnNldE1vZGUoQi5MSU5FUyk6dC5zZXRNb2RlKEIuTElORV9TVFJJUCkpOnIuaXNQb2ludHMmJnQuc2V0TW9kZShCLlBPSU5UUyk7aSYmaS5pc0luc3RhbmNlZEJ1ZmZlckdlb21ldHJ5PzA8aS5tYXhJbnN0YW5jZWRDb3VudCYmdC5yZW5kZXJJbnN0YW5jZXMoaSxkLGEpOnQucmVuZGVyKGQsYSl9fSx0aGlzLnJlbmRlcj1mdW5jdGlvbih0LGUsaSxuKXtpZih2b2lkIDAhPT1lJiYhMCE9PWUuaXNDYW1lcmEpY29uc29sZS5lcnJvcigiVEhSRUUuV2ViR0xSZW5kZXJlci5yZW5kZXI6IGNhbWVyYSBpcyBub3QgYW4gaW5zdGFuY2Ugb2YgVEhSRUUuQ2FtZXJhLiIpO2Vsc2V7az0iIixWPS0xLCEoaj1udWxsKT09PXQuYXV0b1VwZGF0ZSYmdC51cGRhdGVNYXRyaXhXb3JsZCgpLG51bGw9PT1lLnBhcmVudCYmZS51cGRhdGVNYXRyaXhXb3JsZCgpLGUubWF0cml4V29ybGRJbnZlcnNlLmdldEludmVyc2UoZS5tYXRyaXhXb3JsZCkscnQubXVsdGlwbHlNYXRyaWNlcyhlLnByb2plY3Rpb25NYXRyaXgsZS5tYXRyaXhXb3JsZEludmVyc2UpLCQuc2V0RnJvbU1hdHJpeChydCksQy5sZW5ndGg9MCxEPVU9LTEsRi5sZW5ndGg9MCx6Lmxlbmd0aD0wLGl0PXRoaXMubG9jYWxDbGlwcGluZ0VuYWJsZWQsZXQ9dHQuaW5pdCh0aGlzLmNsaXBwaW5nUGxhbmVzLGl0LGUpLGZ1bmN0aW9uIHQoZSxpKXtpZighMSE9PWUudmlzaWJsZSl7aWYoMCE9KGUubGF5ZXJzLm1hc2smaS5sYXllcnMubWFzaykpaWYoZS5pc0xpZ2h0KUMucHVzaChlKTtlbHNlIGlmKGUuaXNTcHJpdGUpe3ZhciBuOyhuPSExPT09ZS5mcnVzdHVtQ3VsbGVkKXx8KG50LmNlbnRlci5zZXQoMCwwLDApLG50LnJhZGl1cz0uNzA3MTA2NzgxMTg2NTQ3NixudC5hcHBseU1hdHJpeDQoZS5tYXRyaXhXb3JsZCksbj0hMD09PVMobnQpKSxuJiZGLnB1c2goZSl9ZWxzZSBpZihlLmlzTGVuc0ZsYXJlKXoucHVzaChlKTtlbHNlIGlmKGUuaXNJbW1lZGlhdGVSZW5kZXJPYmplY3QpITA9PT1HLnNvcnRPYmplY3RzJiYoYXQuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKGUubWF0cml4V29ybGQpLGF0LmFwcGx5UHJvamVjdGlvbihydCkpLFQoZSxudWxsLGUubWF0ZXJpYWwsYXQueixudWxsKTtlbHNlIGlmKChlLmlzTWVzaHx8ZS5pc0xpbmV8fGUuaXNQb2ludHMpJiYoZS5pc1NraW5uZWRNZXNoJiZlLnNrZWxldG9uLnVwZGF0ZSgpLChuPSExPT09ZS5mcnVzdHVtQ3VsbGVkKXx8KG51bGw9PT0obj1lLmdlb21ldHJ5KS5ib3VuZGluZ1NwaGVyZSYmbi5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSxudC5jb3B5KG4uYm91bmRpbmdTcGhlcmUpLmFwcGx5TWF0cml4NChlLm1hdHJpeFdvcmxkKSxuPSEwPT09UyhudCkpLG4pJiYhMD09PShvPWUubWF0ZXJpYWwpLnZpc2libGUpaWYoITA9PT1HLnNvcnRPYmplY3RzJiYoYXQuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKGUubWF0cml4V29ybGQpLGF0LmFwcGx5UHJvamVjdGlvbihydCkpLG49bXQudXBkYXRlKGUpLG8uaXNNdWx0aU1hdGVyaWFsKWZvcih2YXIgcj1uLmdyb3VwcyxhPW8ubWF0ZXJpYWxzLG89MCxzPXIubGVuZ3RoO288cztvKyspe3ZhciBjPXJbb10saD1hW2MubWF0ZXJpYWxJbmRleF07ITA9PT1oLnZpc2libGUmJlQoZSxuLGgsYXQueixjKX1lbHNlIFQoZSxuLG8sYXQueixudWxsKTtmb3Iobz0wLHM9KG49ZS5jaGlsZHJlbikubGVuZ3RoO288cztvKyspdChuW29dLGkpfX0odCxlKSxJLmxlbmd0aD1VKzEsTi5sZW5ndGg9RCsxLCEwPT09Ry5zb3J0T2JqZWN0cyYmKEkuc29ydCh3KSxOLnNvcnQoRSkpLGV0JiZ0dC5iZWdpblNoYWRvd3MoKTtmb3IodmFyIHI9MCxhPTAsbz0oZD1DKS5sZW5ndGg7YTxvO2ErKyl7dmFyIHM9ZFthXTtzLmNhc3RTaGFkb3cmJihjdC5zaGFkb3dzW3IrK109cyl9Y3Quc2hhZG93cy5sZW5ndGg9cixFdC5yZW5kZXIodCxlKTt2YXIgYyxoLGwsdSxkPUMscD1zPTAsZj0wLG09ZS5tYXRyaXhXb3JsZEludmVyc2UsZz0wLHY9MCx5PTAseD0wLF89MDtmb3Iocj0wLGE9ZC5sZW5ndGg7cjxhO3IrKylpZihjPShvPWRbcl0pLmNvbG9yLGg9by5pbnRlbnNpdHksbD1vLmRpc3RhbmNlLHU9by5zaGFkb3cmJm8uc2hhZG93Lm1hcD9vLnNoYWRvdy5tYXAudGV4dHVyZTpudWxsLG8uaXNBbWJpZW50TGlnaHQpcys9Yy5yKmgscCs9Yy5nKmgsZis9Yy5iKmg7ZWxzZSBpZihvLmlzRGlyZWN0aW9uYWxMaWdodCl7dmFyIGI9dnQuZ2V0KG8pO2IuY29sb3IuY29weShvLmNvbG9yKS5tdWx0aXBseVNjYWxhcihvLmludGVuc2l0eSksYi5kaXJlY3Rpb24uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKG8ubWF0cml4V29ybGQpLGF0LnNldEZyb21NYXRyaXhQb3NpdGlvbihvLnRhcmdldC5tYXRyaXhXb3JsZCksYi5kaXJlY3Rpb24uc3ViKGF0KSxiLmRpcmVjdGlvbi50cmFuc2Zvcm1EaXJlY3Rpb24obSksKGIuc2hhZG93PW8uY2FzdFNoYWRvdykmJihiLnNoYWRvd0JpYXM9by5zaGFkb3cuYmlhcyxiLnNoYWRvd1JhZGl1cz1vLnNoYWRvdy5yYWRpdXMsYi5zaGFkb3dNYXBTaXplPW8uc2hhZG93Lm1hcFNpemUpLGN0LmRpcmVjdGlvbmFsU2hhZG93TWFwW2ddPXUsY3QuZGlyZWN0aW9uYWxTaGFkb3dNYXRyaXhbZ109by5zaGFkb3cubWF0cml4LGN0LmRpcmVjdGlvbmFsW2crK109Yn1lbHNlIG8uaXNTcG90TGlnaHQ/KChiPXZ0LmdldChvKSkucG9zaXRpb24uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKG8ubWF0cml4V29ybGQpLGIucG9zaXRpb24uYXBwbHlNYXRyaXg0KG0pLGIuY29sb3IuY29weShjKS5tdWx0aXBseVNjYWxhcihoKSxiLmRpc3RhbmNlPWwsYi5kaXJlY3Rpb24uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKG8ubWF0cml4V29ybGQpLGF0LnNldEZyb21NYXRyaXhQb3NpdGlvbihvLnRhcmdldC5tYXRyaXhXb3JsZCksYi5kaXJlY3Rpb24uc3ViKGF0KSxiLmRpcmVjdGlvbi50cmFuc2Zvcm1EaXJlY3Rpb24obSksYi5jb25lQ29zPU1hdGguY29zKG8uYW5nbGUpLGIucGVudW1icmFDb3M9TWF0aC5jb3Moby5hbmdsZSooMS1vLnBlbnVtYnJhKSksYi5kZWNheT0wPT09by5kaXN0YW5jZT8wOm8uZGVjYXksKGIuc2hhZG93PW8uY2FzdFNoYWRvdykmJihiLnNoYWRvd0JpYXM9by5zaGFkb3cuYmlhcyxiLnNoYWRvd1JhZGl1cz1vLnNoYWRvdy5yYWRpdXMsYi5zaGFkb3dNYXBTaXplPW8uc2hhZG93Lm1hcFNpemUpLGN0LnNwb3RTaGFkb3dNYXBbeV09dSxjdC5zcG90U2hhZG93TWF0cml4W3ldPW8uc2hhZG93Lm1hdHJpeCxjdC5zcG90W3krK109Yik6by5pc1JlY3RBcmVhTGlnaHQ/KChiPXZ0LmdldChvKSkuY29sb3IuY29weShjKS5tdWx0aXBseVNjYWxhcihoLyhvLndpZHRoKm8uaGVpZ2h0KSksYi5wb3NpdGlvbi5zZXRGcm9tTWF0cml4UG9zaXRpb24oby5tYXRyaXhXb3JsZCksYi5wb3NpdGlvbi5hcHBseU1hdHJpeDQobSksc3QuaWRlbnRpdHkoKSxvdC5jb3B5KG8ubWF0cml4V29ybGQpLG90LnByZW11bHRpcGx5KG0pLHN0LmV4dHJhY3RSb3RhdGlvbihvdCksYi5oYWxmV2lkdGguc2V0KC41Km8ud2lkdGgsMCwwKSxiLmhhbGZIZWlnaHQuc2V0KDAsLjUqby5oZWlnaHQsMCksYi5oYWxmV2lkdGguYXBwbHlNYXRyaXg0KHN0KSxiLmhhbGZIZWlnaHQuYXBwbHlNYXRyaXg0KHN0KSxjdC5yZWN0QXJlYVt4KytdPWIpOm8uaXNQb2ludExpZ2h0PygoYj12dC5nZXQobykpLnBvc2l0aW9uLnNldEZyb21NYXRyaXhQb3NpdGlvbihvLm1hdHJpeFdvcmxkKSxiLnBvc2l0aW9uLmFwcGx5TWF0cml4NChtKSxiLmNvbG9yLmNvcHkoby5jb2xvcikubXVsdGlwbHlTY2FsYXIoby5pbnRlbnNpdHkpLGIuZGlzdGFuY2U9by5kaXN0YW5jZSxiLmRlY2F5PTA9PT1vLmRpc3RhbmNlPzA6by5kZWNheSwoYi5zaGFkb3c9by5jYXN0U2hhZG93KSYmKGIuc2hhZG93Qmlhcz1vLnNoYWRvdy5iaWFzLGIuc2hhZG93UmFkaXVzPW8uc2hhZG93LnJhZGl1cyxiLnNoYWRvd01hcFNpemU9by5zaGFkb3cubWFwU2l6ZSksY3QucG9pbnRTaGFkb3dNYXBbdl09dSx2b2lkIDA9PT1jdC5wb2ludFNoYWRvd01hdHJpeFt2XSYmKGN0LnBvaW50U2hhZG93TWF0cml4W3ZdPW5ldyBJdCksYXQuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKG8ubWF0cml4V29ybGQpLm5lZ2F0ZSgpLGN0LnBvaW50U2hhZG93TWF0cml4W3ZdLmlkZW50aXR5KCkuc2V0UG9zaXRpb24oYXQpLGN0LnBvaW50W3YrK109Yik6by5pc0hlbWlzcGhlcmVMaWdodCYmKChiPXZ0LmdldChvKSkuZGlyZWN0aW9uLnNldEZyb21NYXRyaXhQb3NpdGlvbihvLm1hdHJpeFdvcmxkKSxiLmRpcmVjdGlvbi50cmFuc2Zvcm1EaXJlY3Rpb24obSksYi5kaXJlY3Rpb24ubm9ybWFsaXplKCksYi5za3lDb2xvci5jb3B5KG8uY29sb3IpLm11bHRpcGx5U2NhbGFyKGgpLGIuZ3JvdW5kQ29sb3IuY29weShvLmdyb3VuZENvbG9yKS5tdWx0aXBseVNjYWxhcihoKSxjdC5oZW1pW18rK109Yik7Y3QuYW1iaWVudFswXT1zLGN0LmFtYmllbnRbMV09cCxjdC5hbWJpZW50WzJdPWYsY3QuZGlyZWN0aW9uYWwubGVuZ3RoPWcsY3Quc3BvdC5sZW5ndGg9eSxjdC5yZWN0QXJlYS5sZW5ndGg9eCxjdC5wb2ludC5sZW5ndGg9dixjdC5oZW1pLmxlbmd0aD1fLGN0Lmhhc2g9ZysiLCIrdisiLCIreSsiLCIreCsiLCIrXysiLCIrY3Quc2hhZG93cy5sZW5ndGgsZXQmJnR0LmVuZFNoYWRvd3MoKSxodC5jYWxscz0wLGh0LnZlcnRpY2VzPTAsaHQuZmFjZXM9MCx2b2lkKGh0LnBvaW50cz0wKT09PWkmJihpPW51bGwpLHRoaXMuc2V0UmVuZGVyVGFyZ2V0KGkpLG51bGw9PT0oZD10LmJhY2tncm91bmQpP2R0LmJ1ZmZlcnMuY29sb3Iuc2V0Q2xlYXIoWC5yLFguZyxYLmIsWSxQKTpkJiZkLmlzQ29sb3ImJihkdC5idWZmZXJzLmNvbG9yLnNldENsZWFyKGQucixkLmcsZC5iLDEsUCksbj0hMCksKHRoaXMuYXV0b0NsZWFyfHxuKSYmdGhpcy5jbGVhcih0aGlzLmF1dG9DbGVhckNvbG9yLHRoaXMuYXV0b0NsZWFyRGVwdGgsdGhpcy5hdXRvQ2xlYXJTdGVuY2lsKSxkJiZkLmlzQ3ViZVRleHR1cmU/KGJ0LnByb2plY3Rpb25NYXRyaXguY29weShlLnByb2plY3Rpb25NYXRyaXgpLGJ0Lm1hdHJpeFdvcmxkLmV4dHJhY3RSb3RhdGlvbihlLm1hdHJpeFdvcmxkKSxidC5tYXRyaXhXb3JsZEludmVyc2UuZ2V0SW52ZXJzZShidC5tYXRyaXhXb3JsZCksTXQubWF0ZXJpYWwudW5pZm9ybXMudEN1YmUudmFsdWU9ZCxNdC5tb2RlbFZpZXdNYXRyaXgubXVsdGlwbHlNYXRyaWNlcyhidC5tYXRyaXhXb3JsZEludmVyc2UsTXQubWF0cml4V29ybGQpLG10LnVwZGF0ZShNdCksRy5yZW5kZXJCdWZmZXJEaXJlY3QoYnQsbnVsbCxNdC5nZW9tZXRyeSxNdC5tYXRlcmlhbCxNdCxudWxsKSk6ZCYmZC5pc1RleHR1cmUmJih3dC5tYXRlcmlhbC5tYXA9ZCxtdC51cGRhdGUod3QpLEcucmVuZGVyQnVmZmVyRGlyZWN0KF90LG51bGwsd3QuZ2VvbWV0cnksd3QubWF0ZXJpYWwsd3QsbnVsbCkpLHQub3ZlcnJpZGVNYXRlcmlhbD8obj10Lm92ZXJyaWRlTWF0ZXJpYWwsQShJLHQsZSxuKSxBKE4sdCxlLG4pKTooZHQuc2V0QmxlbmRpbmcoMCksQShJLHQsZSksQShOLHQsZSkpLEx0LnJlbmRlcih0LGUpLFJ0LnJlbmRlcih0LGUsVyksaSYmZnQudXBkYXRlUmVuZGVyVGFyZ2V0TWlwbWFwKGkpLGR0LnNldERlcHRoVGVzdCghMCksZHQuc2V0RGVwdGhXcml0ZSghMCksZHQuc2V0Q29sb3JXcml0ZSghMCl9fSx0aGlzLnNldEZhY2VDdWxsaW5nPWZ1bmN0aW9uKHQsZSl7ZHQuc2V0Q3VsbEZhY2UodCksZHQuc2V0RmxpcFNpZGVkKDA9PT1lKX0sdGhpcy5hbGxvY1RleHR1cmVVbml0PWZ1bmN0aW9uKCl7dmFyIHQ9XztyZXR1cm4gdD49dXQubWF4VGV4dHVyZXMmJmNvbnNvbGUud2FybigiV2ViR0xSZW5kZXJlcjogdHJ5aW5nIHRvIHVzZSAiK3QrIiB0ZXh0dXJlIHVuaXRzIHdoaWxlIHRoaXMgR1BVIHN1cHBvcnRzIG9ubHkgIit1dC5tYXhUZXh0dXJlcyksXys9MSx0fSx0aGlzLnNldFRleHR1cmUyRD0oVHQ9ITEsZnVuY3Rpb24odCxlKXt0JiZ0LmlzV2ViR0xSZW5kZXJUYXJnZXQmJihUdHx8KGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlci5zZXRUZXh0dXJlMkQ6IGRvbid0IHVzZSByZW5kZXIgdGFyZ2V0cyBhcyB0ZXh0dXJlcy4gVXNlIHRoZWlyIC50ZXh0dXJlIHByb3BlcnR5IGluc3RlYWQuIiksVHQ9ITApLHQ9dC50ZXh0dXJlKSxmdC5zZXRUZXh0dXJlMkQodCxlKX0pLHRoaXMuc2V0VGV4dHVyZT0oU3Q9ITEsZnVuY3Rpb24odCxlKXtTdHx8KGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogLnNldFRleHR1cmUgaXMgZGVwcmVjYXRlZCwgdXNlIHNldFRleHR1cmUyRCBpbnN0ZWFkLiIpLFN0PSEwKSxmdC5zZXRUZXh0dXJlMkQodCxlKX0pLHRoaXMuc2V0VGV4dHVyZUN1YmU9KEF0PSExLGZ1bmN0aW9uKHQsZSl7dCYmdC5pc1dlYkdMUmVuZGVyVGFyZ2V0Q3ViZSYmKEF0fHwoY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyLnNldFRleHR1cmVDdWJlOiBkb24ndCB1c2UgY3ViZSByZW5kZXIgdGFyZ2V0cyBhcyB0ZXh0dXJlcy4gVXNlIHRoZWlyIC50ZXh0dXJlIHByb3BlcnR5IGluc3RlYWQuIiksQXQ9ITApLHQ9dC50ZXh0dXJlKSx0JiZ0LmlzQ3ViZVRleHR1cmV8fEFycmF5LmlzQXJyYXkodC5pbWFnZSkmJjY9PT10LmltYWdlLmxlbmd0aD9mdC5zZXRUZXh0dXJlQ3ViZSh0LGUpOmZ0LnNldFRleHR1cmVDdWJlRHluYW1pYyh0LGUpfSksdGhpcy5nZXRDdXJyZW50UmVuZGVyVGFyZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIEh9LHRoaXMuc2V0UmVuZGVyVGFyZ2V0PWZ1bmN0aW9uKHQpeyhIPXQpJiZ2b2lkIDA9PT1wdC5nZXQodCkuX193ZWJnbEZyYW1lYnVmZmVyJiZmdC5zZXR1cFJlbmRlclRhcmdldCh0KTt2YXIgZSxpPXQmJnQuaXNXZWJHTFJlbmRlclRhcmdldEN1YmU7dD8oZT1wdC5nZXQodCksZT1pP2UuX193ZWJnbEZyYW1lYnVmZmVyW3QuYWN0aXZlQ3ViZUZhY2VdOmUuX193ZWJnbEZyYW1lYnVmZmVyLHkuY29weSh0LnNjaXNzb3IpLHg9dC5zY2lzc29yVGVzdCxXLmNvcHkodC52aWV3cG9ydCkpOihlPW51bGwseS5jb3B5KEopLm11bHRpcGx5U2NhbGFyKFopLHg9USxXLmNvcHkoSykubXVsdGlwbHlTY2FsYXIoWikpLHYhPT1lJiYoQi5iaW5kRnJhbWVidWZmZXIoQi5GUkFNRUJVRkZFUixlKSx2PWUpLGR0LnNjaXNzb3IoeSksZHQuc2V0U2Npc3NvclRlc3QoeCksZHQudmlld3BvcnQoVyksaSYmKGk9cHQuZ2V0KHQudGV4dHVyZSksQi5mcmFtZWJ1ZmZlclRleHR1cmUyRChCLkZSQU1FQlVGRkVSLEIuQ09MT1JfQVRUQUNITUVOVDAsQi5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grdC5hY3RpdmVDdWJlRmFjZSxpLl9fd2ViZ2xUZXh0dXJlLHQuYWN0aXZlTWlwTWFwTGV2ZWwpKX0sdGhpcy5yZWFkUmVuZGVyVGFyZ2V0UGl4ZWxzPWZ1bmN0aW9uKHQsZSxpLG4scixhKXtpZighMT09PSh0JiZ0LmlzV2ViR0xSZW5kZXJUYXJnZXQpKWNvbnNvbGUuZXJyb3IoIlRIUkVFLldlYkdMUmVuZGVyZXIucmVhZFJlbmRlclRhcmdldFBpeGVsczogcmVuZGVyVGFyZ2V0IGlzIG5vdCBUSFJFRS5XZWJHTFJlbmRlclRhcmdldC4iKTtlbHNle3ZhciBvPXB0LmdldCh0KS5fX3dlYmdsRnJhbWVidWZmZXI7aWYobyl7dmFyIHM9ITE7byE9PXYmJihCLmJpbmRGcmFtZWJ1ZmZlcihCLkZSQU1FQlVGRkVSLG8pLHM9ITApO3RyeXt2YXIgYz10LnRleHR1cmUsaD1jLmZvcm1hdCxsPWMudHlwZTsxMDIzIT09aCYmdShoKSE9PUIuZ2V0UGFyYW1ldGVyKEIuSU1QTEVNRU5UQVRJT05fQ09MT1JfUkVBRF9GT1JNQVQpP2NvbnNvbGUuZXJyb3IoIlRIUkVFLldlYkdMUmVuZGVyZXIucmVhZFJlbmRlclRhcmdldFBpeGVsczogcmVuZGVyVGFyZ2V0IGlzIG5vdCBpbiBSR0JBIG9yIGltcGxlbWVudGF0aW9uIGRlZmluZWQgZm9ybWF0LiIpOjEwMDk9PT1sfHx1KGwpPT09Qi5nZXRQYXJhbWV0ZXIoQi5JTVBMRU1FTlRBVElPTl9DT0xPUl9SRUFEX1RZUEUpfHwxMDE1PT09bCYmKGx0LmdldCgiT0VTX3RleHR1cmVfZmxvYXQiKXx8bHQuZ2V0KCJXRUJHTF9jb2xvcl9idWZmZXJfZmxvYXQiKSl8fDEwMTY9PT1sJiZsdC5nZXQoIkVYVF9jb2xvcl9idWZmZXJfaGFsZl9mbG9hdCIpP0IuY2hlY2tGcmFtZWJ1ZmZlclN0YXR1cyhCLkZSQU1FQlVGRkVSKT09PUIuRlJBTUVCVUZGRVJfQ09NUExFVEU/MDw9ZSYmZTw9dC53aWR0aC1uJiYwPD1pJiZpPD10LmhlaWdodC1yJiZCLnJlYWRQaXhlbHMoZSxpLG4scix1KGgpLHUobCksYSk6Y29uc29sZS5lcnJvcigiVEhSRUUuV2ViR0xSZW5kZXJlci5yZWFkUmVuZGVyVGFyZ2V0UGl4ZWxzOiByZWFkUGl4ZWxzIGZyb20gcmVuZGVyVGFyZ2V0IGZhaWxlZC4gRnJhbWVidWZmZXIgbm90IGNvbXBsZXRlLiIpOmNvbnNvbGUuZXJyb3IoIlRIUkVFLldlYkdMUmVuZGVyZXIucmVhZFJlbmRlclRhcmdldFBpeGVsczogcmVuZGVyVGFyZ2V0IGlzIG5vdCBpbiBVbnNpZ25lZEJ5dGVUeXBlIG9yIGltcGxlbWVudGF0aW9uIGRlZmluZWQgdHlwZS4iKX1maW5hbGx5e3MmJkIuYmluZEZyYW1lYnVmZmVyKEIuRlJBTUVCVUZGRVIsdil9fX19fWZ1bmN0aW9uIHh0KHQsZSl7dGhpcy5uYW1lPSIiLHRoaXMuY29sb3I9bmV3IE50KHQpLHRoaXMuZGVuc2l0eT12b2lkIDAhPT1lP2U6MjVlLTV9ZnVuY3Rpb24gX3QodCxlLGkpe3RoaXMubmFtZT0iIix0aGlzLmNvbG9yPW5ldyBOdCh0KSx0aGlzLm5lYXI9dm9pZCAwIT09ZT9lOjEsdGhpcy5mYXI9dm9pZCAwIT09aT9pOjFlM31mdW5jdGlvbiBidCgpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlNjZW5lIix0aGlzLm92ZXJyaWRlTWF0ZXJpYWw9dGhpcy5mb2c9dGhpcy5iYWNrZ3JvdW5kPW51bGwsdGhpcy5hdXRvVXBkYXRlPSEwfWZ1bmN0aW9uIHd0KHQsZSxpLG4scil7WC5jYWxsKHRoaXMpLHRoaXMubGVuc0ZsYXJlcz1bXSx0aGlzLnBvc2l0aW9uU2NyZWVuPW5ldyBDdCwodGhpcy5jdXN0b21VcGRhdGVDYWxsYmFjaz12b2lkIDApIT09dCYmdGhpcy5hZGQodCxlLGksbixyKX1mdW5jdGlvbiBNdCh0KXtOLmNhbGwodGhpcyksdGhpcy50eXBlPSJTcHJpdGVNYXRlcmlhbCIsdGhpcy5jb2xvcj1uZXcgTnQoMTY3NzcyMTUpLHRoaXMubWFwPW51bGwsdGhpcy5yb3RhdGlvbj0wLHRoaXMubGlnaHRzPXRoaXMuZm9nPSExLHRoaXMuc2V0VmFsdWVzKHQpfWZ1bmN0aW9uIEV0KHQpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlNwcml0ZSIsdGhpcy5tYXRlcmlhbD12b2lkIDAhPT10P3Q6bmV3IE10fWZ1bmN0aW9uIFR0KCl7WC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iTE9EIixPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLHtsZXZlbHM6e2VudW1lcmFibGU6ITAsdmFsdWU6W119fSl9ZnVuY3Rpb24gU3QodCxlLGkpe2lmKHRoaXMudXNlVmVydGV4VGV4dHVyZT12b2lkIDA9PT1pfHxpLHRoaXMuaWRlbnRpdHlNYXRyaXg9bmV3IEl0LHQ9dHx8W10sdGhpcy5ib25lcz10LnNsaWNlKDApLHRoaXMudXNlVmVydGV4VGV4dHVyZT8odD1NYXRoLnNxcnQoNCp0aGlzLmJvbmVzLmxlbmd0aCksdD1lci5uZXh0UG93ZXJPZlR3byhNYXRoLmNlaWwodCkpLHRoaXMuYm9uZVRleHR1cmVIZWlnaHQ9dGhpcy5ib25lVGV4dHVyZVdpZHRoPXQ9TWF0aC5tYXgodCw0KSx0aGlzLmJvbmVNYXRyaWNlcz1uZXcgRmxvYXQzMkFycmF5KHRoaXMuYm9uZVRleHR1cmVXaWR0aCp0aGlzLmJvbmVUZXh0dXJlSGVpZ2h0KjQpLHRoaXMuYm9uZVRleHR1cmU9bmV3IFUodGhpcy5ib25lTWF0cmljZXMsdGhpcy5ib25lVGV4dHVyZVdpZHRoLHRoaXMuYm9uZVRleHR1cmVIZWlnaHQsMTAyMywxMDE1KSk6dGhpcy5ib25lTWF0cmljZXM9bmV3IEZsb2F0MzJBcnJheSgxNip0aGlzLmJvbmVzLmxlbmd0aCksdm9pZCAwPT09ZSl0aGlzLmNhbGN1bGF0ZUludmVyc2VzKCk7ZWxzZSBpZih0aGlzLmJvbmVzLmxlbmd0aD09PWUubGVuZ3RoKXRoaXMuYm9uZUludmVyc2VzPWUuc2xpY2UoMCk7ZWxzZSBmb3IoY29uc29sZS53YXJuKCJUSFJFRS5Ta2VsZXRvbiBib25JbnZlcnNlcyBpcyB0aGUgd3JvbmcgbGVuZ3RoLiIpLHRoaXMuYm9uZUludmVyc2VzPVtdLGU9MCx0PXRoaXMuYm9uZXMubGVuZ3RoO2U8dDtlKyspdGhpcy5ib25lSW52ZXJzZXMucHVzaChuZXcgSXQpfWZ1bmN0aW9uIEF0KCl7WC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iQm9uZSJ9ZnVuY3Rpb24gTHQodCxlLGkpe2lmKGt0LmNhbGwodGhpcyx0LGUpLHRoaXMudHlwZT0iU2tpbm5lZE1lc2giLHRoaXMuYmluZE1vZGU9ImF0dGFjaGVkIix0aGlzLmJpbmRNYXRyaXg9bmV3IEl0LHRoaXMuYmluZE1hdHJpeEludmVyc2U9bmV3IEl0LHQ9W10sdGhpcy5nZW9tZXRyeSYmdm9pZCAwIT09dGhpcy5nZW9tZXRyeS5ib25lcyl7Zm9yKHZhciBuLHI9MCxhPXRoaXMuZ2VvbWV0cnkuYm9uZXMubGVuZ3RoO3I8YTsrK3Ipbj10aGlzLmdlb21ldHJ5LmJvbmVzW3JdLGU9bmV3IEF0LHQucHVzaChlKSxlLm5hbWU9bi5uYW1lLGUucG9zaXRpb24uZnJvbUFycmF5KG4ucG9zKSxlLnF1YXRlcm5pb24uZnJvbUFycmF5KG4ucm90cSksdm9pZCAwIT09bi5zY2wmJmUuc2NhbGUuZnJvbUFycmF5KG4uc2NsKTtmb3Iocj0wLGE9dGhpcy5nZW9tZXRyeS5ib25lcy5sZW5ndGg7cjxhOysrciktMSE9PShuPXRoaXMuZ2VvbWV0cnkuYm9uZXNbcl0pLnBhcmVudCYmbnVsbCE9PW4ucGFyZW50JiZ2b2lkIDAhPT10W24ucGFyZW50XT90W24ucGFyZW50XS5hZGQodFtyXSk6dGhpcy5hZGQodFtyXSl9dGhpcy5ub3JtYWxpemVTa2luV2VpZ2h0cygpLHRoaXMudXBkYXRlTWF0cml4V29ybGQoITApLHRoaXMuYmluZChuZXcgU3QodCx2b2lkIDAsaSksdGhpcy5tYXRyaXhXb3JsZCl9ZnVuY3Rpb24gUnQodCl7Ti5jYWxsKHRoaXMpLHRoaXMudHlwZT0iTGluZUJhc2ljTWF0ZXJpYWwiLHRoaXMuY29sb3I9bmV3IE50KDE2Nzc3MjE1KSx0aGlzLmxpbmV3aWR0aD0xLHRoaXMubGluZWpvaW49dGhpcy5saW5lY2FwPSJyb3VuZCIsdGhpcy5saWdodHM9ITEsdGhpcy5zZXRWYWx1ZXModCl9ZnVuY3Rpb24gYWUodCxlLGkpe2lmKDE9PT1pKXJldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkxpbmU6IHBhcmFtZXRlciBUSFJFRS5MaW5lUGllY2VzIG5vIGxvbmdlciBzdXBwb3J0ZWQuIENyZWF0ZWQgVEhSRUUuTGluZVNlZ21lbnRzIGluc3RlYWQuIiksbmV3IG9lKHQsZSk7WC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iTGluZSIsdGhpcy5nZW9tZXRyeT12b2lkIDAhPT10P3Q6bmV3IFZ0LHRoaXMubWF0ZXJpYWw9dm9pZCAwIT09ZT9lOm5ldyBSdCh7Y29sb3I6MTY3NzcyMTUqTWF0aC5yYW5kb20oKX0pfWZ1bmN0aW9uIG9lKHQsZSl7YWUuY2FsbCh0aGlzLHQsZSksdGhpcy50eXBlPSJMaW5lU2VnbWVudHMifWZ1bmN0aW9uIHNlKHQpe04uY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlBvaW50c01hdGVyaWFsIix0aGlzLmNvbG9yPW5ldyBOdCgxNjc3NzIxNSksdGhpcy5tYXA9bnVsbCx0aGlzLnNpemU9MSx0aGlzLnNpemVBdHRlbnVhdGlvbj0hMCx0aGlzLmxpZ2h0cz0hMSx0aGlzLnNldFZhbHVlcyh0KX1mdW5jdGlvbiBjZSh0LGUpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlBvaW50cyIsdGhpcy5nZW9tZXRyeT12b2lkIDAhPT10P3Q6bmV3IFZ0LHRoaXMubWF0ZXJpYWw9dm9pZCAwIT09ZT9lOm5ldyBzZSh7Y29sb3I6MTY3NzcyMTUqTWF0aC5yYW5kb20oKX0pfWZ1bmN0aW9uIGhlKCl7WC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iR3JvdXAifWZ1bmN0aW9uIGxlKGUsdCxpLG4scixhLG8scyxjKXt6LmNhbGwodGhpcyxlLHQsaSxuLHIsYSxvLHMsYyksdGhpcy5nZW5lcmF0ZU1pcG1hcHM9ITE7dmFyIGg9dGhpczshZnVuY3Rpb24gdCgpe3JlcXVlc3RBbmltYXRpb25GcmFtZSh0KSxlLnJlYWR5U3RhdGU+PWUuSEFWRV9DVVJSRU5UX0RBVEEmJihoLm5lZWRzVXBkYXRlPSEwKX0oKX1mdW5jdGlvbiB1ZSh0LGUsaSxuLHIsYSxvLHMsYyxoLGwsdSl7ei5jYWxsKHRoaXMsbnVsbCxhLG8scyxjLGgsbixyLGwsdSksdGhpcy5pbWFnZT17d2lkdGg6ZSxoZWlnaHQ6aX0sdGhpcy5taXBtYXBzPXQsdGhpcy5nZW5lcmF0ZU1pcG1hcHM9dGhpcy5mbGlwWT0hMX1mdW5jdGlvbiBkZSh0LGUsaSxuLHIsYSxvLHMsYyl7ei5jYWxsKHRoaXMsdCxlLGksbixyLGEsbyxzLGMpLHRoaXMubmVlZHNVcGRhdGU9ITB9ZnVuY3Rpb24gcGUodCxlLGksbixyLGEsbyxzLGMsaCl7aWYoMTAyNiE9PShoPXZvaWQgMCE9PWg/aDoxMDI2KSYmMTAyNyE9PWgpdGhyb3cgRXJyb3IoIkRlcHRoVGV4dHVyZSBmb3JtYXQgbXVzdCBiZSBlaXRoZXIgVEhSRUUuRGVwdGhGb3JtYXQgb3IgVEhSRUUuRGVwdGhTdGVuY2lsRm9ybWF0Iik7dm9pZCAwPT09aSYmMTAyNj09PWgmJihpPTEwMTIpLHZvaWQgMD09PWkmJjEwMjc9PT1oJiYoaT0xMDIwKSx6LmNhbGwodGhpcyxudWxsLG4scixhLG8scyxoLGksYyksdGhpcy5pbWFnZT17d2lkdGg6dCxoZWlnaHQ6ZX0sdGhpcy5tYWdGaWx0ZXI9dm9pZCAwIT09bz9vOjEwMDMsdGhpcy5taW5GaWx0ZXI9dm9pZCAwIT09cz9zOjEwMDMsdGhpcy5nZW5lcmF0ZU1pcG1hcHM9dGhpcy5mbGlwWT0hMX1mdW5jdGlvbiBmZSh0KXtmdW5jdGlvbiBlKHQsZSl7cmV0dXJuIHQtZX1WdC5jYWxsKHRoaXMpO3ZhciBpPVswLDBdLG49e30scj1bImEiLCJiIiwiYyJdO2lmKHQmJnQuaXNHZW9tZXRyeSl7dmFyIGE9dC52ZXJ0aWNlcyxvPXQuZmFjZXMscz0wLGM9bmV3IFVpbnQzMkFycmF5KDYqby5sZW5ndGgpO3Q9MDtmb3IodmFyIGg9by5sZW5ndGg7dDxoO3QrKylmb3IodmFyIGw9b1t0XSx1PTA7dTwzO3UrKyl7aVswXT1sW3JbdV1dLGlbMV09bFtyWyh1KzEpJTNdXSxpLnNvcnQoZSk7dmFyIGQ9aS50b1N0cmluZygpO3ZvaWQgMD09PW5bZF0mJihjWzIqc109aVswXSxjWzIqcysxXT1pWzFdLG5bZF09ITAscysrKX1mb3IoaT1uZXcgRmxvYXQzMkFycmF5KDYqcyksdD0wLGg9czt0PGg7dCsrKWZvcih1PTA7dTwyO3UrKyluPWFbY1syKnQrdV1dLGlbKHM9Nip0KzMqdSkrMF09bi54LGlbcysxXT1uLnksaVtzKzJdPW4uejt0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBKKGksMykpfWVsc2UgaWYodCYmdC5pc0J1ZmZlckdlb21ldHJ5KXtpZihudWxsIT09dC5pbmRleCl7Zm9yKGg9dC5pbmRleC5hcnJheSxhPXQuYXR0cmlidXRlcy5wb3NpdGlvbiwocz0wKT09PShyPXQuZ3JvdXBzKS5sZW5ndGgmJnQuYWRkR3JvdXAoMCxoLmxlbmd0aCksYz1uZXcgVWludDMyQXJyYXkoMipoLmxlbmd0aCksbz0wLGw9ci5sZW5ndGg7bzxsOysrbyl7dT0odD1yW29dKS5zdGFydCxkPXQuY291bnQ7Zm9yKHZhciBwPSh0PXUpK2Q7dDxwO3QrPTMpZm9yKHU9MDt1PDM7dSsrKWlbMF09aFt0K3VdLGlbMV09aFt0Kyh1KzEpJTNdLGkuc29ydChlKSx2b2lkIDA9PT1uW2Q9aS50b1N0cmluZygpXSYmKGNbMipzXT1pWzBdLGNbMipzKzFdPWlbMV0sbltkXT0hMCxzKyspfWZvcihpPW5ldyBGbG9hdDMyQXJyYXkoNipzKSx0PTAsaD1zO3Q8aDt0KyspZm9yKHU9MDt1PDI7dSsrKXM9Nip0KzMqdSxuPWNbMip0K3VdLGlbcyswXT1hLmdldFgobiksaVtzKzFdPWEuZ2V0WShuKSxpW3MrMl09YS5nZXRaKG4pfWVsc2UgZm9yKGM9KHM9KGE9dC5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5KS5sZW5ndGgvMykvMyxpPW5ldyBGbG9hdDMyQXJyYXkoNipzKSx0PTAsaD1jO3Q8aDt0KyspZm9yKHU9MDt1PDM7dSsrKWM9OSp0KzMqdSxpWyhzPTE4KnQrNip1KSswXT1hW2NdLGlbcysxXT1hW2MrMV0saVtzKzJdPWFbYysyXSxuPTkqdCsodSsxKSUzKjMsaVtzKzNdPWFbbl0saVtzKzRdPWFbbisxXSxpW3MrNV09YVtuKzJdO3RoaXMuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbmV3IEooaSwzKSl9fWZ1bmN0aW9uIG1lKHQsZSxpKXtWdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iUGFyYW1ldHJpY0J1ZmZlckdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e2Z1bmM6dCxzbGljZXM6ZSxzdGFja3M6aX07dmFyIG4scixhLG8scyxjLGg9W10sbD1bXSx1PWUrMTtmb3Iobj0wO248PWk7bisrKWZvcihzPW4vaSxyPTA7cjw9ZTtyKyspYT10KG89ci9lLHMpLGgucHVzaChhLngsYS55LGEueiksbC5wdXNoKG8scyk7Zm9yKHQ9W10sbj0wO248aTtuKyspZm9yKHI9MDtyPGU7cisrKW89KGE9bip1K3IpKzEscz0obisxKSp1K3IrMSxjPShuKzEpKnUrcix0LnB1c2goYSxvLGMpLHQucHVzaChvLHMsYyk7dGhpcy5zZXRJbmRleChuZXcoNjU1MzU8dC5sZW5ndGg/bnQ6ZXQpKHQsMSkpLHRoaXMuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbmV3IHJ0KGgsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsbmV3IHJ0KGwsMikpLHRoaXMuY29tcHV0ZVZlcnRleE5vcm1hbHMoKX1mdW5jdGlvbiBnZSh0LGUsaSl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlBhcmFtZXRyaWNHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtmdW5jOnQsc2xpY2VzOmUsc3RhY2tzOml9LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBtZSh0LGUsaSkpLHRoaXMubWVyZ2VWZXJ0aWNlcygpfWZ1bmN0aW9uIHZlKG4sbSx0LGUpe2Z1bmN0aW9uIGcodCl7dS5wdXNoKHQueCx0LnksdC56KX1mdW5jdGlvbiB2KHQsZSl7dmFyIGk9Myp0O2UueD1uWzAraV0sZS55PW5bMStpXSxlLno9blsyK2ldfWZ1bmN0aW9uIGwodCxlLGksbil7bjwwJiYxPT09dC54JiYoZFtlXT10LngtMSksMD09PWkueCYmMD09PWkueiYmKGRbZV09bi8yL01hdGguUEkrLjUpfVZ0LmNhbGwodGhpcyksdGhpcy50eXBlPSJQb2x5aGVkcm9uQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17dmVydGljZXM6bixpbmRpY2VzOm0scmFkaXVzOnQsZGV0YWlsOmV9LHQ9dHx8MTt2YXIgdT1bXSxkPVtdOyFmdW5jdGlvbih0KXtmb3IodmFyIGU9bmV3IEN0LGk9bmV3IEN0LG49bmV3IEN0LHI9MDtyPG0ubGVuZ3RoO3IrPTMpe3YobVtyKzBdLGUpLHYobVtyKzFdLGkpLHYobVtyKzJdLG4pO3ZhciBhLG8scz1lLGM9aSxoPW4sbD1NYXRoLnBvdygyLHQpLHU9W107Zm9yKGE9MDthPD1sO2ErKyl7dVthXT1bXTt2YXIgZD1zLmNsb25lKCkubGVycChoLGEvbCkscD1jLmNsb25lKCkubGVycChoLGEvbCksZj1sLWE7Zm9yKG89MDtvPD1mO28rKyl1W2FdW29dPTA9PT1vJiZhPT09bD9kOmQuY2xvbmUoKS5sZXJwKHAsby9mKX1mb3IoYT0wO2E8bDthKyspZm9yKG89MDtvPDIqKGwtYSktMTtvKyspcz1NYXRoLmZsb29yKG8vMiksMD09byUyPyhnKHVbYV1bcysxXSksZyh1W2ErMV1bc10pLGcodVthXVtzXSkpOihnKHVbYV1bcysxXSksZyh1W2ErMV1bcysxXSksZyh1W2ErMV1bc10pKX19KGV8fDApLGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgQ3QsaT0wO2k8dS5sZW5ndGg7aSs9MyllLng9dVtpKzBdLGUueT11W2krMV0sZS56PXVbaSsyXSxlLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKHQpLHVbaSswXT1lLngsdVtpKzFdPWUueSx1W2krMl09ZS56fSh0KSxmdW5jdGlvbigpe2Zvcih2YXIgdD1uZXcgQ3QsZT0wO2U8dS5sZW5ndGg7ZSs9Myl0Lng9dVtlKzBdLHQueT11W2UrMV0sdC56PXVbZSsyXSxkLnB1c2goTWF0aC5hdGFuMih0LnosLXQueCkvMi9NYXRoLlBJKy41LDEtKE1hdGguYXRhbjIoLXQueSxNYXRoLnNxcnQodC54KnQueCt0LnoqdC56KSkvTWF0aC5QSSsuNSkpO3Q9bmV3IEN0LGU9bmV3IEN0O2Zvcih2YXIgaT1uZXcgQ3Qsbj1uZXcgQ3Qscj1uZXcgVixhPW5ldyBWLG89bmV3IFYscz0wLGM9MDtzPHUubGVuZ3RoO3MrPTksYys9Nil7dC5zZXQodVtzKzBdLHVbcysxXSx1W3MrMl0pLGUuc2V0KHVbcyszXSx1W3MrNF0sdVtzKzVdKSxpLnNldCh1W3MrNl0sdVtzKzddLHVbcys4XSksci5zZXQoZFtjKzBdLGRbYysxXSksYS5zZXQoZFtjKzJdLGRbYyszXSksby5zZXQoZFtjKzRdLGRbYys1XSksbi5jb3B5KHQpLmFkZChlKS5hZGQoaSkuZGl2aWRlU2NhbGFyKDMpO3ZhciBoPU1hdGguYXRhbjIobi56LC1uLngpO2wocixjKzAsdCxoKSxsKGEsYysyLGUsaCksbChvLGMrNCxpLGgpfWZvcih0PTA7dDxkLmxlbmd0aDt0Kz02KWU9ZFt0KzBdLGk9ZFt0KzJdLG49ZFt0KzRdLHI9TWF0aC5taW4oZSxpLG4pLC45PE1hdGgubWF4KGUsaSxuKSYmcjwuMSYmKGU8LjImJihkW3QrMF0rPTEpLGk8LjImJihkW3QrMl0rPTEpLG48LjImJihkW3QrNF0rPTEpKX0oKSx0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBydCh1LDMpKSx0aGlzLmFkZEF0dHJpYnV0ZSgibm9ybWFsIixuZXcgcnQodS5zbGljZSgpLDMpKSx0aGlzLmFkZEF0dHJpYnV0ZSgidXYiLG5ldyBydChkLDIpKSx0aGlzLm5vcm1hbGl6ZU5vcm1hbHMoKSx0aGlzLmJvdW5kaW5nU3BoZXJlPW5ldyB6dChuZXcgQ3QsdCl9ZnVuY3Rpb24geWUodCxlKXt2ZS5jYWxsKHRoaXMsWzEsMSwxLC0xLC0xLDEsLTEsMSwtMSwxLC0xLC0xXSxbMiwxLDAsMCwzLDIsMSwzLDAsMiwzLDFdLHQsZSksdGhpcy50eXBlPSJUZXRyYWhlZHJvbkJ1ZmZlckdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LGRldGFpbDplfX1mdW5jdGlvbiB4ZSh0LGUpe3N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJUZXRyYWhlZHJvbkdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LGRldGFpbDplfSx0aGlzLmZyb21CdWZmZXJHZW9tZXRyeShuZXcgeWUodCxlKSksdGhpcy5tZXJnZVZlcnRpY2VzKCl9ZnVuY3Rpb24gX2UodCxlKXt2ZS5jYWxsKHRoaXMsWzEsMCwwLC0xLDAsMCwwLDEsMCwwLC0xLDAsMCwwLDEsMCwwLC0xXSxbMCwyLDQsMCw0LDMsMCwzLDUsMCw1LDIsMSwyLDUsMSw1LDMsMSwzLDQsMSw0LDJdLHQsZSksdGhpcy50eXBlPSJPY3RhaGVkcm9uQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzOnQsZGV0YWlsOmV9fWZ1bmN0aW9uIGJlKHQsZSl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9Ik9jdGFoZWRyb25HZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6dCxkZXRhaWw6ZX0sdGhpcy5mcm9tQnVmZmVyR2VvbWV0cnkobmV3IF9lKHQsZSkpLHRoaXMubWVyZ2VWZXJ0aWNlcygpfWZ1bmN0aW9uIHdlKHQsZSl7dmFyIGk9KDErTWF0aC5zcXJ0KDUpKS8yO3ZlLmNhbGwodGhpcyxbLTEsaSwwLDEsaSwwLC0xLC1pLDAsMSwtaSwwLDAsLTEsaSwwLDEsaSwwLC0xLC1pLDAsMSwtaSxpLDAsLTEsaSwwLDEsLWksMCwtMSwtaSwwLDFdLFswLDExLDUsMCw1LDEsMCwxLDcsMCw3LDEwLDAsMTAsMTEsMSw1LDksNSwxMSw0LDExLDEwLDIsMTAsNyw2LDcsMSw4LDMsOSw0LDMsNCwyLDMsMiw2LDMsNiw4LDMsOCw5LDQsOSw1LDIsNCwxMSw2LDIsMTAsOCw2LDcsOSw4LDFdLHQsZSksdGhpcy50eXBlPSJJY29zYWhlZHJvbkJ1ZmZlckdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LGRldGFpbDplfX1mdW5jdGlvbiBNZSh0LGUpe3N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJJY29zYWhlZHJvbkdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LGRldGFpbDplfSx0aGlzLmZyb21CdWZmZXJHZW9tZXRyeShuZXcgd2UodCxlKSksdGhpcy5tZXJnZVZlcnRpY2VzKCl9ZnVuY3Rpb24gRWUodCxlKXt2YXIgaT0oMStNYXRoLnNxcnQoNSkpLzIsbj0xL2k7dmUuY2FsbCh0aGlzLFstMSwtMSwtMSwtMSwtMSwxLC0xLDEsLTEsLTEsMSwxLDEsLTEsLTEsMSwtMSwxLDEsMSwtMSwxLDEsMSwwLC1uLC1pLDAsLW4saSwwLG4sLWksMCxuLGksLW4sLWksMCwtbixpLDAsbiwtaSwwLG4saSwwLC1pLDAsLW4saSwwLC1uLC1pLDAsbixpLDAsbl0sWzMsMTEsNywzLDcsMTUsMywxNSwxMyw3LDE5LDE3LDcsMTcsNiw3LDYsMTUsMTcsNCw4LDE3LDgsMTAsMTcsMTAsNiw4LDAsMTYsOCwxNiwyLDgsMiwxMCwwLDEyLDEsMCwxLDE4LDAsMTgsMTYsNiwxMCwyLDYsMiwxMyw2LDEzLDE1LDIsMTYsMTgsMiwxOCwzLDIsMywxMywxOCwxLDksMTgsOSwxMSwxOCwxMSwzLDQsMTQsMTIsNCwxMiwwLDQsMCw4LDExLDksNSwxMSw1LDE5LDExLDE5LDcsMTksNSwxNCwxOSwxNCw0LDE5LDQsMTcsMSwxMiwxNCwxLDE0LDUsMSw1LDldLHQsZSksdGhpcy50eXBlPSJEb2RlY2FoZWRyb25CdWZmZXJHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6dCxkZXRhaWw6ZX19ZnVuY3Rpb24gVGUodCxlKXtzdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iRG9kZWNhaGVkcm9uR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzOnQsZGV0YWlsOmV9LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBFZSh0LGUpKSx0aGlzLm1lcmdlVmVydGljZXMoKX1mdW5jdGlvbiBTZSh0LGUsaSxuKXtzdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iUG9seWhlZHJvbkdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3ZlcnRpY2VzOnQsaW5kaWNlczplLHJhZGl1czppLGRldGFpbDpufSx0aGlzLmZyb21CdWZmZXJHZW9tZXRyeShuZXcgdmUodCxlLGksbikpLHRoaXMubWVyZ2VWZXJ0aWNlcygpfWZ1bmN0aW9uIEFlKGEsbyxzLGMsdCl7ZnVuY3Rpb24gZSh0KXt2YXIgZT1hLmdldFBvaW50QXQodC9vKSxpPWgubm9ybWFsc1t0XTtmb3IodD1oLmJpbm9ybWFsc1t0XSxsPTA7bDw9YztsKyspe3ZhciBuPWwvYypNYXRoLlBJKjIscj1NYXRoLnNpbihuKTtuPS1NYXRoLmNvcyhuKTtkLng9bippLngrcip0LngsZC55PW4qaS55K3IqdC55LGQuej1uKmkueityKnQueixkLm5vcm1hbGl6ZSgpLGYucHVzaChkLngsZC55LGQueiksdS54PWUueCtzKmQueCx1Lnk9ZS55K3MqZC55LHUuej1lLnorcypkLnoscC5wdXNoKHUueCx1LnksdS56KX19VnQuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlR1YmVCdWZmZXJHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtwYXRoOmEsdHVidWxhclNlZ21lbnRzOm8scmFkaXVzOnMscmFkaWFsU2VnbWVudHM6YyxjbG9zZWQ6dH0sbz1vfHw2NCxzPXN8fDEsYz1jfHw4LHQ9dHx8ITE7dmFyIGg9YS5jb21wdXRlRnJlbmV0RnJhbWVzKG8sdCk7dGhpcy50YW5nZW50cz1oLnRhbmdlbnRzLHRoaXMubm9ybWFscz1oLm5vcm1hbHMsdGhpcy5iaW5vcm1hbHM9aC5iaW5vcm1hbHM7dmFyIG4sbCx1PW5ldyBDdCxkPW5ldyBDdCxpPW5ldyBWLHA9W10sZj1bXSxyPVtdLG09W107Zm9yKG49MDtuPG87bisrKWUobik7Zm9yKGUoITE9PT10P286MCksbj0wO248PW87bisrKWZvcihsPTA7bDw9YztsKyspaS54PW4vbyxpLnk9bC9jLHIucHVzaChpLngsaS55KTshZnVuY3Rpb24oKXtmb3IobD0xO2w8PW87bCsrKWZvcihuPTE7bjw9YztuKyspe3ZhciB0PShjKzEpKmwrKG4tMSksZT0oYysxKSpsK24saT0oYysxKSoobC0xKStuO20ucHVzaCgoYysxKSoobC0xKSsobi0xKSx0LGkpLG0ucHVzaCh0LGUsaSl9fSgpLHRoaXMuc2V0SW5kZXgobmV3KDY1NTM1PG0ubGVuZ3RoP250OmV0KShtLDEpKSx0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBydChwLDMpKSx0aGlzLmFkZEF0dHJpYnV0ZSgibm9ybWFsIixuZXcgcnQoZiwzKSksdGhpcy5hZGRBdHRyaWJ1dGUoInV2IixuZXcgcnQociwyKSl9ZnVuY3Rpb24gTGUodCxlLGksbixyLGEpe3N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJUdWJlR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cGF0aDp0LHR1YnVsYXJTZWdtZW50czplLHJhZGl1czppLHJhZGlhbFNlZ21lbnRzOm4sY2xvc2VkOnJ9LHZvaWQgMCE9PWEmJmNvbnNvbGUud2FybigiVEhSRUUuVHViZUdlb21ldHJ5OiB0YXBlciBoYXMgYmVlbiByZW1vdmVkLiIpLHQ9bmV3IEFlKHQsZSxpLG4sciksdGhpcy50YW5nZW50cz10LnRhbmdlbnRzLHRoaXMubm9ybWFscz10Lm5vcm1hbHMsdGhpcy5iaW5vcm1hbHM9dC5iaW5vcm1hbHMsdGhpcy5mcm9tQnVmZmVyR2VvbWV0cnkodCksdGhpcy5tZXJnZVZlcnRpY2VzKCl9ZnVuY3Rpb24gUmUodCxlLGksbixyLGEpe2Z1bmN0aW9uIG8odCxlLGksbixyKXt2YXIgYT1NYXRoLnNpbih0KTtlPWkvZSp0LGk9TWF0aC5jb3MoZSksci54PW4qKDIraSkqLjUqTWF0aC5jb3ModCksci55PW4qKDIraSkqYSouNSxyLno9bipNYXRoLnNpbihlKSouNX1WdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iVG9ydXNLbm90QnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzOnQsdHViZTplLHR1YnVsYXJTZWdtZW50czppLHJhZGlhbFNlZ21lbnRzOm4scDpyLHE6YX0sdD10fHwxMDAsZT1lfHw0MCxpPU1hdGguZmxvb3IoaSl8fDY0LHI9cnx8MixhPWF8fDM7dmFyIHMsYyxoPSgobj1NYXRoLmZsb29yKG4pfHw4KSsxKSooaSsxKSxsPW5ldyBKKG5ldyg2NTUzNTwobD1uKmkqNik/VWludDMyQXJyYXk6VWludDE2QXJyYXkpKGwpLDEpLHU9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgzKmgpLDMpLGQ9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgzKmgpLDMpLHA9KGg9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgyKmgpLDIpLDApLGY9MCxtPW5ldyBDdCxnPW5ldyBDdCx2PW5ldyBWLHk9bmV3IEN0LHg9bmV3IEN0LF89bmV3IEN0LGI9bmV3IEN0LHc9bmV3IEN0O2ZvcihzPTA7czw9aTsrK3MpZm9yKG8oYz1zL2kqcipNYXRoLlBJKjIscixhLHQseSksbyhjKy4wMSxyLGEsdCx4KSxiLnN1YlZlY3RvcnMoeCx5KSx3LmFkZFZlY3RvcnMoeCx5KSxfLmNyb3NzVmVjdG9ycyhiLHcpLHcuY3Jvc3NWZWN0b3JzKF8sYiksXy5ub3JtYWxpemUoKSx3Lm5vcm1hbGl6ZSgpLGM9MDtjPD1uOysrYyl7dmFyIE09Yy9uKk1hdGguUEkqMixFPS1lKk1hdGguY29zKE0pO009ZSpNYXRoLnNpbihNKTttLng9eS54KyhFKncueCtNKl8ueCksbS55PXkueSsoRSp3LnkrTSpfLnkpLG0uej15LnorKEUqdy56K00qXy56KSx1LnNldFhZWihwLG0ueCxtLnksbS56KSxnLnN1YlZlY3RvcnMobSx5KS5ub3JtYWxpemUoKSxkLnNldFhZWihwLGcueCxnLnksZy56KSx2Lng9cy9pLHYueT1jL24saC5zZXRYWShwLHYueCx2LnkpLHArK31mb3IoYz0xO2M8PWk7YysrKWZvcihzPTE7czw9bjtzKyspdD0obisxKSpjKyhzLTEpLGU9KG4rMSkqYytzLHI9KG4rMSkqKGMtMSkrcyxsLnNldFgoZiwobisxKSooYy0xKSsocy0xKSksZisrLGwuc2V0WChmLHQpLGYrKyxsLnNldFgoZixyKSxmKyssbC5zZXRYKGYsdCksZisrLGwuc2V0WChmLGUpLGYrKyxsLnNldFgoZixyKSxmKys7dGhpcy5zZXRJbmRleChsKSx0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLHUpLHRoaXMuYWRkQXR0cmlidXRlKCJub3JtYWwiLGQpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsaCl9ZnVuY3Rpb24gUGUodCxlLGksbixyLGEsbyl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlRvcnVzS25vdEdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LHR1YmU6ZSx0dWJ1bGFyU2VnbWVudHM6aSxyYWRpYWxTZWdtZW50czpuLHA6cixxOmF9LHZvaWQgMCE9PW8mJmNvbnNvbGUud2FybigiVEhSRUUuVG9ydXNLbm90R2VvbWV0cnk6IGhlaWdodFNjYWxlIGhhcyBiZWVuIGRlcHJlY2F0ZWQuIFVzZSAuc2NhbGUoIHgsIHksIHogKSBpbnN0ZWFkLiIpLHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBSZSh0LGUsaSxuLHIsYSkpLHRoaXMubWVyZ2VWZXJ0aWNlcygpfWZ1bmN0aW9uIENlKHQsZSxpLG4scil7VnQuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlRvcnVzQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzOnQsdHViZTplLHJhZGlhbFNlZ21lbnRzOmksdHVidWxhclNlZ21lbnRzOm4sYXJjOnJ9LHQ9dHx8MTAwLGU9ZXx8NDAsaT1NYXRoLmZsb29yKGkpfHw4LG49TWF0aC5mbG9vcihuKXx8NixyPXJ8fDIqTWF0aC5QSTt2YXIgYSxvLHM9KGkrMSkqKG4rMSksYz1uZXcoNjU1MzU8KGM9aSpuKjYpP1VpbnQzMkFycmF5OlVpbnQxNkFycmF5KShjKSxoPW5ldyBGbG9hdDMyQXJyYXkoMypzKSxsPW5ldyBGbG9hdDMyQXJyYXkoMypzKSx1PShzPW5ldyBGbG9hdDMyQXJyYXkoMipzKSwwKSxkPTAscD0wLGY9bmV3IEN0LG09bmV3IEN0LGc9bmV3IEN0O2ZvcihhPTA7YTw9aTthKyspZm9yKG89MDtvPD1uO28rKyl7dmFyIHY9by9uKnIseT1hL2kqTWF0aC5QSSoyO20ueD0odCtlKk1hdGguY29zKHkpKSpNYXRoLmNvcyh2KSxtLnk9KHQrZSpNYXRoLmNvcyh5KSkqTWF0aC5zaW4odiksbS56PWUqTWF0aC5zaW4oeSksaFt1XT1tLngsaFt1KzFdPW0ueSxoW3UrMl09bS56LGYueD10Kk1hdGguY29zKHYpLGYueT10Kk1hdGguc2luKHYpLGcuc3ViVmVjdG9ycyhtLGYpLm5vcm1hbGl6ZSgpLGxbdV09Zy54LGxbdSsxXT1nLnksbFt1KzJdPWcueixzW2RdPW8vbixzW2QrMV09YS9pLHUrPTMsZCs9Mn1mb3IoYT0xO2E8PWk7YSsrKWZvcihvPTE7bzw9bjtvKyspdD0obisxKSooYS0xKStvLTEsZT0obisxKSooYS0xKStvLHI9KG4rMSkqYStvLGNbcF09KG4rMSkqYStvLTEsY1twKzFdPXQsY1twKzJdPXIsY1twKzNdPXQsY1twKzRdPWUsY1twKzVdPXIscCs9Njt0aGlzLnNldEluZGV4KG5ldyBKKGMsMSkpLHRoaXMuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbmV3IEooaCwzKSksdGhpcy5hZGRBdHRyaWJ1dGUoIm5vcm1hbCIsbmV3IEoobCwzKSksdGhpcy5hZGRBdHRyaWJ1dGUoInV2IixuZXcgSihzLDIpKX1mdW5jdGlvbiBJZSh0LGUsaSxuLHIpe3N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJUb3J1c0dlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LHR1YmU6ZSxyYWRpYWxTZWdtZW50czppLHR1YnVsYXJTZWdtZW50czpuLGFyYzpyfSx0aGlzLmZyb21CdWZmZXJHZW9tZXRyeShuZXcgQ2UodCxlLGksbixyKSl9ZnVuY3Rpb24gVWUodCxlKXt2b2lkIDAhPT10JiYoc3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IkV4dHJ1ZGVHZW9tZXRyeSIsdD1BcnJheS5pc0FycmF5KHQpP3Q6W3RdLHRoaXMuYWRkU2hhcGVMaXN0KHQsZSksdGhpcy5jb21wdXRlRmFjZU5vcm1hbHMoKSl9ZnVuY3Rpb24gTmUodCxlKXt2YXIgaT0oZT1lfHx7fSkuZm9udDtpZighMT09PShpJiZpLmlzRm9udCkpcmV0dXJuIGNvbnNvbGUuZXJyb3IoIlRIUkVFLlRleHRHZW9tZXRyeTogZm9udCBwYXJhbWV0ZXIgaXMgbm90IGFuIGluc3RhbmNlIG9mIFRIUkVFLkZvbnQuIiksbmV3IHN0O2k9aS5nZW5lcmF0ZVNoYXBlcyh0LGUuc2l6ZSxlLmN1cnZlU2VnbWVudHMpLGUuYW1vdW50PXZvaWQgMCE9PWUuaGVpZ2h0P2UuaGVpZ2h0OjUwLHZvaWQgMD09PWUuYmV2ZWxUaGlja25lc3MmJihlLmJldmVsVGhpY2tuZXNzPTEwKSx2b2lkIDA9PT1lLmJldmVsU2l6ZSYmKGUuYmV2ZWxTaXplPTgpLHZvaWQgMD09PWUuYmV2ZWxFbmFibGVkJiYoZS5iZXZlbEVuYWJsZWQ9ITEpLFVlLmNhbGwodGhpcyxpLGUpLHRoaXMudHlwZT0iVGV4dEdlb21ldHJ5In1mdW5jdGlvbiBEZSh0LGUsaSxuLHIsYSxvKXtWdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iU3BoZXJlQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzOnQsd2lkdGhTZWdtZW50czplLGhlaWdodFNlZ21lbnRzOmkscGhpU3RhcnQ6bixwaGlMZW5ndGg6cix0aGV0YVN0YXJ0OmEsdGhldGFMZW5ndGg6b30sdD10fHw1MCxlPU1hdGgubWF4KDMsTWF0aC5mbG9vcihlKXx8OCksaT1NYXRoLm1heCgyLE1hdGguZmxvb3IoaSl8fDYpLG49dm9pZCAwIT09bj9uOjAscj12b2lkIDAhPT1yP3I6MipNYXRoLlBJO2Zvcih2YXIgcz0oYT12b2lkIDAhPT1hP2E6MCkrKG89dm9pZCAwIT09bz9vOk1hdGguUEkpLGM9KGUrMSkqKGkrMSksaD1uZXcgSihuZXcgRmxvYXQzMkFycmF5KDMqYyksMyksbD1uZXcgSihuZXcgRmxvYXQzMkFycmF5KDMqYyksMyksdT0oYz1uZXcgSihuZXcgRmxvYXQzMkFycmF5KDIqYyksMiksMCksZD1bXSxwPW5ldyBDdCxmPTA7Zjw9aTtmKyspe2Zvcih2YXIgbT1bXSxnPWYvaSx2PTA7djw9ZTt2Kyspe3ZhciB5PXYvZSx4PS10Kk1hdGguY29zKG4reSpyKSpNYXRoLnNpbihhK2cqbyksXz10Kk1hdGguY29zKGErZypvKSxiPXQqTWF0aC5zaW4obit5KnIpKk1hdGguc2luKGErZypvKTtwLnNldCh4LF8sYikubm9ybWFsaXplKCksaC5zZXRYWVoodSx4LF8sYiksbC5zZXRYWVoodSxwLngscC55LHAueiksYy5zZXRYWSh1LHksMS1nKSxtLnB1c2godSksdSsrfWQucHVzaChtKX1mb3Iobj1bXSxmPTA7ZjxpO2YrKylmb3Iodj0wO3Y8ZTt2Kyspcj1kW2ZdW3YrMV0sbz1kW2ZdW3ZdLHU9ZFtmKzFdW3ZdLHA9ZFtmKzFdW3YrMV0sKDAhPT1mfHwwPGEpJiZuLnB1c2gocixvLHApLChmIT09aS0xfHxzPE1hdGguUEkpJiZuLnB1c2gobyx1LHApO3RoaXMuc2V0SW5kZXgobmV3KDY1NTM1PGguY291bnQ/bnQ6ZXQpKG4sMSkpLHRoaXMuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsaCksdGhpcy5hZGRBdHRyaWJ1dGUoIm5vcm1hbCIsbCksdGhpcy5hZGRBdHRyaWJ1dGUoInV2IixjKSx0aGlzLmJvdW5kaW5nU3BoZXJlPW5ldyB6dChuZXcgQ3QsdCl9ZnVuY3Rpb24gT2UodCxlLGksbixyLGEsbyl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlNwaGVyZUdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czp0LHdpZHRoU2VnbWVudHM6ZSxoZWlnaHRTZWdtZW50czppLHBoaVN0YXJ0Om4scGhpTGVuZ3RoOnIsdGhldGFTdGFydDphLHRoZXRhTGVuZ3RoOm99LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBEZSh0LGUsaSxuLHIsYSxvKSl9ZnVuY3Rpb24gRmUodCxlLGksbixyLGEpe1Z0LmNhbGwodGhpcyksdGhpcy50eXBlPSJSaW5nQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17aW5uZXJSYWRpdXM6dCxvdXRlclJhZGl1czplLHRoZXRhU2VnbWVudHM6aSxwaGlTZWdtZW50czpuLHRoZXRhU3RhcnQ6cix0aGV0YUxlbmd0aDphfSx0PXR8fDIwLGU9ZXx8NTAscj12b2lkIDAhPT1yP3I6MCxhPXZvaWQgMCE9PWE/YToyKk1hdGguUEk7dmFyIG8scyxjPSgoaT12b2lkIDAhPT1pP01hdGgubWF4KDMsaSk6OCkrMSkqKChuPXZvaWQgMCE9PW4/TWF0aC5tYXgoMSxuKToxKSsxKSxoPW5ldyBKKG5ldyg2NTUzNTwoaD1pKm4qNik/VWludDMyQXJyYXk6VWludDE2QXJyYXkpKGgpLDEpLGw9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgzKmMpLDMpLHU9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgzKmMpLDMpLGQ9KGM9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgyKmMpLDIpLDApLHA9MCxmPXQsbT0oZS10KS9uLGc9bmV3IEN0LHY9bmV3IFY7Zm9yKHQ9MDt0PD1uO3QrKyl7Zm9yKHM9MDtzPD1pO3MrKylvPXIrcy9pKmEsZy54PWYqTWF0aC5jb3MobyksZy55PWYqTWF0aC5zaW4obyksbC5zZXRYWVooZCxnLngsZy55LGcueiksdS5zZXRYWVooZCwwLDAsMSksdi54PShnLngvZSsxKS8yLHYueT0oZy55L2UrMSkvMixjLnNldFhZKGQsdi54LHYueSksZCsrO2YrPW19Zm9yKHQ9MDt0PG47dCsrKWZvcihlPXQqKGkrMSkscz0wO3M8aTtzKyspcj1vPXMrZSxhPW8raSsxLGQ9bytpKzIsbys9MSxoLnNldFgocCxyKSxwKyssaC5zZXRYKHAsYSkscCsrLGguc2V0WChwLGQpLHArKyxoLnNldFgocCxyKSxwKyssaC5zZXRYKHAsZCkscCsrLGguc2V0WChwLG8pLHArKzt0aGlzLnNldEluZGV4KGgpLHRoaXMuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbCksdGhpcy5hZGRBdHRyaWJ1dGUoIm5vcm1hbCIsdSksdGhpcy5hZGRBdHRyaWJ1dGUoInV2IixjKX1mdW5jdGlvbiB6ZSh0LGUsaSxuLHIsYSl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlJpbmdHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtpbm5lclJhZGl1czp0LG91dGVyUmFkaXVzOmUsdGhldGFTZWdtZW50czppLHBoaVNlZ21lbnRzOm4sdGhldGFTdGFydDpyLHRoZXRhTGVuZ3RoOmF9LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBGZSh0LGUsaSxuLHIsYSkpfWZ1bmN0aW9uIEJlKHQsZSxpLG4pe3N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJQbGFuZUdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3dpZHRoOnQsaGVpZ2h0OmUsd2lkdGhTZWdtZW50czppLGhlaWdodFNlZ21lbnRzOm59LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBXdCh0LGUsaSxuKSl9ZnVuY3Rpb24gR2UodCxlLGksbil7VnQuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IkxhdGhlQnVmZmVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cG9pbnRzOnQsc2VnbWVudHM6ZSxwaGlTdGFydDppLHBoaUxlbmd0aDpufSxlPU1hdGguZmxvb3IoZSl8fDEyLGk9aXx8MCxuPW58fDIqTWF0aC5QSSxuPWVyLmNsYW1wKG4sMCwyKk1hdGguUEkpO3ZhciByPShlKzEpKnQubGVuZ3RoLGE9bmV3IEoobmV3KDY1NTM1PChwPWUqdC5sZW5ndGgqNik/VWludDMyQXJyYXk6VWludDE2QXJyYXkpKHApLDEpLG89bmV3IEoobmV3IEZsb2F0MzJBcnJheSgzKnIpLDMpLHM9bmV3IEoobmV3IEZsb2F0MzJBcnJheSgyKnIpLDIpLGM9MCxoPTAsbD0xL2UsdT1uZXcgQ3QsZD1uZXcgVjtmb3Iocj0wO3I8PWU7cisrKXt2YXIgcD1pK3IqbCpuLGY9TWF0aC5zaW4ocCksbT1NYXRoLmNvcyhwKTtmb3IocD0wO3A8PXQubGVuZ3RoLTE7cCsrKXUueD10W3BdLngqZix1Lnk9dFtwXS55LHUuej10W3BdLngqbSxvLnNldFhZWihjLHUueCx1LnksdS56KSxkLng9ci9lLGQueT1wLyh0Lmxlbmd0aC0xKSxzLnNldFhZKGMsZC54LGQueSksYysrfWZvcihyPTA7cjxlO3IrKylmb3IocD0wO3A8dC5sZW5ndGgtMTtwKyspYz0oaT1wK3IqdC5sZW5ndGgpK3QubGVuZ3RoLGw9aSt0Lmxlbmd0aCsxLHU9aSsxLGEuc2V0WChoLGkpLGgrKyxhLnNldFgoaCxjKSxoKyssYS5zZXRYKGgsdSksaCsrLGEuc2V0WChoLGMpLGgrKyxhLnNldFgoaCxsKSxoKyssYS5zZXRYKGgsdSksaCsrO2lmKHRoaXMuc2V0SW5kZXgoYSksdGhpcy5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixvKSx0aGlzLmFkZEF0dHJpYnV0ZSgidXYiLHMpLHRoaXMuY29tcHV0ZVZlcnRleE5vcm1hbHMoKSxuPT09MipNYXRoLlBJKWZvcihuPXRoaXMuYXR0cmlidXRlcy5ub3JtYWwuYXJyYXksYT1uZXcgQ3Qsbz1uZXcgQ3Qscz1uZXcgQ3QsaT1lKnQubGVuZ3RoKjMscD1yPTA7cjx0Lmxlbmd0aDtyKysscCs9MylhLng9bltwKzBdLGEueT1uW3ArMV0sYS56PW5bcCsyXSxvLng9bltpK3ArMF0sby55PW5baStwKzFdLG8uej1uW2krcCsyXSxzLmFkZFZlY3RvcnMoYSxvKS5ub3JtYWxpemUoKSxuW3ArMF09bltpK3ArMF09cy54LG5bcCsxXT1uW2krcCsxXT1zLnksbltwKzJdPW5baStwKzJdPXMuen1mdW5jdGlvbiBIZSh0LGUsaSxuKXtzdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iTGF0aGVHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtwb2ludHM6dCxzZWdtZW50czplLHBoaVN0YXJ0OmkscGhpTGVuZ3RoOm59LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBHZSh0LGUsaSxuKSksdGhpcy5tZXJnZVZlcnRpY2VzKCl9ZnVuY3Rpb24gVmUodCxzKXtmdW5jdGlvbiBlKHQpe3ZhciBlLGksbj1jLmxlbmd0aC8zLHI9KHQ9dC5leHRyYWN0UG9pbnRzKHMpKS5zaGFwZSxhPXQuaG9sZXM7aWYoITE9PT14by5pc0Nsb2NrV2lzZShyKSlmb3Iocj1yLnJldmVyc2UoKSx0PTAsZT1hLmxlbmd0aDt0PGU7dCsrKWk9YVt0XSwhMD09PXhvLmlzQ2xvY2tXaXNlKGkpJiYoYVt0XT1pLnJldmVyc2UoKSk7dmFyIG89eG8udHJpYW5ndWxhdGVTaGFwZShyLGEpO2Zvcih0PTAsZT1hLmxlbmd0aDt0PGU7dCsrKWk9YVt0XSxyPXIuY29uY2F0KGkpO2Zvcih0PTAsZT1yLmxlbmd0aDt0PGU7dCsrKWk9clt0XSxjLnB1c2goaS54LGkueSwwKSxoLnB1c2goMCwwLDEpLGwucHVzaChpLngsaS55KTtmb3IodD0wLGU9by5sZW5ndGg7dDxlO3QrKylyPW9bdF0sdS5wdXNoKHJbMF0rbixyWzFdK24sclsyXStuKSxkKz0zfVZ0LmNhbGwodGhpcyksdGhpcy50eXBlPSJTaGFwZUJ1ZmZlckdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3NoYXBlczp0LGN1cnZlU2VnbWVudHM6c30scz1zfHwxMjt2YXIgYz1bXSxoPVtdLGw9W10sdT1bXSxpPTAsZD0wO2lmKCExPT09QXJyYXkuaXNBcnJheSh0KSllKHQpO2Vsc2UgZm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspZSh0W25dKSx0aGlzLmFkZEdyb3VwKGksZCxuKSxpKz1kLGQ9MDt0aGlzLnNldEluZGV4KG5ldyg2NTUzNTx1Lmxlbmd0aD9udDpldCkodSwxKSksdGhpcy5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQoYywzKSksdGhpcy5hZGRBdHRyaWJ1dGUoIm5vcm1hbCIsbmV3IHJ0KGgsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsbmV3IHJ0KGwsMikpfWZ1bmN0aW9uIGtlKHQsZSl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IlNoYXBlR2VvbWV0cnkiLCJvYmplY3QiPT10eXBlb2YgZSYmKGNvbnNvbGUud2FybigiVEhSRUUuU2hhcGVHZW9tZXRyeTogT3B0aW9ucyBwYXJhbWV0ZXIgaGFzIGJlZW4gcmVtb3ZlZC4iKSxlPWUuY3VydmVTZWdtZW50cyksdGhpcy5wYXJhbWV0ZXJzPXtzaGFwZXM6dCxjdXJ2ZVNlZ21lbnRzOmV9LHRoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBWZSh0LGUpKSx0aGlzLm1lcmdlVmVydGljZXMoKX1mdW5jdGlvbiBqZSh0LGUpe2Z1bmN0aW9uIGkodCxlKXtyZXR1cm4gdC1lfVZ0LmNhbGwodGhpcyk7dmFyIG4scj1NYXRoLmNvcyhlci5ERUcyUkFEKih2b2lkIDAhPT1lP2U6MSkpLGE9WzAsMF0sbz17fSxzPVsiYSIsImIiLCJjIl07dC5pc0J1ZmZlckdlb21ldHJ5PyhuPW5ldyBzdCkuZnJvbUJ1ZmZlckdlb21ldHJ5KHQpOm49dC5jbG9uZSgpLG4ubWVyZ2VWZXJ0aWNlcygpLG4uY29tcHV0ZUZhY2VOb3JtYWxzKCk7Zm9yKHZhciBjPW4udmVydGljZXMsaD0wLGw9KG49bi5mYWNlcykubGVuZ3RoO2g8bDtoKyspZm9yKHZhciB1PW5baF0sZD0wO2Q8MztkKyspe2FbMF09dVtzW2RdXSxhWzFdPXVbc1soZCsxKSUzXV0sYS5zb3J0KGkpO3ZhciBwPWEudG9TdHJpbmcoKTt2b2lkIDA9PT1vW3BdP29bcF09e3ZlcnQxOmFbMF0sdmVydDI6YVsxXSxmYWNlMTpoLGZhY2UyOnZvaWQgMH06b1twXS5mYWNlMj1ofWZvcihwIGluIGE9W10sbykodm9pZCAwPT09KHM9b1twXSkuZmFjZTJ8fG5bcy5mYWNlMV0ubm9ybWFsLmRvdChuW3MuZmFjZTJdLm5vcm1hbCk8PXIpJiYoaD1jW3MudmVydDFdLGEucHVzaChoLngpLGEucHVzaChoLnkpLGEucHVzaChoLnopLGg9Y1tzLnZlcnQyXSxhLnB1c2goaC54KSxhLnB1c2goaC55KSxhLnB1c2goaC56KSk7dGhpcy5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQoYSwzKSl9ZnVuY3Rpb24gV2UoZCxwLGYsbSxnLHQsdix5KXtmdW5jdGlvbiBlKHQpe3ZhciBlLGksbixyPW5ldyBWLGE9bmV3IEN0LG89MCxzPSEwPT09dD9kOnAsYz0hMD09PXQ/MTotMTtmb3IoaT1FLGU9MTtlPD1tO2UrKyliLnNldFhZWihFLDAsQSpjLDApLHcuc2V0WFlaKEUsMCxjLDApLHIueD0uNSxyLnk9LjUsTS5zZXRYWShFLHIueCxyLnkpLEUrKztmb3Iobj1FLGU9MDtlPD1tO2UrKyl7dmFyIGg9ZS9tKnkrdixsPU1hdGguY29zKGgpO2g9TWF0aC5zaW4oaCk7YS54PXMqaCxhLnk9QSpjLGEuej1zKmwsYi5zZXRYWVooRSxhLngsYS55LGEueiksdy5zZXRYWVooRSwwLGMsMCksci54PS41KmwrLjUsci55PS41KmgqYysuNSxNLnNldFhZKEUsci54LHIueSksRSsrfWZvcihlPTA7ZTxtO2UrKylyPWkrZSxhPW4rZSwhMD09PXQ/KF8uc2V0WChULGEpLFQrKyxfLnNldFgoVCxhKzEpKTooXy5zZXRYKFQsYSsxKSxUKyssXy5zZXRYKFQsYSkpLFQrKyxfLnNldFgoVCxyKSxUKyssbys9Mzt4LmFkZEdyb3VwKEwsbywhMD09PXQ/MToyKSxMKz1vfVZ0LmNhbGwodGhpcyksdGhpcy50eXBlPSJDeWxpbmRlckJ1ZmZlckdlb21ldHJ5Iix0aGlzLnBhcmFtZXRlcnM9e3JhZGl1c1RvcDpkLHJhZGl1c0JvdHRvbTpwLGhlaWdodDpmLHJhZGlhbFNlZ21lbnRzOm0saGVpZ2h0U2VnbWVudHM6ZyxvcGVuRW5kZWQ6dCx0aGV0YVN0YXJ0OnYsdGhldGFMZW5ndGg6eX07dmFyIHg9dGhpcztkPXZvaWQgMCE9PWQ/ZDoyMCxwPXZvaWQgMCE9PXA/cDoyMCxmPXZvaWQgMCE9PWY/ZjoxMDAsbT1NYXRoLmZsb29yKG0pfHw4LGc9TWF0aC5mbG9vcihnKXx8MSx0PXZvaWQgMCE9PXQmJnQsdj12b2lkIDAhPT12P3Y6MCx5PXZvaWQgMCE9PXk/eToyKk1hdGguUEk7dmFyIGk9MDshMT09PXQmJigwPGQmJmkrKywwPHAmJmkrKyk7dmFyIG4scixhPShyPShtKzEpKihnKzEpLCExPT09dCYmKHIrPShtKzEpKmkrbSppKSxyKSxvPShuPW0qZyo2LCExPT09dCYmKG4rPW0qaSozKSxuKSxfPW5ldyBKKG5ldyg2NTUzNTxvP1VpbnQzMkFycmF5OlVpbnQxNkFycmF5KShvKSwxKSxiPW5ldyBKKG5ldyBGbG9hdDMyQXJyYXkoMyphKSwzKSx3PW5ldyBKKG5ldyBGbG9hdDMyQXJyYXkoMyphKSwzKSxNPW5ldyBKKG5ldyBGbG9hdDMyQXJyYXkoMiphKSwyKSxFPTAsVD0wLFM9W10sQT1mLzIsTD0wOyFmdW5jdGlvbigpe3ZhciB0LGUsaT1uZXcgQ3Qsbj1uZXcgQ3Qscj0wLGE9KHAtZCkvZjtmb3IoZT0wO2U8PWc7ZSsrKXt2YXIgbz1bXSxzPWUvZyxjPXMqKHAtZCkrZDtmb3IodD0wO3Q8PW07dCsrKXt2YXIgaD10L20sbD1oKnkrdix1PU1hdGguc2luKGwpO2w9TWF0aC5jb3MobCk7bi54PWMqdSxuLnk9LXMqZitBLG4uej1jKmwsYi5zZXRYWVooRSxuLngsbi55LG4ueiksaS5zZXQodSxhLGwpLm5vcm1hbGl6ZSgpLHcuc2V0WFlaKEUsaS54LGkueSxpLnopLE0uc2V0WFkoRSxoLDEtcyksby5wdXNoKEUpLEUrK31TLnB1c2gobyl9Zm9yKHQ9MDt0PG07dCsrKWZvcihlPTA7ZTxnO2UrKylpPVNbZSsxXVt0XSxuPVNbZSsxXVt0KzFdLGE9U1tlXVt0KzFdLF8uc2V0WChULFNbZV1bdF0pLFQrKyxfLnNldFgoVCxpKSxUKyssXy5zZXRYKFQsYSksVCsrLF8uc2V0WChULGkpLFQrKyxfLnNldFgoVCxuKSxUKyssXy5zZXRYKFQsYSksVCsrLHIrPTY7eC5hZGRHcm91cChMLHIsMCksTCs9cn0oKSwhMT09PXQmJigwPGQmJmUoITApLDA8cCYmZSghMSkpLHRoaXMuc2V0SW5kZXgoXyksdGhpcy5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixiKSx0aGlzLmFkZEF0dHJpYnV0ZSgibm9ybWFsIix3KSx0aGlzLmFkZEF0dHJpYnV0ZSgidXYiLE0pfWZ1bmN0aW9uIFhlKHQsZSxpLG4scixhLG8scyl7c3QuY2FsbCh0aGlzKSx0aGlzLnR5cGU9IkN5bGluZGVyR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzVG9wOnQscmFkaXVzQm90dG9tOmUsaGVpZ2h0OmkscmFkaWFsU2VnbWVudHM6bixoZWlnaHRTZWdtZW50czpyLG9wZW5FbmRlZDphLHRoZXRhU3RhcnQ6byx0aGV0YUxlbmd0aDpzfSx0aGlzLmZyb21CdWZmZXJHZW9tZXRyeShuZXcgV2UodCxlLGksbixyLGEsbyxzKSksdGhpcy5tZXJnZVZlcnRpY2VzKCl9ZnVuY3Rpb24gWWUodCxlLGksbixyLGEsbyl7WGUuY2FsbCh0aGlzLDAsdCxlLGksbixyLGEsbyksdGhpcy50eXBlPSJDb25lR2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17cmFkaXVzOnQsaGVpZ2h0OmUscmFkaWFsU2VnbWVudHM6aSxoZWlnaHRTZWdtZW50czpuLG9wZW5FbmRlZDpyLHRoZXRhU3RhcnQ6YSx0aGV0YUxlbmd0aDpvfX1mdW5jdGlvbiBxZSh0LGUsaSxuLHIsYSxvKXtXZS5jYWxsKHRoaXMsMCx0LGUsaSxuLHIsYSxvKSx0aGlzLnR5cGU9IkNvbmVCdWZmZXJHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6dCxoZWlnaHQ6ZSxyYWRpYWxTZWdtZW50czppLGhlaWdodFNlZ21lbnRzOm4sb3BlbkVuZGVkOnIsdGhldGFTdGFydDphLHRoZXRhTGVuZ3RoOm99fWZ1bmN0aW9uIFplKHQsZSxpLG4pe1Z0LmNhbGwodGhpcyksdGhpcy50eXBlPSJDaXJjbGVCdWZmZXJHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6dCxzZWdtZW50czplLHRoZXRhU3RhcnQ6aSx0aGV0YUxlbmd0aDpufSx0PXR8fDUwLGU9dm9pZCAwIT09ZT9NYXRoLm1heCgzLGUpOjgsaT12b2lkIDAhPT1pP2k6MCxuPXZvaWQgMCE9PW4/bjoyKk1hdGguUEk7dmFyIHI9ZSsyLGE9bmV3IEZsb2F0MzJBcnJheSgzKnIpLG89bmV3IEZsb2F0MzJBcnJheSgzKnIpO3I9bmV3IEZsb2F0MzJBcnJheSgyKnIpO29bMl09MSxyWzBdPS41LHJbMV09LjU7Zm9yKHZhciBzPTAsYz0zLGg9MjtzPD1lO3MrKyxjKz0zLGgrPTIpe3ZhciBsPWkrcy9lKm47YVtjXT10Kk1hdGguY29zKGwpLGFbYysxXT10Kk1hdGguc2luKGwpLG9bYysyXT0xLHJbaF09KGFbY10vdCsxKS8yLHJbaCsxXT0oYVtjKzFdL3QrMSkvMn1mb3IoaT1bXSxjPTE7Yzw9ZTtjKyspaS5wdXNoKGMsYysxLDApO3RoaXMuc2V0SW5kZXgobmV3IEoobmV3IFVpbnQxNkFycmF5KGkpLDEpKSx0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBKKGEsMykpLHRoaXMuYWRkQXR0cmlidXRlKCJub3JtYWwiLG5ldyBKKG8sMykpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsbmV3IEoociwyKSksdGhpcy5ib3VuZGluZ1NwaGVyZT1uZXcgenQobmV3IEN0LHQpfWZ1bmN0aW9uIEplKHQsZSxpLG4pe3N0LmNhbGwodGhpcyksdGhpcy50eXBlPSJDaXJjbGVHZW9tZXRyeSIsdGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6dCxzZWdtZW50czplLHRoZXRhU3RhcnQ6aSx0aGV0YUxlbmd0aDpufSx0aGlzLmZyb21CdWZmZXJHZW9tZXRyeShuZXcgWmUodCxlLGksbikpfWZ1bmN0aW9uIFFlKHQsZSxpLG4scixhKXtzdC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iQm94R2VvbWV0cnkiLHRoaXMucGFyYW1ldGVycz17d2lkdGg6dCxoZWlnaHQ6ZSxkZXB0aDppLHdpZHRoU2VnbWVudHM6bixoZWlnaHRTZWdtZW50czpyLGRlcHRoU2VnbWVudHM6YX0sdGhpcy5mcm9tQnVmZmVyR2VvbWV0cnkobmV3IGp0KHQsZSxpLG4scixhKSksdGhpcy5tZXJnZVZlcnRpY2VzKCl9ZnVuY3Rpb24gS2UoKXtGdC5jYWxsKHRoaXMse3VuaWZvcm1zOkxyLm1lcmdlKFtVci5saWdodHMse29wYWNpdHk6e3ZhbHVlOjF9fV0pLHZlcnRleFNoYWRlcjpSci5zaGFkb3dfdmVydCxmcmFnbWVudFNoYWRlcjpSci5zaGFkb3dfZnJhZ30pLHRoaXMudHJhbnNwYXJlbnQ9dGhpcy5saWdodHM9ITAsT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcyx7b3BhY2l0eTp7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51bmlmb3Jtcy5vcGFjaXR5LnZhbHVlfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy51bmlmb3Jtcy5vcGFjaXR5LnZhbHVlPXR9fX0pfWZ1bmN0aW9uICRlKHQpe0Z0LmNhbGwodGhpcyx0KSx0aGlzLnR5cGU9IlJhd1NoYWRlck1hdGVyaWFsIn1mdW5jdGlvbiB0aSh0KXt0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy50eXBlPSJNdWx0aU1hdGVyaWFsIix0aGlzLm1hdGVyaWFscz1BcnJheS5pc0FycmF5KHQpP3Q6W10sdGhpcy52aXNpYmxlPSEwfWZ1bmN0aW9uIGVpKHQpe04uY2FsbCh0aGlzKSx0aGlzLmRlZmluZXM9e1NUQU5EQVJEOiIifSx0aGlzLnR5cGU9Ik1lc2hTdGFuZGFyZE1hdGVyaWFsIix0aGlzLmNvbG9yPW5ldyBOdCgxNjc3NzIxNSksdGhpcy5tZXRhbG5lc3M9dGhpcy5yb3VnaG5lc3M9LjUsdGhpcy5saWdodE1hcD10aGlzLm1hcD1udWxsLHRoaXMubGlnaHRNYXBJbnRlbnNpdHk9MSx0aGlzLmFvTWFwPW51bGwsdGhpcy5hb01hcEludGVuc2l0eT0xLHRoaXMuZW1pc3NpdmU9bmV3IE50KDApLHRoaXMuZW1pc3NpdmVJbnRlbnNpdHk9MSx0aGlzLmJ1bXBNYXA9dGhpcy5lbWlzc2l2ZU1hcD1udWxsLHRoaXMuYnVtcFNjYWxlPTEsdGhpcy5ub3JtYWxNYXA9bnVsbCx0aGlzLm5vcm1hbFNjYWxlPW5ldyBWKDEsMSksdGhpcy5kaXNwbGFjZW1lbnRNYXA9bnVsbCx0aGlzLmRpc3BsYWNlbWVudFNjYWxlPTEsdGhpcy5kaXNwbGFjZW1lbnRCaWFzPTAsdGhpcy5lbnZNYXA9dGhpcy5hbHBoYU1hcD10aGlzLm1ldGFsbmVzc01hcD10aGlzLnJvdWdobmVzc01hcD1udWxsLHRoaXMuZW52TWFwSW50ZW5zaXR5PTEsdGhpcy5yZWZyYWN0aW9uUmF0aW89Ljk4LHRoaXMud2lyZWZyYW1lPSExLHRoaXMud2lyZWZyYW1lTGluZXdpZHRoPTEsdGhpcy53aXJlZnJhbWVMaW5lam9pbj10aGlzLndpcmVmcmFtZUxpbmVjYXA9InJvdW5kIix0aGlzLm1vcnBoTm9ybWFscz10aGlzLm1vcnBoVGFyZ2V0cz10aGlzLnNraW5uaW5nPSExLHRoaXMuc2V0VmFsdWVzKHQpfWZ1bmN0aW9uIGlpKHQpe2VpLmNhbGwodGhpcyksdGhpcy5kZWZpbmVzPXtQSFlTSUNBTDoiIn0sdGhpcy50eXBlPSJNZXNoUGh5c2ljYWxNYXRlcmlhbCIsdGhpcy5yZWZsZWN0aXZpdHk9LjUsdGhpcy5jbGVhckNvYXRSb3VnaG5lc3M9dGhpcy5jbGVhckNvYXQ9MCx0aGlzLnNldFZhbHVlcyh0KX1mdW5jdGlvbiBuaSh0KXtOLmNhbGwodGhpcyksdGhpcy50eXBlPSJNZXNoUGhvbmdNYXRlcmlhbCIsdGhpcy5jb2xvcj1uZXcgTnQoMTY3NzcyMTUpLHRoaXMuc3BlY3VsYXI9bmV3IE50KDExMTg0ODEpLHRoaXMuc2hpbmluZXNzPTMwLHRoaXMubGlnaHRNYXA9dGhpcy5tYXA9bnVsbCx0aGlzLmxpZ2h0TWFwSW50ZW5zaXR5PTEsdGhpcy5hb01hcD1udWxsLHRoaXMuYW9NYXBJbnRlbnNpdHk9MSx0aGlzLmVtaXNzaXZlPW5ldyBOdCgwKSx0aGlzLmVtaXNzaXZlSW50ZW5zaXR5PTEsdGhpcy5idW1wTWFwPXRoaXMuZW1pc3NpdmVNYXA9bnVsbCx0aGlzLmJ1bXBTY2FsZT0xLHRoaXMubm9ybWFsTWFwPW51bGwsdGhpcy5ub3JtYWxTY2FsZT1uZXcgVigxLDEpLHRoaXMuZGlzcGxhY2VtZW50TWFwPW51bGwsdGhpcy5kaXNwbGFjZW1lbnRTY2FsZT0xLHRoaXMuZGlzcGxhY2VtZW50Qmlhcz0wLHRoaXMuZW52TWFwPXRoaXMuYWxwaGFNYXA9dGhpcy5zcGVjdWxhck1hcD1udWxsLHRoaXMuY29tYmluZT0wLHRoaXMucmVmbGVjdGl2aXR5PTEsdGhpcy5yZWZyYWN0aW9uUmF0aW89Ljk4LHRoaXMud2lyZWZyYW1lPSExLHRoaXMud2lyZWZyYW1lTGluZXdpZHRoPTEsdGhpcy53aXJlZnJhbWVMaW5lam9pbj10aGlzLndpcmVmcmFtZUxpbmVjYXA9InJvdW5kIix0aGlzLm1vcnBoTm9ybWFscz10aGlzLm1vcnBoVGFyZ2V0cz10aGlzLnNraW5uaW5nPSExLHRoaXMuc2V0VmFsdWVzKHQpfWZ1bmN0aW9uIHJpKHQpe25pLmNhbGwodGhpcyksdGhpcy5kZWZpbmVzPXtUT09OOiIifSx0aGlzLnR5cGU9Ik1lc2hUb29uTWF0ZXJpYWwiLHRoaXMuZ3JhZGllbnRNYXA9bnVsbCx0aGlzLnNldFZhbHVlcyh0KX1mdW5jdGlvbiBhaSh0KXtOLmNhbGwodGhpcyx0KSx0aGlzLnR5cGU9Ik1lc2hOb3JtYWxNYXRlcmlhbCIsdGhpcy5idW1wTWFwPW51bGwsdGhpcy5idW1wU2NhbGU9MSx0aGlzLm5vcm1hbE1hcD1udWxsLHRoaXMubm9ybWFsU2NhbGU9bmV3IFYoMSwxKSx0aGlzLmRpc3BsYWNlbWVudE1hcD1udWxsLHRoaXMuZGlzcGxhY2VtZW50U2NhbGU9MSx0aGlzLmRpc3BsYWNlbWVudEJpYXM9MCx0aGlzLndpcmVmcmFtZT0hMSx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD0xLHRoaXMubW9ycGhOb3JtYWxzPXRoaXMubW9ycGhUYXJnZXRzPXRoaXMuc2tpbm5pbmc9dGhpcy5saWdodHM9dGhpcy5mb2c9ITEsdGhpcy5zZXRWYWx1ZXModCl9ZnVuY3Rpb24gb2kodCl7Ti5jYWxsKHRoaXMpLHRoaXMudHlwZT0iTWVzaExhbWJlcnRNYXRlcmlhbCIsdGhpcy5jb2xvcj1uZXcgTnQoMTY3NzcyMTUpLHRoaXMubGlnaHRNYXA9dGhpcy5tYXA9bnVsbCx0aGlzLmxpZ2h0TWFwSW50ZW5zaXR5PTEsdGhpcy5hb01hcD1udWxsLHRoaXMuYW9NYXBJbnRlbnNpdHk9MSx0aGlzLmVtaXNzaXZlPW5ldyBOdCgwKSx0aGlzLmVtaXNzaXZlSW50ZW5zaXR5PTEsdGhpcy5lbnZNYXA9dGhpcy5hbHBoYU1hcD10aGlzLnNwZWN1bGFyTWFwPXRoaXMuZW1pc3NpdmVNYXA9bnVsbCx0aGlzLmNvbWJpbmU9MCx0aGlzLnJlZmxlY3Rpdml0eT0xLHRoaXMucmVmcmFjdGlvblJhdGlvPS45OCx0aGlzLndpcmVmcmFtZT0hMSx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD0xLHRoaXMud2lyZWZyYW1lTGluZWpvaW49dGhpcy53aXJlZnJhbWVMaW5lY2FwPSJyb3VuZCIsdGhpcy5tb3JwaE5vcm1hbHM9dGhpcy5tb3JwaFRhcmdldHM9dGhpcy5za2lubmluZz0hMSx0aGlzLnNldFZhbHVlcyh0KX1mdW5jdGlvbiBzaSh0KXtOLmNhbGwodGhpcyksdGhpcy50eXBlPSJMaW5lRGFzaGVkTWF0ZXJpYWwiLHRoaXMuY29sb3I9bmV3IE50KDE2Nzc3MjE1KSx0aGlzLnNjYWxlPXRoaXMubGluZXdpZHRoPTEsdGhpcy5kYXNoU2l6ZT0zLHRoaXMuZ2FwU2l6ZT0xLHRoaXMubGlnaHRzPSExLHRoaXMuc2V0VmFsdWVzKHQpfWZ1bmN0aW9uIGNpKHQsZSxpKXt2YXIgbj10aGlzLHI9ITEsYT0wLG89MDt0aGlzLm9uU3RhcnQ9dm9pZCAwLHRoaXMub25Mb2FkPXQsdGhpcy5vblByb2dyZXNzPWUsdGhpcy5vbkVycm9yPWksdGhpcy5pdGVtU3RhcnQ9ZnVuY3Rpb24odCl7bysrLCExPT09ciYmdm9pZCAwIT09bi5vblN0YXJ0JiZuLm9uU3RhcnQodCxhLG8pLHI9ITB9LHRoaXMuaXRlbUVuZD1mdW5jdGlvbih0KXthKyssdm9pZCAwIT09bi5vblByb2dyZXNzJiZuLm9uUHJvZ3Jlc3ModCxhLG8pLGE9PT1vJiYocj0hMSx2b2lkIDAhPT1uLm9uTG9hZCkmJm4ub25Mb2FkKCl9LHRoaXMuaXRlbUVycm9yPWZ1bmN0aW9uKHQpe3ZvaWQgMCE9PW4ub25FcnJvciYmbi5vbkVycm9yKHQpfX1mdW5jdGlvbiBoaSh0KXt0aGlzLm1hbmFnZXI9dm9pZCAwIT09dD90Ok1vfWZ1bmN0aW9uIGxpKHQpe3RoaXMubWFuYWdlcj12b2lkIDAhPT10P3Q6TW8sdGhpcy5fcGFyc2VyPW51bGx9ZnVuY3Rpb24gdWkodCl7dGhpcy5tYW5hZ2VyPXZvaWQgMCE9PXQ/dDpNbyx0aGlzLl9wYXJzZXI9bnVsbH1mdW5jdGlvbiBkaSh0KXt0aGlzLm1hbmFnZXI9dm9pZCAwIT09dD90Ok1vfWZ1bmN0aW9uIHBpKHQpe3RoaXMubWFuYWdlcj12b2lkIDAhPT10P3Q6TW99ZnVuY3Rpb24gZmkodCl7dGhpcy5tYW5hZ2VyPXZvaWQgMCE9PXQ/dDpNb31mdW5jdGlvbiBtaSh0LGUpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9IkxpZ2h0Iix0aGlzLmNvbG9yPW5ldyBOdCh0KSx0aGlzLmludGVuc2l0eT12b2lkIDAhPT1lP2U6MSx0aGlzLnJlY2VpdmVTaGFkb3c9dm9pZCAwfWZ1bmN0aW9uIGdpKHQsZSxpKXttaS5jYWxsKHRoaXMsdCxpKSx0aGlzLnR5cGU9IkhlbWlzcGhlcmVMaWdodCIsdGhpcy5jYXN0U2hhZG93PXZvaWQgMCx0aGlzLnBvc2l0aW9uLmNvcHkoWC5EZWZhdWx0VXApLHRoaXMudXBkYXRlTWF0cml4KCksdGhpcy5ncm91bmRDb2xvcj1uZXcgTnQoZSl9ZnVuY3Rpb24gdmkodCl7dGhpcy5jYW1lcmE9dCx0aGlzLmJpYXM9MCx0aGlzLnJhZGl1cz0xLHRoaXMubWFwU2l6ZT1uZXcgVig1MTIsNTEyKSx0aGlzLm1hcD1udWxsLHRoaXMubWF0cml4PW5ldyBJdH1mdW5jdGlvbiB5aSgpe3ZpLmNhbGwodGhpcyxuZXcgWHQoNTAsMSwuNSw1MDApKX1mdW5jdGlvbiB4aSh0LGUsaSxuLHIsYSl7bWkuY2FsbCh0aGlzLHQsZSksdGhpcy50eXBlPSJTcG90TGlnaHQiLHRoaXMucG9zaXRpb24uY29weShYLkRlZmF1bHRVcCksdGhpcy51cGRhdGVNYXRyaXgoKSx0aGlzLnRhcmdldD1uZXcgWCxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywicG93ZXIiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbnRlbnNpdHkqTWF0aC5QSX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuaW50ZW5zaXR5PXQvTWF0aC5QSX19KSx0aGlzLmRpc3RhbmNlPXZvaWQgMCE9PWk/aTowLHRoaXMuYW5nbGU9dm9pZCAwIT09bj9uOk1hdGguUEkvMyx0aGlzLnBlbnVtYnJhPXZvaWQgMCE9PXI/cjowLHRoaXMuZGVjYXk9dm9pZCAwIT09YT9hOjEsdGhpcy5zaGFkb3c9bmV3IHlpfWZ1bmN0aW9uIF9pKHQsZSxpLG4pe21pLmNhbGwodGhpcyx0LGUpLHRoaXMudHlwZT0iUG9pbnRMaWdodCIsT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsInBvd2VyIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDQqdGhpcy5pbnRlbnNpdHkqTWF0aC5QSX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuaW50ZW5zaXR5PXQvKDQqTWF0aC5QSSl9fSksdGhpcy5kaXN0YW5jZT12b2lkIDAhPT1pP2k6MCx0aGlzLmRlY2F5PXZvaWQgMCE9PW4/bjoxLHRoaXMuc2hhZG93PW5ldyB2aShuZXcgWHQoOTAsMSwuNSw1MDApKX1mdW5jdGlvbiBiaSh0KXt2aS5jYWxsKHRoaXMsbmV3IFl0KC01LDUsNSwtNSwuNSw1MDApKX1mdW5jdGlvbiB3aSh0LGUpe21pLmNhbGwodGhpcyx0LGUpLHRoaXMudHlwZT0iRGlyZWN0aW9uYWxMaWdodCIsdGhpcy5wb3NpdGlvbi5jb3B5KFguRGVmYXVsdFVwKSx0aGlzLnVwZGF0ZU1hdHJpeCgpLHRoaXMudGFyZ2V0PW5ldyBYLHRoaXMuc2hhZG93PW5ldyBiaX1mdW5jdGlvbiBNaSh0LGUpe21pLmNhbGwodGhpcyx0LGUpLHRoaXMudHlwZT0iQW1iaWVudExpZ2h0Iix0aGlzLmNhc3RTaGFkb3c9dm9pZCAwfWZ1bmN0aW9uIEVpKHQsZSxpLG4pe3RoaXMucGFyYW1ldGVyUG9zaXRpb25zPXQsdGhpcy5fY2FjaGVkSW5kZXg9MCx0aGlzLnJlc3VsdEJ1ZmZlcj12b2lkIDAhPT1uP246bmV3IGUuY29uc3RydWN0b3IoaSksdGhpcy5zYW1wbGVWYWx1ZXM9ZSx0aGlzLnZhbHVlU2l6ZT1pfWZ1bmN0aW9uIFRpKHQsZSxpLG4pe0VpLmNhbGwodGhpcyx0LGUsaSxuKSx0aGlzLl9vZmZzZXROZXh0PXRoaXMuX3dlaWdodE5leHQ9dGhpcy5fb2Zmc2V0UHJldj10aGlzLl93ZWlnaHRQcmV2PS0wfWZ1bmN0aW9uIFNpKHQsZSxpLG4pe0VpLmNhbGwodGhpcyx0LGUsaSxuKX1mdW5jdGlvbiBBaSh0LGUsaSxuKXtFaS5jYWxsKHRoaXMsdCxlLGksbil9ZnVuY3Rpb24gTGkodCxlLGksbil7aWYodm9pZCAwPT09dCl0aHJvdyBFcnJvcigidHJhY2sgbmFtZSBpcyB1bmRlZmluZWQiKTtpZih2b2lkIDA9PT1lfHwwPT09ZS5sZW5ndGgpdGhyb3cgRXJyb3IoIm5vIGtleWZyYW1lcyBpbiB0cmFjayBuYW1lZCAiK3QpO3RoaXMubmFtZT10LHRoaXMudGltZXM9Um8uY29udmVydEFycmF5KGUsdGhpcy5UaW1lQnVmZmVyVHlwZSksdGhpcy52YWx1ZXM9Um8uY29udmVydEFycmF5KGksdGhpcy5WYWx1ZUJ1ZmZlclR5cGUpLHRoaXMuc2V0SW50ZXJwb2xhdGlvbihufHx0aGlzLkRlZmF1bHRJbnRlcnBvbGF0aW9uKSx0aGlzLnZhbGlkYXRlKCksdGhpcy5vcHRpbWl6ZSgpfWZ1bmN0aW9uIFJpKHQsZSxpLG4pe0xpLmNhbGwodGhpcyx0LGUsaSxuKX1mdW5jdGlvbiBQaSh0LGUsaSxuKXtFaS5jYWxsKHRoaXMsdCxlLGksbil9ZnVuY3Rpb24gQ2kodCxlLGksbil7TGkuY2FsbCh0aGlzLHQsZSxpLG4pfWZ1bmN0aW9uIElpKHQsZSxpLG4pe0xpLmNhbGwodGhpcyx0LGUsaSxuKX1mdW5jdGlvbiBVaSh0LGUsaSxuKXtMaS5jYWxsKHRoaXMsdCxlLGksbil9ZnVuY3Rpb24gTmkodCxlLGkpe0xpLmNhbGwodGhpcyx0LGUsaSl9ZnVuY3Rpb24gRGkodCxlLGksbil7TGkuY2FsbCh0aGlzLHQsZSxpLG4pfWZ1bmN0aW9uIE9pKHQsZSxpLG4pe0xpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBGaSh0LGUsaSl7dGhpcy5uYW1lPXQsdGhpcy50cmFja3M9aSx0aGlzLmR1cmF0aW9uPXZvaWQgMCE9PWU/ZTotMSx0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5kdXJhdGlvbjwwJiZ0aGlzLnJlc2V0RHVyYXRpb24oKSx0aGlzLm9wdGltaXplKCl9ZnVuY3Rpb24gemkodCl7dGhpcy5tYW5hZ2VyPXZvaWQgMCE9PXQ/dDpNbyx0aGlzLnRleHR1cmVzPXt9fWZ1bmN0aW9uIEJpKHQpe3RoaXMubWFuYWdlcj12b2lkIDAhPT10P3Q6TW99ZnVuY3Rpb24gR2koKXt0aGlzLm9uTG9hZFN0YXJ0PWZ1bmN0aW9uKCl7fSx0aGlzLm9uTG9hZFByb2dyZXNzPWZ1bmN0aW9uKCl7fSx0aGlzLm9uTG9hZENvbXBsZXRlPWZ1bmN0aW9uKCl7fX1mdW5jdGlvbiBIaSh0KXsiYm9vbGVhbiI9PXR5cGVvZiB0JiYoY29uc29sZS53YXJuKCJUSFJFRS5KU09OTG9hZGVyOiBzaG93U3RhdHVzIHBhcmFtZXRlciBoYXMgYmVlbiByZW1vdmVkIGZyb20gY29uc3RydWN0b3IuIiksdD12b2lkIDApLHRoaXMubWFuYWdlcj12b2lkIDAhPT10P3Q6TW8sdGhpcy53aXRoQ3JlZGVudGlhbHM9ITF9ZnVuY3Rpb24gVmkodCl7dGhpcy5tYW5hZ2VyPXZvaWQgMCE9PXQ/dDpNbyx0aGlzLnRleHR1cmVQYXRoPSIifWZ1bmN0aW9uIGtpKCl7fWZ1bmN0aW9uIGppKHQsZSl7dGhpcy52MT10LHRoaXMudjI9ZX1mdW5jdGlvbiBXaSgpe3RoaXMuY3VydmVzPVtdLHRoaXMuYXV0b0Nsb3NlPSExfWZ1bmN0aW9uIFhpKHQsZSxpLG4scixhLG8scyl7dGhpcy5hWD10LHRoaXMuYVk9ZSx0aGlzLnhSYWRpdXM9aSx0aGlzLnlSYWRpdXM9bix0aGlzLmFTdGFydEFuZ2xlPXIsdGhpcy5hRW5kQW5nbGU9YSx0aGlzLmFDbG9ja3dpc2U9byx0aGlzLmFSb3RhdGlvbj1zfHwwfWZ1bmN0aW9uIFlpKHQpe3RoaXMucG9pbnRzPXZvaWQgMD09PXQ/W106dH1mdW5jdGlvbiBxaSh0LGUsaSxuKXt0aGlzLnYwPXQsdGhpcy52MT1lLHRoaXMudjI9aSx0aGlzLnYzPW59ZnVuY3Rpb24gWmkodCxlLGkpe3RoaXMudjA9dCx0aGlzLnYxPWUsdGhpcy52Mj1pfWZ1bmN0aW9uIEppKCl7UWkuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuaG9sZXM9W119ZnVuY3Rpb24gUWkodCl7V2kuY2FsbCh0aGlzKSx0aGlzLmN1cnJlbnRQb2ludD1uZXcgVix0JiZ0aGlzLmZyb21Qb2ludHModCl9ZnVuY3Rpb24gS2koKXt0aGlzLnN1YlBhdGhzPVtdLHRoaXMuY3VycmVudFBhdGg9bnVsbH1mdW5jdGlvbiAkaSh0KXt0aGlzLmRhdGE9dH1mdW5jdGlvbiB0bih0KXt0aGlzLm1hbmFnZXI9dm9pZCAwIT09dD90Ok1vfWZ1bmN0aW9uIGVuKHQpe3RoaXMubWFuYWdlcj12b2lkIDAhPT10P3Q6TW99ZnVuY3Rpb24gbm4odCxlLGksbil7bWkuY2FsbCh0aGlzLHQsZSksdGhpcy50eXBlPSJSZWN0QXJlYUxpZ2h0Iix0aGlzLnBvc2l0aW9uLnNldCgwLDEsMCksdGhpcy51cGRhdGVNYXRyaXgoKSx0aGlzLndpZHRoPXZvaWQgMCE9PWk/aToxMCx0aGlzLmhlaWdodD12b2lkIDAhPT1uP246MTB9ZnVuY3Rpb24gcm4oKXt0aGlzLnR5cGU9IlN0ZXJlb0NhbWVyYSIsdGhpcy5hc3BlY3Q9MSx0aGlzLmV5ZVNlcD0uMDY0LHRoaXMuY2FtZXJhTD1uZXcgWHQsdGhpcy5jYW1lcmFMLmxheWVycy5lbmFibGUoMSksdGhpcy5jYW1lcmFMLm1hdHJpeEF1dG9VcGRhdGU9ITEsdGhpcy5jYW1lcmFSPW5ldyBYdCx0aGlzLmNhbWVyYVIubGF5ZXJzLmVuYWJsZSgyKSx0aGlzLmNhbWVyYVIubWF0cml4QXV0b1VwZGF0ZT0hMX1mdW5jdGlvbiBhbih0LGUsaSl7WC5jYWxsKHRoaXMpLHRoaXMudHlwZT0iQ3ViZUNhbWVyYSI7dmFyIHI9bmV3IFh0KDkwLDEsdCxlKTtyLnVwLnNldCgwLC0xLDApLHIubG9va0F0KG5ldyBDdCgxLDAsMCkpLHRoaXMuYWRkKHIpO3ZhciBhPW5ldyBYdCg5MCwxLHQsZSk7YS51cC5zZXQoMCwtMSwwKSxhLmxvb2tBdChuZXcgQ3QoLTEsMCwwKSksdGhpcy5hZGQoYSk7dmFyIG89bmV3IFh0KDkwLDEsdCxlKTtvLnVwLnNldCgwLDAsMSksby5sb29rQXQobmV3IEN0KDAsMSwwKSksdGhpcy5hZGQobyk7dmFyIHM9bmV3IFh0KDkwLDEsdCxlKTtzLnVwLnNldCgwLDAsLTEpLHMubG9va0F0KG5ldyBDdCgwLC0xLDApKSx0aGlzLmFkZChzKTt2YXIgYz1uZXcgWHQoOTAsMSx0LGUpO2MudXAuc2V0KDAsLTEsMCksYy5sb29rQXQobmV3IEN0KDAsMCwxKSksdGhpcy5hZGQoYyk7dmFyIGg9bmV3IFh0KDkwLDEsdCxlKTtoLnVwLnNldCgwLC0xLDApLGgubG9va0F0KG5ldyBDdCgwLDAsLTEpKSx0aGlzLmFkZChoKSx0aGlzLnJlbmRlclRhcmdldD1uZXcgbihpLGkse2Zvcm1hdDoxMDIyLG1hZ0ZpbHRlcjoxMDA2LG1pbkZpbHRlcjoxMDA2fSksdGhpcy51cGRhdGVDdWJlTWFwPWZ1bmN0aW9uKHQsZSl7bnVsbD09PXRoaXMucGFyZW50JiZ0aGlzLnVwZGF0ZU1hdHJpeFdvcmxkKCk7dmFyIGk9dGhpcy5yZW5kZXJUYXJnZXQsbj1pLnRleHR1cmUuZ2VuZXJhdGVNaXBtYXBzO2kudGV4dHVyZS5nZW5lcmF0ZU1pcG1hcHM9ITEsaS5hY3RpdmVDdWJlRmFjZT0wLHQucmVuZGVyKGUscixpKSxpLmFjdGl2ZUN1YmVGYWNlPTEsdC5yZW5kZXIoZSxhLGkpLGkuYWN0aXZlQ3ViZUZhY2U9Mix0LnJlbmRlcihlLG8saSksaS5hY3RpdmVDdWJlRmFjZT0zLHQucmVuZGVyKGUscyxpKSxpLmFjdGl2ZUN1YmVGYWNlPTQsdC5yZW5kZXIoZSxjLGkpLGkudGV4dHVyZS5nZW5lcmF0ZU1pcG1hcHM9bixpLmFjdGl2ZUN1YmVGYWNlPTUsdC5yZW5kZXIoZSxoLGkpLHQuc2V0UmVuZGVyVGFyZ2V0KG51bGwpfX1mdW5jdGlvbiBvbigpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9IkF1ZGlvTGlzdGVuZXIiLHRoaXMuY29udGV4dD1wcy5nZXRDb250ZXh0KCksdGhpcy5nYWluPXRoaXMuY29udGV4dC5jcmVhdGVHYWluKCksdGhpcy5nYWluLmNvbm5lY3QodGhpcy5jb250ZXh0LmRlc3RpbmF0aW9uKSx0aGlzLmZpbHRlcj1udWxsfWZ1bmN0aW9uIHNuKHQpe1guY2FsbCh0aGlzKSx0aGlzLnR5cGU9IkF1ZGlvIix0aGlzLmNvbnRleHQ9dC5jb250ZXh0LHRoaXMuZ2Fpbj10aGlzLmNvbnRleHQuY3JlYXRlR2FpbigpLHRoaXMuZ2Fpbi5jb25uZWN0KHQuZ2V0SW5wdXQoKSksdGhpcy5hdXRvcGxheT0hMSx0aGlzLmJ1ZmZlcj1udWxsLHRoaXMubG9vcD0hMSx0aGlzLnN0YXJ0VGltZT0wLHRoaXMucGxheWJhY2tSYXRlPTEsdGhpcy5pc1BsYXlpbmc9ITEsdGhpcy5oYXNQbGF5YmFja0NvbnRyb2w9ITAsdGhpcy5zb3VyY2VUeXBlPSJlbXB0eSIsdGhpcy5maWx0ZXJzPVtdfWZ1bmN0aW9uIGNuKHQpe3NuLmNhbGwodGhpcyx0KSx0aGlzLnBhbm5lcj10aGlzLmNvbnRleHQuY3JlYXRlUGFubmVyKCksdGhpcy5wYW5uZXIuY29ubmVjdCh0aGlzLmdhaW4pfWZ1bmN0aW9uIGhuKHQsZSl7dGhpcy5hbmFseXNlcj10LmNvbnRleHQuY3JlYXRlQW5hbHlzZXIoKSx0aGlzLmFuYWx5c2VyLmZmdFNpemU9dm9pZCAwIT09ZT9lOjIwNDgsdGhpcy5kYXRhPW5ldyBVaW50OEFycmF5KHRoaXMuYW5hbHlzZXIuZnJlcXVlbmN5QmluQ291bnQpLHQuZ2V0T3V0cHV0KCkuY29ubmVjdCh0aGlzLmFuYWx5c2VyKX1mdW5jdGlvbiBsbih0LGUsaSl7c3dpdGNoKHRoaXMuYmluZGluZz10LHRoaXMudmFsdWVTaXplPWksdD1GbG9hdDY0QXJyYXksZSl7Y2FzZSJxdWF0ZXJuaW9uIjplPXRoaXMuX3NsZXJwO2JyZWFrO2Nhc2Uic3RyaW5nIjpjYXNlImJvb2wiOnQ9QXJyYXksZT10aGlzLl9zZWxlY3Q7YnJlYWs7ZGVmYXVsdDplPXRoaXMuX2xlcnB9dGhpcy5idWZmZXI9bmV3IHQoNCppKSx0aGlzLl9taXhCdWZmZXJSZWdpb249ZSx0aGlzLnJlZmVyZW5jZUNvdW50PXRoaXMudXNlQ291bnQ9dGhpcy5jdW11bGF0aXZlV2VpZ2h0PTB9ZnVuY3Rpb24gdW4odCxlLGkpe3RoaXMucGF0aD1lLHRoaXMucGFyc2VkUGF0aD1pfHx1bi5wYXJzZVRyYWNrTmFtZShlKSx0aGlzLm5vZGU9dW4uZmluZE5vZGUodCx0aGlzLnBhcnNlZFBhdGgubm9kZU5hbWUpfHx0LHRoaXMucm9vdE5vZGU9dH1mdW5jdGlvbiBkbih0KXt0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5fb2JqZWN0cz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLHRoaXMubkNhY2hlZE9iamVjdHNfPTA7dmFyIGU9e307dGhpcy5faW5kaWNlc0J5VVVJRD1lO2Zvcih2YXIgaT0wLG49YXJndW1lbnRzLmxlbmd0aDtpIT09bjsrK2kpZVthcmd1bWVudHNbaV0udXVpZF09aTt0aGlzLl9wYXRocz1bXSx0aGlzLl9wYXJzZWRQYXRocz1bXSx0aGlzLl9iaW5kaW5ncz1bXSx0aGlzLl9iaW5kaW5nc0luZGljZXNCeVBhdGg9e307dmFyIHI9dGhpczt0aGlzLnN0YXRzPXtvYmplY3RzOntnZXQgdG90YWwoKXtyZXR1cm4gci5fb2JqZWN0cy5sZW5ndGh9LGdldCBpblVzZSgpe3JldHVybiB0aGlzLnRvdGFsLXIubkNhY2hlZE9iamVjdHNffX0sZ2V0IGJpbmRpbmdzUGVyT2JqZWN0KCl7cmV0dXJuIHIuX2JpbmRpbmdzLmxlbmd0aH19fWZ1bmN0aW9uIHBuKHQsZSxpKXt0aGlzLl9taXhlcj10LHRoaXMuX2NsaXA9ZSx0aGlzLl9sb2NhbFJvb3Q9aXx8bnVsbCxlPSh0PWUudHJhY2tzKS5sZW5ndGgsaT1BcnJheShlKTtmb3IodmFyIG49e2VuZGluZ1N0YXJ0OjI0MDAsZW5kaW5nRW5kOjI0MDB9LHI9MDtyIT09ZTsrK3Ipe3ZhciBhPXRbcl0uY3JlYXRlSW50ZXJwb2xhbnQobnVsbCk7KGlbcl09YSkuc2V0dGluZ3M9bn10aGlzLl9pbnRlcnBvbGFudFNldHRpbmdzPW4sdGhpcy5faW50ZXJwb2xhbnRzPWksdGhpcy5fcHJvcGVydHlCaW5kaW5ncz1BcnJheShlKSx0aGlzLl93ZWlnaHRJbnRlcnBvbGFudD10aGlzLl90aW1lU2NhbGVJbnRlcnBvbGFudD10aGlzLl9ieUNsaXBDYWNoZUluZGV4PXRoaXMuX2NhY2hlSW5kZXg9bnVsbCx0aGlzLmxvb3A9MjIwMSx0aGlzLl9sb29wQ291bnQ9LTEsdGhpcy5fc3RhcnRUaW1lPW51bGwsdGhpcy50aW1lPTAsdGhpcy5fZWZmZWN0aXZlV2VpZ2h0PXRoaXMud2VpZ2h0PXRoaXMuX2VmZmVjdGl2ZVRpbWVTY2FsZT10aGlzLnRpbWVTY2FsZT0xLHRoaXMucmVwZXRpdGlvbnM9MS8wLHRoaXMucGF1c2VkPSExLHRoaXMuZW5hYmxlZD0hMCx0aGlzLmNsYW1wV2hlbkZpbmlzaGVkPSExLHRoaXMuemVyb1Nsb3BlQXRFbmQ9dGhpcy56ZXJvU2xvcGVBdFN0YXJ0PSEwfWZ1bmN0aW9uIGZuKHQpe3RoaXMuX3Jvb3Q9dCx0aGlzLl9pbml0TWVtb3J5TWFuYWdlcigpLHRoaXMudGltZT10aGlzLl9hY2N1SW5kZXg9MCx0aGlzLnRpbWVTY2FsZT0xfWZ1bmN0aW9uIG1uKHQsZSl7InN0cmluZyI9PXR5cGVvZiB0JiYoY29uc29sZS53YXJuKCJUSFJFRS5Vbmlmb3JtOiBUeXBlIHBhcmFtZXRlciBpcyBubyBsb25nZXIgbmVlZGVkLiIpLHQ9ZSksdGhpcy52YWx1ZT10fWZ1bmN0aW9uIGduKCl7VnQuY2FsbCh0aGlzKSx0aGlzLnR5cGU9Ikluc3RhbmNlZEJ1ZmZlckdlb21ldHJ5Iix0aGlzLm1heEluc3RhbmNlZENvdW50PXZvaWQgMH1mdW5jdGlvbiB2bih0LGUsaSxuKXt0aGlzLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCksdGhpcy5kYXRhPXQsdGhpcy5pdGVtU2l6ZT1lLHRoaXMub2Zmc2V0PWksdGhpcy5ub3JtYWxpemVkPSEwPT09bn1mdW5jdGlvbiB5bih0LGUpe3RoaXMudXVpZD1lci5nZW5lcmF0ZVVVSUQoKSx0aGlzLmFycmF5PXQsdGhpcy5zdHJpZGU9ZSx0aGlzLmNvdW50PXZvaWQgMCE9PXQ/dC5sZW5ndGgvZTowLHRoaXMuZHluYW1pYz0hMSx0aGlzLnVwZGF0ZVJhbmdlPXtvZmZzZXQ6MCxjb3VudDotMX0sdGhpcy5vblVwbG9hZENhbGxiYWNrPWZ1bmN0aW9uKCl7fSx0aGlzLnZlcnNpb249MH1mdW5jdGlvbiB4bih0LGUsaSl7eW4uY2FsbCh0aGlzLHQsZSksdGhpcy5tZXNoUGVyQXR0cmlidXRlPWl8fDF9ZnVuY3Rpb24gX24odCxlLGkpe0ouY2FsbCh0aGlzLHQsZSksdGhpcy5tZXNoUGVyQXR0cmlidXRlPWl8fDF9ZnVuY3Rpb24gYm4odCxlLGksbil7dGhpcy5yYXk9bmV3IGsodCxlKSx0aGlzLm5lYXI9aXx8MCx0aGlzLmZhcj1ufHwxLzAsdGhpcy5wYXJhbXM9e01lc2g6e30sTGluZTp7fSxMT0Q6e30sUG9pbnRzOnt0aHJlc2hvbGQ6MX0sU3ByaXRlOnt9fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLnBhcmFtcyx7UG9pbnRDbG91ZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuUmF5Y2FzdGVyOiBwYXJhbXMuUG9pbnRDbG91ZCBoYXMgYmVlbiByZW5hbWVkIHRvIHBhcmFtcy5Qb2ludHMuIiksdGhpcy5Qb2ludHN9fX0pfWZ1bmN0aW9uIHduKHQsZSl7cmV0dXJuIHQuZGlzdGFuY2UtZS5kaXN0YW5jZX1mdW5jdGlvbiBNbih0LGUsaSxuKXtpZighMSE9PXQudmlzaWJsZSYmKHQucmF5Y2FzdChlLGkpLCEwPT09bikpe249MDtmb3IodmFyIHI9KHQ9dC5jaGlsZHJlbikubGVuZ3RoO248cjtuKyspTW4odFtuXSxlLGksITApfX1mdW5jdGlvbiBFbih0KXt0aGlzLmF1dG9TdGFydD12b2lkIDA9PT10fHx0LHRoaXMuZWxhcHNlZFRpbWU9dGhpcy5vbGRUaW1lPXRoaXMuc3RhcnRUaW1lPTAsdGhpcy5ydW5uaW5nPSExfWZ1bmN0aW9uIFRuKHQsZSxpKXtyZXR1cm4gdGhpcy5yYWRpdXM9dm9pZCAwIT09dD90OjEsdGhpcy5waGk9dm9pZCAwIT09ZT9lOjAsdGhpcy50aGV0YT12b2lkIDAhPT1pP2k6MCx0aGlzfWZ1bmN0aW9uIFNuKHQsZSxpKXtyZXR1cm4gdGhpcy5yYWRpdXM9dm9pZCAwIT09dD90OjEsdGhpcy50aGV0YT12b2lkIDAhPT1lP2U6MCx0aGlzLnk9dm9pZCAwIT09aT9pOjAsdGhpc31mdW5jdGlvbiBBbih0LGUpe2t0LmNhbGwodGhpcyx0LGUpLHRoaXMuYW5pbWF0aW9uc01hcD17fSx0aGlzLmFuaW1hdGlvbnNMaXN0PVtdO3ZhciBpPXRoaXMuZ2VvbWV0cnkubW9ycGhUYXJnZXRzLmxlbmd0aDt0aGlzLmNyZWF0ZUFuaW1hdGlvbigiX19kZWZhdWx0IiwwLGktMSxpLzEpLHRoaXMuc2V0QW5pbWF0aW9uV2VpZ2h0KCJfX2RlZmF1bHQiLDEpfWZ1bmN0aW9uIExuKHQpe1guY2FsbCh0aGlzKSx0aGlzLm1hdGVyaWFsPXQsdGhpcy5yZW5kZXI9ZnVuY3Rpb24odCl7fX1mdW5jdGlvbiBSbih0LGUsaSxuKXt0aGlzLm9iamVjdD10LHRoaXMuc2l6ZT12b2lkIDAhPT1lP2U6MSx0PXZvaWQgMCE9PWk/aToxNjcxMTY4MCxuPXZvaWQgMCE9PW4/bjoxLGU9MCwoaT10aGlzLm9iamVjdC5nZW9tZXRyeSkmJmkuaXNHZW9tZXRyeT9lPTMqaS5mYWNlcy5sZW5ndGg6aSYmaS5pc0J1ZmZlckdlb21ldHJ5JiYoZT1pLmF0dHJpYnV0ZXMubm9ybWFsLmNvdW50KSxpPW5ldyBWdCxlPW5ldyBydCg2KmUsMyksaS5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixlKSxvZS5jYWxsKHRoaXMsaSxuZXcgUnQoe2NvbG9yOnQsbGluZXdpZHRoOm59KSksdGhpcy5tYXRyaXhBdXRvVXBkYXRlPSExLHRoaXMudXBkYXRlKCl9ZnVuY3Rpb24gUG4odCl7WC5jYWxsKHRoaXMpLHRoaXMubGlnaHQ9dCx0aGlzLmxpZ2h0LnVwZGF0ZU1hdHJpeFdvcmxkKCksdGhpcy5tYXRyaXg9dC5tYXRyaXhXb3JsZCx0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITEsdD1uZXcgVnQ7Zm9yKHZhciBlPVswLDAsMCwwLDAsMSwwLDAsMCwxLDAsMSwwLDAsMCwtMSwwLDEsMCwwLDAsMCwxLDEsMCwwLDAsMCwtMSwxXSxpPTAsbj0xO2k8MzI7aSsrLG4rKyl7dmFyIHI9aS8zMipNYXRoLlBJKjIsYT1uLzMyKk1hdGguUEkqMjtlLnB1c2goTWF0aC5jb3MociksTWF0aC5zaW4ociksMSxNYXRoLmNvcyhhKSxNYXRoLnNpbihhKSwxKX10LmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBydChlLDMpKSxlPW5ldyBSdCh7Zm9nOiExfSksdGhpcy5jb25lPW5ldyBvZSh0LGUpLHRoaXMuYWRkKHRoaXMuY29uZSksdGhpcy51cGRhdGUoKX1mdW5jdGlvbiBDbih0KXt0aGlzLmJvbmVzPXRoaXMuZ2V0Qm9uZUxpc3QodCk7Zm9yKHZhciBlPW5ldyBWdCxpPVtdLG49W10scj1uZXcgTnQoMCwwLDEpLGE9bmV3IE50KDAsMSwwKSxvPTA7bzx0aGlzLmJvbmVzLmxlbmd0aDtvKyspe3ZhciBzPXRoaXMuYm9uZXNbb107cy5wYXJlbnQmJnMucGFyZW50LmlzQm9uZSYmKGkucHVzaCgwLDAsMCksaS5wdXNoKDAsMCwwKSxuLnB1c2goci5yLHIuZyxyLmIpLG4ucHVzaChhLnIsYS5nLGEuYikpfWUuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbmV3IHJ0KGksMykpLGUuYWRkQXR0cmlidXRlKCJjb2xvciIsbmV3IHJ0KG4sMykpLGk9bmV3IFJ0KHt2ZXJ0ZXhDb2xvcnM6MixkZXB0aFRlc3Q6ITEsZGVwdGhXcml0ZTohMSx0cmFuc3BhcmVudDohMH0pLG9lLmNhbGwodGhpcyxlLGkpLHRoaXMucm9vdD10LHRoaXMubWF0cml4PXQubWF0cml4V29ybGQsdGhpcy5tYXRyaXhBdXRvVXBkYXRlPSExLHRoaXMudXBkYXRlKCl9ZnVuY3Rpb24gSW4odCxlKXt0aGlzLmxpZ2h0PXQsdGhpcy5saWdodC51cGRhdGVNYXRyaXhXb3JsZCgpO3ZhciBpPW5ldyBEZShlLDQsMiksbj1uZXcgSHQoe3dpcmVmcmFtZTohMCxmb2c6ITF9KTtuLmNvbG9yLmNvcHkodGhpcy5saWdodC5jb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpLGt0LmNhbGwodGhpcyxpLG4pLHRoaXMubWF0cml4PXRoaXMubGlnaHQubWF0cml4V29ybGQsdGhpcy5tYXRyaXhBdXRvVXBkYXRlPSExfWZ1bmN0aW9uIFVuKHQpe1guY2FsbCh0aGlzKSx0aGlzLmxpZ2h0PXQsdGhpcy5saWdodC51cGRhdGVNYXRyaXhXb3JsZCgpO3ZhciBlPW5ldyBIdCh7Y29sb3I6dC5jb2xvcixmb2c6ITF9KTt0PW5ldyBIdCh7Y29sb3I6dC5jb2xvcixmb2c6ITEsd2lyZWZyYW1lOiEwfSk7dmFyIGk9bmV3IFZ0O2kuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbmV3IEoobmV3IEZsb2F0MzJBcnJheSgxOCksMykpLHRoaXMuYWRkKG5ldyBrdChpLGUpKSx0aGlzLmFkZChuZXcga3QoaSx0KSksdGhpcy51cGRhdGUoKX1mdW5jdGlvbiBObih0LGUpe1guY2FsbCh0aGlzKSx0aGlzLmxpZ2h0PXQsdGhpcy5saWdodC51cGRhdGVNYXRyaXhXb3JsZCgpLHRoaXMubWF0cml4PXQubWF0cml4V29ybGQsdGhpcy5tYXRyaXhBdXRvVXBkYXRlPSExO3ZhciBpPW5ldyBfZShlKTtpLnJvdGF0ZVkoLjUqTWF0aC5QSSk7dmFyIG49bmV3IEh0KHt2ZXJ0ZXhDb2xvcnM6Mix3aXJlZnJhbWU6ITB9KSxyPWkuZ2V0QXR0cmlidXRlKCJwb3NpdGlvbiIpO3I9bmV3IEZsb2F0MzJBcnJheSgzKnIuY291bnQpO2kuYWRkQXR0cmlidXRlKCJjb2xvciIsbmV3IEoociwzKSksdGhpcy5hZGQobmV3IGt0KGksbikpLHRoaXMudXBkYXRlKCl9ZnVuY3Rpb24gRG4odCxlLGksbil7dD10fHwxMCxlPWV8fDEwLGk9bmV3IE50KHZvaWQgMCE9PWk/aTo0NDczOTI0KSxuPW5ldyBOdCh2b2lkIDAhPT1uP246ODk0Nzg0OCk7Zm9yKHZhciByPWUvMixhPTIqdC9lLG89W10scz1bXSxjPTAsaD0wLGw9LXQ7Yzw9ZTtjKyssbCs9YSl7by5wdXNoKC10LDAsbCx0LDAsbCksby5wdXNoKGwsMCwtdCxsLDAsdCk7dmFyIHU9Yz09PXI/aTpuO3UudG9BcnJheShzLGgpLGgrPTMsdS50b0FycmF5KHMsaCksaCs9Myx1LnRvQXJyYXkocyxoKSxoKz0zLHUudG9BcnJheShzLGgpLGgrPTN9KHQ9bmV3IFZ0KS5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQobywzKSksdC5hZGRBdHRyaWJ1dGUoImNvbG9yIixuZXcgcnQocywzKSksbz1uZXcgUnQoe3ZlcnRleENvbG9yczoyfSksb2UuY2FsbCh0aGlzLHQsbyl9ZnVuY3Rpb24gT24odCxlLGksbixyLGEpe3Q9dHx8MTAsZT1lfHwxNixpPWl8fDgsbj1ufHw2NCxyPW5ldyBOdCh2b2lkIDAhPT1yP3I6NDQ3MzkyNCksYT1uZXcgTnQodm9pZCAwIT09YT9hOjg5NDc4NDgpO3ZhciBvLHMsYyxoLGwsdT1bXSxkPVtdO2ZvcihjPTA7Yzw9ZTtjKyspcz1jL2UqMipNYXRoLlBJLG89TWF0aC5zaW4ocykqdCxzPU1hdGguY29zKHMpKnQsdS5wdXNoKDAsMCwwKSx1LnB1c2gobywwLHMpLGw9MSZjP3I6YSxkLnB1c2gobC5yLGwuZyxsLmIpLGQucHVzaChsLnIsbC5nLGwuYik7Zm9yKGM9MDtjPD1pO2MrKylmb3IobD0xJmM/cjphLGg9dC10L2kqYyxlPTA7ZTxuO2UrKylzPWUvbioyKk1hdGguUEksbz1NYXRoLnNpbihzKSpoLHM9TWF0aC5jb3MocykqaCx1LnB1c2gobywwLHMpLGQucHVzaChsLnIsbC5nLGwuYikscz0oZSsxKS9uKjIqTWF0aC5QSSxvPU1hdGguc2luKHMpKmgscz1NYXRoLmNvcyhzKSpoLHUucHVzaChvLDAscyksZC5wdXNoKGwucixsLmcsbC5iKTsodD1uZXcgVnQpLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBydCh1LDMpKSx0LmFkZEF0dHJpYnV0ZSgiY29sb3IiLG5ldyBydChkLDMpKSx1PW5ldyBSdCh7dmVydGV4Q29sb3JzOjJ9KSxvZS5jYWxsKHRoaXMsdCx1KX1mdW5jdGlvbiBGbih0LGUsaSxuKXt0aGlzLm9iamVjdD10LHRoaXMuc2l6ZT12b2lkIDAhPT1lP2U6MSx0PXZvaWQgMCE9PWk/aToxNjc3Njk2MCxuPXZvaWQgMCE9PW4/bjoxLGU9MCwoaT10aGlzLm9iamVjdC5nZW9tZXRyeSkmJmkuaXNHZW9tZXRyeT9lPWkuZmFjZXMubGVuZ3RoOmNvbnNvbGUud2FybigiVEhSRUUuRmFjZU5vcm1hbHNIZWxwZXI6IG9ubHkgVEhSRUUuR2VvbWV0cnkgaXMgc3VwcG9ydGVkLiBVc2UgVEhSRUUuVmVydGV4Tm9ybWFsc0hlbHBlciwgaW5zdGVhZC4iKSxpPW5ldyBWdCxlPW5ldyBydCg2KmUsMyksaS5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixlKSxvZS5jYWxsKHRoaXMsaSxuZXcgUnQoe2NvbG9yOnQsbGluZXdpZHRoOm59KSksdGhpcy5tYXRyaXhBdXRvVXBkYXRlPSExLHRoaXMudXBkYXRlKCl9ZnVuY3Rpb24gem4odCxlKXtYLmNhbGwodGhpcyksdGhpcy5saWdodD10LHRoaXMubGlnaHQudXBkYXRlTWF0cml4V29ybGQoKSx0aGlzLm1hdHJpeD10Lm1hdHJpeFdvcmxkLHRoaXMubWF0cml4QXV0b1VwZGF0ZT0hMSx2b2lkIDA9PT1lJiYoZT0xKTt2YXIgaT1uZXcgVnQ7aS5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQoWy1lLGUsMCxlLGUsMCxlLC1lLDAsLWUsLWUsMCwtZSxlLDBdLDMpKTt2YXIgbj1uZXcgUnQoe2ZvZzohMX0pO3RoaXMuYWRkKG5ldyBhZShpLG4pKSwoaT1uZXcgVnQpLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBydChbMCwwLDAsMCwwLDFdLDMpKSx0aGlzLmFkZChuZXcgYWUoaSxuKSksdGhpcy51cGRhdGUoKX1mdW5jdGlvbiBCbih0KXtmdW5jdGlvbiBlKHQsZSxpKXtuKHQsaSksbihlLGkpfWZ1bmN0aW9uIG4odCxlKXthLnB1c2goMCwwLDApLG8ucHVzaChlLnIsZS5nLGUuYiksdm9pZCAwPT09c1t0XSYmKHNbdF09W10pLHNbdF0ucHVzaChhLmxlbmd0aC8zLTEpfXZhciBpPW5ldyBWdCxyPW5ldyBSdCh7Y29sb3I6MTY3NzcyMTUsdmVydGV4Q29sb3JzOjF9KSxhPVtdLG89W10scz17fSxjPW5ldyBOdCgxNjc1NTIwMCksaD1uZXcgTnQoMTY3MTE2ODApLGw9bmV3IE50KDQzNzc1KSx1PW5ldyBOdCgxNjc3NzIxNSksZD1uZXcgTnQoMzM1NTQ0Myk7ZSgibjEiLCJuMiIsYyksZSgibjIiLCJuNCIsYyksZSgibjQiLCJuMyIsYyksZSgibjMiLCJuMSIsYyksZSgiZjEiLCJmMiIsYyksZSgiZjIiLCJmNCIsYyksZSgiZjQiLCJmMyIsYyksZSgiZjMiLCJmMSIsYyksZSgibjEiLCJmMSIsYyksZSgibjIiLCJmMiIsYyksZSgibjMiLCJmMyIsYyksZSgibjQiLCJmNCIsYyksZSgicCIsIm4xIixoKSxlKCJwIiwibjIiLGgpLGUoInAiLCJuMyIsaCksZSgicCIsIm40IixoKSxlKCJ1MSIsInUyIixsKSxlKCJ1MiIsInUzIixsKSxlKCJ1MyIsInUxIixsKSxlKCJjIiwidCIsdSksZSgicCIsImMiLGQpLGUoImNuMSIsImNuMiIsZCksZSgiY24zIiwiY240IixkKSxlKCJjZjEiLCJjZjIiLGQpLGUoImNmMyIsImNmNCIsZCksaS5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQoYSwzKSksaS5hZGRBdHRyaWJ1dGUoImNvbG9yIixuZXcgcnQobywzKSksb2UuY2FsbCh0aGlzLGksciksdGhpcy5jYW1lcmE9dCx0aGlzLmNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4JiZ0aGlzLmNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCksdGhpcy5tYXRyaXg9dC5tYXRyaXhXb3JsZCx0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITEsdGhpcy5wb2ludE1hcD1zLHRoaXMudXBkYXRlKCl9ZnVuY3Rpb24gR24odCxlKXt2b2lkIDA9PT1lJiYoZT0xNjc3Njk2MCk7dmFyIGk9bmV3IFVpbnQxNkFycmF5KFswLDEsMSwyLDIsMywzLDAsNCw1LDUsNiw2LDcsNyw0LDAsNCwxLDUsMiw2LDMsN10pLG49bmV3IEZsb2F0MzJBcnJheSgyNCkscj1uZXcgVnQ7ci5zZXRJbmRleChuZXcgSihpLDEpKSxyLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLG5ldyBKKG4sMykpLG9lLmNhbGwodGhpcyxyLG5ldyBSdCh7Y29sb3I6ZX0pKSx2b2lkIDAhPT10JiZ0aGlzLnVwZGF0ZSh0KX1mdW5jdGlvbiBIbih0LGUsaSxuLHIsYSl7WC5jYWxsKHRoaXMpLHZvaWQgMD09PW4mJihuPTE2Nzc2OTYwKSx2b2lkIDA9PT1pJiYoaT0xKSx2b2lkIDA9PT1yJiYocj0uMippKSx2b2lkIDA9PT1hJiYoYT0uMipyKSx0aGlzLnBvc2l0aW9uLmNvcHkoZSksdGhpcy5saW5lPW5ldyBhZShmcyxuZXcgUnQoe2NvbG9yOm59KSksdGhpcy5saW5lLm1hdHJpeEF1dG9VcGRhdGU9ITEsdGhpcy5hZGQodGhpcy5saW5lKSx0aGlzLmNvbmU9bmV3IGt0KHZzLG5ldyBIdCh7Y29sb3I6bn0pKSx0aGlzLmNvbmUubWF0cml4QXV0b1VwZGF0ZT0hMSx0aGlzLmFkZCh0aGlzLmNvbmUpLHRoaXMuc2V0RGlyZWN0aW9uKHQpLHRoaXMuc2V0TGVuZ3RoKGkscixhKX1mdW5jdGlvbiBWbih0KXt2YXIgZT1bMCwwLDAsdD10fHwxLDAsMCwwLDAsMCwwLHQsMCwwLDAsMCwwLDAsdF07KHQ9bmV3IFZ0KS5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQoZSwzKSksdC5hZGRBdHRyaWJ1dGUoImNvbG9yIixuZXcgcnQoWzEsMCwwLDEsLjYsMCwwLDEsMCwuNiwxLDAsMCwwLDEsMCwuNiwxXSwzKSksZT1uZXcgUnQoe3ZlcnRleENvbG9yczoyfSksb2UuY2FsbCh0aGlzLHQsZSl9ZnVuY3Rpb24ga24odCxlLGksbixyLGEpe1hpLmNhbGwodGhpcyx0LGUsaSxpLG4scixhKX1mdW5jdGlvbiBqbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLkNsb3NlZFNwbGluZUN1cnZlMyBoYXMgYmVlbiBkZXByZWNhdGVkLiBVc2UgVEhSRUUuQ2F0bXVsbFJvbUN1cnZlMyBpbnN0ZWFkLiIpLHhzLmNhbGwodGhpcyx0KSx0aGlzLnR5cGU9ImNhdG11bGxyb20iLHRoaXMuY2xvc2VkPSEwfXZvaWQgMD09PU51bWJlci5FUFNJTE9OJiYoTnVtYmVyLkVQU0lMT049TWF0aC5wb3coMiwtNTIpKSx2b2lkIDA9PT1NYXRoLnNpZ24mJihNYXRoLnNpZ249ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MD8tMTowPHQ/MTordH0pLHZvaWQgMD09PUZ1bmN0aW9uLnByb3RvdHlwZS5uYW1lJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoRnVuY3Rpb24ucHJvdG90eXBlLCJuYW1lIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9TdHJpbmcoKS5tYXRjaCgvXlxzKmZ1bmN0aW9uXHMqKFteXChcc10qKS8pWzFdfX0pLHZvaWQgMD09PU9iamVjdC5hc3NpZ24mJihPYmplY3QuYXNzaWduPWZ1bmN0aW9uKHQpe2lmKG51bGw9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0Iik7Zm9yKHZhciBlPU9iamVjdCh0KSxpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dmFyIG49YXJndW1lbnRzW2ldO2lmKG51bGwhPW4pZm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSksT2JqZWN0LmFzc2lnbihlLnByb3RvdHlwZSx7YWRkRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbih0LGUpe3ZvaWQgMD09PXRoaXMuX2xpc3RlbmVycyYmKHRoaXMuX2xpc3RlbmVycz17fSk7dmFyIGk9dGhpcy5fbGlzdGVuZXJzO3ZvaWQgMD09PWlbdF0mJihpW3RdPVtdKSwtMT09PWlbdF0uaW5kZXhPZihlKSYmaVt0XS5wdXNoKGUpfSxoYXNFdmVudExpc3RlbmVyOmZ1bmN0aW9uKHQsZSl7aWYodm9pZCAwPT09dGhpcy5fbGlzdGVuZXJzKXJldHVybiExO3ZhciBpPXRoaXMuX2xpc3RlbmVycztyZXR1cm4gdm9pZCAwIT09aVt0XSYmLTEhPT1pW3RdLmluZGV4T2YoZSl9LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24odCxlKXtpZih2b2lkIDAhPT10aGlzLl9saXN0ZW5lcnMpe3ZhciBpPXRoaXMuX2xpc3RlbmVyc1t0XTtpZih2b2lkIDAhPT1pKXt2YXIgbj1pLmluZGV4T2YoZSk7LTEhPT1uJiZpLnNwbGljZShuLDEpfX19LGRpc3BhdGNoRXZlbnQ6ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dGhpcy5fbGlzdGVuZXJzKXt2YXIgZT10aGlzLl9saXN0ZW5lcnNbdC50eXBlXTtpZih2b2lkIDAhPT1lKXt0LnRhcmdldD10aGlzO3ZhciBpLG49W10scj1lLmxlbmd0aDtmb3IoaT0wO2k8cjtpKyspbltpXT1lW2ldO2ZvcihpPTA7aTxyO2krKyluW2ldLmNhbGwodGhpcyx0KX19fX0pO3ZhciBXbixYbixZbixxbixabixKbixRbj17Tm9CbGVuZGluZzowLE5vcm1hbEJsZW5kaW5nOjEsQWRkaXRpdmVCbGVuZGluZzoyLFN1YnRyYWN0aXZlQmxlbmRpbmc6MyxNdWx0aXBseUJsZW5kaW5nOjQsQ3VzdG9tQmxlbmRpbmc6NX0sS249e1VWTWFwcGluZzozMDAsQ3ViZVJlZmxlY3Rpb25NYXBwaW5nOjMwMSxDdWJlUmVmcmFjdGlvbk1hcHBpbmc6MzAyLEVxdWlyZWN0YW5ndWxhclJlZmxlY3Rpb25NYXBwaW5nOjMwMyxFcXVpcmVjdGFuZ3VsYXJSZWZyYWN0aW9uTWFwcGluZzozMDQsU3BoZXJpY2FsUmVmbGVjdGlvbk1hcHBpbmc6MzA1LEN1YmVVVlJlZmxlY3Rpb25NYXBwaW5nOjMwNixDdWJlVVZSZWZyYWN0aW9uTWFwcGluZzozMDd9LCRuPXtSZXBlYXRXcmFwcGluZzoxZTMsQ2xhbXBUb0VkZ2VXcmFwcGluZzoxMDAxLE1pcnJvcmVkUmVwZWF0V3JhcHBpbmc6MTAwMn0sdHI9e05lYXJlc3RGaWx0ZXI6MTAwMyxOZWFyZXN0TWlwTWFwTmVhcmVzdEZpbHRlcjoxMDA0LE5lYXJlc3RNaXBNYXBMaW5lYXJGaWx0ZXI6MTAwNSxMaW5lYXJGaWx0ZXI6MTAwNixMaW5lYXJNaXBNYXBOZWFyZXN0RmlsdGVyOjEwMDcsTGluZWFyTWlwTWFwTGluZWFyRmlsdGVyOjEwMDh9LGVyPXtERUcyUkFEOk1hdGguUEkvMTgwLFJBRDJERUc6MTgwL01hdGguUEksZ2VuZXJhdGVVVUlEOihYbj0iMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiLnNwbGl0KCIiKSxZbj1BcnJheSgzNikscW49MCxmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8MzY7dCsrKTg9PT10fHwxMz09PXR8fDE4PT09dHx8MjM9PT10P1luW3RdPSItIjoxND09PXQ/WW5bdF09IjQiOihxbjw9MiYmKHFuPTMzNTU0NDMyKzE2Nzc3MjE2Kk1hdGgucmFuZG9tKCl8MCksV249MTUmcW4scW4+Pj00LFluW3RdPVhuWzE5PT09dD8zJldufDg6V25dKTtyZXR1cm4gWW4uam9pbigiIil9KSxjbGFtcDpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIE1hdGgubWF4KGUsTWF0aC5taW4oaSx0KSl9LGV1Y2xpZGVhbk1vZHVsbzpmdW5jdGlvbih0LGUpe3JldHVybih0JWUrZSklZX0sbWFwTGluZWFyOmZ1bmN0aW9uKHQsZSxpLG4scil7cmV0dXJuIG4rKHQtZSkqKHItbikvKGktZSl9LGxlcnA6ZnVuY3Rpb24odCxlLGkpe3JldHVybigxLWkpKnQraSplfSxzbW9vdGhzdGVwOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdDw9ZT8wOmk8PXQ/MToodD0odC1lKS8oaS1lKSkqdCooMy0yKnQpfSxzbW9vdGhlcnN0ZXA6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0PD1lPzA6aTw9dD8xOih0PSh0LWUpLyhpLWUpKSp0KnQqKHQqKDYqdC0xNSkrMTApfSxyYW5kSW50OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKihlLXQrMSkpfSxyYW5kRmxvYXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdCtNYXRoLnJhbmRvbSgpKihlLXQpfSxyYW5kRmxvYXRTcHJlYWQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQqKC41LU1hdGgucmFuZG9tKCkpfSxkZWdUb1JhZDpmdW5jdGlvbih0KXtyZXR1cm4gdCplci5ERUcyUkFEfSxyYWRUb0RlZzpmdW5jdGlvbih0KXtyZXR1cm4gdCplci5SQUQyREVHfSxpc1Bvd2VyT2ZUd286ZnVuY3Rpb24odCl7cmV0dXJuIDA9PSh0JnQtMSkmJjAhPT10fSxuZWFyZXN0UG93ZXJPZlR3bzpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5wb3coMixNYXRoLnJvdW5kKE1hdGgubG9nKHQpL01hdGguTE4yKSl9LG5leHRQb3dlck9mVHdvOmZ1bmN0aW9uKHQpe3JldHVybiB0LS0sdHw9dD4+MSx0fD10Pj4yLHR8PXQ+PjQsdHw9dD4+OCx0fD10Pj4xNiwrK3R9fTtWLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Vixpc1ZlY3RvcjI6ITAsZ2V0IHdpZHRoKCl7cmV0dXJuIHRoaXMueH0sc2V0IHdpZHRoKHQpe3RoaXMueD10fSxnZXQgaGVpZ2h0KCl7cmV0dXJuIHRoaXMueX0sc2V0IGhlaWdodCh0KXt0aGlzLnk9dH0sc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMueD10LHRoaXMueT1lLHRoaXN9LHNldFNjYWxhcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy55PXRoaXMueD10LHRoaXN9LHNldFg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueD10LHRoaXN9LHNldFk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueT10LHRoaXN9LHNldENvbXBvbmVudDpmdW5jdGlvbih0LGUpe3N3aXRjaCh0KXtjYXNlIDA6dGhpcy54PWU7YnJlYWs7Y2FzZSAxOnRoaXMueT1lO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoImluZGV4IGlzIG91dCBvZiByYW5nZTogIit0KX1yZXR1cm4gdGhpc30sZ2V0Q29tcG9uZW50OmZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlIDA6cmV0dXJuIHRoaXMueDtjYXNlIDE6cmV0dXJuIHRoaXMueTtkZWZhdWx0OnRocm93IEVycm9yKCJpbmRleCBpcyBvdXQgb2YgcmFuZ2U6ICIrdCl9fSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngsdGhpcy55KX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PXQueCx0aGlzLnk9dC55LHRoaXN9LGFkZDpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDAhPT1lPyhjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjI6IC5hZGQoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5hZGRWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC4iKSx0aGlzLmFkZFZlY3RvcnModCxlKSk6KHRoaXMueCs9dC54LHRoaXMueSs9dC55LHRoaXMpfSxhZGRTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueCs9dCx0aGlzLnkrPXQsdGhpc30sYWRkVmVjdG9yczpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLng9dC54K2UueCx0aGlzLnk9dC55K2UueSx0aGlzfSxhZGRTY2FsZWRWZWN0b3I6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54Kz10LngqZSx0aGlzLnkrPXQueSplLHRoaXN9LHN1YjpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDAhPT1lPyhjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjI6IC5zdWIoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5zdWJWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC4iKSx0aGlzLnN1YlZlY3RvcnModCxlKSk6KHRoaXMueC09dC54LHRoaXMueS09dC55LHRoaXMpfSxzdWJTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueC09dCx0aGlzLnktPXQsdGhpc30sc3ViVmVjdG9yczpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLng9dC54LWUueCx0aGlzLnk9dC55LWUueSx0aGlzfSxtdWx0aXBseTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54Kj10LngsdGhpcy55Kj10LnksdGhpc30sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIGlzRmluaXRlKHQpPyh0aGlzLngqPXQsdGhpcy55Kj10KTp0aGlzLnk9dGhpcy54PTAsdGhpc30sZGl2aWRlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLngvPXQueCx0aGlzLnkvPXQueSx0aGlzfSxkaXZpZGVTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubXVsdGlwbHlTY2FsYXIoMS90KX0sbWluOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng9TWF0aC5taW4odGhpcy54LHQueCksdGhpcy55PU1hdGgubWluKHRoaXMueSx0LnkpLHRoaXN9LG1heDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PU1hdGgubWF4KHRoaXMueCx0LngpLHRoaXMueT1NYXRoLm1heCh0aGlzLnksdC55KSx0aGlzfSxjbGFtcDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLng9TWF0aC5tYXgodC54LE1hdGgubWluKGUueCx0aGlzLngpKSx0aGlzLnk9TWF0aC5tYXgodC55LE1hdGgubWluKGUueSx0aGlzLnkpKSx0aGlzfSxjbGFtcFNjYWxhcjpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1abiYmKFpuPW5ldyBWLEpuPW5ldyBWKSxabi5zZXQodCx0KSxKbi5zZXQoZSxlKSx0aGlzLmNsYW1wKFpuLEpuKX0sY2xhbXBMZW5ndGg6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmxlbmd0aCgpO3JldHVybiB0aGlzLm11bHRpcGx5U2NhbGFyKE1hdGgubWF4KHQsTWF0aC5taW4oZSxpKSkvaSl9LGZsb29yOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD1NYXRoLmZsb29yKHRoaXMueCksdGhpcy55PU1hdGguZmxvb3IodGhpcy55KSx0aGlzfSxjZWlsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD1NYXRoLmNlaWwodGhpcy54KSx0aGlzLnk9TWF0aC5jZWlsKHRoaXMueSksdGhpc30scm91bmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PU1hdGgucm91bmQodGhpcy54KSx0aGlzLnk9TWF0aC5yb3VuZCh0aGlzLnkpLHRoaXN9LHJvdW5kVG9aZXJvOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD10aGlzLng8MD9NYXRoLmNlaWwodGhpcy54KTpNYXRoLmZsb29yKHRoaXMueCksdGhpcy55PXRoaXMueTwwP01hdGguY2VpbCh0aGlzLnkpOk1hdGguZmxvb3IodGhpcy55KSx0aGlzfSxuZWdhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PS10aGlzLngsdGhpcy55PS10aGlzLnksdGhpc30sZG90OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLngqdC54K3RoaXMueSp0Lnl9LGxlbmd0aFNxOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueX0sbGVuZ3RoOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguc3FydCh0aGlzLngqdGhpcy54K3RoaXMueSp0aGlzLnkpfSxsZW5ndGhNYW5oYXR0YW46ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5hYnModGhpcy54KStNYXRoLmFicyh0aGlzLnkpfSxub3JtYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXZpZGVTY2FsYXIodGhpcy5sZW5ndGgoKSl9LGFuZ2xlOmZ1bmN0aW9uKCl7dmFyIHQ9TWF0aC5hdGFuMih0aGlzLnksdGhpcy54KTtyZXR1cm4gdDwwJiYodCs9MipNYXRoLlBJKSx0fSxkaXN0YW5jZVRvOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNxcnQodGhpcy5kaXN0YW5jZVRvU3F1YXJlZCh0KSl9LGRpc3RhbmNlVG9TcXVhcmVkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMueC10Lng7cmV0dXJuIGUqZSsodD10aGlzLnktdC55KSp0fSxkaXN0YW5jZVRvTWFuaGF0dGFuOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0aGlzLngtdC54KStNYXRoLmFicyh0aGlzLnktdC55KX0sc2V0TGVuZ3RoOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm11bHRpcGx5U2NhbGFyKHQvdGhpcy5sZW5ndGgoKSl9LGxlcnA6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54Kz0odC54LXRoaXMueCkqZSx0aGlzLnkrPSh0LnktdGhpcy55KSplLHRoaXN9LGxlcnBWZWN0b3JzOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5zdWJWZWN0b3JzKGUsdCkubXVsdGlwbHlTY2FsYXIoaSkuYWRkKHQpfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQueD09PXRoaXMueCYmdC55PT09dGhpcy55fSxmcm9tQXJyYXk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MCksdGhpcy54PXRbZV0sdGhpcy55PXRbZSsxXSx0aGlzfSx0b0FycmF5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PVtdKSx2b2lkIDA9PT1lJiYoZT0wKSx0W2VdPXRoaXMueCx0W2UrMV09dGhpcy55LHR9LGZyb21BdHRyaWJ1dGU6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB2b2lkIDAhPT1pJiZjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjI6IG9mZnNldCBoYXMgYmVlbiByZW1vdmVkIGZyb20gLmZyb21BdHRyaWJ1dGUoKS4iKSx0aGlzLng9dC5nZXRYKGUpLHRoaXMueT10LmdldFkoZSksdGhpc30scm90YXRlQXJvdW5kOmZ1bmN0aW9uKHQsZSl7dmFyIGk9TWF0aC5jb3MoZSksbj1NYXRoLnNpbihlKSxyPXRoaXMueC10LngsYT10aGlzLnktdC55O3JldHVybiB0aGlzLng9cippLWEqbit0LngsdGhpcy55PXIqbithKmkrdC55LHRoaXN9fTt2YXIgaXIsbnIscnIsYXIsb3Isc3IsY3IsaHIsbHIsdXIsZHIscHIsZnIsbXIsZ3IsdnIseXIseHIsX3IsYnIsd3I9MDt6LkRFRkFVTFRfSU1BR0U9dm9pZCAwLHouREVGQVVMVF9NQVBQSU5HPTMwMCx6LnByb3RvdHlwZT17Y29uc3RydWN0b3I6eixpc1RleHR1cmU6ITAsc2V0IG5lZWRzVXBkYXRlKHQpeyEwPT09dCYmdGhpcy52ZXJzaW9uKyt9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyB0aGlzLmNvbnN0cnVjdG9yKS5jb3B5KHRoaXMpfSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmltYWdlPXQuaW1hZ2UsdGhpcy5taXBtYXBzPXQubWlwbWFwcy5zbGljZSgwKSx0aGlzLm1hcHBpbmc9dC5tYXBwaW5nLHRoaXMud3JhcFM9dC53cmFwUyx0aGlzLndyYXBUPXQud3JhcFQsdGhpcy5tYWdGaWx0ZXI9dC5tYWdGaWx0ZXIsdGhpcy5taW5GaWx0ZXI9dC5taW5GaWx0ZXIsdGhpcy5hbmlzb3Ryb3B5PXQuYW5pc290cm9weSx0aGlzLmZvcm1hdD10LmZvcm1hdCx0aGlzLnR5cGU9dC50eXBlLHRoaXMub2Zmc2V0LmNvcHkodC5vZmZzZXQpLHRoaXMucmVwZWF0LmNvcHkodC5yZXBlYXQpLHRoaXMuZ2VuZXJhdGVNaXBtYXBzPXQuZ2VuZXJhdGVNaXBtYXBzLHRoaXMucHJlbXVsdGlwbHlBbHBoYT10LnByZW11bHRpcGx5QWxwaGEsdGhpcy5mbGlwWT10LmZsaXBZLHRoaXMudW5wYWNrQWxpZ25tZW50PXQudW5wYWNrQWxpZ25tZW50LHRoaXMuZW5jb2Rpbmc9dC5lbmNvZGluZyx0aGlzfSx0b0pTT046ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dC50ZXh0dXJlc1t0aGlzLnV1aWRdKXJldHVybiB0LnRleHR1cmVzW3RoaXMudXVpZF07dmFyIGU9e21ldGFkYXRhOnt2ZXJzaW9uOjQuNCx0eXBlOiJUZXh0dXJlIixnZW5lcmF0b3I6IlRleHR1cmUudG9KU09OIn0sdXVpZDp0aGlzLnV1aWQsbmFtZTp0aGlzLm5hbWUsbWFwcGluZzp0aGlzLm1hcHBpbmcscmVwZWF0Olt0aGlzLnJlcGVhdC54LHRoaXMucmVwZWF0LnldLG9mZnNldDpbdGhpcy5vZmZzZXQueCx0aGlzLm9mZnNldC55XSx3cmFwOlt0aGlzLndyYXBTLHRoaXMud3JhcFRdLG1pbkZpbHRlcjp0aGlzLm1pbkZpbHRlcixtYWdGaWx0ZXI6dGhpcy5tYWdGaWx0ZXIsYW5pc290cm9weTp0aGlzLmFuaXNvdHJvcHksZmxpcFk6dGhpcy5mbGlwWX07aWYodm9pZCAwIT09dGhpcy5pbWFnZSl7dmFyIGk9dGhpcy5pbWFnZTtpZih2b2lkIDA9PT1pLnV1aWQmJihpLnV1aWQ9ZXIuZ2VuZXJhdGVVVUlEKCkpLHZvaWQgMD09PXQuaW1hZ2VzW2kudXVpZF0pe3ZhciBuLHI9dC5pbWFnZXMsYT1pLnV1aWQsbz1pLnV1aWQ7dm9pZCAwIT09aS50b0RhdGFVUkw/bj1pOigobj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCJjYW52YXMiKSkud2lkdGg9aS53aWR0aCxuLmhlaWdodD1pLmhlaWdodCxuLmdldENvbnRleHQoIjJkIikuZHJhd0ltYWdlKGksMCwwLGkud2lkdGgsaS5oZWlnaHQpKSxuPTIwNDg8bi53aWR0aHx8MjA0ODxuLmhlaWdodD9uLnRvRGF0YVVSTCgiaW1hZ2UvanBlZyIsLjYpOm4udG9EYXRhVVJMKCJpbWFnZS9wbmciKSxyW2FdPXt1dWlkOm8sdXJsOm59fWUuaW1hZ2U9aS51dWlkfXJldHVybiB0LnRleHR1cmVzW3RoaXMudXVpZF09ZX0sZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuZGlzcGF0Y2hFdmVudCh7dHlwZToiZGlzcG9zZSJ9KX0sdHJhbnNmb3JtVXY6ZnVuY3Rpb24odCl7aWYoMzAwPT09dGhpcy5tYXBwaW5nKXtpZih0Lm11bHRpcGx5KHRoaXMucmVwZWF0KSx0LmFkZCh0aGlzLm9mZnNldCksdC54PDB8fDE8dC54KXN3aXRjaCh0aGlzLndyYXBTKXtjYXNlIDFlMzp0LngtPU1hdGguZmxvb3IodC54KTticmVhaztjYXNlIDEwMDE6dC54PXQueDwwPzA6MTticmVhaztjYXNlIDEwMDI6dC54PTE9PT1NYXRoLmFicyhNYXRoLmZsb29yKHQueCklMik/TWF0aC5jZWlsKHQueCktdC54OnQueC1NYXRoLmZsb29yKHQueCl9aWYodC55PDB8fDE8dC55KXN3aXRjaCh0aGlzLndyYXBUKXtjYXNlIDFlMzp0LnktPU1hdGguZmxvb3IodC55KTticmVhaztjYXNlIDEwMDE6dC55PXQueTwwPzA6MTticmVhaztjYXNlIDEwMDI6dC55PTE9PT1NYXRoLmFicyhNYXRoLmZsb29yKHQueSklMik/TWF0aC5jZWlsKHQueSktdC55OnQueS1NYXRoLmZsb29yKHQueSl9dGhpcy5mbGlwWSYmKHQueT0xLXQueSl9fX0sT2JqZWN0LmFzc2lnbih6LnByb3RvdHlwZSxlLnByb3RvdHlwZSksUHQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpQdCxpc1ZlY3RvcjQ6ITAsc2V0OmZ1bmN0aW9uKHQsZSxpLG4pe3JldHVybiB0aGlzLng9dCx0aGlzLnk9ZSx0aGlzLno9aSx0aGlzLnc9bix0aGlzfSxzZXRTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudz10aGlzLno9dGhpcy55PXRoaXMueD10LHRoaXN9LHNldFg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueD10LHRoaXN9LHNldFk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueT10LHRoaXN9LHNldFo6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuej10LHRoaXN9LHNldFc6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudz10LHRoaXN9LHNldENvbXBvbmVudDpmdW5jdGlvbih0LGUpe3N3aXRjaCh0KXtjYXNlIDA6dGhpcy54PWU7YnJlYWs7Y2FzZSAxOnRoaXMueT1lO2JyZWFrO2Nhc2UgMjp0aGlzLno9ZTticmVhaztjYXNlIDM6dGhpcy53PWU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcigiaW5kZXggaXMgb3V0IG9mIHJhbmdlOiAiK3QpfXJldHVybiB0aGlzfSxnZXRDb21wb25lbnQ6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UgMDpyZXR1cm4gdGhpcy54O2Nhc2UgMTpyZXR1cm4gdGhpcy55O2Nhc2UgMjpyZXR1cm4gdGhpcy56O2Nhc2UgMzpyZXR1cm4gdGhpcy53O2RlZmF1bHQ6dGhyb3cgRXJyb3IoImluZGV4IGlzIG91dCBvZiByYW5nZTogIit0KX19LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMueCx0aGlzLnksdGhpcy56LHRoaXMudyl9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueD10LngsdGhpcy55PXQueSx0aGlzLno9dC56LHRoaXMudz12b2lkIDAhPT10Lnc/dC53OjEsdGhpc30sYWRkOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMCE9PWU/KGNvbnNvbGUud2FybigiVEhSRUUuVmVjdG9yNDogLmFkZCgpIG5vdyBvbmx5IGFjY2VwdHMgb25lIGFyZ3VtZW50LiBVc2UgLmFkZFZlY3RvcnMoIGEsIGIgKSBpbnN0ZWFkLiIpLHRoaXMuYWRkVmVjdG9ycyh0LGUpKToodGhpcy54Kz10LngsdGhpcy55Kz10LnksdGhpcy56Kz10LnosdGhpcy53Kz10LncsdGhpcyl9LGFkZFNjYWxhcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54Kz10LHRoaXMueSs9dCx0aGlzLnorPXQsdGhpcy53Kz10LHRoaXN9LGFkZFZlY3RvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54PXQueCtlLngsdGhpcy55PXQueStlLnksdGhpcy56PXQueitlLnosdGhpcy53PXQudytlLncsdGhpc30sYWRkU2NhbGVkVmVjdG9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMueCs9dC54KmUsdGhpcy55Kz10LnkqZSx0aGlzLnorPXQueiplLHRoaXMudys9dC53KmUsdGhpc30sc3ViOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMCE9PWU/KGNvbnNvbGUud2FybigiVEhSRUUuVmVjdG9yNDogLnN1YigpIG5vdyBvbmx5IGFjY2VwdHMgb25lIGFyZ3VtZW50LiBVc2UgLnN1YlZlY3RvcnMoIGEsIGIgKSBpbnN0ZWFkLiIpLHRoaXMuc3ViVmVjdG9ycyh0LGUpKToodGhpcy54LT10LngsdGhpcy55LT10LnksdGhpcy56LT10LnosdGhpcy53LT10LncsdGhpcyl9LHN1YlNjYWxhcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54LT10LHRoaXMueS09dCx0aGlzLnotPXQsdGhpcy53LT10LHRoaXN9LHN1YlZlY3RvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54PXQueC1lLngsdGhpcy55PXQueS1lLnksdGhpcy56PXQuei1lLnosdGhpcy53PXQudy1lLncsdGhpc30sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIGlzRmluaXRlKHQpPyh0aGlzLngqPXQsdGhpcy55Kj10LHRoaXMueio9dCx0aGlzLncqPXQpOnRoaXMudz10aGlzLno9dGhpcy55PXRoaXMueD0wLHRoaXN9LGFwcGx5TWF0cml4NDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLngsaT10aGlzLnksbj10aGlzLnoscj10aGlzLnc7cmV0dXJuIHQ9dC5lbGVtZW50cyx0aGlzLng9dFswXSplK3RbNF0qaSt0WzhdKm4rdFsxMl0qcix0aGlzLnk9dFsxXSplK3RbNV0qaSt0WzldKm4rdFsxM10qcix0aGlzLno9dFsyXSplK3RbNl0qaSt0WzEwXSpuK3RbMTRdKnIsdGhpcy53PXRbM10qZSt0WzddKmkrdFsxMV0qbit0WzE1XSpyLHRoaXN9LGRpdmlkZVNjYWxhcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tdWx0aXBseVNjYWxhcigxL3QpfSxzZXRBeGlzQW5nbGVGcm9tUXVhdGVybmlvbjpmdW5jdGlvbih0KXt0aGlzLnc9MipNYXRoLmFjb3ModC53KTt2YXIgZT1NYXRoLnNxcnQoMS10LncqdC53KTtyZXR1cm4gZTwxZS00Pyh0aGlzLng9MSx0aGlzLno9dGhpcy55PTApOih0aGlzLng9dC54L2UsdGhpcy55PXQueS9lLHRoaXMuej10LnovZSksdGhpc30sc2V0QXhpc0FuZ2xlRnJvbVJvdGF0aW9uTWF0cml4OmZ1bmN0aW9uKHQpe3ZhciBlLGksbixyPSh0PXQuZWxlbWVudHMpWzBdO249dFs0XTt2YXIgYT10WzhdLG89dFsxXSxzPXRbNV0sYz10WzldO2k9dFsyXSxlPXRbNl07dmFyIGg9dFsxMF07cmV0dXJuIE1hdGguYWJzKG4tbyk8LjAxJiZNYXRoLmFicyhhLWkpPC4wMSYmTWF0aC5hYnMoYy1lKTwuMDE/TWF0aC5hYnMobitvKTwuMSYmTWF0aC5hYnMoYStpKTwuMSYmTWF0aC5hYnMoYytlKTwuMSYmTWF0aC5hYnMocitzK2gtMyk8LjE/dGhpcy5zZXQoMSwwLDAsMCk6KHQ9TWF0aC5QSSxoPShoKzEpLzIsbj0obitvKS80LGE9KGEraSkvNCxjPShjK2UpLzQsKHM9KHMrMSkvMik8KHI9KHIrMSkvMikmJmg8cj9uPXI8LjAxPyhlPTAsaT0uNzA3MTA2NzgxKTooaT1uLyhlPU1hdGguc3FydChyKSksYS9lKTpoPHM/bj1zPC4wMT8oaT0wLGU9LjcwNzEwNjc4MSk6KGU9bi8oaT1NYXRoLnNxcnQocykpLGMvaSk6aDwuMDE/KGk9ZT0uNzA3MTA2NzgxLG49MCk6KGU9YS8obj1NYXRoLnNxcnQoaCkpLGk9Yy9uKSx0aGlzLnNldChlLGksbix0KSk6KHQ9TWF0aC5zcXJ0KChlLWMpKihlLWMpKyhhLWkpKihhLWkpKyhvLW4pKihvLW4pKSxNYXRoLmFicyh0KTwuMDAxJiYodD0xKSx0aGlzLng9KGUtYykvdCx0aGlzLnk9KGEtaSkvdCx0aGlzLno9KG8tbikvdCx0aGlzLnc9TWF0aC5hY29zKChyK3MraC0xKS8yKSksdGhpc30sbWluOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng9TWF0aC5taW4odGhpcy54LHQueCksdGhpcy55PU1hdGgubWluKHRoaXMueSx0LnkpLHRoaXMuej1NYXRoLm1pbih0aGlzLnosdC56KSx0aGlzLnc9TWF0aC5taW4odGhpcy53LHQudyksdGhpc30sbWF4OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng9TWF0aC5tYXgodGhpcy54LHQueCksdGhpcy55PU1hdGgubWF4KHRoaXMueSx0LnkpLHRoaXMuej1NYXRoLm1heCh0aGlzLnosdC56KSx0aGlzLnc9TWF0aC5tYXgodGhpcy53LHQudyksdGhpc30sY2xhbXA6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54PU1hdGgubWF4KHQueCxNYXRoLm1pbihlLngsdGhpcy54KSksdGhpcy55PU1hdGgubWF4KHQueSxNYXRoLm1pbihlLnksdGhpcy55KSksdGhpcy56PU1hdGgubWF4KHQueixNYXRoLm1pbihlLnosdGhpcy56KSksdGhpcy53PU1hdGgubWF4KHQudyxNYXRoLm1pbihlLncsdGhpcy53KSksdGhpc30sY2xhbXBTY2FsYXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09aXImJihpcj1uZXcgUHQsbnI9bmV3IFB0KSxpci5zZXQodCx0LHQsdCksbnIuc2V0KGUsZSxlLGUpLHRoaXMuY2xhbXAoaXIsbnIpfSxmbG9vcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLng9TWF0aC5mbG9vcih0aGlzLngpLHRoaXMueT1NYXRoLmZsb29yKHRoaXMueSksdGhpcy56PU1hdGguZmxvb3IodGhpcy56KSx0aGlzLnc9TWF0aC5mbG9vcih0aGlzLncpLHRoaXN9LGNlaWw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PU1hdGguY2VpbCh0aGlzLngpLHRoaXMueT1NYXRoLmNlaWwodGhpcy55KSx0aGlzLno9TWF0aC5jZWlsKHRoaXMueiksdGhpcy53PU1hdGguY2VpbCh0aGlzLncpLHRoaXN9LHJvdW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD1NYXRoLnJvdW5kKHRoaXMueCksdGhpcy55PU1hdGgucm91bmQodGhpcy55KSx0aGlzLno9TWF0aC5yb3VuZCh0aGlzLnopLHRoaXMudz1NYXRoLnJvdW5kKHRoaXMudyksdGhpc30scm91bmRUb1plcm86ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PXRoaXMueDwwP01hdGguY2VpbCh0aGlzLngpOk1hdGguZmxvb3IodGhpcy54KSx0aGlzLnk9dGhpcy55PDA/TWF0aC5jZWlsKHRoaXMueSk6TWF0aC5mbG9vcih0aGlzLnkpLHRoaXMuej10aGlzLno8MD9NYXRoLmNlaWwodGhpcy56KTpNYXRoLmZsb29yKHRoaXMueiksdGhpcy53PXRoaXMudzwwP01hdGguY2VpbCh0aGlzLncpOk1hdGguZmxvb3IodGhpcy53KSx0aGlzfSxuZWdhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PS10aGlzLngsdGhpcy55PS10aGlzLnksdGhpcy56PS10aGlzLnosdGhpcy53PS10aGlzLncsdGhpc30sZG90OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLngqdC54K3RoaXMueSp0LnkrdGhpcy56KnQueit0aGlzLncqdC53fSxsZW5ndGhTcTpmdW5jdGlvbigpe3JldHVybiB0aGlzLngqdGhpcy54K3RoaXMueSp0aGlzLnkrdGhpcy56KnRoaXMueit0aGlzLncqdGhpcy53fSxsZW5ndGg6ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSt0aGlzLnoqdGhpcy56K3RoaXMudyp0aGlzLncpfSxsZW5ndGhNYW5oYXR0YW46ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5hYnModGhpcy54KStNYXRoLmFicyh0aGlzLnkpK01hdGguYWJzKHRoaXMueikrTWF0aC5hYnModGhpcy53KX0sbm9ybWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGl2aWRlU2NhbGFyKHRoaXMubGVuZ3RoKCkpfSxzZXRMZW5ndGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubXVsdGlwbHlTY2FsYXIodC90aGlzLmxlbmd0aCgpKX0sbGVycDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLngrPSh0LngtdGhpcy54KSplLHRoaXMueSs9KHQueS10aGlzLnkpKmUsdGhpcy56Kz0odC56LXRoaXMueikqZSx0aGlzLncrPSh0LnctdGhpcy53KSplLHRoaXN9LGxlcnBWZWN0b3JzOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5zdWJWZWN0b3JzKGUsdCkubXVsdGlwbHlTY2FsYXIoaSkuYWRkKHQpfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQueD09PXRoaXMueCYmdC55PT09dGhpcy55JiZ0Lno9PT10aGlzLnomJnQudz09PXRoaXMud30sZnJvbUFycmF5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLHRoaXMueD10W2VdLHRoaXMueT10W2UrMV0sdGhpcy56PXRbZSsyXSx0aGlzLnc9dFtlKzNdLHRoaXN9LHRvQXJyYXk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9W10pLHZvaWQgMD09PWUmJihlPTApLHRbZV09dGhpcy54LHRbZSsxXT10aGlzLnksdFtlKzJdPXRoaXMueix0W2UrM109dGhpcy53LHR9LGZyb21BdHRyaWJ1dGU6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB2b2lkIDAhPT1pJiZjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjQ6IG9mZnNldCBoYXMgYmVlbiByZW1vdmVkIGZyb20gLmZyb21BdHRyaWJ1dGUoKS4iKSx0aGlzLng9dC5nZXRYKGUpLHRoaXMueT10LmdldFkoZSksdGhpcy56PXQuZ2V0WihlKSx0aGlzLnc9dC5nZXRXKGUpLHRoaXN9fSxPYmplY3QuYXNzaWduKEIucHJvdG90eXBlLGUucHJvdG90eXBlLHtpc1dlYkdMUmVuZGVyVGFyZ2V0OiEwLHNldFNpemU6ZnVuY3Rpb24odCxlKXt0aGlzLndpZHRoPT09dCYmdGhpcy5oZWlnaHQ9PT1lfHwodGhpcy53aWR0aD10LHRoaXMuaGVpZ2h0PWUsdGhpcy5kaXNwb3NlKCkpLHRoaXMudmlld3BvcnQuc2V0KDAsMCx0LGUpLHRoaXMuc2Npc3Nvci5zZXQoMCwwLHQsZSl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyB0aGlzLmNvbnN0cnVjdG9yKS5jb3B5KHRoaXMpfSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndpZHRoPXQud2lkdGgsdGhpcy5oZWlnaHQ9dC5oZWlnaHQsdGhpcy52aWV3cG9ydC5jb3B5KHQudmlld3BvcnQpLHRoaXMudGV4dHVyZT10LnRleHR1cmUuY2xvbmUoKSx0aGlzLmRlcHRoQnVmZmVyPXQuZGVwdGhCdWZmZXIsdGhpcy5zdGVuY2lsQnVmZmVyPXQuc3RlbmNpbEJ1ZmZlcix0aGlzLmRlcHRoVGV4dHVyZT10LmRlcHRoVGV4dHVyZSx0aGlzfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KHt0eXBlOiJkaXNwb3NlIn0pfX0pLCgobi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShCLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPW4pLnByb3RvdHlwZS5pc1dlYkdMUmVuZGVyVGFyZ2V0Q3ViZT0hMCxzLnByb3RvdHlwZT17Y29uc3RydWN0b3I6cyxnZXQgeCgpe3JldHVybiB0aGlzLl94fSxzZXQgeCh0KXt0aGlzLl94PXQsdGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LGdldCB5KCl7cmV0dXJuIHRoaXMuX3l9LHNldCB5KHQpe3RoaXMuX3k9dCx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKX0sZ2V0IHooKXtyZXR1cm4gdGhpcy5fen0sc2V0IHoodCl7dGhpcy5fej10LHRoaXMub25DaGFuZ2VDYWxsYmFjaygpfSxnZXQgdygpe3JldHVybiB0aGlzLl93fSxzZXQgdyh0KXt0aGlzLl93PXQsdGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LHNldDpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdGhpcy5feD10LHRoaXMuX3k9ZSx0aGlzLl96PWksdGhpcy5fdz1uLHRoaXMub25DaGFuZ2VDYWxsYmFjaygpLHRoaXN9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMuX3gsdGhpcy5feSx0aGlzLl96LHRoaXMuX3cpfSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl94PXQueCx0aGlzLl95PXQueSx0aGlzLl96PXQueix0aGlzLl93PXQudyx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSxzZXRGcm9tRXVsZXI6ZnVuY3Rpb24odCxlKXtpZighMT09PSh0JiZ0LmlzRXVsZXIpKXRocm93IEVycm9yKCJUSFJFRS5RdWF0ZXJuaW9uOiAuc2V0RnJvbUV1bGVyKCkgbm93IGV4cGVjdHMgYW4gRXVsZXIgcm90YXRpb24gcmF0aGVyIHRoYW4gYSBWZWN0b3IzIGFuZCBvcmRlci4iKTt2YXIgaT1NYXRoLmNvcyh0Ll94LzIpLG49TWF0aC5jb3ModC5feS8yKSxyPU1hdGguY29zKHQuX3ovMiksYT1NYXRoLnNpbih0Ll94LzIpLG89TWF0aC5zaW4odC5feS8yKSxzPU1hdGguc2luKHQuX3ovMiksYz10Lm9yZGVyO3JldHVybiJYWVoiPT09Yz8odGhpcy5feD1hKm4qcitpKm8qcyx0aGlzLl95PWkqbypyLWEqbipzLHRoaXMuX3o9aSpuKnMrYSpvKnIsdGhpcy5fdz1pKm4qci1hKm8qcyk6IllYWiI9PT1jPyh0aGlzLl94PWEqbipyK2kqbypzLHRoaXMuX3k9aSpvKnItYSpuKnMsdGhpcy5fej1pKm4qcy1hKm8qcix0aGlzLl93PWkqbipyK2EqbypzKToiWlhZIj09PWM/KHRoaXMuX3g9YSpuKnItaSpvKnMsdGhpcy5feT1pKm8qcithKm4qcyx0aGlzLl96PWkqbipzK2EqbypyLHRoaXMuX3c9aSpuKnItYSpvKnMpOiJaWVgiPT09Yz8odGhpcy5feD1hKm4qci1pKm8qcyx0aGlzLl95PWkqbypyK2EqbipzLHRoaXMuX3o9aSpuKnMtYSpvKnIsdGhpcy5fdz1pKm4qcithKm8qcyk6IllaWCI9PT1jPyh0aGlzLl94PWEqbipyK2kqbypzLHRoaXMuX3k9aSpvKnIrYSpuKnMsdGhpcy5fej1pKm4qcy1hKm8qcix0aGlzLl93PWkqbipyLWEqbypzKToiWFpZIj09PWMmJih0aGlzLl94PWEqbipyLWkqbypzLHRoaXMuX3k9aSpvKnItYSpuKnMsdGhpcy5fej1pKm4qcythKm8qcix0aGlzLl93PWkqbipyK2EqbypzKSwhMSE9PWUmJnRoaXMub25DaGFuZ2VDYWxsYmFjaygpLHRoaXN9LHNldEZyb21BeGlzQW5nbGU6ZnVuY3Rpb24odCxlKXt2YXIgaT1lLzIsbj1NYXRoLnNpbihpKTtyZXR1cm4gdGhpcy5feD10Lngqbix0aGlzLl95PXQueSpuLHRoaXMuX3o9dC56Km4sdGhpcy5fdz1NYXRoLmNvcyhpKSx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSxzZXRGcm9tUm90YXRpb25NYXRyaXg6ZnVuY3Rpb24odCl7dmFyIGU9KGk9dC5lbGVtZW50cylbMF07dD1pWzRdO3ZhciBpLG49aVs4XSxyPWlbMV0sYT1pWzVdLG89aVs5XSxzPWlbMl0sYz1pWzZdLGg9ZSthKyhpPWlbMTBdKTtyZXR1cm4gMDxoPyhlPS41L01hdGguc3FydChoKzEpLHRoaXMuX3c9LjI1L2UsdGhpcy5feD0oYy1vKSplLHRoaXMuX3k9KG4tcykqZSx0aGlzLl96PShyLXQpKmUpOmE8ZSYmaTxlPyhlPTIqTWF0aC5zcXJ0KDErZS1hLWkpLHRoaXMuX3c9KGMtbykvZSx0aGlzLl94PS4yNSplLHRoaXMuX3k9KHQrcikvZSx0aGlzLl96PShuK3MpL2UpOmk8YT8oZT0yKk1hdGguc3FydCgxK2EtZS1pKSx0aGlzLl93PShuLXMpL2UsdGhpcy5feD0odCtyKS9lLHRoaXMuX3k9LjI1KmUsdGhpcy5fej0obytjKS9lKTooZT0yKk1hdGguc3FydCgxK2ktZS1hKSx0aGlzLl93PShyLXQpL2UsdGhpcy5feD0obitzKS9lLHRoaXMuX3k9KG8rYykvZSx0aGlzLl96PS4yNSplKSx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSxzZXRGcm9tVW5pdFZlY3RvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09cnImJihycj1uZXcgQ3QpLChhcj10LmRvdChlKSsxKTwxZS02Pyhhcj0wLE1hdGguYWJzKHQueCk+TWF0aC5hYnModC56KT9yci5zZXQoLXQueSx0LngsMCk6cnIuc2V0KDAsLXQueix0LnkpKTpyci5jcm9zc1ZlY3RvcnModCxlKSx0aGlzLl94PXJyLngsdGhpcy5feT1yci55LHRoaXMuX3o9cnIueix0aGlzLl93PWFyLHRoaXMubm9ybWFsaXplKCl9LGludmVyc2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb25qdWdhdGUoKS5ub3JtYWxpemUoKX0sY29uanVnYXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3gqPS0xLHRoaXMuX3kqPS0xLHRoaXMuX3oqPS0xLHRoaXMub25DaGFuZ2VDYWxsYmFjaygpLHRoaXN9LGRvdDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5feCp0Ll94K3RoaXMuX3kqdC5feSt0aGlzLl96KnQuX3ordGhpcy5fdyp0Ll93fSxsZW5ndGhTcTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl94KnRoaXMuX3grdGhpcy5feSp0aGlzLl95K3RoaXMuX3oqdGhpcy5feit0aGlzLl93KnRoaXMuX3d9LGxlbmd0aDpmdW5jdGlvbigpe3JldHVybiBNYXRoLnNxcnQodGhpcy5feCp0aGlzLl94K3RoaXMuX3kqdGhpcy5feSt0aGlzLl96KnRoaXMuX3ordGhpcy5fdyp0aGlzLl93KX0sbm9ybWFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sZW5ndGgoKTtyZXR1cm4gMD09PXQ/KHRoaXMuX3o9dGhpcy5feT10aGlzLl94PTAsdGhpcy5fdz0xKToodD0xL3QsdGhpcy5feCo9dCx0aGlzLl95Kj10LHRoaXMuX3oqPXQsdGhpcy5fdyo9dCksdGhpcy5vbkNoYW5nZUNhbGxiYWNrKCksdGhpc30sbXVsdGlwbHk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwIT09ZT8oY29uc29sZS53YXJuKCJUSFJFRS5RdWF0ZXJuaW9uOiAubXVsdGlwbHkoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5tdWx0aXBseVF1YXRlcm5pb25zKCBhLCBiICkgaW5zdGVhZC4iKSx0aGlzLm11bHRpcGx5UXVhdGVybmlvbnModCxlKSk6dGhpcy5tdWx0aXBseVF1YXRlcm5pb25zKHRoaXMsdCl9LHByZW11bHRpcGx5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm11bHRpcGx5UXVhdGVybmlvbnModCx0aGlzKX0sbXVsdGlwbHlRdWF0ZXJuaW9uczpmdW5jdGlvbih0LGUpe3ZhciBpPXQuX3gsbj10Ll95LHI9dC5feixhPXQuX3csbz1lLl94LHM9ZS5feSxjPWUuX3osaD1lLl93O3JldHVybiB0aGlzLl94PWkqaCthKm8rbipjLXIqcyx0aGlzLl95PW4qaCthKnMrcipvLWkqYyx0aGlzLl96PXIqaCthKmMraSpzLW4qbyx0aGlzLl93PWEqaC1pKm8tbipzLXIqYyx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSxzbGVycDpmdW5jdGlvbih0LGUpe2lmKDA9PT1lKXJldHVybiB0aGlzO2lmKDE9PT1lKXJldHVybiB0aGlzLmNvcHkodCk7dmFyIGk9dGhpcy5feCxuPXRoaXMuX3kscj10aGlzLl96LGE9dGhpcy5fdztpZigoYz1hKnQuX3craSp0Ll94K24qdC5feStyKnQuX3opPDA/KHRoaXMuX3c9LXQuX3csdGhpcy5feD0tdC5feCx0aGlzLl95PS10Ll95LHRoaXMuX3o9LXQuX3osYz0tYyk6dGhpcy5jb3B5KHQpLDE8PWMpcmV0dXJuIHRoaXMuX3c9YSx0aGlzLl94PWksdGhpcy5feT1uLHRoaXMuX3o9cix0aGlzO3ZhciBvPU1hdGguc3FydCgxLWMqYyk7aWYoTWF0aC5hYnMobyk8LjAwMSlyZXR1cm4gdGhpcy5fdz0uNSooYSt0aGlzLl93KSx0aGlzLl94PS41KihpK3RoaXMuX3gpLHRoaXMuX3k9LjUqKG4rdGhpcy5feSksdGhpcy5fej0uNSoocit0aGlzLl96KSx0aGlzO3ZhciBzPU1hdGguYXRhbjIobyxjKSxjPU1hdGguc2luKCgxLWUpKnMpL287bz1NYXRoLnNpbihlKnMpL287cmV0dXJuIHRoaXMuX3c9YSpjK3RoaXMuX3cqbyx0aGlzLl94PWkqYyt0aGlzLl94Km8sdGhpcy5feT1uKmMrdGhpcy5feSpvLHRoaXMuX3o9cipjK3RoaXMuX3oqbyx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX3g9PT10aGlzLl94JiZ0Ll95PT09dGhpcy5feSYmdC5fej09PXRoaXMuX3omJnQuX3c9PT10aGlzLl93fSxmcm9tQXJyYXk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MCksdGhpcy5feD10W2VdLHRoaXMuX3k9dFtlKzFdLHRoaXMuX3o9dFtlKzJdLHRoaXMuX3c9dFtlKzNdLHRoaXMub25DaGFuZ2VDYWxsYmFjaygpLHRoaXN9LHRvQXJyYXk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9W10pLHZvaWQgMD09PWUmJihlPTApLHRbZV09dGhpcy5feCx0W2UrMV09dGhpcy5feSx0W2UrMl09dGhpcy5feix0W2UrM109dGhpcy5fdyx0fSxvbkNoYW5nZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5vbkNoYW5nZUNhbGxiYWNrPXQsdGhpc30sb25DaGFuZ2VDYWxsYmFjazpmdW5jdGlvbigpe319LE9iamVjdC5hc3NpZ24ocyx7c2xlcnA6ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIGkuY29weSh0KS5zbGVycChlLG4pfSxzbGVycEZsYXQ6ZnVuY3Rpb24odCxlLGksbixyLGEsbyl7dmFyIHM9aVtuKzBdLGM9aVtuKzFdLGg9aVtuKzJdO2k9aVtuKzNdLG49clthKzBdO3ZhciBsPXJbYSsxXSx1PXJbYSsyXTtpZihpIT09KHI9clthKzNdKXx8cyE9PW58fGMhPT1sfHxoIT09dSl7YT0xLW87dmFyIGQ9cypuK2MqbCtoKnUraSpyLHA9MDw9ZD8xOi0xLGY9MS1kKmQ7Zj5OdW1iZXIuRVBTSUxPTiYmKGY9TWF0aC5zcXJ0KGYpLGQ9TWF0aC5hdGFuMihmLGQqcCksYT1NYXRoLnNpbihhKmQpL2Ysbz1NYXRoLnNpbihvKmQpL2YpLHM9cyphK24qKHAqPW8pLGM9YyphK2wqcCxoPWgqYSt1KnAsaT1pKmErcipwLGE9PT0xLW8mJihzKj1vPTEvTWF0aC5zcXJ0KHMqcytjKmMraCpoK2kqaSksYyo9byxoKj1vLGkqPW8pfXRbZV09cyx0W2UrMV09Yyx0W2UrMl09aCx0W2UrM109aX19KSxDdC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkN0LGlzVmVjdG9yMzohMCxzZXQ6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLng9dCx0aGlzLnk9ZSx0aGlzLno9aSx0aGlzfSxzZXRTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuej10aGlzLnk9dGhpcy54PXQsdGhpc30sc2V0WDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PXQsdGhpc30sc2V0WTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy55PXQsdGhpc30sc2V0WjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy56PXQsdGhpc30sc2V0Q29tcG9uZW50OmZ1bmN0aW9uKHQsZSl7c3dpdGNoKHQpe2Nhc2UgMDp0aGlzLng9ZTticmVhaztjYXNlIDE6dGhpcy55PWU7YnJlYWs7Y2FzZSAyOnRoaXMuej1lO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoImluZGV4IGlzIG91dCBvZiByYW5nZTogIit0KX1yZXR1cm4gdGhpc30sZ2V0Q29tcG9uZW50OmZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlIDA6cmV0dXJuIHRoaXMueDtjYXNlIDE6cmV0dXJuIHRoaXMueTtjYXNlIDI6cmV0dXJuIHRoaXMuejtkZWZhdWx0OnRocm93IEVycm9yKCJpbmRleCBpcyBvdXQgb2YgcmFuZ2U6ICIrdCl9fSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLngsdGhpcy55LHRoaXMueil9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueD10LngsdGhpcy55PXQueSx0aGlzLno9dC56LHRoaXN9LGFkZDpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDAhPT1lPyhjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjM6IC5hZGQoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5hZGRWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC4iKSx0aGlzLmFkZFZlY3RvcnModCxlKSk6KHRoaXMueCs9dC54LHRoaXMueSs9dC55LHRoaXMueis9dC56LHRoaXMpfSxhZGRTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueCs9dCx0aGlzLnkrPXQsdGhpcy56Kz10LHRoaXN9LGFkZFZlY3RvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54PXQueCtlLngsdGhpcy55PXQueStlLnksdGhpcy56PXQueitlLnosdGhpc30sYWRkU2NhbGVkVmVjdG9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMueCs9dC54KmUsdGhpcy55Kz10LnkqZSx0aGlzLnorPXQueiplLHRoaXN9LHN1YjpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDAhPT1lPyhjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjM6IC5zdWIoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5zdWJWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC4iKSx0aGlzLnN1YlZlY3RvcnModCxlKSk6KHRoaXMueC09dC54LHRoaXMueS09dC55LHRoaXMuei09dC56LHRoaXMpfSxzdWJTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueC09dCx0aGlzLnktPXQsdGhpcy56LT10LHRoaXN9LHN1YlZlY3RvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54PXQueC1lLngsdGhpcy55PXQueS1lLnksdGhpcy56PXQuei1lLnosdGhpc30sbXVsdGlwbHk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwIT09ZT8oY29uc29sZS53YXJuKCJUSFJFRS5WZWN0b3IzOiAubXVsdGlwbHkoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5tdWx0aXBseVZlY3RvcnMoIGEsIGIgKSBpbnN0ZWFkLiIpLHRoaXMubXVsdGlwbHlWZWN0b3JzKHQsZSkpOih0aGlzLngqPXQueCx0aGlzLnkqPXQueSx0aGlzLnoqPXQueix0aGlzKX0sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24odCl7cmV0dXJuIGlzRmluaXRlKHQpPyh0aGlzLngqPXQsdGhpcy55Kj10LHRoaXMueio9dCk6dGhpcy56PXRoaXMueT10aGlzLng9MCx0aGlzfSxtdWx0aXBseVZlY3RvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy54PXQueCplLngsdGhpcy55PXQueSplLnksdGhpcy56PXQueiplLnosdGhpc30sYXBwbHlFdWxlcjpmdW5jdGlvbih0KXtyZXR1cm4hMT09PSh0JiZ0LmlzRXVsZXIpJiZjb25zb2xlLmVycm9yKCJUSFJFRS5WZWN0b3IzOiAuYXBwbHlFdWxlcigpIG5vdyBleHBlY3RzIGFuIEV1bGVyIHJvdGF0aW9uIHJhdGhlciB0aGFuIGEgVmVjdG9yMyBhbmQgb3JkZXIuIiksdm9pZCAwPT09cHImJihwcj1uZXcgcyksdGhpcy5hcHBseVF1YXRlcm5pb24ocHIuc2V0RnJvbUV1bGVyKHQpKX0sYXBwbHlBeGlzQW5nbGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZHImJihkcj1uZXcgcyksdGhpcy5hcHBseVF1YXRlcm5pb24oZHIuc2V0RnJvbUF4aXNBbmdsZSh0LGUpKX0sYXBwbHlNYXRyaXgzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMueCxpPXRoaXMueSxuPXRoaXMuejtyZXR1cm4gdD10LmVsZW1lbnRzLHRoaXMueD10WzBdKmUrdFszXSppK3RbNl0qbix0aGlzLnk9dFsxXSplK3RbNF0qaSt0WzddKm4sdGhpcy56PXRbMl0qZSt0WzVdKmkrdFs4XSpuLHRoaXN9LGFwcGx5TWF0cml4NDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLngsaT10aGlzLnksbj10aGlzLno7cmV0dXJuIHQ9dC5lbGVtZW50cyx0aGlzLng9dFswXSplK3RbNF0qaSt0WzhdKm4rdFsxMl0sdGhpcy55PXRbMV0qZSt0WzVdKmkrdFs5XSpuK3RbMTNdLHRoaXMuej10WzJdKmUrdFs2XSppK3RbMTBdKm4rdFsxNF0sdGhpc30sYXBwbHlQcm9qZWN0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMueCxpPXRoaXMueSxuPXRoaXMueixyPTEvKCh0PXQuZWxlbWVudHMpWzNdKmUrdFs3XSppK3RbMTFdKm4rdFsxNV0pO3JldHVybiB0aGlzLng9KHRbMF0qZSt0WzRdKmkrdFs4XSpuK3RbMTJdKSpyLHRoaXMueT0odFsxXSplK3RbNV0qaSt0WzldKm4rdFsxM10pKnIsdGhpcy56PSh0WzJdKmUrdFs2XSppK3RbMTBdKm4rdFsxNF0pKnIsdGhpc30sYXBwbHlRdWF0ZXJuaW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMueCxpPXRoaXMueSxuPXRoaXMueixyPXQueCxhPXQueSxvPXQueixzPSh0PXQudykqZSthKm4tbyppLGM9dCppK28qZS1yKm4saD10Km4rcippLWEqZTtlPS1yKmUtYSppLW8qbjtyZXR1cm4gdGhpcy54PXMqdCtlKi1yK2MqLW8taCotYSx0aGlzLnk9Yyp0K2UqLWEraCotci1zKi1vLHRoaXMuej1oKnQrZSotbytzKi1hLWMqLXIsdGhpc30scHJvamVjdDpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dXImJih1cj1uZXcgSXQpLHVyLm11bHRpcGx5TWF0cmljZXModC5wcm9qZWN0aW9uTWF0cml4LHVyLmdldEludmVyc2UodC5tYXRyaXhXb3JsZCkpLHRoaXMuYXBwbHlQcm9qZWN0aW9uKHVyKX0sdW5wcm9qZWN0OmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT1sciYmKGxyPW5ldyBJdCksbHIubXVsdGlwbHlNYXRyaWNlcyh0Lm1hdHJpeFdvcmxkLGxyLmdldEludmVyc2UodC5wcm9qZWN0aW9uTWF0cml4KSksdGhpcy5hcHBseVByb2plY3Rpb24obHIpfSx0cmFuc2Zvcm1EaXJlY3Rpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy54LGk9dGhpcy55LG49dGhpcy56O3JldHVybiB0PXQuZWxlbWVudHMsdGhpcy54PXRbMF0qZSt0WzRdKmkrdFs4XSpuLHRoaXMueT10WzFdKmUrdFs1XSppK3RbOV0qbix0aGlzLno9dFsyXSplK3RbNl0qaSt0WzEwXSpuLHRoaXMubm9ybWFsaXplKCl9LGRpdmlkZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54Lz10LngsdGhpcy55Lz10LnksdGhpcy56Lz10LnosdGhpc30sZGl2aWRlU2NhbGFyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm11bHRpcGx5U2NhbGFyKDEvdCl9LG1pbjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PU1hdGgubWluKHRoaXMueCx0LngpLHRoaXMueT1NYXRoLm1pbih0aGlzLnksdC55KSx0aGlzLno9TWF0aC5taW4odGhpcy56LHQueiksdGhpc30sbWF4OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng9TWF0aC5tYXgodGhpcy54LHQueCksdGhpcy55PU1hdGgubWF4KHRoaXMueSx0LnkpLHRoaXMuej1NYXRoLm1heCh0aGlzLnosdC56KSx0aGlzfSxjbGFtcDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLng9TWF0aC5tYXgodC54LE1hdGgubWluKGUueCx0aGlzLngpKSx0aGlzLnk9TWF0aC5tYXgodC55LE1hdGgubWluKGUueSx0aGlzLnkpKSx0aGlzLno9TWF0aC5tYXgodC56LE1hdGgubWluKGUueix0aGlzLnopKSx0aGlzfSxjbGFtcFNjYWxhcjpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1jciYmKGNyPW5ldyBDdCxocj1uZXcgQ3QpLGNyLnNldCh0LHQsdCksaHIuc2V0KGUsZSxlKSx0aGlzLmNsYW1wKGNyLGhyKX0sY2xhbXBMZW5ndGg6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmxlbmd0aCgpO3JldHVybiB0aGlzLm11bHRpcGx5U2NhbGFyKE1hdGgubWF4KHQsTWF0aC5taW4oZSxpKSkvaSl9LGZsb29yOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD1NYXRoLmZsb29yKHRoaXMueCksdGhpcy55PU1hdGguZmxvb3IodGhpcy55KSx0aGlzLno9TWF0aC5mbG9vcih0aGlzLnopLHRoaXN9LGNlaWw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PU1hdGguY2VpbCh0aGlzLngpLHRoaXMueT1NYXRoLmNlaWwodGhpcy55KSx0aGlzLno9TWF0aC5jZWlsKHRoaXMueiksdGhpc30scm91bmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PU1hdGgucm91bmQodGhpcy54KSx0aGlzLnk9TWF0aC5yb3VuZCh0aGlzLnkpLHRoaXMuej1NYXRoLnJvdW5kKHRoaXMueiksdGhpc30scm91bmRUb1plcm86ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PXRoaXMueDwwP01hdGguY2VpbCh0aGlzLngpOk1hdGguZmxvb3IodGhpcy54KSx0aGlzLnk9dGhpcy55PDA/TWF0aC5jZWlsKHRoaXMueSk6TWF0aC5mbG9vcih0aGlzLnkpLHRoaXMuej10aGlzLno8MD9NYXRoLmNlaWwodGhpcy56KTpNYXRoLmZsb29yKHRoaXMueiksdGhpc30sbmVnYXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueD0tdGhpcy54LHRoaXMueT0tdGhpcy55LHRoaXMuej0tdGhpcy56LHRoaXN9LGRvdDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54KnQueCt0aGlzLnkqdC55K3RoaXMueip0Lnp9LGxlbmd0aFNxOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSt0aGlzLnoqdGhpcy56fSxsZW5ndGg6ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSt0aGlzLnoqdGhpcy56KX0sbGVuZ3RoTWFuaGF0dGFuOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguYWJzKHRoaXMueCkrTWF0aC5hYnModGhpcy55KStNYXRoLmFicyh0aGlzLnopfSxub3JtYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXZpZGVTY2FsYXIodGhpcy5sZW5ndGgoKSl9LHNldExlbmd0aDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tdWx0aXBseVNjYWxhcih0L3RoaXMubGVuZ3RoKCkpfSxsZXJwOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMueCs9KHQueC10aGlzLngpKmUsdGhpcy55Kz0odC55LXRoaXMueSkqZSx0aGlzLnorPSh0LnotdGhpcy56KSplLHRoaXN9LGxlcnBWZWN0b3JzOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5zdWJWZWN0b3JzKGUsdCkubXVsdGlwbHlTY2FsYXIoaSkuYWRkKHQpfSxjcm9zczpmdW5jdGlvbih0LGUpe2lmKHZvaWQgMCE9PWUpcmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuVmVjdG9yMzogLmNyb3NzKCkgbm93IG9ubHkgYWNjZXB0cyBvbmUgYXJndW1lbnQuIFVzZSAuY3Jvc3NWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC4iKSx0aGlzLmNyb3NzVmVjdG9ycyh0LGUpO3ZhciBpPXRoaXMueCxuPXRoaXMueSxyPXRoaXMuejtyZXR1cm4gdGhpcy54PW4qdC56LXIqdC55LHRoaXMueT1yKnQueC1pKnQueix0aGlzLno9aSp0Lnktbip0LngsdGhpc30sY3Jvc3NWZWN0b3JzOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dC54LG49dC55LHI9dC56LGE9ZS54LG89ZS55LHM9ZS56O3JldHVybiB0aGlzLng9bipzLXIqbyx0aGlzLnk9ciphLWkqcyx0aGlzLno9aSpvLW4qYSx0aGlzfSxwcm9qZWN0T25WZWN0b3I6ZnVuY3Rpb24odCl7dmFyIGU9dC5kb3QodGhpcykvdC5sZW5ndGhTcSgpO3JldHVybiB0aGlzLmNvcHkodCkubXVsdGlwbHlTY2FsYXIoZSl9LHByb2plY3RPblBsYW5lOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT1zciYmKHNyPW5ldyBDdCksc3IuY29weSh0aGlzKS5wcm9qZWN0T25WZWN0b3IodCksdGhpcy5zdWIoc3IpfSxyZWZsZWN0OmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT1vciYmKG9yPW5ldyBDdCksdGhpcy5zdWIob3IuY29weSh0KS5tdWx0aXBseVNjYWxhcigyKnRoaXMuZG90KHQpKSl9LGFuZ2xlVG86ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dGhpcy5kb3QodCkvTWF0aC5zcXJ0KHRoaXMubGVuZ3RoU3EoKSp0Lmxlbmd0aFNxKCkpLE1hdGguYWNvcyhlci5jbGFtcCh0LC0xLDEpKX0sZGlzdGFuY2VUbzpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMuZGlzdGFuY2VUb1NxdWFyZWQodCkpfSxkaXN0YW5jZVRvU3F1YXJlZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLngtdC54LGk9dGhpcy55LXQueTtyZXR1cm4gZSplK2kqaSsodD10aGlzLnotdC56KSp0fSxkaXN0YW5jZVRvTWFuaGF0dGFuOmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0aGlzLngtdC54KStNYXRoLmFicyh0aGlzLnktdC55KStNYXRoLmFicyh0aGlzLnotdC56KX0sc2V0RnJvbVNwaGVyaWNhbDpmdW5jdGlvbih0KXt2YXIgZT1NYXRoLnNpbih0LnBoaSkqdC5yYWRpdXM7cmV0dXJuIHRoaXMueD1lKk1hdGguc2luKHQudGhldGEpLHRoaXMueT1NYXRoLmNvcyh0LnBoaSkqdC5yYWRpdXMsdGhpcy56PWUqTWF0aC5jb3ModC50aGV0YSksdGhpc30sc2V0RnJvbUN5bGluZHJpY2FsOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLng9dC5yYWRpdXMqTWF0aC5zaW4odC50aGV0YSksdGhpcy55PXQueSx0aGlzLno9dC5yYWRpdXMqTWF0aC5jb3ModC50aGV0YSksdGhpc30sc2V0RnJvbU1hdHJpeFBvc2l0aW9uOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldEZyb21NYXRyaXhDb2x1bW4odCwzKX0sc2V0RnJvbU1hdHJpeFNjYWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc2V0RnJvbU1hdHJpeENvbHVtbih0LDApLmxlbmd0aCgpLGk9dGhpcy5zZXRGcm9tTWF0cml4Q29sdW1uKHQsMSkubGVuZ3RoKCk7cmV0dXJuIHQ9dGhpcy5zZXRGcm9tTWF0cml4Q29sdW1uKHQsMikubGVuZ3RoKCksdGhpcy54PWUsdGhpcy55PWksdGhpcy56PXQsdGhpc30sc2V0RnJvbU1hdHJpeENvbHVtbjpmdW5jdGlvbih0LGUpe2lmKCJudW1iZXIiPT10eXBlb2YgdCl7Y29uc29sZS53YXJuKCJUSFJFRS5WZWN0b3IzOiBzZXRGcm9tTWF0cml4Q29sdW1uIG5vdyBleHBlY3RzICggbWF0cml4LCBpbmRleCApLiIpO3ZhciBpPXQ7dD1lLGU9aX1yZXR1cm4gdGhpcy5mcm9tQXJyYXkodC5lbGVtZW50cyw0KmUpfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQueD09PXRoaXMueCYmdC55PT09dGhpcy55JiZ0Lno9PT10aGlzLnp9LGZyb21BcnJheTpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSx0aGlzLng9dFtlXSx0aGlzLnk9dFtlKzFdLHRoaXMuej10W2UrMl0sdGhpc30sdG9BcnJheTpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD1bXSksdm9pZCAwPT09ZSYmKGU9MCksdFtlXT10aGlzLngsdFtlKzFdPXRoaXMueSx0W2UrMl09dGhpcy56LHR9LGZyb21BdHRyaWJ1dGU6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB2b2lkIDAhPT1pJiZjb25zb2xlLndhcm4oIlRIUkVFLlZlY3RvcjM6IG9mZnNldCBoYXMgYmVlbiByZW1vdmVkIGZyb20gLmZyb21BdHRyaWJ1dGUoKS4iKSx0aGlzLng9dC5nZXRYKGUpLHRoaXMueT10LmdldFkoZSksdGhpcy56PXQuZ2V0WihlKSx0aGlzfX0sSXQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpJdCxpc01hdHJpeDQ6ITAsc2V0OmZ1bmN0aW9uKHQsZSxpLG4scixhLG8scyxjLGgsbCx1LGQscCxmLG0pe3ZhciBnPXRoaXMuZWxlbWVudHM7cmV0dXJuIGdbMF09dCxnWzRdPWUsZ1s4XT1pLGdbMTJdPW4sZ1sxXT1yLGdbNV09YSxnWzldPW8sZ1sxM109cyxnWzJdPWMsZ1s2XT1oLGdbMTBdPWwsZ1sxNF09dSxnWzNdPWQsZ1s3XT1wLGdbMTFdPWYsZ1sxNV09bSx0aGlzfSxpZGVudGl0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldCgxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwxKSx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgSXQpLmZyb21BcnJheSh0aGlzLmVsZW1lbnRzKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lbGVtZW50cy5zZXQodC5lbGVtZW50cyksdGhpc30sY29weVBvc2l0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWxlbWVudHM7cmV0dXJuIHQ9dC5lbGVtZW50cyxlWzEyXT10WzEyXSxlWzEzXT10WzEzXSxlWzE0XT10WzE0XSx0aGlzfSxleHRyYWN0QmFzaXM6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0LnNldEZyb21NYXRyaXhDb2x1bW4odGhpcywwKSxlLnNldEZyb21NYXRyaXhDb2x1bW4odGhpcywxKSxpLnNldEZyb21NYXRyaXhDb2x1bW4odGhpcywyKSx0aGlzfSxtYWtlQmFzaXM6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLnNldCh0LngsZS54LGkueCwwLHQueSxlLnksaS55LDAsdC56LGUueixpLnosMCwwLDAsMCwxKSx0aGlzfSxleHRyYWN0Um90YXRpb246ZnVuY3Rpb24odCl7dm9pZCAwPT09YnImJihicj1uZXcgQ3QpO3ZhciBlPXRoaXMuZWxlbWVudHMsaT10LmVsZW1lbnRzLG49MS9ici5zZXRGcm9tTWF0cml4Q29sdW1uKHQsMCkubGVuZ3RoKCkscj0xL2JyLnNldEZyb21NYXRyaXhDb2x1bW4odCwxKS5sZW5ndGgoKTtyZXR1cm4gdD0xL2JyLnNldEZyb21NYXRyaXhDb2x1bW4odCwyKS5sZW5ndGgoKSxlWzBdPWlbMF0qbixlWzFdPWlbMV0qbixlWzJdPWlbMl0qbixlWzRdPWlbNF0qcixlWzVdPWlbNV0qcixlWzZdPWlbNl0qcixlWzhdPWlbOF0qdCxlWzldPWlbOV0qdCxlWzEwXT1pWzEwXSp0LHRoaXN9LG1ha2VSb3RhdGlvbkZyb21FdWxlcjpmdW5jdGlvbih0KXshMT09PSh0JiZ0LmlzRXVsZXIpJiZjb25zb2xlLmVycm9yKCJUSFJFRS5NYXRyaXg6IC5tYWtlUm90YXRpb25Gcm9tRXVsZXIoKSBub3cgZXhwZWN0cyBhIEV1bGVyIHJvdGF0aW9uIHJhdGhlciB0aGFuIGEgVmVjdG9yMyBhbmQgb3JkZXIuIik7dmFyIGU9dGhpcy5lbGVtZW50cyxpPXQueCxuPXQueSxyPXQueixhPU1hdGguY29zKGkpLG89KGk9TWF0aC5zaW4oaSksTWF0aC5jb3MobikpLHM9KG49TWF0aC5zaW4obiksTWF0aC5jb3MocikpO3I9TWF0aC5zaW4ocik7aWYoIlhZWiI9PT10Lm9yZGVyKXt0PWEqczt2YXIgYz1hKnIsaD1pKnMsbD1pKnI7ZVswXT1vKnMsZVs0XT0tbypyLGVbOF09bixlWzFdPWMraCpuLGVbNV09dC1sKm4sZVs5XT0taSpvLGVbMl09bC10Km4sZVs2XT1oK2MqbixlWzEwXT1hKm99ZWxzZSJZWFoiPT09dC5vcmRlcj8odD1vKnMsYz1vKnIsaD1uKnMsbD1uKnIsZVswXT10K2wqaSxlWzRdPWgqaS1jLGVbOF09YSpuLGVbMV09YSpyLGVbNV09YSpzLGVbOV09LWksZVsyXT1jKmktaCxlWzZdPWwrdCppLGVbMTBdPWEqbyk6IlpYWSI9PT10Lm9yZGVyPyh0PW8qcyxjPW8qcixoPW4qcyxsPW4qcixlWzBdPXQtbCppLGVbNF09LWEqcixlWzhdPWgrYyppLGVbMV09YytoKmksZVs1XT1hKnMsZVs5XT1sLXQqaSxlWzJdPS1hKm4sZVs2XT1pLGVbMTBdPWEqbyk6IlpZWCI9PT10Lm9yZGVyPyh0PWEqcyxjPWEqcixoPWkqcyxsPWkqcixlWzBdPW8qcyxlWzRdPWgqbi1jLGVbOF09dCpuK2wsZVsxXT1vKnIsZVs1XT1sKm4rdCxlWzldPWMqbi1oLGVbMl09LW4sZVs2XT1pKm8sZVsxMF09YSpvKToiWVpYIj09PXQub3JkZXI/KHQ9YSpvLGM9YSpuLGg9aSpvLGw9aSpuLGVbMF09bypzLGVbNF09bC10KnIsZVs4XT1oKnIrYyxlWzFdPXIsZVs1XT1hKnMsZVs5XT0taSpzLGVbMl09LW4qcyxlWzZdPWMqcitoLGVbMTBdPXQtbCpyKToiWFpZIj09PXQub3JkZXImJih0PWEqbyxjPWEqbixoPWkqbyxsPWkqbixlWzBdPW8qcyxlWzRdPS1yLGVbOF09bipzLGVbMV09dCpyK2wsZVs1XT1hKnMsZVs5XT1jKnItaCxlWzJdPWgqci1jLGVbNl09aSpzLGVbMTBdPWwqcit0KTtyZXR1cm4gZVszXT0wLGVbN109MCxlWzExXT0wLGVbMTJdPTAsZVsxM109MCxlWzE0XT0wLGVbMTVdPTEsdGhpc30sbWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50cyxpPXQueCxuPXQueSxyPXQueixhPXQudyxvPXIrcjt0PWkqKGg9aStpKTt2YXIgcz1pKihsPW4rbiksYz0oaT1pKm8sbipsKSxoPShuPW4qbyxyPXIqbyxhKmgpLGw9YSpsO2EqPW87cmV0dXJuIGVbMF09MS0oYytyKSxlWzRdPXMtYSxlWzhdPWkrbCxlWzFdPXMrYSxlWzVdPTEtKHQrciksZVs5XT1uLWgsZVsyXT1pLWwsZVs2XT1uK2gsZVsxMF09MS0odCtjKSxlWzNdPTAsZVs3XT0wLGVbMTFdPTAsZVsxMl09MCxlWzEzXT0wLGVbMTRdPTAsZVsxNV09MSx0aGlzfSxsb29rQXQ6ZnVuY3Rpb24odCxlLGkpe3ZvaWQgMD09PXlyJiYoeXI9bmV3IEN0LHhyPW5ldyBDdCxfcj1uZXcgQ3QpO3ZhciBuPXRoaXMuZWxlbWVudHM7cmV0dXJuIF9yLnN1YlZlY3RvcnModCxlKS5ub3JtYWxpemUoKSwwPT09X3IubGVuZ3RoU3EoKSYmKF9yLno9MSkseXIuY3Jvc3NWZWN0b3JzKGksX3IpLm5vcm1hbGl6ZSgpLDA9PT15ci5sZW5ndGhTcSgpJiYoX3Iueis9MWUtNCx5ci5jcm9zc1ZlY3RvcnMoaSxfcikubm9ybWFsaXplKCkpLHhyLmNyb3NzVmVjdG9ycyhfcix5ciksblswXT15ci54LG5bNF09eHIueCxuWzhdPV9yLngsblsxXT15ci55LG5bNV09eHIueSxuWzldPV9yLnksblsyXT15ci56LG5bNl09eHIueixuWzEwXT1fci56LHRoaXN9LG11bHRpcGx5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMCE9PWU/KGNvbnNvbGUud2FybigiVEhSRUUuTWF0cml4NDogLm11bHRpcGx5KCkgbm93IG9ubHkgYWNjZXB0cyBvbmUgYXJndW1lbnQuIFVzZSAubXVsdGlwbHlNYXRyaWNlcyggYSwgYiApIGluc3RlYWQuIiksdGhpcy5tdWx0aXBseU1hdHJpY2VzKHQsZSkpOnRoaXMubXVsdGlwbHlNYXRyaWNlcyh0aGlzLHQpfSxwcmVtdWx0aXBseTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tdWx0aXBseU1hdHJpY2VzKHQsdGhpcyl9LG11bHRpcGx5TWF0cmljZXM6ZnVuY3Rpb24odCxlKXt2YXIgaT10LmVsZW1lbnRzLG49ZS5lbGVtZW50cyxyPXRoaXMuZWxlbWVudHMsYT1pWzBdLG89aVs0XSxzPWlbOF0sYz1pWzEyXSxoPWlbMV0sbD1pWzVdLHU9aVs5XSxkPWlbMTNdLHA9aVsyXSxmPWlbNl0sbT1pWzEwXSxnPWlbMTRdLHY9aVszXSx5PWlbN10seD1pWzExXSxfPShpPWlbMTVdLG5bMF0pLGI9bls0XSx3PW5bOF0sTT1uWzEyXSxFPW5bMV0sVD1uWzVdLFM9bls5XSxBPW5bMTNdLEw9blsyXSxSPW5bNl0sUD1uWzEwXSxDPW5bMTRdLEk9blszXSxVPW5bN10sTj1uWzExXTtuPW5bMTVdO3JldHVybiByWzBdPWEqXytvKkUrcypMK2MqSSxyWzRdPWEqYitvKlQrcypSK2MqVSxyWzhdPWEqdytvKlMrcypQK2MqTixyWzEyXT1hKk0rbypBK3MqQytjKm4sclsxXT1oKl8rbCpFK3UqTCtkKkkscls1XT1oKmIrbCpUK3UqUitkKlUscls5XT1oKncrbCpTK3UqUCtkKk4sclsxM109aCpNK2wqQSt1KkMrZCpuLHJbMl09cCpfK2YqRSttKkwrZypJLHJbNl09cCpiK2YqVCttKlIrZypVLHJbMTBdPXAqdytmKlMrbSpQK2cqTixyWzE0XT1wKk0rZipBK20qQytnKm4sclszXT12Kl8reSpFK3gqTCtpKkkscls3XT12KmIreSpUK3gqUitpKlUsclsxMV09dip3K3kqUyt4KlAraSpOLHJbMTVdPXYqTSt5KkEreCpDK2kqbix0aGlzfSxtdWx0aXBseVRvQXJyYXk6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuZWxlbWVudHM7cmV0dXJuIHRoaXMubXVsdGlwbHlNYXRyaWNlcyh0LGUpLGlbMF09blswXSxpWzFdPW5bMV0saVsyXT1uWzJdLGlbM109blszXSxpWzRdPW5bNF0saVs1XT1uWzVdLGlbNl09bls2XSxpWzddPW5bN10saVs4XT1uWzhdLGlbOV09bls5XSxpWzEwXT1uWzEwXSxpWzExXT1uWzExXSxpWzEyXT1uWzEyXSxpWzEzXT1uWzEzXSxpWzE0XT1uWzE0XSxpWzE1XT1uWzE1XSx0aGlzfSxtdWx0aXBseVNjYWxhcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmVsZW1lbnRzO3JldHVybiBlWzBdKj10LGVbNF0qPXQsZVs4XSo9dCxlWzEyXSo9dCxlWzFdKj10LGVbNV0qPXQsZVs5XSo9dCxlWzEzXSo9dCxlWzJdKj10LGVbNl0qPXQsZVsxMF0qPXQsZVsxNF0qPXQsZVszXSo9dCxlWzddKj10LGVbMTFdKj10LGVbMTVdKj10LHRoaXN9LGFwcGx5VG9WZWN0b3IzQXJyYXk6ZnVuY3Rpb24odCxlLGkpe3ZvaWQgMD09PXZyJiYodnI9bmV3IEN0KSx2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1pJiYoaT10Lmxlbmd0aCk7Zm9yKHZhciBuPTA7bjxpO24rPTMsZSs9Myl2ci5mcm9tQXJyYXkodCxlKSx2ci5hcHBseU1hdHJpeDQodGhpcyksdnIudG9BcnJheSh0LGUpO3JldHVybiB0fSxhcHBseVRvQnVmZmVyQXR0cmlidXRlOmZ1bmN0aW9uKHQpe3ZvaWQgMD09PWdyJiYoZ3I9bmV3IEN0KTtmb3IodmFyIGU9MCxpPXQuY291bnQ7ZTxpO2UrKylnci54PXQuZ2V0WChlKSxnci55PXQuZ2V0WShlKSxnci56PXQuZ2V0WihlKSxnci5hcHBseU1hdHJpeDQodGhpcyksdC5zZXRYWVooZSxnci54LGdyLnksZ3Iueik7cmV0dXJuIHR9LGRldGVybWluYW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50cyxlPXRbMF0saT10WzRdLG49dFs4XSxyPXRbMTJdLGE9dFsxXSxvPXRbNV0scz10WzldLGM9dFsxM10saD10WzJdLGw9dFs2XSx1PXRbMTBdLGQ9dFsxNF07cmV0dXJuIHRbM10qKCtyKnMqbC1uKmMqbC1yKm8qdStpKmMqdStuKm8qZC1pKnMqZCkrdFs3XSooK2UqcypkLWUqYyp1K3IqYSp1LW4qYSpkK24qYypoLXIqcypoKSt0WzExXSooK2UqYypsLWUqbypkLXIqYSpsK2kqYSpkK3IqbypoLWkqYypoKSt0WzE1XSooLW4qbypoLWUqcypsK2Uqbyp1K24qYSpsLWkqYSp1K2kqcypoKX0sdHJhbnNwb3NlOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLmVsZW1lbnRzO3JldHVybiB0PWVbMV0sZVsxXT1lWzRdLGVbNF09dCx0PWVbMl0sZVsyXT1lWzhdLGVbOF09dCx0PWVbNl0sZVs2XT1lWzldLGVbOV09dCx0PWVbM10sZVszXT1lWzEyXSxlWzEyXT10LHQ9ZVs3XSxlWzddPWVbMTNdLGVbMTNdPXQsdD1lWzExXSxlWzExXT1lWzE0XSxlWzE0XT10LHRoaXN9LHNldFBvc2l0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWxlbWVudHM7cmV0dXJuIGVbMTJdPXQueCxlWzEzXT10LnksZVsxNF09dC56LHRoaXN9LGdldEludmVyc2U6ZnVuY3Rpb24odCxlKXt2YXIgaSxuPXRoaXMuZWxlbWVudHMscj0oaT10LmVsZW1lbnRzKVswXSxhPWlbMV0sbz1pWzJdLHM9aVszXSxjPWlbNF0saD1pWzVdLGw9aVs2XSx1PWlbN10sZD1pWzhdLHA9aVs5XSxmPWlbMTBdLG09aVsxMV0sZz1pWzEyXSx2PWlbMTNdLHk9aVsxNF0seD1wKnkqdS12KmYqdSt2KmwqbS1oKnkqbS1wKmwqKGk9aVsxNV0pK2gqZippLF89ZypmKnUtZCp5KnUtZypsKm0rYyp5Km0rZCpsKmktYypmKmksYj1kKnYqdS1nKnAqdStnKmgqbS1jKnYqbS1kKmgqaStjKnAqaSx3PWcqcCpsLWQqdipsLWcqaCpmK2MqdipmK2QqaCp5LWMqcCp5LE09cip4K2EqXytvKmIrcyp3O2lmKDAhPT1NKXJldHVybiBNPTEvTSxuWzBdPXgqTSxuWzFdPSh2KmYqcy1wKnkqcy12Km8qbSthKnkqbStwKm8qaS1hKmYqaSkqTSxuWzJdPShoKnkqcy12Kmwqcyt2Km8qdS1hKnkqdS1oKm8qaSthKmwqaSkqTSxuWzNdPShwKmwqcy1oKmYqcy1wKm8qdSthKmYqdStoKm8qbS1hKmwqbSkqTSxuWzRdPV8qTSxuWzVdPShkKnkqcy1nKmYqcytnKm8qbS1yKnkqbS1kKm8qaStyKmYqaSkqTSxuWzZdPShnKmwqcy1jKnkqcy1nKm8qdStyKnkqdStjKm8qaS1yKmwqaSkqTSxuWzddPShjKmYqcy1kKmwqcytkKm8qdS1yKmYqdS1jKm8qbStyKmwqbSkqTSxuWzhdPWIqTSxuWzldPShnKnAqcy1kKnYqcy1nKmEqbStyKnYqbStkKmEqaS1yKnAqaSkqTSxuWzEwXT0oYyp2KnMtZypoKnMrZyphKnUtcip2KnUtYyphKmkrcipoKmkpKk0sblsxMV09KGQqaCpzLWMqcCpzLWQqYSp1K3IqcCp1K2MqYSptLXIqaCptKSpNLG5bMTJdPXcqTSxuWzEzXT0oZCp2Km8tZypwKm8rZyphKmYtcip2KmYtZCphKnkrcipwKnkpKk0sblsxNF09KGcqaCpvLWMqdipvLWcqYSpsK3IqdipsK2MqYSp5LXIqaCp5KSpNLG5bMTVdPShjKnAqby1kKmgqbytkKmEqbC1yKnAqbC1jKmEqZityKmgqZikqTSx0aGlzO2lmKCEwPT09ZSl0aHJvdyBFcnJvcigiVEhSRUUuTWF0cml4NC5nZXRJbnZlcnNlKCk6IGNhbid0IGludmVydCBtYXRyaXgsIGRldGVybWluYW50IGlzIDAiKTtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5NYXRyaXg0LmdldEludmVyc2UoKTogY2FuJ3QgaW52ZXJ0IG1hdHJpeCwgZGV0ZXJtaW5hbnQgaXMgMCIpLHRoaXMuaWRlbnRpdHkoKX0sc2NhbGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50cyxpPXQueCxuPXQueTtyZXR1cm4gdD10LnosZVswXSo9aSxlWzRdKj1uLGVbOF0qPXQsZVsxXSo9aSxlWzVdKj1uLGVbOV0qPXQsZVsyXSo9aSxlWzZdKj1uLGVbMTBdKj10LGVbM10qPWksZVs3XSo9bixlWzExXSo9dCx0aGlzfSxnZXRNYXhTY2FsZU9uQXhpczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudHM7cmV0dXJuIE1hdGguc3FydChNYXRoLm1heCh0WzBdKnRbMF0rdFsxXSp0WzFdK3RbMl0qdFsyXSx0WzRdKnRbNF0rdFs1XSp0WzVdK3RbNl0qdFs2XSx0WzhdKnRbOF0rdFs5XSp0WzldK3RbMTBdKnRbMTBdKSl9LG1ha2VUcmFuc2xhdGlvbjpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHRoaXMuc2V0KDEsMCwwLHQsMCwxLDAsZSwwLDAsMSxpLDAsMCwwLDEpLHRoaXN9LG1ha2VSb3RhdGlvblg6ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5jb3ModCk7cmV0dXJuIHQ9TWF0aC5zaW4odCksdGhpcy5zZXQoMSwwLDAsMCwwLGUsLXQsMCwwLHQsZSwwLDAsMCwwLDEpLHRoaXN9LG1ha2VSb3RhdGlvblk6ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5jb3ModCk7cmV0dXJuIHQ9TWF0aC5zaW4odCksdGhpcy5zZXQoZSwwLHQsMCwwLDEsMCwwLC10LDAsZSwwLDAsMCwwLDEpLHRoaXN9LG1ha2VSb3RhdGlvblo6ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5jb3ModCk7cmV0dXJuIHQ9TWF0aC5zaW4odCksdGhpcy5zZXQoZSwtdCwwLDAsdCxlLDAsMCwwLDAsMSwwLDAsMCwwLDEpLHRoaXN9LG1ha2VSb3RhdGlvbkF4aXM6ZnVuY3Rpb24odCxlKXt2YXIgaT1NYXRoLmNvcyhlKSxuPU1hdGguc2luKGUpLHI9MS1pLGE9dC54LG89dC55LHM9dC56LGM9ciphLGg9cipvO3JldHVybiB0aGlzLnNldChjKmEraSxjKm8tbipzLGMqcytuKm8sMCxjKm8rbipzLGgqbytpLGgqcy1uKmEsMCxjKnMtbipvLGgqcytuKmEscipzKnMraSwwLDAsMCwwLDEpLHRoaXN9LG1ha2VTY2FsZTpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHRoaXMuc2V0KHQsMCwwLDAsMCxlLDAsMCwwLDAsaSwwLDAsMCwwLDEpLHRoaXN9LG1ha2VTaGVhcjpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHRoaXMuc2V0KDEsZSxpLDAsdCwxLGksMCx0LGUsMSwwLDAsMCwwLDEpLHRoaXN9LGNvbXBvc2U6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLm1ha2VSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKGUpLHRoaXMuc2NhbGUoaSksdGhpcy5zZXRQb3NpdGlvbih0KSx0aGlzfSxkZWNvbXBvc2U6ZnVuY3Rpb24odCxlLGkpe3ZvaWQgMD09PWZyJiYoZnI9bmV3IEN0LG1yPW5ldyBJdCk7dmFyIG49dGhpcy5lbGVtZW50cyxyPWZyLnNldChuWzBdLG5bMV0sblsyXSkubGVuZ3RoKCksYT1mci5zZXQobls0XSxuWzVdLG5bNl0pLmxlbmd0aCgpLG89ZnIuc2V0KG5bOF0sbls5XSxuWzEwXSkubGVuZ3RoKCk7dGhpcy5kZXRlcm1pbmFudCgpPDAmJihyPS1yKSx0Lng9blsxMl0sdC55PW5bMTNdLHQuej1uWzE0XSxtci5lbGVtZW50cy5zZXQodGhpcy5lbGVtZW50cyksdD0xL3Isbj0xL2E7dmFyIHM9MS9vO3JldHVybiBtci5lbGVtZW50c1swXSo9dCxtci5lbGVtZW50c1sxXSo9dCxtci5lbGVtZW50c1syXSo9dCxtci5lbGVtZW50c1s0XSo9bixtci5lbGVtZW50c1s1XSo9bixtci5lbGVtZW50c1s2XSo9bixtci5lbGVtZW50c1s4XSo9cyxtci5lbGVtZW50c1s5XSo9cyxtci5lbGVtZW50c1sxMF0qPXMsZS5zZXRGcm9tUm90YXRpb25NYXRyaXgobXIpLGkueD1yLGkueT1hLGkuej1vLHRoaXN9LG1ha2VGcnVzdHVtOmZ1bmN0aW9uKHQsZSxpLG4scixhKXt2YXIgbz10aGlzLmVsZW1lbnRzO3JldHVybiBvWzBdPTIqci8oZS10KSxvWzRdPTAsb1s4XT0oZSt0KS8oZS10KSxvWzEyXT0wLG9bMV09MCxvWzVdPTIqci8obi1pKSxvWzldPShuK2kpLyhuLWkpLG9bMTNdPTAsb1syXT0wLG9bNl09MCxvWzEwXT0tKGErcikvKGEtciksb1sxNF09LTIqYSpyLyhhLXIpLG9bM109MCxvWzddPTAsb1sxMV09LTEsb1sxNV09MCx0aGlzfSxtYWtlUGVyc3BlY3RpdmU6ZnVuY3Rpb24odCxlLGksbil7dmFyIHI9LSh0PWkqTWF0aC50YW4oZXIuREVHMlJBRCp0Ki41KSk7cmV0dXJuIHRoaXMubWFrZUZydXN0dW0ociplLHQqZSxyLHQsaSxuKX0sbWFrZU9ydGhvZ3JhcGhpYzpmdW5jdGlvbih0LGUsaSxuLHIsYSl7dmFyIG89dGhpcy5lbGVtZW50cyxzPTEvKGUtdCksYz0xLyhpLW4pLGg9MS8oYS1yKTtyZXR1cm4gb1swXT0yKnMsb1s0XT0wLG9bOF09MCxvWzEyXT0tKGUrdCkqcyxvWzFdPTAsb1s1XT0yKmMsb1s5XT0wLG9bMTNdPS0oaStuKSpjLG9bMl09MCxvWzZdPTAsb1sxMF09LTIqaCxvWzE0XT0tKGErcikqaCxvWzNdPTAsb1s3XT0wLG9bMTFdPTAsb1sxNV09MSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50czt0PXQuZWxlbWVudHM7Zm9yKHZhciBpPTA7aTwxNjtpKyspaWYoZVtpXSE9PXRbaV0pcmV0dXJuITE7cmV0dXJuITB9LGZyb21BcnJheTpmdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPTApO2Zvcih2YXIgaT0wO2k8MTY7aSsrKXRoaXMuZWxlbWVudHNbaV09dFtpK2VdO3JldHVybiB0aGlzfSx0b0FycmF5OmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09dCYmKHQ9W10pLHZvaWQgMD09PWUmJihlPTApO3ZhciBpPXRoaXMuZWxlbWVudHM7cmV0dXJuIHRbZV09aVswXSx0W2UrMV09aVsxXSx0W2UrMl09aVsyXSx0W2UrM109aVszXSx0W2UrNF09aVs0XSx0W2UrNV09aVs1XSx0W2UrNl09aVs2XSx0W2UrN109aVs3XSx0W2UrOF09aVs4XSx0W2UrOV09aVs5XSx0W2UrMTBdPWlbMTBdLHRbZSsxMV09aVsxMV0sdFtlKzEyXT1pWzEyXSx0W2UrMTNdPWlbMTNdLHRbZSsxNF09aVsxNF0sdFtlKzE1XT1pWzE1XSx0fX0sKChjLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHoucHJvdG90eXBlKSkuY29uc3RydWN0b3I9YykucHJvdG90eXBlLmlzQ3ViZVRleHR1cmU9ITAsT2JqZWN0LmRlZmluZVByb3BlcnR5KGMucHJvdG90eXBlLCJpbWFnZXMiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbWFnZX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuaW1hZ2U9dH19KTt2YXIgTXI9bmV3IHosRXI9bmV3IGMsVHI9W10sU3I9W107SS5wcm90b3R5cGUuc2V0VmFsdWU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dGhpcy5zZXEsbj0wLHI9aS5sZW5ndGg7biE9PXI7KytuKXt2YXIgYT1pW25dO2Euc2V0VmFsdWUodCxlW2EuaWRdKX19O3ZhciBBcj0vKFtcd1xkX10rKShcXSk/KFxbfFwuKT8vZztVdC5wcm90b3R5cGUuc2V0VmFsdWU9ZnVuY3Rpb24odCxlLGkpe3ZvaWQgMCE9PShlPXRoaXMubWFwW2VdKSYmZS5zZXRWYWx1ZSh0LGksdGhpcy5yZW5kZXJlcil9LFV0LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMubWFwW2ldO3ZvaWQgMCE9PW4mJm4uc2V0VmFsdWUodCxlW2ldLHRoaXMucmVuZGVyZXIpfSxVdC5wcm90b3R5cGUuc2V0T3B0aW9uYWw9ZnVuY3Rpb24odCxlLGkpe3ZvaWQgMCE9PShlPWVbaV0pJiZ0aGlzLnNldFZhbHVlKHQsaSxlKX0sVXQudXBsb2FkPWZ1bmN0aW9uKHQsZSxpLG4pe2Zvcih2YXIgcj0wLGE9ZS5sZW5ndGg7ciE9PWE7KytyKXt2YXIgbz1lW3JdLHM9aVtvLmlkXTshMSE9PXMubmVlZHNVcGRhdGUmJm8uc2V0VmFsdWUodCxzLnZhbHVlLG4pfX0sVXQuc2VxV2l0aFZhbHVlPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPVtdLG49MCxyPXQubGVuZ3RoO24hPT1yOysrbil7dmFyIGE9dFtuXTthLmlkIGluIGUmJmkucHVzaChhKX1yZXR1cm4gaX07dmFyIExyPXttZXJnZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9e30saT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgbixyPXRoaXMuY2xvbmUodFtpXSk7Zm9yKG4gaW4gcillW25dPXJbbl19cmV0dXJuIGV9LGNsb25lOmZ1bmN0aW9uKHQpe3ZhciBlLGk9e307Zm9yKGUgaW4gdClmb3IodmFyIG4gaW4gaVtlXT17fSx0W2VdKXt2YXIgcj10W2VdW25dO3ImJihyLmlzQ29sb3J8fHIuaXNNYXRyaXgzfHxyLmlzTWF0cml4NHx8ci5pc1ZlY3RvcjJ8fHIuaXNWZWN0b3IzfHxyLmlzVmVjdG9yNHx8ci5pc1RleHR1cmUpP2lbZV1bbl09ci5jbG9uZSgpOkFycmF5LmlzQXJyYXkocik/aVtlXVtuXT1yLnNsaWNlKCk6aVtlXVtuXT1yfXJldHVybiBpfX0sUnI9e2FscGhhbWFwX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0FMUEhBTUFQXG5cdGRpZmZ1c2VDb2xvci5hICo9IHRleHR1cmUyRCggYWxwaGFNYXAsIHZVdiApLmc7XG4jZW5kaWZcbiIsYWxwaGFtYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9BTFBIQU1BUFxuXHR1bmlmb3JtIHNhbXBsZXIyRCBhbHBoYU1hcDtcbiNlbmRpZlxuIixhbHBoYXRlc3RfZnJhZ21lbnQ6IiNpZmRlZiBBTFBIQVRFU1Rcblx0aWYgKCBkaWZmdXNlQ29sb3IuYSA8IEFMUEhBVEVTVCApIGRpc2NhcmQ7XG4jZW5kaWZcbiIsYW9tYXBfZnJhZ21lbnQ6IiNpZmRlZiBVU0VfQU9NQVBcblx0ZmxvYXQgYW1iaWVudE9jY2x1c2lvbiA9ICggdGV4dHVyZTJEKCBhb01hcCwgdlV2MiApLnIgLSAxLjAgKSAqIGFvTWFwSW50ZW5zaXR5ICsgMS4wO1xuXHRyZWZsZWN0ZWRMaWdodC5pbmRpcmVjdERpZmZ1c2UgKj0gYW1iaWVudE9jY2x1c2lvbjtcblx0I2lmIGRlZmluZWQoIFVTRV9FTlZNQVAgKSAmJiBkZWZpbmVkKCBQSFlTSUNBTCApXG5cdFx0ZmxvYXQgZG90TlYgPSBzYXR1cmF0ZSggZG90KCBnZW9tZXRyeS5ub3JtYWwsIGdlb21ldHJ5LnZpZXdEaXIgKSApO1xuXHRcdHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0U3BlY3VsYXIgKj0gY29tcHV0ZVNwZWN1bGFyT2NjbHVzaW9uKCBkb3ROViwgYW1iaWVudE9jY2x1c2lvbiwgbWF0ZXJpYWwuc3BlY3VsYXJSb3VnaG5lc3MgKTtcblx0I2VuZGlmXG4jZW5kaWZcbiIsYW9tYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9BT01BUFxuXHR1bmlmb3JtIHNhbXBsZXIyRCBhb01hcDtcblx0dW5pZm9ybSBmbG9hdCBhb01hcEludGVuc2l0eTtcbiNlbmRpZiIsYmVnaW5fdmVydGV4OiJcbnZlYzMgdHJhbnNmb3JtZWQgPSB2ZWMzKCBwb3NpdGlvbiApO1xuIixiZWdpbm5vcm1hbF92ZXJ0ZXg6IlxudmVjMyBvYmplY3ROb3JtYWwgPSB2ZWMzKCBub3JtYWwgKTtcbiIsYnNkZnM6ImZsb2F0IHB1bmN0dWFsTGlnaHRJbnRlbnNpdHlUb0lycmFkaWFuY2VGYWN0b3IoIGNvbnN0IGluIGZsb2F0IGxpZ2h0RGlzdGFuY2UsIGNvbnN0IGluIGZsb2F0IGN1dG9mZkRpc3RhbmNlLCBjb25zdCBpbiBmbG9hdCBkZWNheUV4cG9uZW50ICkge1xuXHRcdGlmKCBkZWNheUV4cG9uZW50ID4gMC4wICkge1xuI2lmIGRlZmluZWQgKCBQSFlTSUNBTExZX0NPUlJFQ1RfTElHSFRTIClcblx0XHRcdGZsb2F0IGRpc3RhbmNlRmFsbG9mZiA9IDEuMCAvIG1heCggcG93KCBsaWdodERpc3RhbmNlLCBkZWNheUV4cG9uZW50ICksIDAuMDEgKTtcblx0XHRcdGZsb2F0IG1heERpc3RhbmNlQ3V0b2ZmRmFjdG9yID0gcG93Miggc2F0dXJhdGUoIDEuMCAtIHBvdzQoIGxpZ2h0RGlzdGFuY2UgLyBjdXRvZmZEaXN0YW5jZSApICkgKTtcblx0XHRcdHJldHVybiBkaXN0YW5jZUZhbGxvZmYgKiBtYXhEaXN0YW5jZUN1dG9mZkZhY3RvcjtcbiNlbHNlXG5cdFx0XHRyZXR1cm4gcG93KCBzYXR1cmF0ZSggLWxpZ2h0RGlzdGFuY2UgLyBjdXRvZmZEaXN0YW5jZSArIDEuMCApLCBkZWNheUV4cG9uZW50ICk7XG4jZW5kaWZcblx0XHR9XG5cdFx0cmV0dXJuIDEuMDtcbn1cbnZlYzMgQlJERl9EaWZmdXNlX0xhbWJlcnQoIGNvbnN0IGluIHZlYzMgZGlmZnVzZUNvbG9yICkge1xuXHRyZXR1cm4gUkVDSVBST0NBTF9QSSAqIGRpZmZ1c2VDb2xvcjtcbn1cbnZlYzMgRl9TY2hsaWNrKCBjb25zdCBpbiB2ZWMzIHNwZWN1bGFyQ29sb3IsIGNvbnN0IGluIGZsb2F0IGRvdExIICkge1xuXHRmbG9hdCBmcmVzbmVsID0gZXhwMiggKCAtNS41NTQ3MyAqIGRvdExIIC0gNi45ODMxNiApICogZG90TEggKTtcblx0cmV0dXJuICggMS4wIC0gc3BlY3VsYXJDb2xvciApICogZnJlc25lbCArIHNwZWN1bGFyQ29sb3I7XG59XG5mbG9hdCBHX0dHWF9TbWl0aCggY29uc3QgaW4gZmxvYXQgYWxwaGEsIGNvbnN0IGluIGZsb2F0IGRvdE5MLCBjb25zdCBpbiBmbG9hdCBkb3ROViApIHtcblx0ZmxvYXQgYTIgPSBwb3cyKCBhbHBoYSApO1xuXHRmbG9hdCBnbCA9IGRvdE5MICsgc3FydCggYTIgKyAoIDEuMCAtIGEyICkgKiBwb3cyKCBkb3ROTCApICk7XG5cdGZsb2F0IGd2ID0gZG90TlYgKyBzcXJ0KCBhMiArICggMS4wIC0gYTIgKSAqIHBvdzIoIGRvdE5WICkgKTtcblx0cmV0dXJuIDEuMCAvICggZ2wgKiBndiApO1xufVxuZmxvYXQgR19HR1hfU21pdGhDb3JyZWxhdGVkKCBjb25zdCBpbiBmbG9hdCBhbHBoYSwgY29uc3QgaW4gZmxvYXQgZG90TkwsIGNvbnN0IGluIGZsb2F0IGRvdE5WICkge1xuXHRmbG9hdCBhMiA9IHBvdzIoIGFscGhhICk7XG5cdGZsb2F0IGd2ID0gZG90TkwgKiBzcXJ0KCBhMiArICggMS4wIC0gYTIgKSAqIHBvdzIoIGRvdE5WICkgKTtcblx0ZmxvYXQgZ2wgPSBkb3ROViAqIHNxcnQoIGEyICsgKCAxLjAgLSBhMiApICogcG93MiggZG90TkwgKSApO1xuXHRyZXR1cm4gMC41IC8gbWF4KCBndiArIGdsLCBFUFNJTE9OICk7XG59XG5mbG9hdCBEX0dHWCggY29uc3QgaW4gZmxvYXQgYWxwaGEsIGNvbnN0IGluIGZsb2F0IGRvdE5IICkge1xuXHRmbG9hdCBhMiA9IHBvdzIoIGFscGhhICk7XG5cdGZsb2F0IGRlbm9tID0gcG93MiggZG90TkggKSAqICggYTIgLSAxLjAgKSArIDEuMDtcblx0cmV0dXJuIFJFQ0lQUk9DQUxfUEkgKiBhMiAvIHBvdzIoIGRlbm9tICk7XG59XG52ZWMzIEJSREZfU3BlY3VsYXJfR0dYKCBjb25zdCBpbiBJbmNpZGVudExpZ2h0IGluY2lkZW50TGlnaHQsIGNvbnN0IGluIEdlb21ldHJpY0NvbnRleHQgZ2VvbWV0cnksIGNvbnN0IGluIHZlYzMgc3BlY3VsYXJDb2xvciwgY29uc3QgaW4gZmxvYXQgcm91Z2huZXNzICkge1xuXHRmbG9hdCBhbHBoYSA9IHBvdzIoIHJvdWdobmVzcyApO1xuXHR2ZWMzIGhhbGZEaXIgPSBub3JtYWxpemUoIGluY2lkZW50TGlnaHQuZGlyZWN0aW9uICsgZ2VvbWV0cnkudmlld0RpciApO1xuXHRmbG9hdCBkb3ROTCA9IHNhdHVyYXRlKCBkb3QoIGdlb21ldHJ5Lm5vcm1hbCwgaW5jaWRlbnRMaWdodC5kaXJlY3Rpb24gKSApO1xuXHRmbG9hdCBkb3ROViA9IHNhdHVyYXRlKCBkb3QoIGdlb21ldHJ5Lm5vcm1hbCwgZ2VvbWV0cnkudmlld0RpciApICk7XG5cdGZsb2F0IGRvdE5IID0gc2F0dXJhdGUoIGRvdCggZ2VvbWV0cnkubm9ybWFsLCBoYWxmRGlyICkgKTtcblx0ZmxvYXQgZG90TEggPSBzYXR1cmF0ZSggZG90KCBpbmNpZGVudExpZ2h0LmRpcmVjdGlvbiwgaGFsZkRpciApICk7XG5cdHZlYzMgRiA9IEZfU2NobGljayggc3BlY3VsYXJDb2xvciwgZG90TEggKTtcblx0ZmxvYXQgRyA9IEdfR0dYX1NtaXRoQ29ycmVsYXRlZCggYWxwaGEsIGRvdE5MLCBkb3ROViApO1xuXHRmbG9hdCBEID0gRF9HR1goIGFscGhhLCBkb3ROSCApO1xuXHRyZXR1cm4gRiAqICggRyAqIEQgKTtcbn1cbnZlYzIgbHRjVGV4dHVyZUNvb3JkcyggY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gZmxvYXQgcm91Z2huZXNzICkge1xuXHRjb25zdCBmbG9hdCBMVVRfU0laRSAgPSA2NC4wO1xuXHRjb25zdCBmbG9hdCBMVVRfU0NBTEUgPSAoTFVUX1NJWkUgLSAxLjApL0xVVF9TSVpFO1xuXHRjb25zdCBmbG9hdCBMVVRfQklBUyAgPSAwLjUvTFVUX1NJWkU7XG5cdHZlYzMgTiA9IGdlb21ldHJ5Lm5vcm1hbDtcblx0dmVjMyBWID0gZ2VvbWV0cnkudmlld0Rpcjtcblx0dmVjMyBQID0gZ2VvbWV0cnkucG9zaXRpb247XG5cdGZsb2F0IHRoZXRhID0gYWNvcyggZG90KCBOLCBWICkgKTtcblx0dmVjMiB1diA9IHZlYzIoXG5cdFx0c3FydCggc2F0dXJhdGUoIHJvdWdobmVzcyApICksXG5cdFx0c2F0dXJhdGUoIHRoZXRhIC8gKCAwLjUgKiBQSSApICkgKTtcblx0dXYgPSB1diAqIExVVF9TQ0FMRSArIExVVF9CSUFTO1xuXHRyZXR1cm4gdXY7XG59XG52b2lkIGNsaXBRdWFkVG9Ib3Jpem9uKCBpbm91dCB2ZWMzIExbNV0sIG91dCBpbnQgbiApIHtcblx0aW50IGNvbmZpZyA9IDA7XG5cdGlmICggTFswXS56ID4gMC4wICkgY29uZmlnICs9IDE7XG5cdGlmICggTFsxXS56ID4gMC4wICkgY29uZmlnICs9IDI7XG5cdGlmICggTFsyXS56ID4gMC4wICkgY29uZmlnICs9IDQ7XG5cdGlmICggTFszXS56ID4gMC4wICkgY29uZmlnICs9IDg7XG5cdG4gPSAwO1xuXHRpZiAoIGNvbmZpZyA9PSAwICkge1xuXHR9IGVsc2UgaWYgKCBjb25maWcgPT0gMSApIHtcblx0XHRuID0gMztcblx0XHRMWzFdID0gLUxbMV0ueiAqIExbMF0gKyBMWzBdLnogKiBMWzFdO1xuXHRcdExbMl0gPSAtTFszXS56ICogTFswXSArIExbMF0ueiAqIExbM107XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSAyICkge1xuXHRcdG4gPSAzO1xuXHRcdExbMF0gPSAtTFswXS56ICogTFsxXSArIExbMV0ueiAqIExbMF07XG5cdFx0TFsyXSA9IC1MWzJdLnogKiBMWzFdICsgTFsxXS56ICogTFsyXTtcblx0fSBlbHNlIGlmICggY29uZmlnID09IDMgKSB7XG5cdFx0biA9IDQ7XG5cdFx0TFsyXSA9IC1MWzJdLnogKiBMWzFdICsgTFsxXS56ICogTFsyXTtcblx0XHRMWzNdID0gLUxbM10ueiAqIExbMF0gKyBMWzBdLnogKiBMWzNdO1xuXHR9IGVsc2UgaWYgKCBjb25maWcgPT0gNCApIHtcblx0XHRuID0gMztcblx0XHRMWzBdID0gLUxbM10ueiAqIExbMl0gKyBMWzJdLnogKiBMWzNdO1xuXHRcdExbMV0gPSAtTFsxXS56ICogTFsyXSArIExbMl0ueiAqIExbMV07XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSA1ICkge1xuXHRcdG4gPSAwO1xuXHR9IGVsc2UgaWYgKCBjb25maWcgPT0gNiApIHtcblx0XHRuID0gNDtcblx0XHRMWzBdID0gLUxbMF0ueiAqIExbMV0gKyBMWzFdLnogKiBMWzBdO1xuXHRcdExbM10gPSAtTFszXS56ICogTFsyXSArIExbMl0ueiAqIExbM107XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSA3ICkge1xuXHRcdG4gPSA1O1xuXHRcdExbNF0gPSAtTFszXS56ICogTFswXSArIExbMF0ueiAqIExbM107XG5cdFx0TFszXSA9IC1MWzNdLnogKiBMWzJdICsgTFsyXS56ICogTFszXTtcblx0fSBlbHNlIGlmICggY29uZmlnID09IDggKSB7XG5cdFx0biA9IDM7XG5cdFx0TFswXSA9IC1MWzBdLnogKiBMWzNdICsgTFszXS56ICogTFswXTtcblx0XHRMWzFdID0gLUxbMl0ueiAqIExbM10gKyBMWzNdLnogKiBMWzJdO1xuXHRcdExbMl0gPSAgTFszXTtcblx0fSBlbHNlIGlmICggY29uZmlnID09IDkgKSB7XG5cdFx0biA9IDQ7XG5cdFx0TFsxXSA9IC1MWzFdLnogKiBMWzBdICsgTFswXS56ICogTFsxXTtcblx0XHRMWzJdID0gLUxbMl0ueiAqIExbM10gKyBMWzNdLnogKiBMWzJdO1xuXHR9IGVsc2UgaWYgKCBjb25maWcgPT0gMTAgKSB7XG5cdFx0biA9IDA7XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSAxMSApIHtcblx0XHRuID0gNTtcblx0XHRMWzRdID0gTFszXTtcblx0XHRMWzNdID0gLUxbMl0ueiAqIExbM10gKyBMWzNdLnogKiBMWzJdO1xuXHRcdExbMl0gPSAtTFsyXS56ICogTFsxXSArIExbMV0ueiAqIExbMl07XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSAxMiApIHtcblx0XHRuID0gNDtcblx0XHRMWzFdID0gLUxbMV0ueiAqIExbMl0gKyBMWzJdLnogKiBMWzFdO1xuXHRcdExbMF0gPSAtTFswXS56ICogTFszXSArIExbM10ueiAqIExbMF07XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSAxMyApIHtcblx0XHRuID0gNTtcblx0XHRMWzRdID0gTFszXTtcblx0XHRMWzNdID0gTFsyXTtcblx0XHRMWzJdID0gLUxbMV0ueiAqIExbMl0gKyBMWzJdLnogKiBMWzFdO1xuXHRcdExbMV0gPSAtTFsxXS56ICogTFswXSArIExbMF0ueiAqIExbMV07XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSAxNCApIHtcblx0XHRuID0gNTtcblx0XHRMWzRdID0gLUxbMF0ueiAqIExbM10gKyBMWzNdLnogKiBMWzBdO1xuXHRcdExbMF0gPSAtTFswXS56ICogTFsxXSArIExbMV0ueiAqIExbMF07XG5cdH0gZWxzZSBpZiAoIGNvbmZpZyA9PSAxNSApIHtcblx0XHRuID0gNDtcblx0fVxuXHRpZiAoIG4gPT0gMyApXG5cdFx0TFszXSA9IExbMF07XG5cdGlmICggbiA9PSA0IClcblx0XHRMWzRdID0gTFswXTtcbn1cbmZsb2F0IGludGVncmF0ZUx0Y0JyZGZPdmVyUmVjdEVkZ2UoIHZlYzMgdjEsIHZlYzMgdjIgKSB7XG5cdGZsb2F0IGNvc1RoZXRhID0gZG90KCB2MSwgdjIgKTtcblx0ZmxvYXQgdGhldGEgPSBhY29zKCBjb3NUaGV0YSApO1xuXHRmbG9hdCByZXMgPSBjcm9zcyggdjEsIHYyICkueiAqICggKCB0aGV0YSA+IDAuMDAxICkgPyB0aGV0YSAvIHNpbiggdGhldGEgKSA6IDEuMCApO1xuXHRyZXR1cm4gcmVzO1xufVxudm9pZCBpbml0UmVjdFBvaW50cyggY29uc3QgaW4gdmVjMyBwb3MsIGNvbnN0IGluIHZlYzMgaGFsZldpZHRoLCBjb25zdCBpbiB2ZWMzIGhhbGZIZWlnaHQsIG91dCB2ZWMzIHJlY3RQb2ludHNbNF0gKSB7XG5cdHJlY3RQb2ludHNbMF0gPSBwb3MgLSBoYWxmV2lkdGggLSBoYWxmSGVpZ2h0O1xuXHRyZWN0UG9pbnRzWzFdID0gcG9zICsgaGFsZldpZHRoIC0gaGFsZkhlaWdodDtcblx0cmVjdFBvaW50c1syXSA9IHBvcyArIGhhbGZXaWR0aCArIGhhbGZIZWlnaHQ7XG5cdHJlY3RQb2ludHNbM10gPSBwb3MgLSBoYWxmV2lkdGggKyBoYWxmSGVpZ2h0O1xufVxudmVjMyBpbnRlZ3JhdGVMdGNCcmRmT3ZlclJlY3QoIGNvbnN0IGluIEdlb21ldHJpY0NvbnRleHQgZ2VvbWV0cnksIGNvbnN0IGluIG1hdDMgYnJkZk1hdCwgY29uc3QgaW4gdmVjMyByZWN0UG9pbnRzWzRdICkge1xuXHR2ZWMzIE4gPSBnZW9tZXRyeS5ub3JtYWw7XG5cdHZlYzMgViA9IGdlb21ldHJ5LnZpZXdEaXI7XG5cdHZlYzMgUCA9IGdlb21ldHJ5LnBvc2l0aW9uO1xuXHR2ZWMzIFQxLCBUMjtcblx0VDEgPSBub3JtYWxpemUoViAtIE4gKiBkb3QoIFYsIE4gKSk7XG5cdFQyID0gLSBjcm9zcyggTiwgVDEgKTtcblx0bWF0MyBicmRmV3J0U3VyZmFjZSA9IGJyZGZNYXQgKiB0cmFuc3Bvc2UoIG1hdDMoIFQxLCBUMiwgTiApICk7XG5cdHZlYzMgY2xpcHBlZFJlY3RbNV07XG5cdGNsaXBwZWRSZWN0WzBdID0gYnJkZldydFN1cmZhY2UgKiAoIHJlY3RQb2ludHNbMF0gLSBQICk7XG5cdGNsaXBwZWRSZWN0WzFdID0gYnJkZldydFN1cmZhY2UgKiAoIHJlY3RQb2ludHNbMV0gLSBQICk7XG5cdGNsaXBwZWRSZWN0WzJdID0gYnJkZldydFN1cmZhY2UgKiAoIHJlY3RQb2ludHNbMl0gLSBQICk7XG5cdGNsaXBwZWRSZWN0WzNdID0gYnJkZldydFN1cmZhY2UgKiAoIHJlY3RQb2ludHNbM10gLSBQICk7XG5cdGludCBuO1xuXHRjbGlwUXVhZFRvSG9yaXpvbihjbGlwcGVkUmVjdCwgbik7XG5cdGlmICggbiA9PSAwIClcblx0XHRyZXR1cm4gdmVjMyggMCwgMCwgMCApO1xuXHRjbGlwcGVkUmVjdFswXSA9IG5vcm1hbGl6ZSggY2xpcHBlZFJlY3RbMF0gKTtcblx0Y2xpcHBlZFJlY3RbMV0gPSBub3JtYWxpemUoIGNsaXBwZWRSZWN0WzFdICk7XG5cdGNsaXBwZWRSZWN0WzJdID0gbm9ybWFsaXplKCBjbGlwcGVkUmVjdFsyXSApO1xuXHRjbGlwcGVkUmVjdFszXSA9IG5vcm1hbGl6ZSggY2xpcHBlZFJlY3RbM10gKTtcblx0Y2xpcHBlZFJlY3RbNF0gPSBub3JtYWxpemUoIGNsaXBwZWRSZWN0WzRdICk7XG5cdGZsb2F0IHN1bSA9IDAuMDtcblx0c3VtICs9IGludGVncmF0ZUx0Y0JyZGZPdmVyUmVjdEVkZ2UoIGNsaXBwZWRSZWN0WzBdLCBjbGlwcGVkUmVjdFsxXSApO1xuXHRzdW0gKz0gaW50ZWdyYXRlTHRjQnJkZk92ZXJSZWN0RWRnZSggY2xpcHBlZFJlY3RbMV0sIGNsaXBwZWRSZWN0WzJdICk7XG5cdHN1bSArPSBpbnRlZ3JhdGVMdGNCcmRmT3ZlclJlY3RFZGdlKCBjbGlwcGVkUmVjdFsyXSwgY2xpcHBlZFJlY3RbM10gKTtcblx0aWYgKG4gPj0gNClcblx0XHRzdW0gKz0gaW50ZWdyYXRlTHRjQnJkZk92ZXJSZWN0RWRnZSggY2xpcHBlZFJlY3RbM10sIGNsaXBwZWRSZWN0WzRdICk7XG5cdGlmIChuID09IDUpXG5cdFx0c3VtICs9IGludGVncmF0ZUx0Y0JyZGZPdmVyUmVjdEVkZ2UoIGNsaXBwZWRSZWN0WzRdLCBjbGlwcGVkUmVjdFswXSApO1xuXHRzdW0gPSBtYXgoIDAuMCwgc3VtICk7XG5cdHZlYzMgTG9faSA9IHZlYzMoIHN1bSwgc3VtLCBzdW0gKTtcblx0cmV0dXJuIExvX2k7XG59XG52ZWMzIFJlY3RfQXJlYV9MaWdodF9TcGVjdWxhcl9SZWZsZWN0YW5jZShcblx0XHRjb25zdCBpbiBHZW9tZXRyaWNDb250ZXh0IGdlb21ldHJ5LFxuXHRcdGNvbnN0IGluIHZlYzMgbGlnaHRQb3MsIGNvbnN0IGluIHZlYzMgbGlnaHRIYWxmV2lkdGgsIGNvbnN0IGluIHZlYzMgbGlnaHRIYWxmSGVpZ2h0LFxuXHRcdGNvbnN0IGluIGZsb2F0IHJvdWdobmVzcyxcblx0XHRjb25zdCBpbiBzYW1wbGVyMkQgbHRjTWF0LCBjb25zdCBpbiBzYW1wbGVyMkQgbHRjTWFnICkge1xuXHR2ZWMzIHJlY3RQb2ludHNbNF07XG5cdGluaXRSZWN0UG9pbnRzKCBsaWdodFBvcywgbGlnaHRIYWxmV2lkdGgsIGxpZ2h0SGFsZkhlaWdodCwgcmVjdFBvaW50cyApO1xuXHR2ZWMyIHV2ID0gbHRjVGV4dHVyZUNvb3JkcyggZ2VvbWV0cnksIHJvdWdobmVzcyApO1xuXHR2ZWM0IGJyZGZMdGNBcHByb3hQYXJhbXMsIHQ7XG5cdGJyZGZMdGNBcHByb3hQYXJhbXMgPSB0ZXh0dXJlMkQoIGx0Y01hdCwgdXYgKTtcblx0dCA9IHRleHR1cmUyRCggbHRjTWF0LCB1diApO1xuXHRmbG9hdCBicmRmTHRjU2NhbGFyID0gdGV4dHVyZTJEKCBsdGNNYWcsIHV2ICkuYTtcblx0bWF0MyBicmRmTHRjQXBwcm94TWF0ID0gbWF0Myhcblx0XHR2ZWMzKCAgIDEsICAgMCwgdC55ICksXG5cdFx0dmVjMyggICAwLCB0LnosICAgMCApLFxuXHRcdHZlYzMoIHQudywgICAwLCB0LnggKVxuXHQpO1xuXHR2ZWMzIHNwZWN1bGFyUmVmbGVjdGFuY2UgPSBpbnRlZ3JhdGVMdGNCcmRmT3ZlclJlY3QoIGdlb21ldHJ5LCBicmRmTHRjQXBwcm94TWF0LCByZWN0UG9pbnRzICk7XG5cdHNwZWN1bGFyUmVmbGVjdGFuY2UgKj0gYnJkZkx0Y1NjYWxhcjtcblx0cmV0dXJuIHNwZWN1bGFyUmVmbGVjdGFuY2U7XG59XG52ZWMzIFJlY3RfQXJlYV9MaWdodF9EaWZmdXNlX1JlZmxlY3RhbmNlKFxuXHRcdGNvbnN0IGluIEdlb21ldHJpY0NvbnRleHQgZ2VvbWV0cnksXG5cdFx0Y29uc3QgaW4gdmVjMyBsaWdodFBvcywgY29uc3QgaW4gdmVjMyBsaWdodEhhbGZXaWR0aCwgY29uc3QgaW4gdmVjMyBsaWdodEhhbGZIZWlnaHQgKSB7XG5cdHZlYzMgcmVjdFBvaW50c1s0XTtcblx0aW5pdFJlY3RQb2ludHMoIGxpZ2h0UG9zLCBsaWdodEhhbGZXaWR0aCwgbGlnaHRIYWxmSGVpZ2h0LCByZWN0UG9pbnRzICk7XG5cdG1hdDMgZGlmZnVzZUJyZGZNYXQgPSBtYXQzKDEpO1xuXHR2ZWMzIGRpZmZ1c2VSZWZsZWN0YW5jZSA9IGludGVncmF0ZUx0Y0JyZGZPdmVyUmVjdCggZ2VvbWV0cnksIGRpZmZ1c2VCcmRmTWF0LCByZWN0UG9pbnRzICk7XG5cdHJldHVybiBkaWZmdXNlUmVmbGVjdGFuY2U7XG59XG52ZWMzIEJSREZfU3BlY3VsYXJfR0dYX0Vudmlyb25tZW50KCBjb25zdCBpbiBHZW9tZXRyaWNDb250ZXh0IGdlb21ldHJ5LCBjb25zdCBpbiB2ZWMzIHNwZWN1bGFyQ29sb3IsIGNvbnN0IGluIGZsb2F0IHJvdWdobmVzcyApIHtcblx0ZmxvYXQgZG90TlYgPSBzYXR1cmF0ZSggZG90KCBnZW9tZXRyeS5ub3JtYWwsIGdlb21ldHJ5LnZpZXdEaXIgKSApO1xuXHRjb25zdCB2ZWM0IGMwID0gdmVjNCggLSAxLCAtIDAuMDI3NSwgLSAwLjU3MiwgMC4wMjIgKTtcblx0Y29uc3QgdmVjNCBjMSA9IHZlYzQoIDEsIDAuMDQyNSwgMS4wNCwgLSAwLjA0ICk7XG5cdHZlYzQgciA9IHJvdWdobmVzcyAqIGMwICsgYzE7XG5cdGZsb2F0IGEwMDQgPSBtaW4oIHIueCAqIHIueCwgZXhwMiggLSA5LjI4ICogZG90TlYgKSApICogci54ICsgci55O1xuXHR2ZWMyIEFCID0gdmVjMiggLTEuMDQsIDEuMDQgKSAqIGEwMDQgKyByLnp3O1xuXHRyZXR1cm4gc3BlY3VsYXJDb2xvciAqIEFCLnggKyBBQi55O1xufVxuZmxvYXQgR19CbGlublBob25nX0ltcGxpY2l0KCApIHtcblx0cmV0dXJuIDAuMjU7XG59XG5mbG9hdCBEX0JsaW5uUGhvbmcoIGNvbnN0IGluIGZsb2F0IHNoaW5pbmVzcywgY29uc3QgaW4gZmxvYXQgZG90TkggKSB7XG5cdHJldHVybiBSRUNJUFJPQ0FMX1BJICogKCBzaGluaW5lc3MgKiAwLjUgKyAxLjAgKSAqIHBvdyggZG90TkgsIHNoaW5pbmVzcyApO1xufVxudmVjMyBCUkRGX1NwZWN1bGFyX0JsaW5uUGhvbmcoIGNvbnN0IGluIEluY2lkZW50TGlnaHQgaW5jaWRlbnRMaWdodCwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gdmVjMyBzcGVjdWxhckNvbG9yLCBjb25zdCBpbiBmbG9hdCBzaGluaW5lc3MgKSB7XG5cdHZlYzMgaGFsZkRpciA9IG5vcm1hbGl6ZSggaW5jaWRlbnRMaWdodC5kaXJlY3Rpb24gKyBnZW9tZXRyeS52aWV3RGlyICk7XG5cdGZsb2F0IGRvdE5IID0gc2F0dXJhdGUoIGRvdCggZ2VvbWV0cnkubm9ybWFsLCBoYWxmRGlyICkgKTtcblx0ZmxvYXQgZG90TEggPSBzYXR1cmF0ZSggZG90KCBpbmNpZGVudExpZ2h0LmRpcmVjdGlvbiwgaGFsZkRpciApICk7XG5cdHZlYzMgRiA9IEZfU2NobGljayggc3BlY3VsYXJDb2xvciwgZG90TEggKTtcblx0ZmxvYXQgRyA9IEdfQmxpbm5QaG9uZ19JbXBsaWNpdCggKTtcblx0ZmxvYXQgRCA9IERfQmxpbm5QaG9uZyggc2hpbmluZXNzLCBkb3ROSCApO1xuXHRyZXR1cm4gRiAqICggRyAqIEQgKTtcbn1cbmZsb2F0IEdHWFJvdWdobmVzc1RvQmxpbm5FeHBvbmVudCggY29uc3QgaW4gZmxvYXQgZ2d4Um91Z2huZXNzICkge1xuXHRyZXR1cm4gKCAyLjAgLyBwb3cyKCBnZ3hSb3VnaG5lc3MgKyAwLjAwMDEgKSAtIDIuMCApO1xufVxuZmxvYXQgQmxpbm5FeHBvbmVudFRvR0dYUm91Z2huZXNzKCBjb25zdCBpbiBmbG9hdCBibGlubkV4cG9uZW50ICkge1xuXHRyZXR1cm4gc3FydCggMi4wIC8gKCBibGlubkV4cG9uZW50ICsgMi4wICkgKTtcbn1cbiIsYnVtcG1hcF9wYXJzX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0JVTVBNQVBcblx0dW5pZm9ybSBzYW1wbGVyMkQgYnVtcE1hcDtcblx0dW5pZm9ybSBmbG9hdCBidW1wU2NhbGU7XG5cdHZlYzIgZEhkeHlfZndkKCkge1xuXHRcdHZlYzIgZFNUZHggPSBkRmR4KCB2VXYgKTtcblx0XHR2ZWMyIGRTVGR5ID0gZEZkeSggdlV2ICk7XG5cdFx0ZmxvYXQgSGxsID0gYnVtcFNjYWxlICogdGV4dHVyZTJEKCBidW1wTWFwLCB2VXYgKS54O1xuXHRcdGZsb2F0IGRCeCA9IGJ1bXBTY2FsZSAqIHRleHR1cmUyRCggYnVtcE1hcCwgdlV2ICsgZFNUZHggKS54IC0gSGxsO1xuXHRcdGZsb2F0IGRCeSA9IGJ1bXBTY2FsZSAqIHRleHR1cmUyRCggYnVtcE1hcCwgdlV2ICsgZFNUZHkgKS54IC0gSGxsO1xuXHRcdHJldHVybiB2ZWMyKCBkQngsIGRCeSApO1xuXHR9XG5cdHZlYzMgcGVydHVyYk5vcm1hbEFyYiggdmVjMyBzdXJmX3BvcywgdmVjMyBzdXJmX25vcm0sIHZlYzIgZEhkeHkgKSB7XG5cdFx0dmVjMyB2U2lnbWFYID0gZEZkeCggc3VyZl9wb3MgKTtcblx0XHR2ZWMzIHZTaWdtYVkgPSBkRmR5KCBzdXJmX3BvcyApO1xuXHRcdHZlYzMgdk4gPSBzdXJmX25vcm07XG5cdFx0dmVjMyBSMSA9IGNyb3NzKCB2U2lnbWFZLCB2TiApO1xuXHRcdHZlYzMgUjIgPSBjcm9zcyggdk4sIHZTaWdtYVggKTtcblx0XHRmbG9hdCBmRGV0ID0gZG90KCB2U2lnbWFYLCBSMSApO1xuXHRcdHZlYzMgdkdyYWQgPSBzaWduKCBmRGV0ICkgKiAoIGRIZHh5LnggKiBSMSArIGRIZHh5LnkgKiBSMiApO1xuXHRcdHJldHVybiBub3JtYWxpemUoIGFicyggZkRldCApICogc3VyZl9ub3JtIC0gdkdyYWQgKTtcblx0fVxuI2VuZGlmXG4iLGNsaXBwaW5nX3BsYW5lc19mcmFnbWVudDoiI2lmIE5VTV9DTElQUElOR19QTEFORVMgPiAwXG5cdGZvciAoIGludCBpID0gMDsgaSA8IFVOSU9OX0NMSVBQSU5HX1BMQU5FUzsgKysgaSApIHtcblx0XHR2ZWM0IHBsYW5lID0gY2xpcHBpbmdQbGFuZXNbIGkgXTtcblx0XHRpZiAoIGRvdCggdlZpZXdQb3NpdGlvbiwgcGxhbmUueHl6ICkgPiBwbGFuZS53ICkgZGlzY2FyZDtcblx0fVxuXHRcdFxuXHQjaWYgVU5JT05fQ0xJUFBJTkdfUExBTkVTIDwgTlVNX0NMSVBQSU5HX1BMQU5FU1xuXHRcdGJvb2wgY2xpcHBlZCA9IHRydWU7XG5cdFx0Zm9yICggaW50IGkgPSBVTklPTl9DTElQUElOR19QTEFORVM7IGkgPCBOVU1fQ0xJUFBJTkdfUExBTkVTOyArKyBpICkge1xuXHRcdFx0dmVjNCBwbGFuZSA9IGNsaXBwaW5nUGxhbmVzWyBpIF07XG5cdFx0XHRjbGlwcGVkID0gKCBkb3QoIHZWaWV3UG9zaXRpb24sIHBsYW5lLnh5eiApID4gcGxhbmUudyApICYmIGNsaXBwZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xpcHBlZCApIGRpc2NhcmQ7XG5cdFxuXHQjZW5kaWZcbiNlbmRpZlxuIixjbGlwcGluZ19wbGFuZXNfcGFyc19mcmFnbWVudDoiI2lmIE5VTV9DTElQUElOR19QTEFORVMgPiAwXG5cdCNpZiAhIGRlZmluZWQoIFBIWVNJQ0FMICkgJiYgISBkZWZpbmVkKCBQSE9ORyApXG5cdFx0dmFyeWluZyB2ZWMzIHZWaWV3UG9zaXRpb247XG5cdCNlbmRpZlxuXHR1bmlmb3JtIHZlYzQgY2xpcHBpbmdQbGFuZXNbIE5VTV9DTElQUElOR19QTEFORVMgXTtcbiNlbmRpZlxuIixjbGlwcGluZ19wbGFuZXNfcGFyc192ZXJ0ZXg6IiNpZiBOVU1fQ0xJUFBJTkdfUExBTkVTID4gMCAmJiAhIGRlZmluZWQoIFBIWVNJQ0FMICkgJiYgISBkZWZpbmVkKCBQSE9ORyApXG5cdHZhcnlpbmcgdmVjMyB2Vmlld1Bvc2l0aW9uO1xuI2VuZGlmXG4iLGNsaXBwaW5nX3BsYW5lc192ZXJ0ZXg6IiNpZiBOVU1fQ0xJUFBJTkdfUExBTkVTID4gMCAmJiAhIGRlZmluZWQoIFBIWVNJQ0FMICkgJiYgISBkZWZpbmVkKCBQSE9ORyApXG5cdHZWaWV3UG9zaXRpb24gPSAtIG12UG9zaXRpb24ueHl6O1xuI2VuZGlmXG4iLGNvbG9yX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0NPTE9SXG5cdGRpZmZ1c2VDb2xvci5yZ2IgKj0gdkNvbG9yO1xuI2VuZGlmIixjb2xvcl9wYXJzX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0NPTE9SXG5cdHZhcnlpbmcgdmVjMyB2Q29sb3I7XG4jZW5kaWZcbiIsY29sb3JfcGFyc192ZXJ0ZXg6IiNpZmRlZiBVU0VfQ09MT1Jcblx0dmFyeWluZyB2ZWMzIHZDb2xvcjtcbiNlbmRpZiIsY29sb3JfdmVydGV4OiIjaWZkZWYgVVNFX0NPTE9SXG5cdHZDb2xvci54eXogPSBjb2xvci54eXo7XG4jZW5kaWYiLGNvbW1vbjoiI2RlZmluZSBQSSAzLjE0MTU5MjY1MzU5XG4jZGVmaW5lIFBJMiA2LjI4MzE4NTMwNzE4XG4jZGVmaW5lIFBJX0hBTEYgMS41NzA3OTYzMjY3OTQ5XG4jZGVmaW5lIFJFQ0lQUk9DQUxfUEkgMC4zMTgzMDk4ODYxOFxuI2RlZmluZSBSRUNJUFJPQ0FMX1BJMiAwLjE1OTE1NDk0XG4jZGVmaW5lIExPRzIgMS40NDI2OTVcbiNkZWZpbmUgRVBTSUxPTiAxZS02XG4jZGVmaW5lIHNhdHVyYXRlKGEpIGNsYW1wKCBhLCAwLjAsIDEuMCApXG4jZGVmaW5lIHdoaXRlQ29tcGxpbWVudChhKSAoIDEuMCAtIHNhdHVyYXRlKCBhICkgKVxuZmxvYXQgcG93MiggY29uc3QgaW4gZmxvYXQgeCApIHsgcmV0dXJuIHgqeDsgfVxuZmxvYXQgcG93MyggY29uc3QgaW4gZmxvYXQgeCApIHsgcmV0dXJuIHgqeCp4OyB9XG5mbG9hdCBwb3c0KCBjb25zdCBpbiBmbG9hdCB4ICkgeyBmbG9hdCB4MiA9IHgqeDsgcmV0dXJuIHgyKngyOyB9XG5mbG9hdCBhdmVyYWdlKCBjb25zdCBpbiB2ZWMzIGNvbG9yICkgeyByZXR1cm4gZG90KCBjb2xvciwgdmVjMyggMC4zMzMzICkgKTsgfVxuaGlnaHAgZmxvYXQgcmFuZCggY29uc3QgaW4gdmVjMiB1diApIHtcblx0Y29uc3QgaGlnaHAgZmxvYXQgYSA9IDEyLjk4OTgsIGIgPSA3OC4yMzMsIGMgPSA0Mzc1OC41NDUzO1xuXHRoaWdocCBmbG9hdCBkdCA9IGRvdCggdXYueHksIHZlYzIoIGEsYiApICksIHNuID0gbW9kKCBkdCwgUEkgKTtcblx0cmV0dXJuIGZyYWN0KHNpbihzbikgKiBjKTtcbn1cbnN0cnVjdCBJbmNpZGVudExpZ2h0IHtcblx0dmVjMyBjb2xvcjtcblx0dmVjMyBkaXJlY3Rpb247XG5cdGJvb2wgdmlzaWJsZTtcbn07XG5zdHJ1Y3QgUmVmbGVjdGVkTGlnaHQge1xuXHR2ZWMzIGRpcmVjdERpZmZ1c2U7XG5cdHZlYzMgZGlyZWN0U3BlY3VsYXI7XG5cdHZlYzMgaW5kaXJlY3REaWZmdXNlO1xuXHR2ZWMzIGluZGlyZWN0U3BlY3VsYXI7XG59O1xuc3RydWN0IEdlb21ldHJpY0NvbnRleHQge1xuXHR2ZWMzIHBvc2l0aW9uO1xuXHR2ZWMzIG5vcm1hbDtcblx0dmVjMyB2aWV3RGlyO1xufTtcbnZlYzMgdHJhbnNmb3JtRGlyZWN0aW9uKCBpbiB2ZWMzIGRpciwgaW4gbWF0NCBtYXRyaXggKSB7XG5cdHJldHVybiBub3JtYWxpemUoICggbWF0cml4ICogdmVjNCggZGlyLCAwLjAgKSApLnh5eiApO1xufVxudmVjMyBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCBpbiB2ZWMzIGRpciwgaW4gbWF0NCBtYXRyaXggKSB7XG5cdHJldHVybiBub3JtYWxpemUoICggdmVjNCggZGlyLCAwLjAgKSAqIG1hdHJpeCApLnh5eiApO1xufVxudmVjMyBwcm9qZWN0T25QbGFuZShpbiB2ZWMzIHBvaW50LCBpbiB2ZWMzIHBvaW50T25QbGFuZSwgaW4gdmVjMyBwbGFuZU5vcm1hbCApIHtcblx0ZmxvYXQgZGlzdGFuY2UgPSBkb3QoIHBsYW5lTm9ybWFsLCBwb2ludCAtIHBvaW50T25QbGFuZSApO1xuXHRyZXR1cm4gLSBkaXN0YW5jZSAqIHBsYW5lTm9ybWFsICsgcG9pbnQ7XG59XG5mbG9hdCBzaWRlT2ZQbGFuZSggaW4gdmVjMyBwb2ludCwgaW4gdmVjMyBwb2ludE9uUGxhbmUsIGluIHZlYzMgcGxhbmVOb3JtYWwgKSB7XG5cdHJldHVybiBzaWduKCBkb3QoIHBvaW50IC0gcG9pbnRPblBsYW5lLCBwbGFuZU5vcm1hbCApICk7XG59XG52ZWMzIGxpbmVQbGFuZUludGVyc2VjdCggaW4gdmVjMyBwb2ludE9uTGluZSwgaW4gdmVjMyBsaW5lRGlyZWN0aW9uLCBpbiB2ZWMzIHBvaW50T25QbGFuZSwgaW4gdmVjMyBwbGFuZU5vcm1hbCApIHtcblx0cmV0dXJuIGxpbmVEaXJlY3Rpb24gKiAoIGRvdCggcGxhbmVOb3JtYWwsIHBvaW50T25QbGFuZSAtIHBvaW50T25MaW5lICkgLyBkb3QoIHBsYW5lTm9ybWFsLCBsaW5lRGlyZWN0aW9uICkgKSArIHBvaW50T25MaW5lO1xufVxubWF0MyB0cmFuc3Bvc2UoIGNvbnN0IGluIG1hdDMgdiApIHtcblx0bWF0MyB0bXA7XG5cdHRtcFswXSA9IHZlYzModlswXS54LCB2WzFdLngsIHZbMl0ueCk7XG5cdHRtcFsxXSA9IHZlYzModlswXS55LCB2WzFdLnksIHZbMl0ueSk7XG5cdHRtcFsyXSA9IHZlYzModlswXS56LCB2WzFdLnosIHZbMl0ueik7XG5cdHJldHVybiB0bXA7XG59XG4iLGN1YmVfdXZfcmVmbGVjdGlvbl9mcmFnbWVudDoiI2lmZGVmIEVOVk1BUF9UWVBFX0NVQkVfVVZcbiNkZWZpbmUgY3ViZVVWX3RleHR1cmVTaXplICgxMDI0LjApXG5pbnQgZ2V0RmFjZUZyb21EaXJlY3Rpb24odmVjMyBkaXJlY3Rpb24pIHtcblx0dmVjMyBhYnNEaXJlY3Rpb24gPSBhYnMoZGlyZWN0aW9uKTtcblx0aW50IGZhY2UgPSAtMTtcblx0aWYoIGFic0RpcmVjdGlvbi54ID4gYWJzRGlyZWN0aW9uLnogKSB7XG5cdFx0aWYoYWJzRGlyZWN0aW9uLnggPiBhYnNEaXJlY3Rpb24ueSApXG5cdFx0XHRmYWNlID0gZGlyZWN0aW9uLnggPiAwLjAgPyAwIDogMztcblx0XHRlbHNlXG5cdFx0XHRmYWNlID0gZGlyZWN0aW9uLnkgPiAwLjAgPyAxIDogNDtcblx0fVxuXHRlbHNlIHtcblx0XHRpZihhYnNEaXJlY3Rpb24ueiA+IGFic0RpcmVjdGlvbi55IClcblx0XHRcdGZhY2UgPSBkaXJlY3Rpb24ueiA+IDAuMCA/IDIgOiA1O1xuXHRcdGVsc2Vcblx0XHRcdGZhY2UgPSBkaXJlY3Rpb24ueSA+IDAuMCA/IDEgOiA0O1xuXHR9XG5cdHJldHVybiBmYWNlO1xufVxuI2RlZmluZSBjdWJlVVZfbWF4TG9kczEgIChsb2cyKGN1YmVVVl90ZXh0dXJlU2l6ZSowLjI1KSAtIDEuMClcbiNkZWZpbmUgY3ViZVVWX3JhbmdlQ2xhbXAgKGV4cDIoKDYuMCAtIDEuMCkgKiAyLjApKVxudmVjMiBNaXBMZXZlbEluZm8oIHZlYzMgdmVjLCBmbG9hdCByb3VnaG5lc3NMZXZlbCwgZmxvYXQgcm91Z2huZXNzICkge1xuXHRmbG9hdCBzY2FsZSA9IGV4cDIoY3ViZVVWX21heExvZHMxIC0gcm91Z2huZXNzTGV2ZWwpO1xuXHRmbG9hdCBkeFJvdWdobmVzcyA9IGRGZHgocm91Z2huZXNzKTtcblx0ZmxvYXQgZHlSb3VnaG5lc3MgPSBkRmR5KHJvdWdobmVzcyk7XG5cdHZlYzMgZHggPSBkRmR4KCB2ZWMgKiBzY2FsZSAqIGR4Um91Z2huZXNzICk7XG5cdHZlYzMgZHkgPSBkRmR5KCB2ZWMgKiBzY2FsZSAqIGR5Um91Z2huZXNzICk7XG5cdGZsb2F0IGQgPSBtYXgoIGRvdCggZHgsIGR4ICksIGRvdCggZHksIGR5ICkgKTtcblx0ZCA9IGNsYW1wKGQsIDEuMCwgY3ViZVVWX3JhbmdlQ2xhbXApO1xuXHRmbG9hdCBtaXBMZXZlbCA9IDAuNSAqIGxvZzIoZCk7XG5cdHJldHVybiB2ZWMyKGZsb29yKG1pcExldmVsKSwgZnJhY3QobWlwTGV2ZWwpKTtcbn1cbiNkZWZpbmUgY3ViZVVWX21heExvZHMyIChsb2cyKGN1YmVVVl90ZXh0dXJlU2l6ZSowLjI1KSAtIDIuMClcbiNkZWZpbmUgY3ViZVVWX3JjcFRleHR1cmVTaXplICgxLjAgLyBjdWJlVVZfdGV4dHVyZVNpemUpXG52ZWMyIGdldEN1YmVVVih2ZWMzIGRpcmVjdGlvbiwgZmxvYXQgcm91Z2huZXNzTGV2ZWwsIGZsb2F0IG1pcExldmVsKSB7XG5cdG1pcExldmVsID0gcm91Z2huZXNzTGV2ZWwgPiBjdWJlVVZfbWF4TG9kczIgLSAzLjAgPyAwLjAgOiBtaXBMZXZlbDtcblx0ZmxvYXQgYSA9IDE2LjAgKiBjdWJlVVZfcmNwVGV4dHVyZVNpemU7XG5cdHZlYzIgZXhwMl9wYWNrZWQgPSBleHAyKCB2ZWMyKCByb3VnaG5lc3NMZXZlbCwgbWlwTGV2ZWwgKSApO1xuXHR2ZWMyIHJjcF9leHAyX3BhY2tlZCA9IHZlYzIoIDEuMCApIC8gZXhwMl9wYWNrZWQ7XG5cdGZsb2F0IHBvd1NjYWxlID0gZXhwMl9wYWNrZWQueCAqIGV4cDJfcGFja2VkLnk7XG5cdGZsb2F0IHNjYWxlID0gcmNwX2V4cDJfcGFja2VkLnggKiByY3BfZXhwMl9wYWNrZWQueSAqIDAuMjU7XG5cdGZsb2F0IG1pcE9mZnNldCA9IDAuNzUqKDEuMCAtIHJjcF9leHAyX3BhY2tlZC55KSAqIHJjcF9leHAyX3BhY2tlZC54O1xuXHRib29sIGJSZXMgPSBtaXBMZXZlbCA9PSAwLjA7XG5cdHNjYWxlID0gIGJSZXMgJiYgKHNjYWxlIDwgYSkgPyBhIDogc2NhbGU7XG5cdHZlYzMgcjtcblx0dmVjMiBvZmZzZXQ7XG5cdGludCBmYWNlID0gZ2V0RmFjZUZyb21EaXJlY3Rpb24oZGlyZWN0aW9uKTtcblx0ZmxvYXQgcmNwUG93U2NhbGUgPSAxLjAgLyBwb3dTY2FsZTtcblx0aWYoIGZhY2UgPT0gMCkge1xuXHRcdHIgPSB2ZWMzKGRpcmVjdGlvbi54LCAtZGlyZWN0aW9uLnosIGRpcmVjdGlvbi55KTtcblx0XHRvZmZzZXQgPSB2ZWMyKDAuMCttaXBPZmZzZXQsMC43NSAqIHJjcFBvd1NjYWxlKTtcblx0XHRvZmZzZXQueSA9IGJSZXMgJiYgKG9mZnNldC55IDwgMi4wKmEpID8gIGEgOiBvZmZzZXQueTtcblx0fVxuXHRlbHNlIGlmKCBmYWNlID09IDEpIHtcblx0XHRyID0gdmVjMyhkaXJlY3Rpb24ueSwgZGlyZWN0aW9uLngsIGRpcmVjdGlvbi56KTtcblx0XHRvZmZzZXQgPSB2ZWMyKHNjYWxlK21pcE9mZnNldCwgMC43NSAqIHJjcFBvd1NjYWxlKTtcblx0XHRvZmZzZXQueSA9IGJSZXMgJiYgKG9mZnNldC55IDwgMi4wKmEpID8gIGEgOiBvZmZzZXQueTtcblx0fVxuXHRlbHNlIGlmKCBmYWNlID09IDIpIHtcblx0XHRyID0gdmVjMyhkaXJlY3Rpb24ueiwgZGlyZWN0aW9uLngsIGRpcmVjdGlvbi55KTtcblx0XHRvZmZzZXQgPSB2ZWMyKDIuMCpzY2FsZSttaXBPZmZzZXQsIDAuNzUgKiByY3BQb3dTY2FsZSk7XG5cdFx0b2Zmc2V0LnkgPSBiUmVzICYmIChvZmZzZXQueSA8IDIuMCphKSA/ICBhIDogb2Zmc2V0Lnk7XG5cdH1cblx0ZWxzZSBpZiggZmFjZSA9PSAzKSB7XG5cdFx0ciA9IHZlYzMoZGlyZWN0aW9uLngsIGRpcmVjdGlvbi56LCBkaXJlY3Rpb24ueSk7XG5cdFx0b2Zmc2V0ID0gdmVjMigwLjArbWlwT2Zmc2V0LDAuNSAqIHJjcFBvd1NjYWxlKTtcblx0XHRvZmZzZXQueSA9IGJSZXMgJiYgKG9mZnNldC55IDwgMi4wKmEpID8gIDAuMCA6IG9mZnNldC55O1xuXHR9XG5cdGVsc2UgaWYoIGZhY2UgPT0gNCkge1xuXHRcdHIgPSB2ZWMzKGRpcmVjdGlvbi55LCBkaXJlY3Rpb24ueCwgLWRpcmVjdGlvbi56KTtcblx0XHRvZmZzZXQgPSB2ZWMyKHNjYWxlK21pcE9mZnNldCwgMC41ICogcmNwUG93U2NhbGUpO1xuXHRcdG9mZnNldC55ID0gYlJlcyAmJiAob2Zmc2V0LnkgPCAyLjAqYSkgPyAgMC4wIDogb2Zmc2V0Lnk7XG5cdH1cblx0ZWxzZSB7XG5cdFx0ciA9IHZlYzMoZGlyZWN0aW9uLnosIC1kaXJlY3Rpb24ueCwgZGlyZWN0aW9uLnkpO1xuXHRcdG9mZnNldCA9IHZlYzIoMi4wKnNjYWxlK21pcE9mZnNldCwgMC41ICogcmNwUG93U2NhbGUpO1xuXHRcdG9mZnNldC55ID0gYlJlcyAmJiAob2Zmc2V0LnkgPCAyLjAqYSkgPyAgMC4wIDogb2Zmc2V0Lnk7XG5cdH1cblx0ciA9IG5vcm1hbGl6ZShyKTtcblx0ZmxvYXQgdGV4ZWxPZmZzZXQgPSAwLjUgKiBjdWJlVVZfcmNwVGV4dHVyZVNpemU7XG5cdHZlYzIgcyA9ICggci55eiAvIGFicyggci54ICkgKyB2ZWMyKCAxLjAgKSApICogMC41O1xuXHR2ZWMyIGJhc2UgPSBvZmZzZXQgKyB2ZWMyKCB0ZXhlbE9mZnNldCApO1xuXHRyZXR1cm4gYmFzZSArIHMgKiAoIHNjYWxlIC0gMi4wICogdGV4ZWxPZmZzZXQgKTtcbn1cbiNkZWZpbmUgY3ViZVVWX21heExvZHMzIChsb2cyKGN1YmVVVl90ZXh0dXJlU2l6ZSowLjI1KSAtIDMuMClcbnZlYzQgdGV4dHVyZUN1YmVVVih2ZWMzIHJlZmxlY3RlZERpcmVjdGlvbiwgZmxvYXQgcm91Z2huZXNzICkge1xuXHRmbG9hdCByb3VnaG5lc3NWYWwgPSByb3VnaG5lc3MqIGN1YmVVVl9tYXhMb2RzMztcblx0ZmxvYXQgcjEgPSBmbG9vcihyb3VnaG5lc3NWYWwpO1xuXHRmbG9hdCByMiA9IHIxICsgMS4wO1xuXHRmbG9hdCB0ID0gZnJhY3Qocm91Z2huZXNzVmFsKTtcblx0dmVjMiBtaXBJbmZvID0gTWlwTGV2ZWxJbmZvKHJlZmxlY3RlZERpcmVjdGlvbiwgcjEsIHJvdWdobmVzcyk7XG5cdGZsb2F0IHMgPSBtaXBJbmZvLnk7XG5cdGZsb2F0IGxldmVsMCA9IG1pcEluZm8ueDtcblx0ZmxvYXQgbGV2ZWwxID0gbGV2ZWwwICsgMS4wO1xuXHRsZXZlbDEgPSBsZXZlbDEgPiA1LjAgPyA1LjAgOiBsZXZlbDE7XG5cdGxldmVsMCArPSBtaW4oIGZsb29yKCBzICsgMC41ICksIDUuMCApO1xuXHR2ZWMyIHV2XzEwID0gZ2V0Q3ViZVVWKHJlZmxlY3RlZERpcmVjdGlvbiwgcjEsIGxldmVsMCk7XG5cdHZlYzQgY29sb3IxMCA9IGVudk1hcFRleGVsVG9MaW5lYXIodGV4dHVyZTJEKGVudk1hcCwgdXZfMTApKTtcblx0dmVjMiB1dl8yMCA9IGdldEN1YmVVVihyZWZsZWN0ZWREaXJlY3Rpb24sIHIyLCBsZXZlbDApO1xuXHR2ZWM0IGNvbG9yMjAgPSBlbnZNYXBUZXhlbFRvTGluZWFyKHRleHR1cmUyRChlbnZNYXAsIHV2XzIwKSk7XG5cdHZlYzQgcmVzdWx0ID0gbWl4KGNvbG9yMTAsIGNvbG9yMjAsIHQpO1xuXHRyZXR1cm4gdmVjNChyZXN1bHQucmdiLCAxLjApO1xufVxuI2VuZGlmXG4iLGRlZmF1bHRub3JtYWxfdmVydGV4OiIjaWZkZWYgRkxJUF9TSURFRFxuXHRvYmplY3ROb3JtYWwgPSAtb2JqZWN0Tm9ybWFsO1xuI2VuZGlmXG52ZWMzIHRyYW5zZm9ybWVkTm9ybWFsID0gbm9ybWFsTWF0cml4ICogb2JqZWN0Tm9ybWFsO1xuIixkaXNwbGFjZW1lbnRtYXBfcGFyc192ZXJ0ZXg6IiNpZmRlZiBVU0VfRElTUExBQ0VNRU5UTUFQXG5cdHVuaWZvcm0gc2FtcGxlcjJEIGRpc3BsYWNlbWVudE1hcDtcblx0dW5pZm9ybSBmbG9hdCBkaXNwbGFjZW1lbnRTY2FsZTtcblx0dW5pZm9ybSBmbG9hdCBkaXNwbGFjZW1lbnRCaWFzO1xuI2VuZGlmXG4iLGRpc3BsYWNlbWVudG1hcF92ZXJ0ZXg6IiNpZmRlZiBVU0VfRElTUExBQ0VNRU5UTUFQXG5cdHRyYW5zZm9ybWVkICs9IG5vcm1hbCAqICggdGV4dHVyZTJEKCBkaXNwbGFjZW1lbnRNYXAsIHV2ICkueCAqIGRpc3BsYWNlbWVudFNjYWxlICsgZGlzcGxhY2VtZW50QmlhcyApO1xuI2VuZGlmXG4iLGVtaXNzaXZlbWFwX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0VNSVNTSVZFTUFQXG5cdHZlYzQgZW1pc3NpdmVDb2xvciA9IHRleHR1cmUyRCggZW1pc3NpdmVNYXAsIHZVdiApO1xuXHRlbWlzc2l2ZUNvbG9yLnJnYiA9IGVtaXNzaXZlTWFwVGV4ZWxUb0xpbmVhciggZW1pc3NpdmVDb2xvciApLnJnYjtcblx0dG90YWxFbWlzc2l2ZVJhZGlhbmNlICo9IGVtaXNzaXZlQ29sb3IucmdiO1xuI2VuZGlmXG4iLGVtaXNzaXZlbWFwX3BhcnNfZnJhZ21lbnQ6IiNpZmRlZiBVU0VfRU1JU1NJVkVNQVBcblx0dW5pZm9ybSBzYW1wbGVyMkQgZW1pc3NpdmVNYXA7XG4jZW5kaWZcbiIsZW5jb2RpbmdzX2ZyYWdtZW50OiIgIGdsX0ZyYWdDb2xvciA9IGxpbmVhclRvT3V0cHV0VGV4ZWwoIGdsX0ZyYWdDb2xvciApO1xuIixlbmNvZGluZ3NfcGFyc19mcmFnbWVudDoiXG52ZWM0IExpbmVhclRvTGluZWFyKCBpbiB2ZWM0IHZhbHVlICkge1xuICByZXR1cm4gdmFsdWU7XG59XG52ZWM0IEdhbW1hVG9MaW5lYXIoIGluIHZlYzQgdmFsdWUsIGluIGZsb2F0IGdhbW1hRmFjdG9yICkge1xuICByZXR1cm4gdmVjNCggcG93KCB2YWx1ZS54eXosIHZlYzMoIGdhbW1hRmFjdG9yICkgKSwgdmFsdWUudyApO1xufVxudmVjNCBMaW5lYXJUb0dhbW1hKCBpbiB2ZWM0IHZhbHVlLCBpbiBmbG9hdCBnYW1tYUZhY3RvciApIHtcbiAgcmV0dXJuIHZlYzQoIHBvdyggdmFsdWUueHl6LCB2ZWMzKCAxLjAgLyBnYW1tYUZhY3RvciApICksIHZhbHVlLncgKTtcbn1cbnZlYzQgc1JHQlRvTGluZWFyKCBpbiB2ZWM0IHZhbHVlICkge1xuICByZXR1cm4gdmVjNCggbWl4KCBwb3coIHZhbHVlLnJnYiAqIDAuOTQ3ODY3Mjk4NiArIHZlYzMoIDAuMDUyMTMyNzAxNCApLCB2ZWMzKCAyLjQgKSApLCB2YWx1ZS5yZ2IgKiAwLjA3NzM5OTM4MDgsIHZlYzMoIGxlc3NUaGFuRXF1YWwoIHZhbHVlLnJnYiwgdmVjMyggMC4wNDA0NSApICkgKSApLCB2YWx1ZS53ICk7XG59XG52ZWM0IExpbmVhclRvc1JHQiggaW4gdmVjNCB2YWx1ZSApIHtcbiAgcmV0dXJuIHZlYzQoIG1peCggcG93KCB2YWx1ZS5yZ2IsIHZlYzMoIDAuNDE2NjYgKSApICogMS4wNTUgLSB2ZWMzKCAwLjA1NSApLCB2YWx1ZS5yZ2IgKiAxMi45MiwgdmVjMyggbGVzc1RoYW5FcXVhbCggdmFsdWUucmdiLCB2ZWMzKCAwLjAwMzEzMDggKSApICkgKSwgdmFsdWUudyApO1xufVxudmVjNCBSR0JFVG9MaW5lYXIoIGluIHZlYzQgdmFsdWUgKSB7XG4gIHJldHVybiB2ZWM0KCB2YWx1ZS5yZ2IgKiBleHAyKCB2YWx1ZS5hICogMjU1LjAgLSAxMjguMCApLCAxLjAgKTtcbn1cbnZlYzQgTGluZWFyVG9SR0JFKCBpbiB2ZWM0IHZhbHVlICkge1xuICBmbG9hdCBtYXhDb21wb25lbnQgPSBtYXgoIG1heCggdmFsdWUuciwgdmFsdWUuZyApLCB2YWx1ZS5iICk7XG4gIGZsb2F0IGZFeHAgPSBjbGFtcCggY2VpbCggbG9nMiggbWF4Q29tcG9uZW50ICkgKSwgLTEyOC4wLCAxMjcuMCApO1xuICByZXR1cm4gdmVjNCggdmFsdWUucmdiIC8gZXhwMiggZkV4cCApLCAoIGZFeHAgKyAxMjguMCApIC8gMjU1LjAgKTtcbn1cbnZlYzQgUkdCTVRvTGluZWFyKCBpbiB2ZWM0IHZhbHVlLCBpbiBmbG9hdCBtYXhSYW5nZSApIHtcbiAgcmV0dXJuIHZlYzQoIHZhbHVlLnh5eiAqIHZhbHVlLncgKiBtYXhSYW5nZSwgMS4wICk7XG59XG52ZWM0IExpbmVhclRvUkdCTSggaW4gdmVjNCB2YWx1ZSwgaW4gZmxvYXQgbWF4UmFuZ2UgKSB7XG4gIGZsb2F0IG1heFJHQiA9IG1heCggdmFsdWUueCwgbWF4KCB2YWx1ZS5nLCB2YWx1ZS5iICkgKTtcbiAgZmxvYXQgTSAgICAgID0gY2xhbXAoIG1heFJHQiAvIG1heFJhbmdlLCAwLjAsIDEuMCApO1xuICBNICAgICAgICAgICAgPSBjZWlsKCBNICogMjU1LjAgKSAvIDI1NS4wO1xuICByZXR1cm4gdmVjNCggdmFsdWUucmdiIC8gKCBNICogbWF4UmFuZ2UgKSwgTSApO1xufVxudmVjNCBSR0JEVG9MaW5lYXIoIGluIHZlYzQgdmFsdWUsIGluIGZsb2F0IG1heFJhbmdlICkge1xuICAgIHJldHVybiB2ZWM0KCB2YWx1ZS5yZ2IgKiAoICggbWF4UmFuZ2UgLyAyNTUuMCApIC8gdmFsdWUuYSApLCAxLjAgKTtcbn1cbnZlYzQgTGluZWFyVG9SR0JEKCBpbiB2ZWM0IHZhbHVlLCBpbiBmbG9hdCBtYXhSYW5nZSApIHtcbiAgICBmbG9hdCBtYXhSR0IgPSBtYXgoIHZhbHVlLngsIG1heCggdmFsdWUuZywgdmFsdWUuYiApICk7XG4gICAgZmxvYXQgRCAgICAgID0gbWF4KCBtYXhSYW5nZSAvIG1heFJHQiwgMS4wICk7XG4gICAgRCAgICAgICAgICAgID0gbWluKCBmbG9vciggRCApIC8gMjU1LjAsIDEuMCApO1xuICAgIHJldHVybiB2ZWM0KCB2YWx1ZS5yZ2IgKiAoIEQgKiAoIDI1NS4wIC8gbWF4UmFuZ2UgKSApLCBEICk7XG59XG5jb25zdCBtYXQzIGNMb2dMdXZNID0gbWF0MyggMC4yMjA5LCAwLjMzOTAsIDAuNDE4NCwgMC4xMTM4LCAwLjY3ODAsIDAuNzMxOSwgMC4wMTAyLCAwLjExMzAsIDAuMjk2OSApO1xudmVjNCBMaW5lYXJUb0xvZ0x1diggaW4gdmVjNCB2YWx1ZSApICB7XG4gIHZlYzMgWHBfWV9YWVpwID0gdmFsdWUucmdiICogY0xvZ0x1dk07XG4gIFhwX1lfWFlacCA9IG1heChYcF9ZX1hZWnAsIHZlYzMoMWUtNiwgMWUtNiwgMWUtNikpO1xuICB2ZWM0IHZSZXN1bHQ7XG4gIHZSZXN1bHQueHkgPSBYcF9ZX1hZWnAueHkgLyBYcF9ZX1hZWnAuejtcbiAgZmxvYXQgTGUgPSAyLjAgKiBsb2cyKFhwX1lfWFlacC55KSArIDEyNy4wO1xuICB2UmVzdWx0LncgPSBmcmFjdChMZSk7XG4gIHZSZXN1bHQueiA9IChMZSAtIChmbG9vcih2UmVzdWx0LncqMjU1LjApKS8yNTUuMCkvMjU1LjA7XG4gIHJldHVybiB2UmVzdWx0O1xufVxuY29uc3QgbWF0MyBjTG9nTHV2SW52ZXJzZU0gPSBtYXQzKCA2LjAwMTQsIC0yLjcwMDgsIC0xLjc5OTYsIC0xLjMzMjAsIDMuMTAyOSwgLTUuNzcyMSwgMC4zMDA4LCAtMS4wODgyLCA1LjYyNjggKTtcbnZlYzQgTG9nTHV2VG9MaW5lYXIoIGluIHZlYzQgdmFsdWUgKSB7XG4gIGZsb2F0IExlID0gdmFsdWUueiAqIDI1NS4wICsgdmFsdWUudztcbiAgdmVjMyBYcF9ZX1hZWnA7XG4gIFhwX1lfWFlacC55ID0gZXhwMigoTGUgLSAxMjcuMCkgLyAyLjApO1xuICBYcF9ZX1hZWnAueiA9IFhwX1lfWFlacC55IC8gdmFsdWUueTtcbiAgWHBfWV9YWVpwLnggPSB2YWx1ZS54ICogWHBfWV9YWVpwLno7XG4gIHZlYzMgdlJHQiA9IFhwX1lfWFlacC5yZ2IgKiBjTG9nTHV2SW52ZXJzZU07XG4gIHJldHVybiB2ZWM0KCBtYXgodlJHQiwgMC4wKSwgMS4wICk7XG59XG4iLGVudm1hcF9mcmFnbWVudDoiI2lmZGVmIFVTRV9FTlZNQVBcblx0I2lmIGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApIHx8IGRlZmluZWQoIFBIT05HIClcblx0XHR2ZWMzIGNhbWVyYVRvVmVydGV4ID0gbm9ybWFsaXplKCB2V29ybGRQb3NpdGlvbiAtIGNhbWVyYVBvc2l0aW9uICk7XG5cdFx0dmVjMyB3b3JsZE5vcm1hbCA9IGludmVyc2VUcmFuc2Zvcm1EaXJlY3Rpb24oIG5vcm1hbCwgdmlld01hdHJpeCApO1xuXHRcdCNpZmRlZiBFTlZNQVBfTU9ERV9SRUZMRUNUSU9OXG5cdFx0XHR2ZWMzIHJlZmxlY3RWZWMgPSByZWZsZWN0KCBjYW1lcmFUb1ZlcnRleCwgd29ybGROb3JtYWwgKTtcblx0XHQjZWxzZVxuXHRcdFx0dmVjMyByZWZsZWN0VmVjID0gcmVmcmFjdCggY2FtZXJhVG9WZXJ0ZXgsIHdvcmxkTm9ybWFsLCByZWZyYWN0aW9uUmF0aW8gKTtcblx0XHQjZW5kaWZcblx0I2Vsc2Vcblx0XHR2ZWMzIHJlZmxlY3RWZWMgPSB2UmVmbGVjdDtcblx0I2VuZGlmXG5cdCNpZmRlZiBFTlZNQVBfVFlQRV9DVUJFXG5cdFx0dmVjNCBlbnZDb2xvciA9IHRleHR1cmVDdWJlKCBlbnZNYXAsIGZsaXBOb3JtYWwgKiB2ZWMzKCBmbGlwRW52TWFwICogcmVmbGVjdFZlYy54LCByZWZsZWN0VmVjLnl6ICkgKTtcblx0I2VsaWYgZGVmaW5lZCggRU5WTUFQX1RZUEVfRVFVSVJFQyApXG5cdFx0dmVjMiBzYW1wbGVVVjtcblx0XHRzYW1wbGVVVi55ID0gc2F0dXJhdGUoIGZsaXBOb3JtYWwgKiByZWZsZWN0VmVjLnkgKiAwLjUgKyAwLjUgKTtcblx0XHRzYW1wbGVVVi54ID0gYXRhbiggZmxpcE5vcm1hbCAqIHJlZmxlY3RWZWMueiwgZmxpcE5vcm1hbCAqIHJlZmxlY3RWZWMueCApICogUkVDSVBST0NBTF9QSTIgKyAwLjU7XG5cdFx0dmVjNCBlbnZDb2xvciA9IHRleHR1cmUyRCggZW52TWFwLCBzYW1wbGVVViApO1xuXHQjZWxpZiBkZWZpbmVkKCBFTlZNQVBfVFlQRV9TUEhFUkUgKVxuXHRcdHZlYzMgcmVmbGVjdFZpZXcgPSBmbGlwTm9ybWFsICogbm9ybWFsaXplKCAoIHZpZXdNYXRyaXggKiB2ZWM0KCByZWZsZWN0VmVjLCAwLjAgKSApLnh5eiArIHZlYzMoIDAuMCwgMC4wLCAxLjAgKSApO1xuXHRcdHZlYzQgZW52Q29sb3IgPSB0ZXh0dXJlMkQoIGVudk1hcCwgcmVmbGVjdFZpZXcueHkgKiAwLjUgKyAwLjUgKTtcblx0I2Vsc2Vcblx0XHR2ZWM0IGVudkNvbG9yID0gdmVjNCggMC4wICk7XG5cdCNlbmRpZlxuXHRlbnZDb2xvciA9IGVudk1hcFRleGVsVG9MaW5lYXIoIGVudkNvbG9yICk7XG5cdCNpZmRlZiBFTlZNQVBfQkxFTkRJTkdfTVVMVElQTFlcblx0XHRvdXRnb2luZ0xpZ2h0ID0gbWl4KCBvdXRnb2luZ0xpZ2h0LCBvdXRnb2luZ0xpZ2h0ICogZW52Q29sb3IueHl6LCBzcGVjdWxhclN0cmVuZ3RoICogcmVmbGVjdGl2aXR5ICk7XG5cdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9CTEVORElOR19NSVggKVxuXHRcdG91dGdvaW5nTGlnaHQgPSBtaXgoIG91dGdvaW5nTGlnaHQsIGVudkNvbG9yLnh5eiwgc3BlY3VsYXJTdHJlbmd0aCAqIHJlZmxlY3Rpdml0eSApO1xuXHQjZWxpZiBkZWZpbmVkKCBFTlZNQVBfQkxFTkRJTkdfQUREIClcblx0XHRvdXRnb2luZ0xpZ2h0ICs9IGVudkNvbG9yLnh5eiAqIHNwZWN1bGFyU3RyZW5ndGggKiByZWZsZWN0aXZpdHk7XG5cdCNlbmRpZlxuI2VuZGlmXG4iLGVudm1hcF9wYXJzX2ZyYWdtZW50OiIjaWYgZGVmaW5lZCggVVNFX0VOVk1BUCApIHx8IGRlZmluZWQoIFBIWVNJQ0FMIClcblx0dW5pZm9ybSBmbG9hdCByZWZsZWN0aXZpdHk7XG5cdHVuaWZvcm0gZmxvYXQgZW52TWFwSW50ZW5zaXR5O1xuI2VuZGlmXG4jaWZkZWYgVVNFX0VOVk1BUFxuXHQjaWYgISBkZWZpbmVkKCBQSFlTSUNBTCApICYmICggZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTk9STUFMTUFQICkgfHwgZGVmaW5lZCggUEhPTkcgKSApXG5cdFx0dmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xuXHQjZW5kaWZcblx0I2lmZGVmIEVOVk1BUF9UWVBFX0NVQkVcblx0XHR1bmlmb3JtIHNhbXBsZXJDdWJlIGVudk1hcDtcblx0I2Vsc2Vcblx0XHR1bmlmb3JtIHNhbXBsZXIyRCBlbnZNYXA7XG5cdCNlbmRpZlxuXHR1bmlmb3JtIGZsb2F0IGZsaXBFbnZNYXA7XG5cdCNpZiBkZWZpbmVkKCBVU0VfQlVNUE1BUCApIHx8IGRlZmluZWQoIFVTRV9OT1JNQUxNQVAgKSB8fCBkZWZpbmVkKCBQSE9ORyApIHx8IGRlZmluZWQoIFBIWVNJQ0FMIClcblx0XHR1bmlmb3JtIGZsb2F0IHJlZnJhY3Rpb25SYXRpbztcblx0I2Vsc2Vcblx0XHR2YXJ5aW5nIHZlYzMgdlJlZmxlY3Q7XG5cdCNlbmRpZlxuI2VuZGlmXG4iLGVudm1hcF9wYXJzX3ZlcnRleDoiI2lmZGVmIFVTRV9FTlZNQVBcblx0I2lmIGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApIHx8IGRlZmluZWQoIFBIT05HIClcblx0XHR2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XG5cdCNlbHNlXG5cdFx0dmFyeWluZyB2ZWMzIHZSZWZsZWN0O1xuXHRcdHVuaWZvcm0gZmxvYXQgcmVmcmFjdGlvblJhdGlvO1xuXHQjZW5kaWZcbiNlbmRpZlxuIixlbnZtYXBfdmVydGV4OiIjaWZkZWYgVVNFX0VOVk1BUFxuXHQjaWYgZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTk9STUFMTUFQICkgfHwgZGVmaW5lZCggUEhPTkcgKVxuXHRcdHZXb3JsZFBvc2l0aW9uID0gd29ybGRQb3NpdGlvbi54eXo7XG5cdCNlbHNlXG5cdFx0dmVjMyBjYW1lcmFUb1ZlcnRleCA9IG5vcm1hbGl6ZSggd29ybGRQb3NpdGlvbi54eXogLSBjYW1lcmFQb3NpdGlvbiApO1xuXHRcdHZlYzMgd29ybGROb3JtYWwgPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCB0cmFuc2Zvcm1lZE5vcm1hbCwgdmlld01hdHJpeCApO1xuXHRcdCNpZmRlZiBFTlZNQVBfTU9ERV9SRUZMRUNUSU9OXG5cdFx0XHR2UmVmbGVjdCA9IHJlZmxlY3QoIGNhbWVyYVRvVmVydGV4LCB3b3JsZE5vcm1hbCApO1xuXHRcdCNlbHNlXG5cdFx0XHR2UmVmbGVjdCA9IHJlZnJhY3QoIGNhbWVyYVRvVmVydGV4LCB3b3JsZE5vcm1hbCwgcmVmcmFjdGlvblJhdGlvICk7XG5cdFx0I2VuZGlmXG5cdCNlbmRpZlxuI2VuZGlmXG4iLGZvZ19mcmFnbWVudDoiI2lmZGVmIFVTRV9GT0dcblx0I2lmZGVmIFVTRV9MT0dERVBUSEJVRl9FWFRcblx0XHRmbG9hdCBkZXB0aCA9IGdsX0ZyYWdEZXB0aEVYVCAvIGdsX0ZyYWdDb29yZC53O1xuXHQjZWxzZVxuXHRcdGZsb2F0IGRlcHRoID0gZ2xfRnJhZ0Nvb3JkLnogLyBnbF9GcmFnQ29vcmQudztcblx0I2VuZGlmXG5cdCNpZmRlZiBGT0dfRVhQMlxuXHRcdGZsb2F0IGZvZ0ZhY3RvciA9IHdoaXRlQ29tcGxpbWVudCggZXhwMiggLSBmb2dEZW5zaXR5ICogZm9nRGVuc2l0eSAqIGRlcHRoICogZGVwdGggKiBMT0cyICkgKTtcblx0I2Vsc2Vcblx0XHRmbG9hdCBmb2dGYWN0b3IgPSBzbW9vdGhzdGVwKCBmb2dOZWFyLCBmb2dGYXIsIGRlcHRoICk7XG5cdCNlbmRpZlxuXHRnbF9GcmFnQ29sb3IucmdiID0gbWl4KCBnbF9GcmFnQ29sb3IucmdiLCBmb2dDb2xvciwgZm9nRmFjdG9yICk7XG4jZW5kaWZcbiIsZm9nX3BhcnNfZnJhZ21lbnQ6IiNpZmRlZiBVU0VfRk9HXG5cdHVuaWZvcm0gdmVjMyBmb2dDb2xvcjtcblx0I2lmZGVmIEZPR19FWFAyXG5cdFx0dW5pZm9ybSBmbG9hdCBmb2dEZW5zaXR5O1xuXHQjZWxzZVxuXHRcdHVuaWZvcm0gZmxvYXQgZm9nTmVhcjtcblx0XHR1bmlmb3JtIGZsb2F0IGZvZ0Zhcjtcblx0I2VuZGlmXG4jZW5kaWYiLGdyYWRpZW50bWFwX3BhcnNfZnJhZ21lbnQ6IiNpZmRlZiBUT09OXG5cdHVuaWZvcm0gc2FtcGxlcjJEIGdyYWRpZW50TWFwO1xuXHR2ZWMzIGdldEdyYWRpZW50SXJyYWRpYW5jZSggdmVjMyBub3JtYWwsIHZlYzMgbGlnaHREaXJlY3Rpb24gKSB7XG5cdFx0ZmxvYXQgZG90TkwgPSBkb3QoIG5vcm1hbCwgbGlnaHREaXJlY3Rpb24gKTtcblx0XHR2ZWMyIGNvb3JkID0gdmVjMiggZG90TkwgKiAwLjUgKyAwLjUsIDAuMCApO1xuXHRcdCNpZmRlZiBVU0VfR1JBRElFTlRNQVBcblx0XHRcdHJldHVybiB0ZXh0dXJlMkQoIGdyYWRpZW50TWFwLCBjb29yZCApLnJnYjtcblx0XHQjZWxzZVxuXHRcdFx0cmV0dXJuICggY29vcmQueCA8IDAuNyApID8gdmVjMyggMC43ICkgOiB2ZWMzKCAxLjAgKTtcblx0XHQjZW5kaWZcblx0fVxuI2VuZGlmXG4iLGxpZ2h0bWFwX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0xJR0hUTUFQXG5cdHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0RGlmZnVzZSArPSBQSSAqIHRleHR1cmUyRCggbGlnaHRNYXAsIHZVdjIgKS54eXogKiBsaWdodE1hcEludGVuc2l0eTtcbiNlbmRpZlxuIixsaWdodG1hcF9wYXJzX2ZyYWdtZW50OiIjaWZkZWYgVVNFX0xJR0hUTUFQXG5cdHVuaWZvcm0gc2FtcGxlcjJEIGxpZ2h0TWFwO1xuXHR1bmlmb3JtIGZsb2F0IGxpZ2h0TWFwSW50ZW5zaXR5O1xuI2VuZGlmIixsaWdodHNfbGFtYmVydF92ZXJ0ZXg6InZlYzMgZGlmZnVzZSA9IHZlYzMoIDEuMCApO1xuR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeTtcbmdlb21ldHJ5LnBvc2l0aW9uID0gbXZQb3NpdGlvbi54eXo7XG5nZW9tZXRyeS5ub3JtYWwgPSBub3JtYWxpemUoIHRyYW5zZm9ybWVkTm9ybWFsICk7XG5nZW9tZXRyeS52aWV3RGlyID0gbm9ybWFsaXplKCAtbXZQb3NpdGlvbi54eXogKTtcbkdlb21ldHJpY0NvbnRleHQgYmFja0dlb21ldHJ5O1xuYmFja0dlb21ldHJ5LnBvc2l0aW9uID0gZ2VvbWV0cnkucG9zaXRpb247XG5iYWNrR2VvbWV0cnkubm9ybWFsID0gLWdlb21ldHJ5Lm5vcm1hbDtcbmJhY2tHZW9tZXRyeS52aWV3RGlyID0gZ2VvbWV0cnkudmlld0RpcjtcbnZMaWdodEZyb250ID0gdmVjMyggMC4wICk7XG4jaWZkZWYgRE9VQkxFX1NJREVEXG5cdHZMaWdodEJhY2sgPSB2ZWMzKCAwLjAgKTtcbiNlbmRpZlxuSW5jaWRlbnRMaWdodCBkaXJlY3RMaWdodDtcbmZsb2F0IGRvdE5MO1xudmVjMyBkaXJlY3RMaWdodENvbG9yX0RpZmZ1c2U7XG4jaWYgTlVNX1BPSU5UX0xJR0hUUyA+IDBcblx0Zm9yICggaW50IGkgPSAwOyBpIDwgTlVNX1BPSU5UX0xJR0hUUzsgaSArKyApIHtcblx0XHRnZXRQb2ludERpcmVjdExpZ2h0SXJyYWRpYW5jZSggcG9pbnRMaWdodHNbIGkgXSwgZ2VvbWV0cnksIGRpcmVjdExpZ2h0ICk7XG5cdFx0ZG90TkwgPSBkb3QoIGdlb21ldHJ5Lm5vcm1hbCwgZGlyZWN0TGlnaHQuZGlyZWN0aW9uICk7XG5cdFx0ZGlyZWN0TGlnaHRDb2xvcl9EaWZmdXNlID0gUEkgKiBkaXJlY3RMaWdodC5jb2xvcjtcblx0XHR2TGlnaHRGcm9udCArPSBzYXR1cmF0ZSggZG90TkwgKSAqIGRpcmVjdExpZ2h0Q29sb3JfRGlmZnVzZTtcblx0XHQjaWZkZWYgRE9VQkxFX1NJREVEXG5cdFx0XHR2TGlnaHRCYWNrICs9IHNhdHVyYXRlKCAtZG90TkwgKSAqIGRpcmVjdExpZ2h0Q29sb3JfRGlmZnVzZTtcblx0XHQjZW5kaWZcblx0fVxuI2VuZGlmXG4jaWYgTlVNX1NQT1RfTElHSFRTID4gMFxuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fU1BPVF9MSUdIVFM7IGkgKysgKSB7XG5cdFx0Z2V0U3BvdERpcmVjdExpZ2h0SXJyYWRpYW5jZSggc3BvdExpZ2h0c1sgaSBdLCBnZW9tZXRyeSwgZGlyZWN0TGlnaHQgKTtcblx0XHRkb3ROTCA9IGRvdCggZ2VvbWV0cnkubm9ybWFsLCBkaXJlY3RMaWdodC5kaXJlY3Rpb24gKTtcblx0XHRkaXJlY3RMaWdodENvbG9yX0RpZmZ1c2UgPSBQSSAqIGRpcmVjdExpZ2h0LmNvbG9yO1xuXHRcdHZMaWdodEZyb250ICs9IHNhdHVyYXRlKCBkb3ROTCApICogZGlyZWN0TGlnaHRDb2xvcl9EaWZmdXNlO1xuXHRcdCNpZmRlZiBET1VCTEVfU0lERURcblx0XHRcdHZMaWdodEJhY2sgKz0gc2F0dXJhdGUoIC1kb3ROTCApICogZGlyZWN0TGlnaHRDb2xvcl9EaWZmdXNlO1xuXHRcdCNlbmRpZlxuXHR9XG4jZW5kaWZcbiNpZiBOVU1fUkVDVF9BUkVBX0xJR0hUUyA+IDBcblx0Zm9yICggaW50IGkgPSAwOyBpIDwgTlVNX1JFQ1RfQVJFQV9MSUdIVFM7IGkgKysgKSB7XG5cdH1cbiNlbmRpZlxuI2lmIE5VTV9ESVJfTElHSFRTID4gMFxuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fRElSX0xJR0hUUzsgaSArKyApIHtcblx0XHRnZXREaXJlY3Rpb25hbERpcmVjdExpZ2h0SXJyYWRpYW5jZSggZGlyZWN0aW9uYWxMaWdodHNbIGkgXSwgZ2VvbWV0cnksIGRpcmVjdExpZ2h0ICk7XG5cdFx0ZG90TkwgPSBkb3QoIGdlb21ldHJ5Lm5vcm1hbCwgZGlyZWN0TGlnaHQuZGlyZWN0aW9uICk7XG5cdFx0ZGlyZWN0TGlnaHRDb2xvcl9EaWZmdXNlID0gUEkgKiBkaXJlY3RMaWdodC5jb2xvcjtcblx0XHR2TGlnaHRGcm9udCArPSBzYXR1cmF0ZSggZG90TkwgKSAqIGRpcmVjdExpZ2h0Q29sb3JfRGlmZnVzZTtcblx0XHQjaWZkZWYgRE9VQkxFX1NJREVEXG5cdFx0XHR2TGlnaHRCYWNrICs9IHNhdHVyYXRlKCAtZG90TkwgKSAqIGRpcmVjdExpZ2h0Q29sb3JfRGlmZnVzZTtcblx0XHQjZW5kaWZcblx0fVxuI2VuZGlmXG4jaWYgTlVNX0hFTUlfTElHSFRTID4gMFxuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fSEVNSV9MSUdIVFM7IGkgKysgKSB7XG5cdFx0dkxpZ2h0RnJvbnQgKz0gZ2V0SGVtaXNwaGVyZUxpZ2h0SXJyYWRpYW5jZSggaGVtaXNwaGVyZUxpZ2h0c1sgaSBdLCBnZW9tZXRyeSApO1xuXHRcdCNpZmRlZiBET1VCTEVfU0lERURcblx0XHRcdHZMaWdodEJhY2sgKz0gZ2V0SGVtaXNwaGVyZUxpZ2h0SXJyYWRpYW5jZSggaGVtaXNwaGVyZUxpZ2h0c1sgaSBdLCBiYWNrR2VvbWV0cnkgKTtcblx0XHQjZW5kaWZcblx0fVxuI2VuZGlmXG4iLGxpZ2h0c19wYXJzOiJ1bmlmb3JtIHZlYzMgYW1iaWVudExpZ2h0Q29sb3I7XG52ZWMzIGdldEFtYmllbnRMaWdodElycmFkaWFuY2UoIGNvbnN0IGluIHZlYzMgYW1iaWVudExpZ2h0Q29sb3IgKSB7XG5cdHZlYzMgaXJyYWRpYW5jZSA9IGFtYmllbnRMaWdodENvbG9yO1xuXHQjaWZuZGVmIFBIWVNJQ0FMTFlfQ09SUkVDVF9MSUdIVFNcblx0XHRpcnJhZGlhbmNlICo9IFBJO1xuXHQjZW5kaWZcblx0cmV0dXJuIGlycmFkaWFuY2U7XG59XG4jaWYgTlVNX0RJUl9MSUdIVFMgPiAwXG5cdHN0cnVjdCBEaXJlY3Rpb25hbExpZ2h0IHtcblx0XHR2ZWMzIGRpcmVjdGlvbjtcblx0XHR2ZWMzIGNvbG9yO1xuXHRcdGludCBzaGFkb3c7XG5cdFx0ZmxvYXQgc2hhZG93Qmlhcztcblx0XHRmbG9hdCBzaGFkb3dSYWRpdXM7XG5cdFx0dmVjMiBzaGFkb3dNYXBTaXplO1xuXHR9O1xuXHR1bmlmb3JtIERpcmVjdGlvbmFsTGlnaHQgZGlyZWN0aW9uYWxMaWdodHNbIE5VTV9ESVJfTElHSFRTIF07XG5cdHZvaWQgZ2V0RGlyZWN0aW9uYWxEaXJlY3RMaWdodElycmFkaWFuY2UoIGNvbnN0IGluIERpcmVjdGlvbmFsTGlnaHQgZGlyZWN0aW9uYWxMaWdodCwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgb3V0IEluY2lkZW50TGlnaHQgZGlyZWN0TGlnaHQgKSB7XG5cdFx0ZGlyZWN0TGlnaHQuY29sb3IgPSBkaXJlY3Rpb25hbExpZ2h0LmNvbG9yO1xuXHRcdGRpcmVjdExpZ2h0LmRpcmVjdGlvbiA9IGRpcmVjdGlvbmFsTGlnaHQuZGlyZWN0aW9uO1xuXHRcdGRpcmVjdExpZ2h0LnZpc2libGUgPSB0cnVlO1xuXHR9XG4jZW5kaWZcbiNpZiBOVU1fUE9JTlRfTElHSFRTID4gMFxuXHRzdHJ1Y3QgUG9pbnRMaWdodCB7XG5cdFx0dmVjMyBwb3NpdGlvbjtcblx0XHR2ZWMzIGNvbG9yO1xuXHRcdGZsb2F0IGRpc3RhbmNlO1xuXHRcdGZsb2F0IGRlY2F5O1xuXHRcdGludCBzaGFkb3c7XG5cdFx0ZmxvYXQgc2hhZG93Qmlhcztcblx0XHRmbG9hdCBzaGFkb3dSYWRpdXM7XG5cdFx0dmVjMiBzaGFkb3dNYXBTaXplO1xuXHR9O1xuXHR1bmlmb3JtIFBvaW50TGlnaHQgcG9pbnRMaWdodHNbIE5VTV9QT0lOVF9MSUdIVFMgXTtcblx0dm9pZCBnZXRQb2ludERpcmVjdExpZ2h0SXJyYWRpYW5jZSggY29uc3QgaW4gUG9pbnRMaWdodCBwb2ludExpZ2h0LCBjb25zdCBpbiBHZW9tZXRyaWNDb250ZXh0IGdlb21ldHJ5LCBvdXQgSW5jaWRlbnRMaWdodCBkaXJlY3RMaWdodCApIHtcblx0XHR2ZWMzIGxWZWN0b3IgPSBwb2ludExpZ2h0LnBvc2l0aW9uIC0gZ2VvbWV0cnkucG9zaXRpb247XG5cdFx0ZGlyZWN0TGlnaHQuZGlyZWN0aW9uID0gbm9ybWFsaXplKCBsVmVjdG9yICk7XG5cdFx0ZmxvYXQgbGlnaHREaXN0YW5jZSA9IGxlbmd0aCggbFZlY3RvciApO1xuXHRcdGRpcmVjdExpZ2h0LmNvbG9yID0gcG9pbnRMaWdodC5jb2xvcjtcblx0XHRkaXJlY3RMaWdodC5jb2xvciAqPSBwdW5jdHVhbExpZ2h0SW50ZW5zaXR5VG9JcnJhZGlhbmNlRmFjdG9yKCBsaWdodERpc3RhbmNlLCBwb2ludExpZ2h0LmRpc3RhbmNlLCBwb2ludExpZ2h0LmRlY2F5ICk7XG5cdFx0ZGlyZWN0TGlnaHQudmlzaWJsZSA9ICggZGlyZWN0TGlnaHQuY29sb3IgIT0gdmVjMyggMC4wICkgKTtcblx0fVxuI2VuZGlmXG4jaWYgTlVNX1NQT1RfTElHSFRTID4gMFxuXHRzdHJ1Y3QgU3BvdExpZ2h0IHtcblx0XHR2ZWMzIHBvc2l0aW9uO1xuXHRcdHZlYzMgZGlyZWN0aW9uO1xuXHRcdHZlYzMgY29sb3I7XG5cdFx0ZmxvYXQgZGlzdGFuY2U7XG5cdFx0ZmxvYXQgZGVjYXk7XG5cdFx0ZmxvYXQgY29uZUNvcztcblx0XHRmbG9hdCBwZW51bWJyYUNvcztcblx0XHRpbnQgc2hhZG93O1xuXHRcdGZsb2F0IHNoYWRvd0JpYXM7XG5cdFx0ZmxvYXQgc2hhZG93UmFkaXVzO1xuXHRcdHZlYzIgc2hhZG93TWFwU2l6ZTtcblx0fTtcblx0dW5pZm9ybSBTcG90TGlnaHQgc3BvdExpZ2h0c1sgTlVNX1NQT1RfTElHSFRTIF07XG5cdHZvaWQgZ2V0U3BvdERpcmVjdExpZ2h0SXJyYWRpYW5jZSggY29uc3QgaW4gU3BvdExpZ2h0IHNwb3RMaWdodCwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgb3V0IEluY2lkZW50TGlnaHQgZGlyZWN0TGlnaHQgICkge1xuXHRcdHZlYzMgbFZlY3RvciA9IHNwb3RMaWdodC5wb3NpdGlvbiAtIGdlb21ldHJ5LnBvc2l0aW9uO1xuXHRcdGRpcmVjdExpZ2h0LmRpcmVjdGlvbiA9IG5vcm1hbGl6ZSggbFZlY3RvciApO1xuXHRcdGZsb2F0IGxpZ2h0RGlzdGFuY2UgPSBsZW5ndGgoIGxWZWN0b3IgKTtcblx0XHRmbG9hdCBhbmdsZUNvcyA9IGRvdCggZGlyZWN0TGlnaHQuZGlyZWN0aW9uLCBzcG90TGlnaHQuZGlyZWN0aW9uICk7XG5cdFx0aWYgKCBhbmdsZUNvcyA+IHNwb3RMaWdodC5jb25lQ29zICkge1xuXHRcdFx0ZmxvYXQgc3BvdEVmZmVjdCA9IHNtb290aHN0ZXAoIHNwb3RMaWdodC5jb25lQ29zLCBzcG90TGlnaHQucGVudW1icmFDb3MsIGFuZ2xlQ29zICk7XG5cdFx0XHRkaXJlY3RMaWdodC5jb2xvciA9IHNwb3RMaWdodC5jb2xvcjtcblx0XHRcdGRpcmVjdExpZ2h0LmNvbG9yICo9IHNwb3RFZmZlY3QgKiBwdW5jdHVhbExpZ2h0SW50ZW5zaXR5VG9JcnJhZGlhbmNlRmFjdG9yKCBsaWdodERpc3RhbmNlLCBzcG90TGlnaHQuZGlzdGFuY2UsIHNwb3RMaWdodC5kZWNheSApO1xuXHRcdFx0ZGlyZWN0TGlnaHQudmlzaWJsZSA9IHRydWU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRpcmVjdExpZ2h0LmNvbG9yID0gdmVjMyggMC4wICk7XG5cdFx0XHRkaXJlY3RMaWdodC52aXNpYmxlID0gZmFsc2U7XG5cdFx0fVxuXHR9XG4jZW5kaWZcbiNpZiBOVU1fUkVDVF9BUkVBX0xJR0hUUyA+IDBcblx0c3RydWN0IFJlY3RBcmVhTGlnaHQge1xuXHRcdHZlYzMgY29sb3I7XG5cdFx0dmVjMyBwb3NpdGlvbjtcblx0XHR2ZWMzIGhhbGZXaWR0aDtcblx0XHR2ZWMzIGhhbGZIZWlnaHQ7XG5cdH07XG5cdHVuaWZvcm0gc2FtcGxlcjJEIGx0Y01hdDtcdHVuaWZvcm0gc2FtcGxlcjJEIGx0Y01hZztcblx0dW5pZm9ybSBSZWN0QXJlYUxpZ2h0IHJlY3RBcmVhTGlnaHRzWyBOVU1fUkVDVF9BUkVBX0xJR0hUUyBdO1xuI2VuZGlmXG4jaWYgTlVNX0hFTUlfTElHSFRTID4gMFxuXHRzdHJ1Y3QgSGVtaXNwaGVyZUxpZ2h0IHtcblx0XHR2ZWMzIGRpcmVjdGlvbjtcblx0XHR2ZWMzIHNreUNvbG9yO1xuXHRcdHZlYzMgZ3JvdW5kQ29sb3I7XG5cdH07XG5cdHVuaWZvcm0gSGVtaXNwaGVyZUxpZ2h0IGhlbWlzcGhlcmVMaWdodHNbIE5VTV9IRU1JX0xJR0hUUyBdO1xuXHR2ZWMzIGdldEhlbWlzcGhlcmVMaWdodElycmFkaWFuY2UoIGNvbnN0IGluIEhlbWlzcGhlcmVMaWdodCBoZW1pTGlnaHQsIGNvbnN0IGluIEdlb21ldHJpY0NvbnRleHQgZ2VvbWV0cnkgKSB7XG5cdFx0ZmxvYXQgZG90TkwgPSBkb3QoIGdlb21ldHJ5Lm5vcm1hbCwgaGVtaUxpZ2h0LmRpcmVjdGlvbiApO1xuXHRcdGZsb2F0IGhlbWlEaWZmdXNlV2VpZ2h0ID0gMC41ICogZG90TkwgKyAwLjU7XG5cdFx0dmVjMyBpcnJhZGlhbmNlID0gbWl4KCBoZW1pTGlnaHQuZ3JvdW5kQ29sb3IsIGhlbWlMaWdodC5za3lDb2xvciwgaGVtaURpZmZ1c2VXZWlnaHQgKTtcblx0XHQjaWZuZGVmIFBIWVNJQ0FMTFlfQ09SUkVDVF9MSUdIVFNcblx0XHRcdGlycmFkaWFuY2UgKj0gUEk7XG5cdFx0I2VuZGlmXG5cdFx0cmV0dXJuIGlycmFkaWFuY2U7XG5cdH1cbiNlbmRpZlxuI2lmIGRlZmluZWQoIFVTRV9FTlZNQVAgKSAmJiBkZWZpbmVkKCBQSFlTSUNBTCApXG5cdHZlYzMgZ2V0TGlnaHRQcm9iZUluZGlyZWN0SXJyYWRpYW5jZSggY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gaW50IG1heE1JUExldmVsICkge1xuXHRcdHZlYzMgd29ybGROb3JtYWwgPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCBnZW9tZXRyeS5ub3JtYWwsIHZpZXdNYXRyaXggKTtcblx0XHQjaWZkZWYgRU5WTUFQX1RZUEVfQ1VCRVxuXHRcdFx0dmVjMyBxdWVyeVZlYyA9IHZlYzMoIGZsaXBFbnZNYXAgKiB3b3JsZE5vcm1hbC54LCB3b3JsZE5vcm1hbC55eiApO1xuXHRcdFx0I2lmZGVmIFRFWFRVUkVfTE9EX0VYVFxuXHRcdFx0XHR2ZWM0IGVudk1hcENvbG9yID0gdGV4dHVyZUN1YmVMb2RFWFQoIGVudk1hcCwgcXVlcnlWZWMsIGZsb2F0KCBtYXhNSVBMZXZlbCApICk7XG5cdFx0XHQjZWxzZVxuXHRcdFx0XHR2ZWM0IGVudk1hcENvbG9yID0gdGV4dHVyZUN1YmUoIGVudk1hcCwgcXVlcnlWZWMsIGZsb2F0KCBtYXhNSVBMZXZlbCApICk7XG5cdFx0XHQjZW5kaWZcblx0XHRcdGVudk1hcENvbG9yLnJnYiA9IGVudk1hcFRleGVsVG9MaW5lYXIoIGVudk1hcENvbG9yICkucmdiO1xuXHRcdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9UWVBFX0NVQkVfVVYgKVxuXHRcdFx0dmVjMyBxdWVyeVZlYyA9IHZlYzMoIGZsaXBFbnZNYXAgKiB3b3JsZE5vcm1hbC54LCB3b3JsZE5vcm1hbC55eiApO1xuXHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHRleHR1cmVDdWJlVVYoIHF1ZXJ5VmVjLCAxLjAgKTtcblx0XHQjZWxzZVxuXHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHZlYzQoIDAuMCApO1xuXHRcdCNlbmRpZlxuXHRcdHJldHVybiBQSSAqIGVudk1hcENvbG9yLnJnYiAqIGVudk1hcEludGVuc2l0eTtcblx0fVxuXHRmbG9hdCBnZXRTcGVjdWxhck1JUExldmVsKCBjb25zdCBpbiBmbG9hdCBibGlublNoaW5pbmVzc0V4cG9uZW50LCBjb25zdCBpbiBpbnQgbWF4TUlQTGV2ZWwgKSB7XG5cdFx0ZmxvYXQgbWF4TUlQTGV2ZWxTY2FsYXIgPSBmbG9hdCggbWF4TUlQTGV2ZWwgKTtcblx0XHRmbG9hdCBkZXNpcmVkTUlQTGV2ZWwgPSBtYXhNSVBMZXZlbFNjYWxhciAtIDAuNzkyNDggLSAwLjUgKiBsb2cyKCBwb3cyKCBibGlublNoaW5pbmVzc0V4cG9uZW50ICkgKyAxLjAgKTtcblx0XHRyZXR1cm4gY2xhbXAoIGRlc2lyZWRNSVBMZXZlbCwgMC4wLCBtYXhNSVBMZXZlbFNjYWxhciApO1xuXHR9XG5cdHZlYzMgZ2V0TGlnaHRQcm9iZUluZGlyZWN0UmFkaWFuY2UoIGNvbnN0IGluIEdlb21ldHJpY0NvbnRleHQgZ2VvbWV0cnksIGNvbnN0IGluIGZsb2F0IGJsaW5uU2hpbmluZXNzRXhwb25lbnQsIGNvbnN0IGluIGludCBtYXhNSVBMZXZlbCApIHtcblx0XHQjaWZkZWYgRU5WTUFQX01PREVfUkVGTEVDVElPTlxuXHRcdFx0dmVjMyByZWZsZWN0VmVjID0gcmVmbGVjdCggLWdlb21ldHJ5LnZpZXdEaXIsIGdlb21ldHJ5Lm5vcm1hbCApO1xuXHRcdCNlbHNlXG5cdFx0XHR2ZWMzIHJlZmxlY3RWZWMgPSByZWZyYWN0KCAtZ2VvbWV0cnkudmlld0RpciwgZ2VvbWV0cnkubm9ybWFsLCByZWZyYWN0aW9uUmF0aW8gKTtcblx0XHQjZW5kaWZcblx0XHRyZWZsZWN0VmVjID0gaW52ZXJzZVRyYW5zZm9ybURpcmVjdGlvbiggcmVmbGVjdFZlYywgdmlld01hdHJpeCApO1xuXHRcdGZsb2F0IHNwZWN1bGFyTUlQTGV2ZWwgPSBnZXRTcGVjdWxhck1JUExldmVsKCBibGlublNoaW5pbmVzc0V4cG9uZW50LCBtYXhNSVBMZXZlbCApO1xuXHRcdCNpZmRlZiBFTlZNQVBfVFlQRV9DVUJFXG5cdFx0XHR2ZWMzIHF1ZXJ5UmVmbGVjdFZlYyA9IHZlYzMoIGZsaXBFbnZNYXAgKiByZWZsZWN0VmVjLngsIHJlZmxlY3RWZWMueXogKTtcblx0XHRcdCNpZmRlZiBURVhUVVJFX0xPRF9FWFRcblx0XHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHRleHR1cmVDdWJlTG9kRVhUKCBlbnZNYXAsIHF1ZXJ5UmVmbGVjdFZlYywgc3BlY3VsYXJNSVBMZXZlbCApO1xuXHRcdFx0I2Vsc2Vcblx0XHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHRleHR1cmVDdWJlKCBlbnZNYXAsIHF1ZXJ5UmVmbGVjdFZlYywgc3BlY3VsYXJNSVBMZXZlbCApO1xuXHRcdFx0I2VuZGlmXG5cdFx0XHRlbnZNYXBDb2xvci5yZ2IgPSBlbnZNYXBUZXhlbFRvTGluZWFyKCBlbnZNYXBDb2xvciApLnJnYjtcblx0XHQjZWxpZiBkZWZpbmVkKCBFTlZNQVBfVFlQRV9DVUJFX1VWIClcblx0XHRcdHZlYzMgcXVlcnlSZWZsZWN0VmVjID0gdmVjMyggZmxpcEVudk1hcCAqIHJlZmxlY3RWZWMueCwgcmVmbGVjdFZlYy55eiApO1xuXHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHRleHR1cmVDdWJlVVYocXVlcnlSZWZsZWN0VmVjLCBCbGlubkV4cG9uZW50VG9HR1hSb3VnaG5lc3MoYmxpbm5TaGluaW5lc3NFeHBvbmVudCkpO1xuXHRcdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9UWVBFX0VRVUlSRUMgKVxuXHRcdFx0dmVjMiBzYW1wbGVVVjtcblx0XHRcdHNhbXBsZVVWLnkgPSBzYXR1cmF0ZSggcmVmbGVjdFZlYy55ICogMC41ICsgMC41ICk7XG5cdFx0XHRzYW1wbGVVVi54ID0gYXRhbiggcmVmbGVjdFZlYy56LCByZWZsZWN0VmVjLnggKSAqIFJFQ0lQUk9DQUxfUEkyICsgMC41O1xuXHRcdFx0I2lmZGVmIFRFWFRVUkVfTE9EX0VYVFxuXHRcdFx0XHR2ZWM0IGVudk1hcENvbG9yID0gdGV4dHVyZTJETG9kRVhUKCBlbnZNYXAsIHNhbXBsZVVWLCBzcGVjdWxhck1JUExldmVsICk7XG5cdFx0XHQjZWxzZVxuXHRcdFx0XHR2ZWM0IGVudk1hcENvbG9yID0gdGV4dHVyZTJEKCBlbnZNYXAsIHNhbXBsZVVWLCBzcGVjdWxhck1JUExldmVsICk7XG5cdFx0XHQjZW5kaWZcblx0XHRcdGVudk1hcENvbG9yLnJnYiA9IGVudk1hcFRleGVsVG9MaW5lYXIoIGVudk1hcENvbG9yICkucmdiO1xuXHRcdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9UWVBFX1NQSEVSRSApXG5cdFx0XHR2ZWMzIHJlZmxlY3RWaWV3ID0gbm9ybWFsaXplKCAoIHZpZXdNYXRyaXggKiB2ZWM0KCByZWZsZWN0VmVjLCAwLjAgKSApLnh5eiArIHZlYzMoIDAuMCwwLjAsMS4wICkgKTtcblx0XHRcdCNpZmRlZiBURVhUVVJFX0xPRF9FWFRcblx0XHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHRleHR1cmUyRExvZEVYVCggZW52TWFwLCByZWZsZWN0Vmlldy54eSAqIDAuNSArIDAuNSwgc3BlY3VsYXJNSVBMZXZlbCApO1xuXHRcdFx0I2Vsc2Vcblx0XHRcdFx0dmVjNCBlbnZNYXBDb2xvciA9IHRleHR1cmUyRCggZW52TWFwLCByZWZsZWN0Vmlldy54eSAqIDAuNSArIDAuNSwgc3BlY3VsYXJNSVBMZXZlbCApO1xuXHRcdFx0I2VuZGlmXG5cdFx0XHRlbnZNYXBDb2xvci5yZ2IgPSBlbnZNYXBUZXhlbFRvTGluZWFyKCBlbnZNYXBDb2xvciApLnJnYjtcblx0XHQjZW5kaWZcblx0XHRyZXR1cm4gZW52TWFwQ29sb3IucmdiICogZW52TWFwSW50ZW5zaXR5O1xuXHR9XG4jZW5kaWZcbiIsbGlnaHRzX3Bob25nX2ZyYWdtZW50OiJCbGlublBob25nTWF0ZXJpYWwgbWF0ZXJpYWw7XG5tYXRlcmlhbC5kaWZmdXNlQ29sb3IgPSBkaWZmdXNlQ29sb3IucmdiO1xubWF0ZXJpYWwuc3BlY3VsYXJDb2xvciA9IHNwZWN1bGFyO1xubWF0ZXJpYWwuc3BlY3VsYXJTaGluaW5lc3MgPSBzaGluaW5lc3M7XG5tYXRlcmlhbC5zcGVjdWxhclN0cmVuZ3RoID0gc3BlY3VsYXJTdHJlbmd0aDtcbiIsbGlnaHRzX3Bob25nX3BhcnNfZnJhZ21lbnQ6InZhcnlpbmcgdmVjMyB2Vmlld1Bvc2l0aW9uO1xuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcbiNlbmRpZlxuc3RydWN0IEJsaW5uUGhvbmdNYXRlcmlhbCB7XG5cdHZlYzNcdGRpZmZ1c2VDb2xvcjtcblx0dmVjM1x0c3BlY3VsYXJDb2xvcjtcblx0ZmxvYXRcdHNwZWN1bGFyU2hpbmluZXNzO1xuXHRmbG9hdFx0c3BlY3VsYXJTdHJlbmd0aDtcbn07XG4jaWYgTlVNX1JFQ1RfQVJFQV9MSUdIVFMgPiAwXG4gICAgdm9pZCBSRV9EaXJlY3RfUmVjdEFyZWFfQmxpbm5QaG9uZyggY29uc3QgaW4gUmVjdEFyZWFMaWdodCByZWN0QXJlYUxpZ2h0LCBjb25zdCBpbiBHZW9tZXRyaWNDb250ZXh0IGdlb21ldHJ5LCBjb25zdCBpbiBCbGlublBob25nTWF0ZXJpYWwgbWF0ZXJpYWwsIGlub3V0IFJlZmxlY3RlZExpZ2h0IHJlZmxlY3RlZExpZ2h0ICkge1xuICAgICAgICB2ZWMzIG1hdERpZmZDb2xvciA9IG1hdGVyaWFsLmRpZmZ1c2VDb2xvcjtcbiAgICAgICAgdmVjMyBtYXRTcGVjQ29sb3IgPSBtYXRlcmlhbC5zcGVjdWxhckNvbG9yO1xuICAgICAgICB2ZWMzIGxpZ2h0Q29sb3IgICA9IHJlY3RBcmVhTGlnaHQuY29sb3I7XG4gICAgICAgIGZsb2F0IHJvdWdobmVzcyA9IEJsaW5uRXhwb25lbnRUb0dHWFJvdWdobmVzcyggbWF0ZXJpYWwuc3BlY3VsYXJTaGluaW5lc3MgKTtcbiAgICAgICAgdmVjMyBzcGVjID0gUmVjdF9BcmVhX0xpZ2h0X1NwZWN1bGFyX1JlZmxlY3RhbmNlKFxuICAgICAgICAgICAgICAgIGdlb21ldHJ5LFxuICAgICAgICAgICAgICAgIHJlY3RBcmVhTGlnaHQucG9zaXRpb24sIHJlY3RBcmVhTGlnaHQuaGFsZldpZHRoLCByZWN0QXJlYUxpZ2h0LmhhbGZIZWlnaHQsXG4gICAgICAgICAgICAgICAgcm91Z2huZXNzLFxuICAgICAgICAgICAgICAgIGx0Y01hdCwgbHRjTWFnICk7XG4gICAgICAgIHZlYzMgZGlmZiA9IFJlY3RfQXJlYV9MaWdodF9EaWZmdXNlX1JlZmxlY3RhbmNlKFxuICAgICAgICAgICAgICAgIGdlb21ldHJ5LFxuICAgICAgICAgICAgICAgIHJlY3RBcmVhTGlnaHQucG9zaXRpb24sIHJlY3RBcmVhTGlnaHQuaGFsZldpZHRoLCByZWN0QXJlYUxpZ2h0LmhhbGZIZWlnaHQgKTtcbiAgICAgICAgcmVmbGVjdGVkTGlnaHQuZGlyZWN0U3BlY3VsYXIgKz0gbGlnaHRDb2xvciAqIG1hdFNwZWNDb2xvciAqIHNwZWMgLyBQSTI7XG4gICAgICAgIHJlZmxlY3RlZExpZ2h0LmRpcmVjdERpZmZ1c2UgICs9IGxpZ2h0Q29sb3IgKiBtYXREaWZmQ29sb3IgKiBkaWZmIC8gUEkyO1xuICAgIH1cbiNlbmRpZlxudm9pZCBSRV9EaXJlY3RfQmxpbm5QaG9uZyggY29uc3QgaW4gSW5jaWRlbnRMaWdodCBkaXJlY3RMaWdodCwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gQmxpbm5QaG9uZ01hdGVyaWFsIG1hdGVyaWFsLCBpbm91dCBSZWZsZWN0ZWRMaWdodCByZWZsZWN0ZWRMaWdodCApIHtcblx0I2lmZGVmIFRPT05cblx0XHR2ZWMzIGlycmFkaWFuY2UgPSBnZXRHcmFkaWVudElycmFkaWFuY2UoIGdlb21ldHJ5Lm5vcm1hbCwgZGlyZWN0TGlnaHQuZGlyZWN0aW9uICkgKiBkaXJlY3RMaWdodC5jb2xvcjtcblx0I2Vsc2Vcblx0XHRmbG9hdCBkb3ROTCA9IHNhdHVyYXRlKCBkb3QoIGdlb21ldHJ5Lm5vcm1hbCwgZGlyZWN0TGlnaHQuZGlyZWN0aW9uICkgKTtcblx0XHR2ZWMzIGlycmFkaWFuY2UgPSBkb3ROTCAqIGRpcmVjdExpZ2h0LmNvbG9yO1xuXHQjZW5kaWZcblx0I2lmbmRlZiBQSFlTSUNBTExZX0NPUlJFQ1RfTElHSFRTXG5cdFx0aXJyYWRpYW5jZSAqPSBQSTtcblx0I2VuZGlmXG5cdHJlZmxlY3RlZExpZ2h0LmRpcmVjdERpZmZ1c2UgKz0gaXJyYWRpYW5jZSAqIEJSREZfRGlmZnVzZV9MYW1iZXJ0KCBtYXRlcmlhbC5kaWZmdXNlQ29sb3IgKTtcblx0cmVmbGVjdGVkTGlnaHQuZGlyZWN0U3BlY3VsYXIgKz0gaXJyYWRpYW5jZSAqIEJSREZfU3BlY3VsYXJfQmxpbm5QaG9uZyggZGlyZWN0TGlnaHQsIGdlb21ldHJ5LCBtYXRlcmlhbC5zcGVjdWxhckNvbG9yLCBtYXRlcmlhbC5zcGVjdWxhclNoaW5pbmVzcyApICogbWF0ZXJpYWwuc3BlY3VsYXJTdHJlbmd0aDtcbn1cbnZvaWQgUkVfSW5kaXJlY3REaWZmdXNlX0JsaW5uUGhvbmcoIGNvbnN0IGluIHZlYzMgaXJyYWRpYW5jZSwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gQmxpbm5QaG9uZ01hdGVyaWFsIG1hdGVyaWFsLCBpbm91dCBSZWZsZWN0ZWRMaWdodCByZWZsZWN0ZWRMaWdodCApIHtcblx0cmVmbGVjdGVkTGlnaHQuaW5kaXJlY3REaWZmdXNlICs9IGlycmFkaWFuY2UgKiBCUkRGX0RpZmZ1c2VfTGFtYmVydCggbWF0ZXJpYWwuZGlmZnVzZUNvbG9yICk7XG59XG4jZGVmaW5lIFJFX0RpcmVjdFx0XHRcdFx0UkVfRGlyZWN0X0JsaW5uUGhvbmdcbiNkZWZpbmUgUkVfRGlyZWN0X1JlY3RBcmVhXHRcdFJFX0RpcmVjdF9SZWN0QXJlYV9CbGlublBob25nXG4jZGVmaW5lIFJFX0luZGlyZWN0RGlmZnVzZVx0XHRSRV9JbmRpcmVjdERpZmZ1c2VfQmxpbm5QaG9uZ1xuI2RlZmluZSBNYXRlcmlhbF9MaWdodFByb2JlTE9EKCBtYXRlcmlhbCApXHQoMClcbiIsbGlnaHRzX3BoeXNpY2FsX2ZyYWdtZW50OiJQaHlzaWNhbE1hdGVyaWFsIG1hdGVyaWFsO1xubWF0ZXJpYWwuZGlmZnVzZUNvbG9yID0gZGlmZnVzZUNvbG9yLnJnYiAqICggMS4wIC0gbWV0YWxuZXNzRmFjdG9yICk7XG5tYXRlcmlhbC5zcGVjdWxhclJvdWdobmVzcyA9IGNsYW1wKCByb3VnaG5lc3NGYWN0b3IsIDAuMDQsIDEuMCApO1xuI2lmZGVmIFNUQU5EQVJEXG5cdG1hdGVyaWFsLnNwZWN1bGFyQ29sb3IgPSBtaXgoIHZlYzMoIERFRkFVTFRfU1BFQ1VMQVJfQ09FRkZJQ0lFTlQgKSwgZGlmZnVzZUNvbG9yLnJnYiwgbWV0YWxuZXNzRmFjdG9yICk7XG4jZWxzZVxuXHRtYXRlcmlhbC5zcGVjdWxhckNvbG9yID0gbWl4KCB2ZWMzKCBNQVhJTVVNX1NQRUNVTEFSX0NPRUZGSUNJRU5UICogcG93MiggcmVmbGVjdGl2aXR5ICkgKSwgZGlmZnVzZUNvbG9yLnJnYiwgbWV0YWxuZXNzRmFjdG9yICk7XG5cdG1hdGVyaWFsLmNsZWFyQ29hdCA9IHNhdHVyYXRlKCBjbGVhckNvYXQgKTtcdG1hdGVyaWFsLmNsZWFyQ29hdFJvdWdobmVzcyA9IGNsYW1wKCBjbGVhckNvYXRSb3VnaG5lc3MsIDAuMDQsIDEuMCApO1xuI2VuZGlmXG4iLGxpZ2h0c19waHlzaWNhbF9wYXJzX2ZyYWdtZW50OiJzdHJ1Y3QgUGh5c2ljYWxNYXRlcmlhbCB7XG5cdHZlYzNcdGRpZmZ1c2VDb2xvcjtcblx0ZmxvYXRcdHNwZWN1bGFyUm91Z2huZXNzO1xuXHR2ZWMzXHRzcGVjdWxhckNvbG9yO1xuXHQjaWZuZGVmIFNUQU5EQVJEXG5cdFx0ZmxvYXQgY2xlYXJDb2F0O1xuXHRcdGZsb2F0IGNsZWFyQ29hdFJvdWdobmVzcztcblx0I2VuZGlmXG59O1xuI2RlZmluZSBNQVhJTVVNX1NQRUNVTEFSX0NPRUZGSUNJRU5UIDAuMTZcbiNkZWZpbmUgREVGQVVMVF9TUEVDVUxBUl9DT0VGRklDSUVOVCAwLjA0XG5mbG9hdCBjbGVhckNvYXRESFJBcHByb3goIGNvbnN0IGluIGZsb2F0IHJvdWdobmVzcywgY29uc3QgaW4gZmxvYXQgZG90TkwgKSB7XG5cdHJldHVybiBERUZBVUxUX1NQRUNVTEFSX0NPRUZGSUNJRU5UICsgKCAxLjAgLSBERUZBVUxUX1NQRUNVTEFSX0NPRUZGSUNJRU5UICkgKiAoIHBvdyggMS4wIC0gZG90TkwsIDUuMCApICogcG93KCAxLjAgLSByb3VnaG5lc3MsIDIuMCApICk7XG59XG4jaWYgTlVNX1JFQ1RfQVJFQV9MSUdIVFMgPiAwXG4gICAgdm9pZCBSRV9EaXJlY3RfUmVjdEFyZWFfUGh5c2ljYWwoIGNvbnN0IGluIFJlY3RBcmVhTGlnaHQgcmVjdEFyZWFMaWdodCwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gUGh5c2ljYWxNYXRlcmlhbCBtYXRlcmlhbCwgaW5vdXQgUmVmbGVjdGVkTGlnaHQgcmVmbGVjdGVkTGlnaHQgKSB7XG4gICAgICAgIHZlYzMgbWF0RGlmZkNvbG9yID0gbWF0ZXJpYWwuZGlmZnVzZUNvbG9yO1xuICAgICAgICB2ZWMzIG1hdFNwZWNDb2xvciA9IG1hdGVyaWFsLnNwZWN1bGFyQ29sb3I7XG4gICAgICAgIHZlYzMgbGlnaHRDb2xvciAgID0gcmVjdEFyZWFMaWdodC5jb2xvcjtcbiAgICAgICAgZmxvYXQgcm91Z2huZXNzID0gbWF0ZXJpYWwuc3BlY3VsYXJSb3VnaG5lc3M7XG4gICAgICAgIHZlYzMgc3BlYyA9IFJlY3RfQXJlYV9MaWdodF9TcGVjdWxhcl9SZWZsZWN0YW5jZShcbiAgICAgICAgICAgICAgICBnZW9tZXRyeSxcbiAgICAgICAgICAgICAgICByZWN0QXJlYUxpZ2h0LnBvc2l0aW9uLCByZWN0QXJlYUxpZ2h0LmhhbGZXaWR0aCwgcmVjdEFyZWFMaWdodC5oYWxmSGVpZ2h0LFxuICAgICAgICAgICAgICAgIHJvdWdobmVzcyxcbiAgICAgICAgICAgICAgICBsdGNNYXQsIGx0Y01hZyApO1xuICAgICAgICB2ZWMzIGRpZmYgPSBSZWN0X0FyZWFfTGlnaHRfRGlmZnVzZV9SZWZsZWN0YW5jZShcbiAgICAgICAgICAgICAgICBnZW9tZXRyeSxcbiAgICAgICAgICAgICAgICByZWN0QXJlYUxpZ2h0LnBvc2l0aW9uLCByZWN0QXJlYUxpZ2h0LmhhbGZXaWR0aCwgcmVjdEFyZWFMaWdodC5oYWxmSGVpZ2h0ICk7XG4gICAgICAgIHJlZmxlY3RlZExpZ2h0LmRpcmVjdFNwZWN1bGFyICs9IGxpZ2h0Q29sb3IgKiBtYXRTcGVjQ29sb3IgKiBzcGVjO1xuICAgICAgICByZWZsZWN0ZWRMaWdodC5kaXJlY3REaWZmdXNlICArPSBsaWdodENvbG9yICogbWF0RGlmZkNvbG9yICogZGlmZjtcbiAgICB9XG4jZW5kaWZcbnZvaWQgUkVfRGlyZWN0X1BoeXNpY2FsKCBjb25zdCBpbiBJbmNpZGVudExpZ2h0IGRpcmVjdExpZ2h0LCBjb25zdCBpbiBHZW9tZXRyaWNDb250ZXh0IGdlb21ldHJ5LCBjb25zdCBpbiBQaHlzaWNhbE1hdGVyaWFsIG1hdGVyaWFsLCBpbm91dCBSZWZsZWN0ZWRMaWdodCByZWZsZWN0ZWRMaWdodCApIHtcblx0ZmxvYXQgZG90TkwgPSBzYXR1cmF0ZSggZG90KCBnZW9tZXRyeS5ub3JtYWwsIGRpcmVjdExpZ2h0LmRpcmVjdGlvbiApICk7XG5cdHZlYzMgaXJyYWRpYW5jZSA9IGRvdE5MICogZGlyZWN0TGlnaHQuY29sb3I7XG5cdCNpZm5kZWYgUEhZU0lDQUxMWV9DT1JSRUNUX0xJR0hUU1xuXHRcdGlycmFkaWFuY2UgKj0gUEk7XG5cdCNlbmRpZlxuXHQjaWZuZGVmIFNUQU5EQVJEXG5cdFx0ZmxvYXQgY2xlYXJDb2F0REhSID0gbWF0ZXJpYWwuY2xlYXJDb2F0ICogY2xlYXJDb2F0REhSQXBwcm94KCBtYXRlcmlhbC5jbGVhckNvYXRSb3VnaG5lc3MsIGRvdE5MICk7XG5cdCNlbHNlXG5cdFx0ZmxvYXQgY2xlYXJDb2F0REhSID0gMC4wO1xuXHQjZW5kaWZcblx0cmVmbGVjdGVkTGlnaHQuZGlyZWN0U3BlY3VsYXIgKz0gKCAxLjAgLSBjbGVhckNvYXRESFIgKSAqIGlycmFkaWFuY2UgKiBCUkRGX1NwZWN1bGFyX0dHWCggZGlyZWN0TGlnaHQsIGdlb21ldHJ5LCBtYXRlcmlhbC5zcGVjdWxhckNvbG9yLCBtYXRlcmlhbC5zcGVjdWxhclJvdWdobmVzcyApO1xuXHRyZWZsZWN0ZWRMaWdodC5kaXJlY3REaWZmdXNlICs9ICggMS4wIC0gY2xlYXJDb2F0REhSICkgKiBpcnJhZGlhbmNlICogQlJERl9EaWZmdXNlX0xhbWJlcnQoIG1hdGVyaWFsLmRpZmZ1c2VDb2xvciApO1xuXHQjaWZuZGVmIFNUQU5EQVJEXG5cdFx0cmVmbGVjdGVkTGlnaHQuZGlyZWN0U3BlY3VsYXIgKz0gaXJyYWRpYW5jZSAqIG1hdGVyaWFsLmNsZWFyQ29hdCAqIEJSREZfU3BlY3VsYXJfR0dYKCBkaXJlY3RMaWdodCwgZ2VvbWV0cnksIHZlYzMoIERFRkFVTFRfU1BFQ1VMQVJfQ09FRkZJQ0lFTlQgKSwgbWF0ZXJpYWwuY2xlYXJDb2F0Um91Z2huZXNzICk7XG5cdCNlbmRpZlxufVxudm9pZCBSRV9JbmRpcmVjdERpZmZ1c2VfUGh5c2ljYWwoIGNvbnN0IGluIHZlYzMgaXJyYWRpYW5jZSwgY29uc3QgaW4gR2VvbWV0cmljQ29udGV4dCBnZW9tZXRyeSwgY29uc3QgaW4gUGh5c2ljYWxNYXRlcmlhbCBtYXRlcmlhbCwgaW5vdXQgUmVmbGVjdGVkTGlnaHQgcmVmbGVjdGVkTGlnaHQgKSB7XG5cdHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0RGlmZnVzZSArPSBpcnJhZGlhbmNlICogQlJERl9EaWZmdXNlX0xhbWJlcnQoIG1hdGVyaWFsLmRpZmZ1c2VDb2xvciApO1xufVxudm9pZCBSRV9JbmRpcmVjdFNwZWN1bGFyX1BoeXNpY2FsKCBjb25zdCBpbiB2ZWMzIHJhZGlhbmNlLCBjb25zdCBpbiB2ZWMzIGNsZWFyQ29hdFJhZGlhbmNlLCBjb25zdCBpbiBHZW9tZXRyaWNDb250ZXh0IGdlb21ldHJ5LCBjb25zdCBpbiBQaHlzaWNhbE1hdGVyaWFsIG1hdGVyaWFsLCBpbm91dCBSZWZsZWN0ZWRMaWdodCByZWZsZWN0ZWRMaWdodCApIHtcblx0I2lmbmRlZiBTVEFOREFSRFxuXHRcdGZsb2F0IGRvdE5WID0gc2F0dXJhdGUoIGRvdCggZ2VvbWV0cnkubm9ybWFsLCBnZW9tZXRyeS52aWV3RGlyICkgKTtcblx0XHRmbG9hdCBkb3ROTCA9IGRvdE5WO1xuXHRcdGZsb2F0IGNsZWFyQ29hdERIUiA9IG1hdGVyaWFsLmNsZWFyQ29hdCAqIGNsZWFyQ29hdERIUkFwcHJveCggbWF0ZXJpYWwuY2xlYXJDb2F0Um91Z2huZXNzLCBkb3ROTCApO1xuXHQjZWxzZVxuXHRcdGZsb2F0IGNsZWFyQ29hdERIUiA9IDAuMDtcblx0I2VuZGlmXG5cdHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0U3BlY3VsYXIgKz0gKCAxLjAgLSBjbGVhckNvYXRESFIgKSAqIHJhZGlhbmNlICogQlJERl9TcGVjdWxhcl9HR1hfRW52aXJvbm1lbnQoIGdlb21ldHJ5LCBtYXRlcmlhbC5zcGVjdWxhckNvbG9yLCBtYXRlcmlhbC5zcGVjdWxhclJvdWdobmVzcyApO1xuXHQjaWZuZGVmIFNUQU5EQVJEXG5cdFx0cmVmbGVjdGVkTGlnaHQuaW5kaXJlY3RTcGVjdWxhciArPSBjbGVhckNvYXRSYWRpYW5jZSAqIG1hdGVyaWFsLmNsZWFyQ29hdCAqIEJSREZfU3BlY3VsYXJfR0dYX0Vudmlyb25tZW50KCBnZW9tZXRyeSwgdmVjMyggREVGQVVMVF9TUEVDVUxBUl9DT0VGRklDSUVOVCApLCBtYXRlcmlhbC5jbGVhckNvYXRSb3VnaG5lc3MgKTtcblx0I2VuZGlmXG59XG4jZGVmaW5lIFJFX0RpcmVjdFx0XHRcdFx0UkVfRGlyZWN0X1BoeXNpY2FsXG4jZGVmaW5lIFJFX0RpcmVjdF9SZWN0QXJlYVx0XHRSRV9EaXJlY3RfUmVjdEFyZWFfUGh5c2ljYWxcbiNkZWZpbmUgUkVfSW5kaXJlY3REaWZmdXNlXHRcdFJFX0luZGlyZWN0RGlmZnVzZV9QaHlzaWNhbFxuI2RlZmluZSBSRV9JbmRpcmVjdFNwZWN1bGFyXHRcdFJFX0luZGlyZWN0U3BlY3VsYXJfUGh5c2ljYWxcbiNkZWZpbmUgTWF0ZXJpYWxfQmxpbm5TaGluaW5lc3NFeHBvbmVudCggbWF0ZXJpYWwgKSAgIEdHWFJvdWdobmVzc1RvQmxpbm5FeHBvbmVudCggbWF0ZXJpYWwuc3BlY3VsYXJSb3VnaG5lc3MgKVxuI2RlZmluZSBNYXRlcmlhbF9DbGVhckNvYXRfQmxpbm5TaGluaW5lc3NFeHBvbmVudCggbWF0ZXJpYWwgKSAgIEdHWFJvdWdobmVzc1RvQmxpbm5FeHBvbmVudCggbWF0ZXJpYWwuY2xlYXJDb2F0Um91Z2huZXNzIClcbmZsb2F0IGNvbXB1dGVTcGVjdWxhck9jY2x1c2lvbiggY29uc3QgaW4gZmxvYXQgZG90TlYsIGNvbnN0IGluIGZsb2F0IGFtYmllbnRPY2NsdXNpb24sIGNvbnN0IGluIGZsb2F0IHJvdWdobmVzcyApIHtcblx0cmV0dXJuIHNhdHVyYXRlKCBwb3coIGRvdE5WICsgYW1iaWVudE9jY2x1c2lvbiwgZXhwMiggLSAxNi4wICogcm91Z2huZXNzIC0gMS4wICkgKSAtIDEuMCArIGFtYmllbnRPY2NsdXNpb24gKTtcbn1cbiIsbGlnaHRzX3RlbXBsYXRlOiJcbkdlb21ldHJpY0NvbnRleHQgZ2VvbWV0cnk7XG5nZW9tZXRyeS5wb3NpdGlvbiA9IC0gdlZpZXdQb3NpdGlvbjtcbmdlb21ldHJ5Lm5vcm1hbCA9IG5vcm1hbDtcbmdlb21ldHJ5LnZpZXdEaXIgPSBub3JtYWxpemUoIHZWaWV3UG9zaXRpb24gKTtcbkluY2lkZW50TGlnaHQgZGlyZWN0TGlnaHQ7XG4jaWYgKCBOVU1fUE9JTlRfTElHSFRTID4gMCApICYmIGRlZmluZWQoIFJFX0RpcmVjdCApXG5cdFBvaW50TGlnaHQgcG9pbnRMaWdodDtcblx0Zm9yICggaW50IGkgPSAwOyBpIDwgTlVNX1BPSU5UX0xJR0hUUzsgaSArKyApIHtcblx0XHRwb2ludExpZ2h0ID0gcG9pbnRMaWdodHNbIGkgXTtcblx0XHRnZXRQb2ludERpcmVjdExpZ2h0SXJyYWRpYW5jZSggcG9pbnRMaWdodCwgZ2VvbWV0cnksIGRpcmVjdExpZ2h0ICk7XG5cdFx0I2lmZGVmIFVTRV9TSEFET1dNQVBcblx0XHRkaXJlY3RMaWdodC5jb2xvciAqPSBhbGwoIGJ2ZWMyKCBwb2ludExpZ2h0LnNoYWRvdywgZGlyZWN0TGlnaHQudmlzaWJsZSApICkgPyBnZXRQb2ludFNoYWRvdyggcG9pbnRTaGFkb3dNYXBbIGkgXSwgcG9pbnRMaWdodC5zaGFkb3dNYXBTaXplLCBwb2ludExpZ2h0LnNoYWRvd0JpYXMsIHBvaW50TGlnaHQuc2hhZG93UmFkaXVzLCB2UG9pbnRTaGFkb3dDb29yZFsgaSBdICkgOiAxLjA7XG5cdFx0I2VuZGlmXG5cdFx0UkVfRGlyZWN0KCBkaXJlY3RMaWdodCwgZ2VvbWV0cnksIG1hdGVyaWFsLCByZWZsZWN0ZWRMaWdodCApO1xuXHR9XG4jZW5kaWZcbiNpZiAoIE5VTV9TUE9UX0xJR0hUUyA+IDAgKSAmJiBkZWZpbmVkKCBSRV9EaXJlY3QgKVxuXHRTcG90TGlnaHQgc3BvdExpZ2h0O1xuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fU1BPVF9MSUdIVFM7IGkgKysgKSB7XG5cdFx0c3BvdExpZ2h0ID0gc3BvdExpZ2h0c1sgaSBdO1xuXHRcdGdldFNwb3REaXJlY3RMaWdodElycmFkaWFuY2UoIHNwb3RMaWdodCwgZ2VvbWV0cnksIGRpcmVjdExpZ2h0ICk7XG5cdFx0I2lmZGVmIFVTRV9TSEFET1dNQVBcblx0XHRkaXJlY3RMaWdodC5jb2xvciAqPSBhbGwoIGJ2ZWMyKCBzcG90TGlnaHQuc2hhZG93LCBkaXJlY3RMaWdodC52aXNpYmxlICkgKSA/IGdldFNoYWRvdyggc3BvdFNoYWRvd01hcFsgaSBdLCBzcG90TGlnaHQuc2hhZG93TWFwU2l6ZSwgc3BvdExpZ2h0LnNoYWRvd0JpYXMsIHNwb3RMaWdodC5zaGFkb3dSYWRpdXMsIHZTcG90U2hhZG93Q29vcmRbIGkgXSApIDogMS4wO1xuXHRcdCNlbmRpZlxuXHRcdFJFX0RpcmVjdCggZGlyZWN0TGlnaHQsIGdlb21ldHJ5LCBtYXRlcmlhbCwgcmVmbGVjdGVkTGlnaHQgKTtcblx0fVxuI2VuZGlmXG4jaWYgKCBOVU1fRElSX0xJR0hUUyA+IDAgKSAmJiBkZWZpbmVkKCBSRV9EaXJlY3QgKVxuXHREaXJlY3Rpb25hbExpZ2h0IGRpcmVjdGlvbmFsTGlnaHQ7XG5cdGZvciAoIGludCBpID0gMDsgaSA8IE5VTV9ESVJfTElHSFRTOyBpICsrICkge1xuXHRcdGRpcmVjdGlvbmFsTGlnaHQgPSBkaXJlY3Rpb25hbExpZ2h0c1sgaSBdO1xuXHRcdGdldERpcmVjdGlvbmFsRGlyZWN0TGlnaHRJcnJhZGlhbmNlKCBkaXJlY3Rpb25hbExpZ2h0LCBnZW9tZXRyeSwgZGlyZWN0TGlnaHQgKTtcblx0XHQjaWZkZWYgVVNFX1NIQURPV01BUFxuXHRcdGRpcmVjdExpZ2h0LmNvbG9yICo9IGFsbCggYnZlYzIoIGRpcmVjdGlvbmFsTGlnaHQuc2hhZG93LCBkaXJlY3RMaWdodC52aXNpYmxlICkgKSA/IGdldFNoYWRvdyggZGlyZWN0aW9uYWxTaGFkb3dNYXBbIGkgXSwgZGlyZWN0aW9uYWxMaWdodC5zaGFkb3dNYXBTaXplLCBkaXJlY3Rpb25hbExpZ2h0LnNoYWRvd0JpYXMsIGRpcmVjdGlvbmFsTGlnaHQuc2hhZG93UmFkaXVzLCB2RGlyZWN0aW9uYWxTaGFkb3dDb29yZFsgaSBdICkgOiAxLjA7XG5cdFx0I2VuZGlmXG5cdFx0UkVfRGlyZWN0KCBkaXJlY3RMaWdodCwgZ2VvbWV0cnksIG1hdGVyaWFsLCByZWZsZWN0ZWRMaWdodCApO1xuXHR9XG4jZW5kaWZcbiNpZiAoIE5VTV9SRUNUX0FSRUFfTElHSFRTID4gMCApICYmIGRlZmluZWQoIFJFX0RpcmVjdF9SZWN0QXJlYSApXG5cdFJlY3RBcmVhTGlnaHQgcmVjdEFyZWFMaWdodDtcblx0Zm9yICggaW50IGkgPSAwOyBpIDwgTlVNX1JFQ1RfQVJFQV9MSUdIVFM7IGkgKysgKSB7XG5cdFx0cmVjdEFyZWFMaWdodCA9IHJlY3RBcmVhTGlnaHRzWyBpIF07XG5cdFx0UkVfRGlyZWN0X1JlY3RBcmVhKCByZWN0QXJlYUxpZ2h0LCBnZW9tZXRyeSwgbWF0ZXJpYWwsIHJlZmxlY3RlZExpZ2h0ICk7XG5cdH1cbiNlbmRpZlxuI2lmIGRlZmluZWQoIFJFX0luZGlyZWN0RGlmZnVzZSApXG5cdHZlYzMgaXJyYWRpYW5jZSA9IGdldEFtYmllbnRMaWdodElycmFkaWFuY2UoIGFtYmllbnRMaWdodENvbG9yICk7XG5cdCNpZmRlZiBVU0VfTElHSFRNQVBcblx0XHR2ZWMzIGxpZ2h0TWFwSXJyYWRpYW5jZSA9IHRleHR1cmUyRCggbGlnaHRNYXAsIHZVdjIgKS54eXogKiBsaWdodE1hcEludGVuc2l0eTtcblx0XHQjaWZuZGVmIFBIWVNJQ0FMTFlfQ09SUkVDVF9MSUdIVFNcblx0XHRcdGxpZ2h0TWFwSXJyYWRpYW5jZSAqPSBQSTtcblx0XHQjZW5kaWZcblx0XHRpcnJhZGlhbmNlICs9IGxpZ2h0TWFwSXJyYWRpYW5jZTtcblx0I2VuZGlmXG5cdCNpZiAoIE5VTV9IRU1JX0xJR0hUUyA+IDAgKVxuXHRcdGZvciAoIGludCBpID0gMDsgaSA8IE5VTV9IRU1JX0xJR0hUUzsgaSArKyApIHtcblx0XHRcdGlycmFkaWFuY2UgKz0gZ2V0SGVtaXNwaGVyZUxpZ2h0SXJyYWRpYW5jZSggaGVtaXNwaGVyZUxpZ2h0c1sgaSBdLCBnZW9tZXRyeSApO1xuXHRcdH1cblx0I2VuZGlmXG5cdCNpZiBkZWZpbmVkKCBVU0VfRU5WTUFQICkgJiYgZGVmaW5lZCggUEhZU0lDQUwgKSAmJiBkZWZpbmVkKCBFTlZNQVBfVFlQRV9DVUJFX1VWIClcblx0IFx0aXJyYWRpYW5jZSArPSBnZXRMaWdodFByb2JlSW5kaXJlY3RJcnJhZGlhbmNlKCBnZW9tZXRyeSwgOCApO1xuXHQjZW5kaWZcblx0UkVfSW5kaXJlY3REaWZmdXNlKCBpcnJhZGlhbmNlLCBnZW9tZXRyeSwgbWF0ZXJpYWwsIHJlZmxlY3RlZExpZ2h0ICk7XG4jZW5kaWZcbiNpZiBkZWZpbmVkKCBVU0VfRU5WTUFQICkgJiYgZGVmaW5lZCggUkVfSW5kaXJlY3RTcGVjdWxhciApXG5cdHZlYzMgcmFkaWFuY2UgPSBnZXRMaWdodFByb2JlSW5kaXJlY3RSYWRpYW5jZSggZ2VvbWV0cnksIE1hdGVyaWFsX0JsaW5uU2hpbmluZXNzRXhwb25lbnQoIG1hdGVyaWFsICksIDggKTtcblx0I2lmbmRlZiBTVEFOREFSRFxuXHRcdHZlYzMgY2xlYXJDb2F0UmFkaWFuY2UgPSBnZXRMaWdodFByb2JlSW5kaXJlY3RSYWRpYW5jZSggZ2VvbWV0cnksIE1hdGVyaWFsX0NsZWFyQ29hdF9CbGlublNoaW5pbmVzc0V4cG9uZW50KCBtYXRlcmlhbCApLCA4ICk7XG5cdCNlbHNlXG5cdFx0dmVjMyBjbGVhckNvYXRSYWRpYW5jZSA9IHZlYzMoIDAuMCApO1xuXHQjZW5kaWZcblx0XHRcblx0UkVfSW5kaXJlY3RTcGVjdWxhciggcmFkaWFuY2UsIGNsZWFyQ29hdFJhZGlhbmNlLCBnZW9tZXRyeSwgbWF0ZXJpYWwsIHJlZmxlY3RlZExpZ2h0ICk7XG4jZW5kaWZcbiIsbG9nZGVwdGhidWZfZnJhZ21lbnQ6IiNpZiBkZWZpbmVkKFVTRV9MT0dERVBUSEJVRikgJiYgZGVmaW5lZChVU0VfTE9HREVQVEhCVUZfRVhUKVxuXHRnbF9GcmFnRGVwdGhFWFQgPSBsb2cyKHZGcmFnRGVwdGgpICogbG9nRGVwdGhCdWZGQyAqIDAuNTtcbiNlbmRpZiIsbG9nZGVwdGhidWZfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9MT0dERVBUSEJVRlxuXHR1bmlmb3JtIGZsb2F0IGxvZ0RlcHRoQnVmRkM7XG5cdCNpZmRlZiBVU0VfTE9HREVQVEhCVUZfRVhUXG5cdFx0dmFyeWluZyBmbG9hdCB2RnJhZ0RlcHRoO1xuXHQjZW5kaWZcbiNlbmRpZlxuIixsb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleDoiI2lmZGVmIFVTRV9MT0dERVBUSEJVRlxuXHQjaWZkZWYgVVNFX0xPR0RFUFRIQlVGX0VYVFxuXHRcdHZhcnlpbmcgZmxvYXQgdkZyYWdEZXB0aDtcblx0I2VuZGlmXG5cdHVuaWZvcm0gZmxvYXQgbG9nRGVwdGhCdWZGQztcbiNlbmRpZiIsbG9nZGVwdGhidWZfdmVydGV4OiIjaWZkZWYgVVNFX0xPR0RFUFRIQlVGXG5cdGdsX1Bvc2l0aW9uLnogPSBsb2cyKG1heCggRVBTSUxPTiwgZ2xfUG9zaXRpb24udyArIDEuMCApKSAqIGxvZ0RlcHRoQnVmRkM7XG5cdCNpZmRlZiBVU0VfTE9HREVQVEhCVUZfRVhUXG5cdFx0dkZyYWdEZXB0aCA9IDEuMCArIGdsX1Bvc2l0aW9uLnc7XG5cdCNlbHNlXG5cdFx0Z2xfUG9zaXRpb24ueiA9IChnbF9Qb3NpdGlvbi56IC0gMS4wKSAqIGdsX1Bvc2l0aW9uLnc7XG5cdCNlbmRpZlxuI2VuZGlmXG4iLG1hcF9mcmFnbWVudDoiI2lmZGVmIFVTRV9NQVBcblx0dmVjNCB0ZXhlbENvbG9yID0gdGV4dHVyZTJEKCBtYXAsIHZVdiApO1xuXHR0ZXhlbENvbG9yID0gbWFwVGV4ZWxUb0xpbmVhciggdGV4ZWxDb2xvciApO1xuXHRkaWZmdXNlQ29sb3IgKj0gdGV4ZWxDb2xvcjtcbiNlbmRpZlxuIixtYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9NQVBcblx0dW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xuI2VuZGlmXG4iLG1hcF9wYXJ0aWNsZV9mcmFnbWVudDoiI2lmZGVmIFVTRV9NQVBcblx0dmVjNCBtYXBUZXhlbCA9IHRleHR1cmUyRCggbWFwLCB2ZWMyKCBnbF9Qb2ludENvb3JkLngsIDEuMCAtIGdsX1BvaW50Q29vcmQueSApICogb2Zmc2V0UmVwZWF0Lnp3ICsgb2Zmc2V0UmVwZWF0Lnh5ICk7XG5cdGRpZmZ1c2VDb2xvciAqPSBtYXBUZXhlbFRvTGluZWFyKCBtYXBUZXhlbCApO1xuI2VuZGlmXG4iLG1hcF9wYXJ0aWNsZV9wYXJzX2ZyYWdtZW50OiIjaWZkZWYgVVNFX01BUFxuXHR1bmlmb3JtIHZlYzQgb2Zmc2V0UmVwZWF0O1xuXHR1bmlmb3JtIHNhbXBsZXIyRCBtYXA7XG4jZW5kaWZcbiIsbWV0YWxuZXNzbWFwX2ZyYWdtZW50OiJmbG9hdCBtZXRhbG5lc3NGYWN0b3IgPSBtZXRhbG5lc3M7XG4jaWZkZWYgVVNFX01FVEFMTkVTU01BUFxuXHR2ZWM0IHRleGVsTWV0YWxuZXNzID0gdGV4dHVyZTJEKCBtZXRhbG5lc3NNYXAsIHZVdiApO1xuXHRtZXRhbG5lc3NGYWN0b3IgKj0gdGV4ZWxNZXRhbG5lc3MucjtcbiNlbmRpZlxuIixtZXRhbG5lc3NtYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9NRVRBTE5FU1NNQVBcblx0dW5pZm9ybSBzYW1wbGVyMkQgbWV0YWxuZXNzTWFwO1xuI2VuZGlmIixtb3JwaG5vcm1hbF92ZXJ0ZXg6IiNpZmRlZiBVU0VfTU9SUEhOT1JNQUxTXG5cdG9iamVjdE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMCAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAwIF07XG5cdG9iamVjdE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMSAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAxIF07XG5cdG9iamVjdE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMiAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAyIF07XG5cdG9iamVjdE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMyAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAzIF07XG4jZW5kaWZcbiIsbW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXg6IiNpZmRlZiBVU0VfTU9SUEhUQVJHRVRTXG5cdCNpZm5kZWYgVVNFX01PUlBITk9STUFMU1xuXHR1bmlmb3JtIGZsb2F0IG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgOCBdO1xuXHQjZWxzZVxuXHR1bmlmb3JtIGZsb2F0IG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgNCBdO1xuXHQjZW5kaWZcbiNlbmRpZiIsbW9ycGh0YXJnZXRfdmVydGV4OiIjaWZkZWYgVVNFX01PUlBIVEFSR0VUU1xuXHR0cmFuc2Zvcm1lZCArPSAoIG1vcnBoVGFyZ2V0MCAtIHBvc2l0aW9uICkgKiBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDAgXTtcblx0dHJhbnNmb3JtZWQgKz0gKCBtb3JwaFRhcmdldDEgLSBwb3NpdGlvbiApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAxIF07XG5cdHRyYW5zZm9ybWVkICs9ICggbW9ycGhUYXJnZXQyIC0gcG9zaXRpb24gKSAqIG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgMiBdO1xuXHR0cmFuc2Zvcm1lZCArPSAoIG1vcnBoVGFyZ2V0MyAtIHBvc2l0aW9uICkgKiBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDMgXTtcblx0I2lmbmRlZiBVU0VfTU9SUEhOT1JNQUxTXG5cdHRyYW5zZm9ybWVkICs9ICggbW9ycGhUYXJnZXQ0IC0gcG9zaXRpb24gKSAqIG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgNCBdO1xuXHR0cmFuc2Zvcm1lZCArPSAoIG1vcnBoVGFyZ2V0NSAtIHBvc2l0aW9uICkgKiBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDUgXTtcblx0dHJhbnNmb3JtZWQgKz0gKCBtb3JwaFRhcmdldDYgLSBwb3NpdGlvbiApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyA2IF07XG5cdHRyYW5zZm9ybWVkICs9ICggbW9ycGhUYXJnZXQ3IC0gcG9zaXRpb24gKSAqIG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgNyBdO1xuXHQjZW5kaWZcbiNlbmRpZlxuIixub3JtYWxfZmxpcDoiI2lmZGVmIERPVUJMRV9TSURFRFxuXHRmbG9hdCBmbGlwTm9ybWFsID0gKCBmbG9hdCggZ2xfRnJvbnRGYWNpbmcgKSAqIDIuMCAtIDEuMCApO1xuI2Vsc2Vcblx0ZmxvYXQgZmxpcE5vcm1hbCA9IDEuMDtcbiNlbmRpZlxuIixub3JtYWxfZnJhZ21lbnQ6IiNpZmRlZiBGTEFUX1NIQURFRFxuXHR2ZWMzIGZkeCA9IHZlYzMoIGRGZHgoIHZWaWV3UG9zaXRpb24ueCApLCBkRmR4KCB2Vmlld1Bvc2l0aW9uLnkgKSwgZEZkeCggdlZpZXdQb3NpdGlvbi56ICkgKTtcblx0dmVjMyBmZHkgPSB2ZWMzKCBkRmR5KCB2Vmlld1Bvc2l0aW9uLnggKSwgZEZkeSggdlZpZXdQb3NpdGlvbi55ICksIGRGZHkoIHZWaWV3UG9zaXRpb24ueiApICk7XG5cdHZlYzMgbm9ybWFsID0gbm9ybWFsaXplKCBjcm9zcyggZmR4LCBmZHkgKSApO1xuI2Vsc2Vcblx0dmVjMyBub3JtYWwgPSBub3JtYWxpemUoIHZOb3JtYWwgKSAqIGZsaXBOb3JtYWw7XG4jZW5kaWZcbiNpZmRlZiBVU0VfTk9STUFMTUFQXG5cdG5vcm1hbCA9IHBlcnR1cmJOb3JtYWwyQXJiKCAtdlZpZXdQb3NpdGlvbiwgbm9ybWFsICk7XG4jZWxpZiBkZWZpbmVkKCBVU0VfQlVNUE1BUCApXG5cdG5vcm1hbCA9IHBlcnR1cmJOb3JtYWxBcmIoIC12Vmlld1Bvc2l0aW9uLCBub3JtYWwsIGRIZHh5X2Z3ZCgpICk7XG4jZW5kaWZcbiIsbm9ybWFsbWFwX3BhcnNfZnJhZ21lbnQ6IiNpZmRlZiBVU0VfTk9STUFMTUFQXG5cdHVuaWZvcm0gc2FtcGxlcjJEIG5vcm1hbE1hcDtcblx0dW5pZm9ybSB2ZWMyIG5vcm1hbFNjYWxlO1xuXHR2ZWMzIHBlcnR1cmJOb3JtYWwyQXJiKCB2ZWMzIGV5ZV9wb3MsIHZlYzMgc3VyZl9ub3JtICkge1xuXHRcdHZlYzMgcTAgPSBkRmR4KCBleWVfcG9zLnh5eiApO1xuXHRcdHZlYzMgcTEgPSBkRmR5KCBleWVfcG9zLnh5eiApO1xuXHRcdHZlYzIgc3QwID0gZEZkeCggdlV2LnN0ICk7XG5cdFx0dmVjMiBzdDEgPSBkRmR5KCB2VXYuc3QgKTtcblx0XHR2ZWMzIFMgPSBub3JtYWxpemUoIHEwICogc3QxLnQgLSBxMSAqIHN0MC50ICk7XG5cdFx0dmVjMyBUID0gbm9ybWFsaXplKCAtcTAgKiBzdDEucyArIHExICogc3QwLnMgKTtcblx0XHR2ZWMzIE4gPSBub3JtYWxpemUoIHN1cmZfbm9ybSApO1xuXHRcdHZlYzMgbWFwTiA9IHRleHR1cmUyRCggbm9ybWFsTWFwLCB2VXYgKS54eXogKiAyLjAgLSAxLjA7XG5cdFx0bWFwTi54eSA9IG5vcm1hbFNjYWxlICogbWFwTi54eTtcblx0XHRtYXQzIHRzbiA9IG1hdDMoIFMsIFQsIE4gKTtcblx0XHRyZXR1cm4gbm9ybWFsaXplKCB0c24gKiBtYXBOICk7XG5cdH1cbiNlbmRpZlxuIixwYWNraW5nOiJ2ZWMzIHBhY2tOb3JtYWxUb1JHQiggY29uc3QgaW4gdmVjMyBub3JtYWwgKSB7XG4gIHJldHVybiBub3JtYWxpemUoIG5vcm1hbCApICogMC41ICsgMC41O1xufVxudmVjMyB1bnBhY2tSR0JUb05vcm1hbCggY29uc3QgaW4gdmVjMyByZ2IgKSB7XG4gIHJldHVybiAxLjAgLSAyLjAgKiByZ2IueHl6O1xufVxuY29uc3QgZmxvYXQgUGFja1Vwc2NhbGUgPSAyNTYuIC8gMjU1Ljtjb25zdCBmbG9hdCBVbnBhY2tEb3duc2NhbGUgPSAyNTUuIC8gMjU2LjtcbmNvbnN0IHZlYzMgUGFja0ZhY3RvcnMgPSB2ZWMzKCAyNTYuICogMjU2LiAqIDI1Ni4sIDI1Ni4gKiAyNTYuLCAgMjU2LiApO1xuY29uc3QgdmVjNCBVbnBhY2tGYWN0b3JzID0gVW5wYWNrRG93bnNjYWxlIC8gdmVjNCggUGFja0ZhY3RvcnMsIDEuICk7XG5jb25zdCBmbG9hdCBTaGlmdFJpZ2h0OCA9IDEuIC8gMjU2LjtcbnZlYzQgcGFja0RlcHRoVG9SR0JBKCBjb25zdCBpbiBmbG9hdCB2ICkge1xuXHR2ZWM0IHIgPSB2ZWM0KCBmcmFjdCggdiAqIFBhY2tGYWN0b3JzICksIHYgKTtcblx0ci55encgLT0gci54eXogKiBTaGlmdFJpZ2h0ODtcdHJldHVybiByICogUGFja1Vwc2NhbGU7XG59XG5mbG9hdCB1bnBhY2tSR0JBVG9EZXB0aCggY29uc3QgaW4gdmVjNCB2ICkge1xuXHRyZXR1cm4gZG90KCB2LCBVbnBhY2tGYWN0b3JzICk7XG59XG5mbG9hdCB2aWV3WlRvT3J0aG9ncmFwaGljRGVwdGgoIGNvbnN0IGluIGZsb2F0IHZpZXdaLCBjb25zdCBpbiBmbG9hdCBuZWFyLCBjb25zdCBpbiBmbG9hdCBmYXIgKSB7XG4gIHJldHVybiAoIHZpZXdaICsgbmVhciApIC8gKCBuZWFyIC0gZmFyICk7XG59XG5mbG9hdCBvcnRob2dyYXBoaWNEZXB0aFRvVmlld1ooIGNvbnN0IGluIGZsb2F0IGxpbmVhckNsaXBaLCBjb25zdCBpbiBmbG9hdCBuZWFyLCBjb25zdCBpbiBmbG9hdCBmYXIgKSB7XG4gIHJldHVybiBsaW5lYXJDbGlwWiAqICggbmVhciAtIGZhciApIC0gbmVhcjtcbn1cbmZsb2F0IHZpZXdaVG9QZXJzcGVjdGl2ZURlcHRoKCBjb25zdCBpbiBmbG9hdCB2aWV3WiwgY29uc3QgaW4gZmxvYXQgbmVhciwgY29uc3QgaW4gZmxvYXQgZmFyICkge1xuICByZXR1cm4gKCggbmVhciArIHZpZXdaICkgKiBmYXIgKSAvICgoIGZhciAtIG5lYXIgKSAqIHZpZXdaICk7XG59XG5mbG9hdCBwZXJzcGVjdGl2ZURlcHRoVG9WaWV3WiggY29uc3QgaW4gZmxvYXQgaW52Q2xpcFosIGNvbnN0IGluIGZsb2F0IG5lYXIsIGNvbnN0IGluIGZsb2F0IGZhciApIHtcbiAgcmV0dXJuICggbmVhciAqIGZhciApIC8gKCAoIGZhciAtIG5lYXIgKSAqIGludkNsaXBaIC0gZmFyICk7XG59XG4iLHByZW11bHRpcGxpZWRfYWxwaGFfZnJhZ21lbnQ6IiNpZmRlZiBQUkVNVUxUSVBMSUVEX0FMUEhBXG5cdGdsX0ZyYWdDb2xvci5yZ2IgKj0gZ2xfRnJhZ0NvbG9yLmE7XG4jZW5kaWZcbiIscHJvamVjdF92ZXJ0ZXg6IiNpZmRlZiBVU0VfU0tJTk5JTkdcblx0dmVjNCBtdlBvc2l0aW9uID0gbW9kZWxWaWV3TWF0cml4ICogc2tpbm5lZDtcbiNlbHNlXG5cdHZlYzQgbXZQb3NpdGlvbiA9IG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIHRyYW5zZm9ybWVkLCAxLjAgKTtcbiNlbmRpZlxuZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbXZQb3NpdGlvbjtcbiIscm91Z2huZXNzbWFwX2ZyYWdtZW50OiJmbG9hdCByb3VnaG5lc3NGYWN0b3IgPSByb3VnaG5lc3M7XG4jaWZkZWYgVVNFX1JPVUdITkVTU01BUFxuXHR2ZWM0IHRleGVsUm91Z2huZXNzID0gdGV4dHVyZTJEKCByb3VnaG5lc3NNYXAsIHZVdiApO1xuXHRyb3VnaG5lc3NGYWN0b3IgKj0gdGV4ZWxSb3VnaG5lc3MucjtcbiNlbmRpZlxuIixyb3VnaG5lc3NtYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9ST1VHSE5FU1NNQVBcblx0dW5pZm9ybSBzYW1wbGVyMkQgcm91Z2huZXNzTWFwO1xuI2VuZGlmIixzaGFkb3dtYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9TSEFET1dNQVBcblx0I2lmIE5VTV9ESVJfTElHSFRTID4gMFxuXHRcdHVuaWZvcm0gc2FtcGxlcjJEIGRpcmVjdGlvbmFsU2hhZG93TWFwWyBOVU1fRElSX0xJR0hUUyBdO1xuXHRcdHZhcnlpbmcgdmVjNCB2RGlyZWN0aW9uYWxTaGFkb3dDb29yZFsgTlVNX0RJUl9MSUdIVFMgXTtcblx0I2VuZGlmXG5cdCNpZiBOVU1fU1BPVF9MSUdIVFMgPiAwXG5cdFx0dW5pZm9ybSBzYW1wbGVyMkQgc3BvdFNoYWRvd01hcFsgTlVNX1NQT1RfTElHSFRTIF07XG5cdFx0dmFyeWluZyB2ZWM0IHZTcG90U2hhZG93Q29vcmRbIE5VTV9TUE9UX0xJR0hUUyBdO1xuXHQjZW5kaWZcblx0I2lmIE5VTV9QT0lOVF9MSUdIVFMgPiAwXG5cdFx0dW5pZm9ybSBzYW1wbGVyMkQgcG9pbnRTaGFkb3dNYXBbIE5VTV9QT0lOVF9MSUdIVFMgXTtcblx0XHR2YXJ5aW5nIHZlYzQgdlBvaW50U2hhZG93Q29vcmRbIE5VTV9QT0lOVF9MSUdIVFMgXTtcblx0I2VuZGlmXG4gICAgI2lmIE5VTV9SRUNUX0FSRUFfTElHSFRTID4gMFxuICAgICNlbmRpZlxuXHRmbG9hdCB0ZXh0dXJlMkRDb21wYXJlKCBzYW1wbGVyMkQgZGVwdGhzLCB2ZWMyIHV2LCBmbG9hdCBjb21wYXJlICkge1xuXHRcdHJldHVybiBzdGVwKCBjb21wYXJlLCB1bnBhY2tSR0JBVG9EZXB0aCggdGV4dHVyZTJEKCBkZXB0aHMsIHV2ICkgKSApO1xuXHR9XG5cdGZsb2F0IHRleHR1cmUyRFNoYWRvd0xlcnAoIHNhbXBsZXIyRCBkZXB0aHMsIHZlYzIgc2l6ZSwgdmVjMiB1diwgZmxvYXQgY29tcGFyZSApIHtcblx0XHRjb25zdCB2ZWMyIG9mZnNldCA9IHZlYzIoIDAuMCwgMS4wICk7XG5cdFx0dmVjMiB0ZXhlbFNpemUgPSB2ZWMyKCAxLjAgKSAvIHNpemU7XG5cdFx0dmVjMiBjZW50cm9pZFVWID0gZmxvb3IoIHV2ICogc2l6ZSArIDAuNSApIC8gc2l6ZTtcblx0XHRmbG9hdCBsYiA9IHRleHR1cmUyRENvbXBhcmUoIGRlcHRocywgY2VudHJvaWRVViArIHRleGVsU2l6ZSAqIG9mZnNldC54eCwgY29tcGFyZSApO1xuXHRcdGZsb2F0IGx0ID0gdGV4dHVyZTJEQ29tcGFyZSggZGVwdGhzLCBjZW50cm9pZFVWICsgdGV4ZWxTaXplICogb2Zmc2V0Lnh5LCBjb21wYXJlICk7XG5cdFx0ZmxvYXQgcmIgPSB0ZXh0dXJlMkRDb21wYXJlKCBkZXB0aHMsIGNlbnRyb2lkVVYgKyB0ZXhlbFNpemUgKiBvZmZzZXQueXgsIGNvbXBhcmUgKTtcblx0XHRmbG9hdCBydCA9IHRleHR1cmUyRENvbXBhcmUoIGRlcHRocywgY2VudHJvaWRVViArIHRleGVsU2l6ZSAqIG9mZnNldC55eSwgY29tcGFyZSApO1xuXHRcdHZlYzIgZiA9IGZyYWN0KCB1diAqIHNpemUgKyAwLjUgKTtcblx0XHRmbG9hdCBhID0gbWl4KCBsYiwgbHQsIGYueSApO1xuXHRcdGZsb2F0IGIgPSBtaXgoIHJiLCBydCwgZi55ICk7XG5cdFx0ZmxvYXQgYyA9IG1peCggYSwgYiwgZi54ICk7XG5cdFx0cmV0dXJuIGM7XG5cdH1cblx0ZmxvYXQgZ2V0U2hhZG93KCBzYW1wbGVyMkQgc2hhZG93TWFwLCB2ZWMyIHNoYWRvd01hcFNpemUsIGZsb2F0IHNoYWRvd0JpYXMsIGZsb2F0IHNoYWRvd1JhZGl1cywgdmVjNCBzaGFkb3dDb29yZCApIHtcblx0XHRzaGFkb3dDb29yZC54eXogLz0gc2hhZG93Q29vcmQudztcblx0XHRzaGFkb3dDb29yZC56ICs9IHNoYWRvd0JpYXM7XG5cdFx0YnZlYzQgaW5GcnVzdHVtVmVjID0gYnZlYzQgKCBzaGFkb3dDb29yZC54ID49IDAuMCwgc2hhZG93Q29vcmQueCA8PSAxLjAsIHNoYWRvd0Nvb3JkLnkgPj0gMC4wLCBzaGFkb3dDb29yZC55IDw9IDEuMCApO1xuXHRcdGJvb2wgaW5GcnVzdHVtID0gYWxsKCBpbkZydXN0dW1WZWMgKTtcblx0XHRidmVjMiBmcnVzdHVtVGVzdFZlYyA9IGJ2ZWMyKCBpbkZydXN0dW0sIHNoYWRvd0Nvb3JkLnogPD0gMS4wICk7XG5cdFx0Ym9vbCBmcnVzdHVtVGVzdCA9IGFsbCggZnJ1c3R1bVRlc3RWZWMgKTtcblx0XHRpZiAoIGZydXN0dW1UZXN0ICkge1xuXHRcdCNpZiBkZWZpbmVkKCBTSEFET1dNQVBfVFlQRV9QQ0YgKVxuXHRcdFx0dmVjMiB0ZXhlbFNpemUgPSB2ZWMyKCAxLjAgKSAvIHNoYWRvd01hcFNpemU7XG5cdFx0XHRmbG9hdCBkeDAgPSAtIHRleGVsU2l6ZS54ICogc2hhZG93UmFkaXVzO1xuXHRcdFx0ZmxvYXQgZHkwID0gLSB0ZXhlbFNpemUueSAqIHNoYWRvd1JhZGl1cztcblx0XHRcdGZsb2F0IGR4MSA9ICsgdGV4ZWxTaXplLnggKiBzaGFkb3dSYWRpdXM7XG5cdFx0XHRmbG9hdCBkeTEgPSArIHRleGVsU2l6ZS55ICogc2hhZG93UmFkaXVzO1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0dGV4dHVyZTJEQ29tcGFyZSggc2hhZG93TWFwLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MCwgZHkwICksIHNoYWRvd0Nvb3JkLnogKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCAwLjAsIGR5MCApLCBzaGFkb3dDb29yZC56ICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRDb21wYXJlKCBzaGFkb3dNYXAsIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgxLCBkeTAgKSwgc2hhZG93Q29vcmQueiApICtcblx0XHRcdFx0dGV4dHVyZTJEQ29tcGFyZSggc2hhZG93TWFwLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MCwgMC4wICksIHNoYWRvd0Nvb3JkLnogKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgc2hhZG93Q29vcmQueHksIHNoYWRvd0Nvb3JkLnogKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDEsIDAuMCApLCBzaGFkb3dDb29yZC56ICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRDb21wYXJlKCBzaGFkb3dNYXAsIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgwLCBkeTEgKSwgc2hhZG93Q29vcmQueiApICtcblx0XHRcdFx0dGV4dHVyZTJEQ29tcGFyZSggc2hhZG93TWFwLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIDAuMCwgZHkxICksIHNoYWRvd0Nvb3JkLnogKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDEsIGR5MSApLCBzaGFkb3dDb29yZC56IClcblx0XHRcdCkgKiAoIDEuMCAvIDkuMCApO1xuXHRcdCNlbGlmIGRlZmluZWQoIFNIQURPV01BUF9UWVBFX1BDRl9TT0ZUIClcblx0XHRcdHZlYzIgdGV4ZWxTaXplID0gdmVjMiggMS4wICkgLyBzaGFkb3dNYXBTaXplO1xuXHRcdFx0ZmxvYXQgZHgwID0gLSB0ZXhlbFNpemUueCAqIHNoYWRvd1JhZGl1cztcblx0XHRcdGZsb2F0IGR5MCA9IC0gdGV4ZWxTaXplLnkgKiBzaGFkb3dSYWRpdXM7XG5cdFx0XHRmbG9hdCBkeDEgPSArIHRleGVsU2l6ZS54ICogc2hhZG93UmFkaXVzO1xuXHRcdFx0ZmxvYXQgZHkxID0gKyB0ZXhlbFNpemUueSAqIHNoYWRvd1JhZGl1cztcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdHRleHR1cmUyRFNoYWRvd0xlcnAoIHNoYWRvd01hcCwgc2hhZG93TWFwU2l6ZSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDAsIGR5MCApLCBzaGFkb3dDb29yZC56ICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRTaGFkb3dMZXJwKCBzaGFkb3dNYXAsIHNoYWRvd01hcFNpemUsIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggMC4wLCBkeTAgKSwgc2hhZG93Q29vcmQueiApICtcblx0XHRcdFx0dGV4dHVyZTJEU2hhZG93TGVycCggc2hhZG93TWFwLCBzaGFkb3dNYXBTaXplLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MSwgZHkwICksIHNoYWRvd0Nvb3JkLnogKSArXG5cdFx0XHRcdHRleHR1cmUyRFNoYWRvd0xlcnAoIHNoYWRvd01hcCwgc2hhZG93TWFwU2l6ZSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDAsIDAuMCApLCBzaGFkb3dDb29yZC56ICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRTaGFkb3dMZXJwKCBzaGFkb3dNYXAsIHNoYWRvd01hcFNpemUsIHNoYWRvd0Nvb3JkLnh5LCBzaGFkb3dDb29yZC56ICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRTaGFkb3dMZXJwKCBzaGFkb3dNYXAsIHNoYWRvd01hcFNpemUsIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgxLCAwLjAgKSwgc2hhZG93Q29vcmQueiApICtcblx0XHRcdFx0dGV4dHVyZTJEU2hhZG93TGVycCggc2hhZG93TWFwLCBzaGFkb3dNYXBTaXplLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MCwgZHkxICksIHNoYWRvd0Nvb3JkLnogKSArXG5cdFx0XHRcdHRleHR1cmUyRFNoYWRvd0xlcnAoIHNoYWRvd01hcCwgc2hhZG93TWFwU2l6ZSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCAwLjAsIGR5MSApLCBzaGFkb3dDb29yZC56ICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRTaGFkb3dMZXJwKCBzaGFkb3dNYXAsIHNoYWRvd01hcFNpemUsIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgxLCBkeTEgKSwgc2hhZG93Q29vcmQueiApXG5cdFx0XHQpICogKCAxLjAgLyA5LjAgKTtcblx0XHQjZWxzZVxuXHRcdFx0cmV0dXJuIHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgc2hhZG93Q29vcmQueHksIHNoYWRvd0Nvb3JkLnogKTtcblx0XHQjZW5kaWZcblx0XHR9XG5cdFx0cmV0dXJuIDEuMDtcblx0fVxuXHR2ZWMyIGN1YmVUb1VWKCB2ZWMzIHYsIGZsb2F0IHRleGVsU2l6ZVkgKSB7XG5cdFx0dmVjMyBhYnNWID0gYWJzKCB2ICk7XG5cdFx0ZmxvYXQgc2NhbGVUb0N1YmUgPSAxLjAgLyBtYXgoIGFic1YueCwgbWF4KCBhYnNWLnksIGFic1YueiApICk7XG5cdFx0YWJzViAqPSBzY2FsZVRvQ3ViZTtcblx0XHR2ICo9IHNjYWxlVG9DdWJlICogKCAxLjAgLSAyLjAgKiB0ZXhlbFNpemVZICk7XG5cdFx0dmVjMiBwbGFuYXIgPSB2Lnh5O1xuXHRcdGZsb2F0IGFsbW9zdEFUZXhlbCA9IDEuNSAqIHRleGVsU2l6ZVk7XG5cdFx0ZmxvYXQgYWxtb3N0T25lID0gMS4wIC0gYWxtb3N0QVRleGVsO1xuXHRcdGlmICggYWJzVi56ID49IGFsbW9zdE9uZSApIHtcblx0XHRcdGlmICggdi56ID4gMC4wIClcblx0XHRcdFx0cGxhbmFyLnggPSA0LjAgLSB2Lng7XG5cdFx0fSBlbHNlIGlmICggYWJzVi54ID49IGFsbW9zdE9uZSApIHtcblx0XHRcdGZsb2F0IHNpZ25YID0gc2lnbiggdi54ICk7XG5cdFx0XHRwbGFuYXIueCA9IHYueiAqIHNpZ25YICsgMi4wICogc2lnblg7XG5cdFx0fSBlbHNlIGlmICggYWJzVi55ID49IGFsbW9zdE9uZSApIHtcblx0XHRcdGZsb2F0IHNpZ25ZID0gc2lnbiggdi55ICk7XG5cdFx0XHRwbGFuYXIueCA9IHYueCArIDIuMCAqIHNpZ25ZICsgMi4wO1xuXHRcdFx0cGxhbmFyLnkgPSB2LnogKiBzaWduWSAtIDIuMDtcblx0XHR9XG5cdFx0cmV0dXJuIHZlYzIoIDAuMTI1LCAwLjI1ICkgKiBwbGFuYXIgKyB2ZWMyKCAwLjM3NSwgMC43NSApO1xuXHR9XG5cdGZsb2F0IGdldFBvaW50U2hhZG93KCBzYW1wbGVyMkQgc2hhZG93TWFwLCB2ZWMyIHNoYWRvd01hcFNpemUsIGZsb2F0IHNoYWRvd0JpYXMsIGZsb2F0IHNoYWRvd1JhZGl1cywgdmVjNCBzaGFkb3dDb29yZCApIHtcblx0XHR2ZWMyIHRleGVsU2l6ZSA9IHZlYzIoIDEuMCApIC8gKCBzaGFkb3dNYXBTaXplICogdmVjMiggNC4wLCAyLjAgKSApO1xuXHRcdHZlYzMgbGlnaHRUb1Bvc2l0aW9uID0gc2hhZG93Q29vcmQueHl6O1xuXHRcdHZlYzMgYmQzRCA9IG5vcm1hbGl6ZSggbGlnaHRUb1Bvc2l0aW9uICk7XG5cdFx0ZmxvYXQgZHAgPSAoIGxlbmd0aCggbGlnaHRUb1Bvc2l0aW9uICkgLSBzaGFkb3dCaWFzICkgLyAxMDAwLjA7XG5cdFx0I2lmIGRlZmluZWQoIFNIQURPV01BUF9UWVBFX1BDRiApIHx8IGRlZmluZWQoIFNIQURPV01BUF9UWVBFX1BDRl9TT0ZUIClcblx0XHRcdHZlYzIgb2Zmc2V0ID0gdmVjMiggLSAxLCAxICkgKiBzaGFkb3dSYWRpdXMgKiB0ZXhlbFNpemUueTtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgY3ViZVRvVVYoIGJkM0QgKyBvZmZzZXQueHl5LCB0ZXhlbFNpemUueSApLCBkcCApICtcblx0XHRcdFx0dGV4dHVyZTJEQ29tcGFyZSggc2hhZG93TWFwLCBjdWJlVG9VViggYmQzRCArIG9mZnNldC55eXksIHRleGVsU2l6ZS55ICksIGRwICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRDb21wYXJlKCBzaGFkb3dNYXAsIGN1YmVUb1VWKCBiZDNEICsgb2Zmc2V0Lnh5eCwgdGV4ZWxTaXplLnkgKSwgZHAgKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgY3ViZVRvVVYoIGJkM0QgKyBvZmZzZXQueXl4LCB0ZXhlbFNpemUueSApLCBkcCApICtcblx0XHRcdFx0dGV4dHVyZTJEQ29tcGFyZSggc2hhZG93TWFwLCBjdWJlVG9VViggYmQzRCwgdGV4ZWxTaXplLnkgKSwgZHAgKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgY3ViZVRvVVYoIGJkM0QgKyBvZmZzZXQueHh5LCB0ZXhlbFNpemUueSApLCBkcCApICtcblx0XHRcdFx0dGV4dHVyZTJEQ29tcGFyZSggc2hhZG93TWFwLCBjdWJlVG9VViggYmQzRCArIG9mZnNldC55eHksIHRleGVsU2l6ZS55ICksIGRwICkgK1xuXHRcdFx0XHR0ZXh0dXJlMkRDb21wYXJlKCBzaGFkb3dNYXAsIGN1YmVUb1VWKCBiZDNEICsgb2Zmc2V0Lnh4eCwgdGV4ZWxTaXplLnkgKSwgZHAgKSArXG5cdFx0XHRcdHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgY3ViZVRvVVYoIGJkM0QgKyBvZmZzZXQueXh4LCB0ZXhlbFNpemUueSApLCBkcCApXG5cdFx0XHQpICogKCAxLjAgLyA5LjAgKTtcblx0XHQjZWxzZVxuXHRcdFx0cmV0dXJuIHRleHR1cmUyRENvbXBhcmUoIHNoYWRvd01hcCwgY3ViZVRvVVYoIGJkM0QsIHRleGVsU2l6ZS55ICksIGRwICk7XG5cdFx0I2VuZGlmXG5cdH1cbiNlbmRpZlxuIixzaGFkb3dtYXBfcGFyc192ZXJ0ZXg6IiNpZmRlZiBVU0VfU0hBRE9XTUFQXG5cdCNpZiBOVU1fRElSX0xJR0hUUyA+IDBcblx0XHR1bmlmb3JtIG1hdDQgZGlyZWN0aW9uYWxTaGFkb3dNYXRyaXhbIE5VTV9ESVJfTElHSFRTIF07XG5cdFx0dmFyeWluZyB2ZWM0IHZEaXJlY3Rpb25hbFNoYWRvd0Nvb3JkWyBOVU1fRElSX0xJR0hUUyBdO1xuXHQjZW5kaWZcblx0I2lmIE5VTV9TUE9UX0xJR0hUUyA+IDBcblx0XHR1bmlmb3JtIG1hdDQgc3BvdFNoYWRvd01hdHJpeFsgTlVNX1NQT1RfTElHSFRTIF07XG5cdFx0dmFyeWluZyB2ZWM0IHZTcG90U2hhZG93Q29vcmRbIE5VTV9TUE9UX0xJR0hUUyBdO1xuXHQjZW5kaWZcblx0I2lmIE5VTV9QT0lOVF9MSUdIVFMgPiAwXG5cdFx0dW5pZm9ybSBtYXQ0IHBvaW50U2hhZG93TWF0cml4WyBOVU1fUE9JTlRfTElHSFRTIF07XG5cdFx0dmFyeWluZyB2ZWM0IHZQb2ludFNoYWRvd0Nvb3JkWyBOVU1fUE9JTlRfTElHSFRTIF07XG5cdCNlbmRpZlxuICAgICNpZiBOVU1fUkVDVF9BUkVBX0xJR0hUUyA+IDBcbiAgICAjZW5kaWZcbiNlbmRpZlxuIixzaGFkb3dtYXBfdmVydGV4OiIjaWZkZWYgVVNFX1NIQURPV01BUFxuXHQjaWYgTlVNX0RJUl9MSUdIVFMgPiAwXG5cdGZvciAoIGludCBpID0gMDsgaSA8IE5VTV9ESVJfTElHSFRTOyBpICsrICkge1xuXHRcdHZEaXJlY3Rpb25hbFNoYWRvd0Nvb3JkWyBpIF0gPSBkaXJlY3Rpb25hbFNoYWRvd01hdHJpeFsgaSBdICogd29ybGRQb3NpdGlvbjtcblx0fVxuXHQjZW5kaWZcblx0I2lmIE5VTV9TUE9UX0xJR0hUUyA+IDBcblx0Zm9yICggaW50IGkgPSAwOyBpIDwgTlVNX1NQT1RfTElHSFRTOyBpICsrICkge1xuXHRcdHZTcG90U2hhZG93Q29vcmRbIGkgXSA9IHNwb3RTaGFkb3dNYXRyaXhbIGkgXSAqIHdvcmxkUG9zaXRpb247XG5cdH1cblx0I2VuZGlmXG5cdCNpZiBOVU1fUE9JTlRfTElHSFRTID4gMFxuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fUE9JTlRfTElHSFRTOyBpICsrICkge1xuXHRcdHZQb2ludFNoYWRvd0Nvb3JkWyBpIF0gPSBwb2ludFNoYWRvd01hdHJpeFsgaSBdICogd29ybGRQb3NpdGlvbjtcblx0fVxuXHQjZW5kaWZcbiAgICAjaWYgTlVNX1JFQ1RfQVJFQV9MSUdIVFMgPiAwXG4gICAgI2VuZGlmXG4jZW5kaWZcbiIsc2hhZG93bWFza19wYXJzX2ZyYWdtZW50OiJmbG9hdCBnZXRTaGFkb3dNYXNrKCkge1xuXHRmbG9hdCBzaGFkb3cgPSAxLjA7XG5cdCNpZmRlZiBVU0VfU0hBRE9XTUFQXG5cdCNpZiBOVU1fRElSX0xJR0hUUyA+IDBcblx0RGlyZWN0aW9uYWxMaWdodCBkaXJlY3Rpb25hbExpZ2h0O1xuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fRElSX0xJR0hUUzsgaSArKyApIHtcblx0XHRkaXJlY3Rpb25hbExpZ2h0ID0gZGlyZWN0aW9uYWxMaWdodHNbIGkgXTtcblx0XHRzaGFkb3cgKj0gYm9vbCggZGlyZWN0aW9uYWxMaWdodC5zaGFkb3cgKSA/IGdldFNoYWRvdyggZGlyZWN0aW9uYWxTaGFkb3dNYXBbIGkgXSwgZGlyZWN0aW9uYWxMaWdodC5zaGFkb3dNYXBTaXplLCBkaXJlY3Rpb25hbExpZ2h0LnNoYWRvd0JpYXMsIGRpcmVjdGlvbmFsTGlnaHQuc2hhZG93UmFkaXVzLCB2RGlyZWN0aW9uYWxTaGFkb3dDb29yZFsgaSBdICkgOiAxLjA7XG5cdH1cblx0I2VuZGlmXG5cdCNpZiBOVU1fU1BPVF9MSUdIVFMgPiAwXG5cdFNwb3RMaWdodCBzcG90TGlnaHQ7XG5cdGZvciAoIGludCBpID0gMDsgaSA8IE5VTV9TUE9UX0xJR0hUUzsgaSArKyApIHtcblx0XHRzcG90TGlnaHQgPSBzcG90TGlnaHRzWyBpIF07XG5cdFx0c2hhZG93ICo9IGJvb2woIHNwb3RMaWdodC5zaGFkb3cgKSA/IGdldFNoYWRvdyggc3BvdFNoYWRvd01hcFsgaSBdLCBzcG90TGlnaHQuc2hhZG93TWFwU2l6ZSwgc3BvdExpZ2h0LnNoYWRvd0JpYXMsIHNwb3RMaWdodC5zaGFkb3dSYWRpdXMsIHZTcG90U2hhZG93Q29vcmRbIGkgXSApIDogMS4wO1xuXHR9XG5cdCNlbmRpZlxuXHQjaWYgTlVNX1BPSU5UX0xJR0hUUyA+IDBcblx0UG9pbnRMaWdodCBwb2ludExpZ2h0O1xuXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBOVU1fUE9JTlRfTElHSFRTOyBpICsrICkge1xuXHRcdHBvaW50TGlnaHQgPSBwb2ludExpZ2h0c1sgaSBdO1xuXHRcdHNoYWRvdyAqPSBib29sKCBwb2ludExpZ2h0LnNoYWRvdyApID8gZ2V0UG9pbnRTaGFkb3coIHBvaW50U2hhZG93TWFwWyBpIF0sIHBvaW50TGlnaHQuc2hhZG93TWFwU2l6ZSwgcG9pbnRMaWdodC5zaGFkb3dCaWFzLCBwb2ludExpZ2h0LnNoYWRvd1JhZGl1cywgdlBvaW50U2hhZG93Q29vcmRbIGkgXSApIDogMS4wO1xuXHR9XG5cdCNlbmRpZlxuXHQjaWYgTlVNX1JFQ1RfQVJFQV9MSUdIVFMgPiAwXG5cdCNlbmRpZlxuXHQjZW5kaWZcblx0cmV0dXJuIHNoYWRvdztcbn1cbiIsc2tpbmJhc2VfdmVydGV4OiIjaWZkZWYgVVNFX1NLSU5OSU5HXG5cdG1hdDQgYm9uZU1hdFggPSBnZXRCb25lTWF0cml4KCBza2luSW5kZXgueCApO1xuXHRtYXQ0IGJvbmVNYXRZID0gZ2V0Qm9uZU1hdHJpeCggc2tpbkluZGV4LnkgKTtcblx0bWF0NCBib25lTWF0WiA9IGdldEJvbmVNYXRyaXgoIHNraW5JbmRleC56ICk7XG5cdG1hdDQgYm9uZU1hdFcgPSBnZXRCb25lTWF0cml4KCBza2luSW5kZXgudyApO1xuI2VuZGlmIixza2lubmluZ19wYXJzX3ZlcnRleDoiI2lmZGVmIFVTRV9TS0lOTklOR1xuXHR1bmlmb3JtIG1hdDQgYmluZE1hdHJpeDtcblx0dW5pZm9ybSBtYXQ0IGJpbmRNYXRyaXhJbnZlcnNlO1xuXHQjaWZkZWYgQk9ORV9URVhUVVJFXG5cdFx0dW5pZm9ybSBzYW1wbGVyMkQgYm9uZVRleHR1cmU7XG5cdFx0dW5pZm9ybSBpbnQgYm9uZVRleHR1cmVXaWR0aDtcblx0XHR1bmlmb3JtIGludCBib25lVGV4dHVyZUhlaWdodDtcblx0XHRtYXQ0IGdldEJvbmVNYXRyaXgoIGNvbnN0IGluIGZsb2F0IGkgKSB7XG5cdFx0XHRmbG9hdCBqID0gaSAqIDQuMDtcblx0XHRcdGZsb2F0IHggPSBtb2QoIGosIGZsb2F0KCBib25lVGV4dHVyZVdpZHRoICkgKTtcblx0XHRcdGZsb2F0IHkgPSBmbG9vciggaiAvIGZsb2F0KCBib25lVGV4dHVyZVdpZHRoICkgKTtcblx0XHRcdGZsb2F0IGR4ID0gMS4wIC8gZmxvYXQoIGJvbmVUZXh0dXJlV2lkdGggKTtcblx0XHRcdGZsb2F0IGR5ID0gMS4wIC8gZmxvYXQoIGJvbmVUZXh0dXJlSGVpZ2h0ICk7XG5cdFx0XHR5ID0gZHkgKiAoIHkgKyAwLjUgKTtcblx0XHRcdHZlYzQgdjEgPSB0ZXh0dXJlMkQoIGJvbmVUZXh0dXJlLCB2ZWMyKCBkeCAqICggeCArIDAuNSApLCB5ICkgKTtcblx0XHRcdHZlYzQgdjIgPSB0ZXh0dXJlMkQoIGJvbmVUZXh0dXJlLCB2ZWMyKCBkeCAqICggeCArIDEuNSApLCB5ICkgKTtcblx0XHRcdHZlYzQgdjMgPSB0ZXh0dXJlMkQoIGJvbmVUZXh0dXJlLCB2ZWMyKCBkeCAqICggeCArIDIuNSApLCB5ICkgKTtcblx0XHRcdHZlYzQgdjQgPSB0ZXh0dXJlMkQoIGJvbmVUZXh0dXJlLCB2ZWMyKCBkeCAqICggeCArIDMuNSApLCB5ICkgKTtcblx0XHRcdG1hdDQgYm9uZSA9IG1hdDQoIHYxLCB2MiwgdjMsIHY0ICk7XG5cdFx0XHRyZXR1cm4gYm9uZTtcblx0XHR9XG5cdCNlbHNlXG5cdFx0dW5pZm9ybSBtYXQ0IGJvbmVNYXRyaWNlc1sgTUFYX0JPTkVTIF07XG5cdFx0bWF0NCBnZXRCb25lTWF0cml4KCBjb25zdCBpbiBmbG9hdCBpICkge1xuXHRcdFx0bWF0NCBib25lID0gYm9uZU1hdHJpY2VzWyBpbnQoaSkgXTtcblx0XHRcdHJldHVybiBib25lO1xuXHRcdH1cblx0I2VuZGlmXG4jZW5kaWZcbiIsc2tpbm5pbmdfdmVydGV4OiIjaWZkZWYgVVNFX1NLSU5OSU5HXG5cdHZlYzQgc2tpblZlcnRleCA9IGJpbmRNYXRyaXggKiB2ZWM0KCB0cmFuc2Zvcm1lZCwgMS4wICk7XG5cdHZlYzQgc2tpbm5lZCA9IHZlYzQoIDAuMCApO1xuXHRza2lubmVkICs9IGJvbmVNYXRYICogc2tpblZlcnRleCAqIHNraW5XZWlnaHQueDtcblx0c2tpbm5lZCArPSBib25lTWF0WSAqIHNraW5WZXJ0ZXggKiBza2luV2VpZ2h0Lnk7XG5cdHNraW5uZWQgKz0gYm9uZU1hdFogKiBza2luVmVydGV4ICogc2tpbldlaWdodC56O1xuXHRza2lubmVkICs9IGJvbmVNYXRXICogc2tpblZlcnRleCAqIHNraW5XZWlnaHQudztcblx0c2tpbm5lZCAgPSBiaW5kTWF0cml4SW52ZXJzZSAqIHNraW5uZWQ7XG4jZW5kaWZcbiIsc2tpbm5vcm1hbF92ZXJ0ZXg6IiNpZmRlZiBVU0VfU0tJTk5JTkdcblx0bWF0NCBza2luTWF0cml4ID0gbWF0NCggMC4wICk7XG5cdHNraW5NYXRyaXggKz0gc2tpbldlaWdodC54ICogYm9uZU1hdFg7XG5cdHNraW5NYXRyaXggKz0gc2tpbldlaWdodC55ICogYm9uZU1hdFk7XG5cdHNraW5NYXRyaXggKz0gc2tpbldlaWdodC56ICogYm9uZU1hdFo7XG5cdHNraW5NYXRyaXggKz0gc2tpbldlaWdodC53ICogYm9uZU1hdFc7XG5cdHNraW5NYXRyaXggID0gYmluZE1hdHJpeEludmVyc2UgKiBza2luTWF0cml4ICogYmluZE1hdHJpeDtcblx0b2JqZWN0Tm9ybWFsID0gdmVjNCggc2tpbk1hdHJpeCAqIHZlYzQoIG9iamVjdE5vcm1hbCwgMC4wICkgKS54eXo7XG4jZW5kaWZcbiIsc3BlY3VsYXJtYXBfZnJhZ21lbnQ6ImZsb2F0IHNwZWN1bGFyU3RyZW5ndGg7XG4jaWZkZWYgVVNFX1NQRUNVTEFSTUFQXG5cdHZlYzQgdGV4ZWxTcGVjdWxhciA9IHRleHR1cmUyRCggc3BlY3VsYXJNYXAsIHZVdiApO1xuXHRzcGVjdWxhclN0cmVuZ3RoID0gdGV4ZWxTcGVjdWxhci5yO1xuI2Vsc2Vcblx0c3BlY3VsYXJTdHJlbmd0aCA9IDEuMDtcbiNlbmRpZiIsc3BlY3VsYXJtYXBfcGFyc19mcmFnbWVudDoiI2lmZGVmIFVTRV9TUEVDVUxBUk1BUFxuXHR1bmlmb3JtIHNhbXBsZXIyRCBzcGVjdWxhck1hcDtcbiNlbmRpZiIsdG9uZW1hcHBpbmdfZnJhZ21lbnQ6IiNpZiBkZWZpbmVkKCBUT05FX01BUFBJTkcgKVxuICBnbF9GcmFnQ29sb3IucmdiID0gdG9uZU1hcHBpbmcoIGdsX0ZyYWdDb2xvci5yZ2IgKTtcbiNlbmRpZlxuIix0b25lbWFwcGluZ19wYXJzX2ZyYWdtZW50OiIjZGVmaW5lIHNhdHVyYXRlKGEpIGNsYW1wKCBhLCAwLjAsIDEuMCApXG51bmlmb3JtIGZsb2F0IHRvbmVNYXBwaW5nRXhwb3N1cmU7XG51bmlmb3JtIGZsb2F0IHRvbmVNYXBwaW5nV2hpdGVQb2ludDtcbnZlYzMgTGluZWFyVG9uZU1hcHBpbmcoIHZlYzMgY29sb3IgKSB7XG4gIHJldHVybiB0b25lTWFwcGluZ0V4cG9zdXJlICogY29sb3I7XG59XG52ZWMzIFJlaW5oYXJkVG9uZU1hcHBpbmcoIHZlYzMgY29sb3IgKSB7XG4gIGNvbG9yICo9IHRvbmVNYXBwaW5nRXhwb3N1cmU7XG4gIHJldHVybiBzYXR1cmF0ZSggY29sb3IgLyAoIHZlYzMoIDEuMCApICsgY29sb3IgKSApO1xufVxuI2RlZmluZSBVbmNoYXJ0ZWQySGVscGVyKCB4ICkgbWF4KCAoICggeCAqICggMC4xNSAqIHggKyAwLjEwICogMC41MCApICsgMC4yMCAqIDAuMDIgKSAvICggeCAqICggMC4xNSAqIHggKyAwLjUwICkgKyAwLjIwICogMC4zMCApICkgLSAwLjAyIC8gMC4zMCwgdmVjMyggMC4wICkgKVxudmVjMyBVbmNoYXJ0ZWQyVG9uZU1hcHBpbmcoIHZlYzMgY29sb3IgKSB7XG4gIGNvbG9yICo9IHRvbmVNYXBwaW5nRXhwb3N1cmU7XG4gIHJldHVybiBzYXR1cmF0ZSggVW5jaGFydGVkMkhlbHBlciggY29sb3IgKSAvIFVuY2hhcnRlZDJIZWxwZXIoIHZlYzMoIHRvbmVNYXBwaW5nV2hpdGVQb2ludCApICkgKTtcbn1cbnZlYzMgT3B0aW1pemVkQ2luZW9uVG9uZU1hcHBpbmcoIHZlYzMgY29sb3IgKSB7XG4gIGNvbG9yICo9IHRvbmVNYXBwaW5nRXhwb3N1cmU7XG4gIGNvbG9yID0gbWF4KCB2ZWMzKCAwLjAgKSwgY29sb3IgLSAwLjAwNCApO1xuICByZXR1cm4gcG93KCAoIGNvbG9yICogKCA2LjIgKiBjb2xvciArIDAuNSApICkgLyAoIGNvbG9yICogKCA2LjIgKiBjb2xvciArIDEuNyApICsgMC4wNiApLCB2ZWMzKCAyLjIgKSApO1xufVxuIix1dl9wYXJzX2ZyYWdtZW50OiIjaWYgZGVmaW5lZCggVVNFX01BUCApIHx8IGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApIHx8IGRlZmluZWQoIFVTRV9TUEVDVUxBUk1BUCApIHx8IGRlZmluZWQoIFVTRV9BTFBIQU1BUCApIHx8IGRlZmluZWQoIFVTRV9FTUlTU0lWRU1BUCApIHx8IGRlZmluZWQoIFVTRV9ST1VHSE5FU1NNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTUVUQUxORVNTTUFQIClcblx0dmFyeWluZyB2ZWMyIHZVdjtcbiNlbmRpZiIsdXZfcGFyc192ZXJ0ZXg6IiNpZiBkZWZpbmVkKCBVU0VfTUFQICkgfHwgZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTk9STUFMTUFQICkgfHwgZGVmaW5lZCggVVNFX1NQRUNVTEFSTUFQICkgfHwgZGVmaW5lZCggVVNFX0FMUEhBTUFQICkgfHwgZGVmaW5lZCggVVNFX0VNSVNTSVZFTUFQICkgfHwgZGVmaW5lZCggVVNFX1JPVUdITkVTU01BUCApIHx8IGRlZmluZWQoIFVTRV9NRVRBTE5FU1NNQVAgKVxuXHR2YXJ5aW5nIHZlYzIgdlV2O1xuXHR1bmlmb3JtIHZlYzQgb2Zmc2V0UmVwZWF0O1xuI2VuZGlmXG4iLHV2X3ZlcnRleDoiI2lmIGRlZmluZWQoIFVTRV9NQVAgKSB8fCBkZWZpbmVkKCBVU0VfQlVNUE1BUCApIHx8IGRlZmluZWQoIFVTRV9OT1JNQUxNQVAgKSB8fCBkZWZpbmVkKCBVU0VfU1BFQ1VMQVJNQVAgKSB8fCBkZWZpbmVkKCBVU0VfQUxQSEFNQVAgKSB8fCBkZWZpbmVkKCBVU0VfRU1JU1NJVkVNQVAgKSB8fCBkZWZpbmVkKCBVU0VfUk9VR0hORVNTTUFQICkgfHwgZGVmaW5lZCggVVNFX01FVEFMTkVTU01BUCApXG5cdHZVdiA9IHV2ICogb2Zmc2V0UmVwZWF0Lnp3ICsgb2Zmc2V0UmVwZWF0Lnh5O1xuI2VuZGlmIix1djJfcGFyc19mcmFnbWVudDoiI2lmIGRlZmluZWQoIFVTRV9MSUdIVE1BUCApIHx8IGRlZmluZWQoIFVTRV9BT01BUCApXG5cdHZhcnlpbmcgdmVjMiB2VXYyO1xuI2VuZGlmIix1djJfcGFyc192ZXJ0ZXg6IiNpZiBkZWZpbmVkKCBVU0VfTElHSFRNQVAgKSB8fCBkZWZpbmVkKCBVU0VfQU9NQVAgKVxuXHRhdHRyaWJ1dGUgdmVjMiB1djI7XG5cdHZhcnlpbmcgdmVjMiB2VXYyO1xuI2VuZGlmIix1djJfdmVydGV4OiIjaWYgZGVmaW5lZCggVVNFX0xJR0hUTUFQICkgfHwgZGVmaW5lZCggVVNFX0FPTUFQIClcblx0dlV2MiA9IHV2MjtcbiNlbmRpZiIsd29ybGRwb3NfdmVydGV4OiIjaWYgZGVmaW5lZCggVVNFX0VOVk1BUCApIHx8IGRlZmluZWQoIFBIT05HICkgfHwgZGVmaW5lZCggUEhZU0lDQUwgKSB8fCBkZWZpbmVkKCBMQU1CRVJUICkgfHwgZGVmaW5lZCAoIFVTRV9TSEFET1dNQVAgKVxuXHQjaWZkZWYgVVNFX1NLSU5OSU5HXG5cdFx0dmVjNCB3b3JsZFBvc2l0aW9uID0gbW9kZWxNYXRyaXggKiBza2lubmVkO1xuXHQjZWxzZVxuXHRcdHZlYzQgd29ybGRQb3NpdGlvbiA9IG1vZGVsTWF0cml4ICogdmVjNCggdHJhbnNmb3JtZWQsIDEuMCApO1xuXHQjZW5kaWZcbiNlbmRpZlxuIixjdWJlX2ZyYWc6InVuaWZvcm0gc2FtcGxlckN1YmUgdEN1YmU7XG51bmlmb3JtIGZsb2F0IHRGbGlwO1xudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xudmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xuI2luY2x1ZGUgPGNvbW1vbj5cbnZvaWQgbWFpbigpIHtcblx0Z2xfRnJhZ0NvbG9yID0gdGV4dHVyZUN1YmUoIHRDdWJlLCB2ZWMzKCB0RmxpcCAqIHZXb3JsZFBvc2l0aW9uLngsIHZXb3JsZFBvc2l0aW9uLnl6ICkgKTtcblx0Z2xfRnJhZ0NvbG9yLmEgKj0gb3BhY2l0eTtcbn1cbiIsY3ViZV92ZXJ0OiJ2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XG4jaW5jbHVkZSA8Y29tbW9uPlxudm9pZCBtYWluKCkge1xuXHR2V29ybGRQb3NpdGlvbiA9IHRyYW5zZm9ybURpcmVjdGlvbiggcG9zaXRpb24sIG1vZGVsTWF0cml4ICk7XG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxwcm9qZWN0X3ZlcnRleD5cbn1cbiIsZGVwdGhfZnJhZzoiI2lmIERFUFRIX1BBQ0tJTkcgPT0gMzIwMFxuXHR1bmlmb3JtIGZsb2F0IG9wYWNpdHk7XG4jZW5kaWZcbiNpbmNsdWRlIDxjb21tb24+XG4jaW5jbHVkZSA8cGFja2luZz5cbiNpbmNsdWRlIDx1dl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPG1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGFscGhhbWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bG9nZGVwdGhidWZfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc19mcmFnbWVudD5cbnZvaWQgbWFpbigpIHtcblx0I2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19mcmFnbWVudD5cblx0dmVjNCBkaWZmdXNlQ29sb3IgPSB2ZWM0KCAxLjAgKTtcblx0I2lmIERFUFRIX1BBQ0tJTkcgPT0gMzIwMFxuXHRcdGRpZmZ1c2VDb2xvci5hID0gb3BhY2l0eTtcblx0I2VuZGlmXG5cdCNpbmNsdWRlIDxtYXBfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxhbHBoYW1hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGFscGhhdGVzdF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGxvZ2RlcHRoYnVmX2ZyYWdtZW50PlxuXHQjaWYgREVQVEhfUEFDS0lORyA9PSAzMjAwXG5cdFx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggdmVjMyggZ2xfRnJhZ0Nvb3JkLnogKSwgb3BhY2l0eSApO1xuXHQjZWxpZiBERVBUSF9QQUNLSU5HID09IDMyMDFcblx0XHRnbF9GcmFnQ29sb3IgPSBwYWNrRGVwdGhUb1JHQkEoIGdsX0ZyYWdDb29yZC56ICk7XG5cdCNlbmRpZlxufVxuIixkZXB0aF92ZXJ0OiIjaW5jbHVkZSA8Y29tbW9uPlxuI2luY2x1ZGUgPHV2X3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGRpc3BsYWNlbWVudG1hcF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxtb3JwaHRhcmdldF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxza2lubmluZ19wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc192ZXJ0ZXg+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDx1dl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2luYmFzZV92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxkaXNwbGFjZW1lbnRtYXBfdmVydGV4PlxuXHQjaW5jbHVkZSA8bW9ycGh0YXJnZXRfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbm5pbmdfdmVydGV4PlxuXHQjaW5jbHVkZSA8cHJvamVjdF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfdmVydGV4PlxufVxuIixkaXN0YW5jZVJHQkFfZnJhZzoidW5pZm9ybSB2ZWMzIGxpZ2h0UG9zO1xudmFyeWluZyB2ZWM0IHZXb3JsZFBvc2l0aW9uO1xuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDxwYWNraW5nPlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX2ZyYWdtZW50Plxudm9pZCBtYWluICgpIHtcblx0I2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19mcmFnbWVudD5cblx0Z2xfRnJhZ0NvbG9yID0gcGFja0RlcHRoVG9SR0JBKCBsZW5ndGgoIHZXb3JsZFBvc2l0aW9uLnh5eiAtIGxpZ2h0UG9zLnh5eiApIC8gMTAwMC4wICk7XG59XG4iLGRpc3RhbmNlUkdCQV92ZXJ0OiJ2YXJ5aW5nIHZlYzQgdldvcmxkUG9zaXRpb247XG4jaW5jbHVkZSA8Y29tbW9uPlxuI2luY2x1ZGUgPG1vcnBodGFyZ2V0X3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPHNraW5uaW5nX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX3ZlcnRleD5cbnZvaWQgbWFpbigpIHtcblx0I2luY2x1ZGUgPHNraW5iYXNlX3ZlcnRleD5cblx0I2luY2x1ZGUgPGJlZ2luX3ZlcnRleD5cblx0I2luY2x1ZGUgPG1vcnBodGFyZ2V0X3ZlcnRleD5cblx0I2luY2x1ZGUgPHNraW5uaW5nX3ZlcnRleD5cblx0I2luY2x1ZGUgPHByb2plY3RfdmVydGV4PlxuXHQjaW5jbHVkZSA8d29ybGRwb3NfdmVydGV4PlxuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX3ZlcnRleD5cblx0dldvcmxkUG9zaXRpb24gPSB3b3JsZFBvc2l0aW9uO1xufVxuIixlcXVpcmVjdF9mcmFnOiJ1bmlmb3JtIHNhbXBsZXIyRCB0RXF1aXJlY3Q7XG51bmlmb3JtIGZsb2F0IHRGbGlwO1xudmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xuI2luY2x1ZGUgPGNvbW1vbj5cbnZvaWQgbWFpbigpIHtcblx0dmVjMyBkaXJlY3Rpb24gPSBub3JtYWxpemUoIHZXb3JsZFBvc2l0aW9uICk7XG5cdHZlYzIgc2FtcGxlVVY7XG5cdHNhbXBsZVVWLnkgPSBzYXR1cmF0ZSggdEZsaXAgKiBkaXJlY3Rpb24ueSAqIC0wLjUgKyAwLjUgKTtcblx0c2FtcGxlVVYueCA9IGF0YW4oIGRpcmVjdGlvbi56LCBkaXJlY3Rpb24ueCApICogUkVDSVBST0NBTF9QSTIgKyAwLjU7XG5cdGdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCggdEVxdWlyZWN0LCBzYW1wbGVVViApO1xufVxuIixlcXVpcmVjdF92ZXJ0OiJ2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XG4jaW5jbHVkZSA8Y29tbW9uPlxudm9pZCBtYWluKCkge1xuXHR2V29ybGRQb3NpdGlvbiA9IHRyYW5zZm9ybURpcmVjdGlvbiggcG9zaXRpb24sIG1vZGVsTWF0cml4ICk7XG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxwcm9qZWN0X3ZlcnRleD5cbn1cbiIsbGluZWRhc2hlZF9mcmFnOiJ1bmlmb3JtIHZlYzMgZGlmZnVzZTtcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcbnVuaWZvcm0gZmxvYXQgZGFzaFNpemU7XG51bmlmb3JtIGZsb2F0IHRvdGFsU2l6ZTtcbnZhcnlpbmcgZmxvYXQgdkxpbmVEaXN0YW5jZTtcbiNpbmNsdWRlIDxjb21tb24+XG4jaW5jbHVkZSA8Y29sb3JfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxmb2dfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX2ZyYWdtZW50Plxudm9pZCBtYWluKCkge1xuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX2ZyYWdtZW50PlxuXHRpZiAoIG1vZCggdkxpbmVEaXN0YW5jZSwgdG90YWxTaXplICkgPiBkYXNoU2l6ZSApIHtcblx0XHRkaXNjYXJkO1xuXHR9XG5cdHZlYzMgb3V0Z29pbmdMaWdodCA9IHZlYzMoIDAuMCApO1xuXHR2ZWM0IGRpZmZ1c2VDb2xvciA9IHZlYzQoIGRpZmZ1c2UsIG9wYWNpdHkgKTtcblx0I2luY2x1ZGUgPGxvZ2RlcHRoYnVmX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8Y29sb3JfZnJhZ21lbnQ+XG5cdG91dGdvaW5nTGlnaHQgPSBkaWZmdXNlQ29sb3IucmdiO1xuXHRnbF9GcmFnQ29sb3IgPSB2ZWM0KCBvdXRnb2luZ0xpZ2h0LCBkaWZmdXNlQ29sb3IuYSApO1xuXHQjaW5jbHVkZSA8cHJlbXVsdGlwbGllZF9hbHBoYV9mcmFnbWVudD5cblx0I2luY2x1ZGUgPHRvbmVtYXBwaW5nX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8ZW5jb2RpbmdzX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8Zm9nX2ZyYWdtZW50PlxufVxuIixsaW5lZGFzaGVkX3ZlcnQ6InVuaWZvcm0gZmxvYXQgc2NhbGU7XG5hdHRyaWJ1dGUgZmxvYXQgbGluZURpc3RhbmNlO1xudmFyeWluZyBmbG9hdCB2TGluZURpc3RhbmNlO1xuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDxjb2xvcl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc192ZXJ0ZXg+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDxjb2xvcl92ZXJ0ZXg+XG5cdHZMaW5lRGlzdGFuY2UgPSBzY2FsZSAqIGxpbmVEaXN0YW5jZTtcblx0dmVjNCBtdlBvc2l0aW9uID0gbW9kZWxWaWV3TWF0cml4ICogdmVjNCggcG9zaXRpb24sIDEuMCApO1xuXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtdlBvc2l0aW9uO1xuXHQjaW5jbHVkZSA8bG9nZGVwdGhidWZfdmVydGV4PlxuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX3ZlcnRleD5cbn1cbiIsbWVzaGJhc2ljX2ZyYWc6InVuaWZvcm0gdmVjMyBkaWZmdXNlO1xudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcbiNlbmRpZlxuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDxjb2xvcl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPHV2X3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8dXYyX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8YWxwaGFtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxhb21hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8ZW52bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8Zm9nX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8c3BlY3VsYXJtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX2ZyYWdtZW50Plxudm9pZCBtYWluKCkge1xuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX2ZyYWdtZW50PlxuXHR2ZWM0IGRpZmZ1c2VDb2xvciA9IHZlYzQoIGRpZmZ1c2UsIG9wYWNpdHkgKTtcblx0I2luY2x1ZGUgPGxvZ2RlcHRoYnVmX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8bWFwX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8Y29sb3JfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxhbHBoYW1hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGFscGhhdGVzdF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPHNwZWN1bGFybWFwX2ZyYWdtZW50PlxuXHRSZWZsZWN0ZWRMaWdodCByZWZsZWN0ZWRMaWdodCA9IFJlZmxlY3RlZExpZ2h0KCB2ZWMzKCAwLjAgKSwgdmVjMyggMC4wICksIHZlYzMoIDAuMCApLCB2ZWMzKCAwLjAgKSApO1xuXHQjaWZkZWYgVVNFX0xJR0hUTUFQXG5cdFx0cmVmbGVjdGVkTGlnaHQuaW5kaXJlY3REaWZmdXNlICs9IHRleHR1cmUyRCggbGlnaHRNYXAsIHZVdjIgKS54eXogKiBsaWdodE1hcEludGVuc2l0eTtcblx0I2Vsc2Vcblx0XHRyZWZsZWN0ZWRMaWdodC5pbmRpcmVjdERpZmZ1c2UgKz0gdmVjMyggMS4wICk7XG5cdCNlbmRpZlxuXHQjaW5jbHVkZSA8YW9tYXBfZnJhZ21lbnQ+XG5cdHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0RGlmZnVzZSAqPSBkaWZmdXNlQ29sb3IucmdiO1xuXHR2ZWMzIG91dGdvaW5nTGlnaHQgPSByZWZsZWN0ZWRMaWdodC5pbmRpcmVjdERpZmZ1c2U7XG5cdCNpbmNsdWRlIDxub3JtYWxfZmxpcD5cblx0I2luY2x1ZGUgPGVudm1hcF9mcmFnbWVudD5cblx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggb3V0Z29pbmdMaWdodCwgZGlmZnVzZUNvbG9yLmEgKTtcblx0I2luY2x1ZGUgPHByZW11bHRpcGxpZWRfYWxwaGFfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cblx0I2luY2x1ZGUgPGVuY29kaW5nc19mcmFnbWVudD5cblx0I2luY2x1ZGUgPGZvZ19mcmFnbWVudD5cbn1cbiIsbWVzaGJhc2ljX3ZlcnQ6IiNpbmNsdWRlIDxjb21tb24+XG4jaW5jbHVkZSA8dXZfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8dXYyX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGVudm1hcF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxjb2xvcl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxtb3JwaHRhcmdldF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxza2lubmluZ19wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc192ZXJ0ZXg+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDx1dl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDx1djJfdmVydGV4PlxuXHQjaW5jbHVkZSA8Y29sb3JfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbmJhc2VfdmVydGV4PlxuXHQjaWZkZWYgVVNFX0VOVk1BUFxuXHQjaW5jbHVkZSA8YmVnaW5ub3JtYWxfdmVydGV4PlxuXHQjaW5jbHVkZSA8bW9ycGhub3JtYWxfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbm5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxkZWZhdWx0bm9ybWFsX3ZlcnRleD5cblx0I2VuZGlmXG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxtb3JwaHRhcmdldF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2lubmluZ192ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxwcm9qZWN0X3ZlcnRleD5cblx0I2luY2x1ZGUgPGxvZ2RlcHRoYnVmX3ZlcnRleD5cblx0I2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cblx0I2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc192ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxlbnZtYXBfdmVydGV4PlxufVxuIixtZXNobGFtYmVydF9mcmFnOiJ1bmlmb3JtIHZlYzMgZGlmZnVzZTtcbnVuaWZvcm0gdmVjMyBlbWlzc2l2ZTtcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcbnZhcnlpbmcgdmVjMyB2TGlnaHRGcm9udDtcbiNpZmRlZiBET1VCTEVfU0lERURcblx0dmFyeWluZyB2ZWMzIHZMaWdodEJhY2s7XG4jZW5kaWZcbiNpbmNsdWRlIDxjb21tb24+XG4jaW5jbHVkZSA8cGFja2luZz5cbiNpbmNsdWRlIDxjb2xvcl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPHV2X3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8dXYyX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8YWxwaGFtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxhb21hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8ZW1pc3NpdmVtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxlbnZtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxic2Rmcz5cbiNpbmNsdWRlIDxsaWdodHNfcGFycz5cbiNpbmNsdWRlIDxmb2dfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxzaGFkb3dtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxzaGFkb3dtYXNrX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8c3BlY3VsYXJtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX2ZyYWdtZW50Plxudm9pZCBtYWluKCkge1xuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX2ZyYWdtZW50PlxuXHR2ZWM0IGRpZmZ1c2VDb2xvciA9IHZlYzQoIGRpZmZ1c2UsIG9wYWNpdHkgKTtcblx0UmVmbGVjdGVkTGlnaHQgcmVmbGVjdGVkTGlnaHQgPSBSZWZsZWN0ZWRMaWdodCggdmVjMyggMC4wICksIHZlYzMoIDAuMCApLCB2ZWMzKCAwLjAgKSwgdmVjMyggMC4wICkgKTtcblx0dmVjMyB0b3RhbEVtaXNzaXZlUmFkaWFuY2UgPSBlbWlzc2l2ZTtcblx0I2luY2x1ZGUgPGxvZ2RlcHRoYnVmX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8bWFwX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8Y29sb3JfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxhbHBoYW1hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGFscGhhdGVzdF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPHNwZWN1bGFybWFwX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8ZW1pc3NpdmVtYXBfZnJhZ21lbnQ+XG5cdHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0RGlmZnVzZSA9IGdldEFtYmllbnRMaWdodElycmFkaWFuY2UoIGFtYmllbnRMaWdodENvbG9yICk7XG5cdCNpbmNsdWRlIDxsaWdodG1hcF9mcmFnbWVudD5cblx0cmVmbGVjdGVkTGlnaHQuaW5kaXJlY3REaWZmdXNlICo9IEJSREZfRGlmZnVzZV9MYW1iZXJ0KCBkaWZmdXNlQ29sb3IucmdiICk7XG5cdCNpZmRlZiBET1VCTEVfU0lERURcblx0XHRyZWZsZWN0ZWRMaWdodC5kaXJlY3REaWZmdXNlID0gKCBnbF9Gcm9udEZhY2luZyApID8gdkxpZ2h0RnJvbnQgOiB2TGlnaHRCYWNrO1xuXHQjZWxzZVxuXHRcdHJlZmxlY3RlZExpZ2h0LmRpcmVjdERpZmZ1c2UgPSB2TGlnaHRGcm9udDtcblx0I2VuZGlmXG5cdHJlZmxlY3RlZExpZ2h0LmRpcmVjdERpZmZ1c2UgKj0gQlJERl9EaWZmdXNlX0xhbWJlcnQoIGRpZmZ1c2VDb2xvci5yZ2IgKSAqIGdldFNoYWRvd01hc2soKTtcblx0I2luY2x1ZGUgPGFvbWFwX2ZyYWdtZW50PlxuXHR2ZWMzIG91dGdvaW5nTGlnaHQgPSByZWZsZWN0ZWRMaWdodC5kaXJlY3REaWZmdXNlICsgcmVmbGVjdGVkTGlnaHQuaW5kaXJlY3REaWZmdXNlICsgdG90YWxFbWlzc2l2ZVJhZGlhbmNlO1xuXHQjaW5jbHVkZSA8bm9ybWFsX2ZsaXA+XG5cdCNpbmNsdWRlIDxlbnZtYXBfZnJhZ21lbnQ+XG5cdGdsX0ZyYWdDb2xvciA9IHZlYzQoIG91dGdvaW5nTGlnaHQsIGRpZmZ1c2VDb2xvci5hICk7XG5cdCNpbmNsdWRlIDxwcmVtdWx0aXBsaWVkX2FscGhhX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8dG9uZW1hcHBpbmdfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxlbmNvZGluZ3NfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxmb2dfZnJhZ21lbnQ+XG59XG4iLG1lc2hsYW1iZXJ0X3ZlcnQ6IiNkZWZpbmUgTEFNQkVSVFxudmFyeWluZyB2ZWMzIHZMaWdodEZyb250O1xuI2lmZGVmIERPVUJMRV9TSURFRFxuXHR2YXJ5aW5nIHZlYzMgdkxpZ2h0QmFjaztcbiNlbmRpZlxuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDx1dl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDx1djJfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8ZW52bWFwX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGJzZGZzPlxuI2luY2x1ZGUgPGxpZ2h0c19wYXJzPlxuI2luY2x1ZGUgPGNvbG9yX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPG1vcnBodGFyZ2V0X3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPHNraW5uaW5nX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPHNoYWRvd21hcF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc192ZXJ0ZXg+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDx1dl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDx1djJfdmVydGV4PlxuXHQjaW5jbHVkZSA8Y29sb3JfdmVydGV4PlxuXHQjaW5jbHVkZSA8YmVnaW5ub3JtYWxfdmVydGV4PlxuXHQjaW5jbHVkZSA8bW9ycGhub3JtYWxfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbmJhc2VfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbm5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxkZWZhdWx0bm9ybWFsX3ZlcnRleD5cblx0I2luY2x1ZGUgPGJlZ2luX3ZlcnRleD5cblx0I2luY2x1ZGUgPG1vcnBodGFyZ2V0X3ZlcnRleD5cblx0I2luY2x1ZGUgPHNraW5uaW5nX3ZlcnRleD5cblx0I2luY2x1ZGUgPHByb2plY3RfdmVydGV4PlxuXHQjaW5jbHVkZSA8bG9nZGVwdGhidWZfdmVydGV4PlxuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX3ZlcnRleD5cblx0I2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cblx0I2luY2x1ZGUgPGVudm1hcF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxsaWdodHNfbGFtYmVydF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxzaGFkb3dtYXBfdmVydGV4PlxufVxuIixtZXNocGhvbmdfZnJhZzoiI2RlZmluZSBQSE9OR1xudW5pZm9ybSB2ZWMzIGRpZmZ1c2U7XG51bmlmb3JtIHZlYzMgZW1pc3NpdmU7XG51bmlmb3JtIHZlYzMgc3BlY3VsYXI7XG51bmlmb3JtIGZsb2F0IHNoaW5pbmVzcztcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcbiNpbmNsdWRlIDxjb21tb24+XG4jaW5jbHVkZSA8cGFja2luZz5cbiNpbmNsdWRlIDxjb2xvcl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPHV2X3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8dXYyX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8YWxwaGFtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxhb21hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8ZW1pc3NpdmVtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxlbnZtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxncmFkaWVudG1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGZvZ19wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGJzZGZzPlxuI2luY2x1ZGUgPGxpZ2h0c19wYXJzPlxuI2luY2x1ZGUgPGxpZ2h0c19waG9uZ19wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPHNoYWRvd21hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGJ1bXBtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxub3JtYWxtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxzcGVjdWxhcm1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGxvZ2RlcHRoYnVmX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX3BhcnNfZnJhZ21lbnQ+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfZnJhZ21lbnQ+XG5cdHZlYzQgZGlmZnVzZUNvbG9yID0gdmVjNCggZGlmZnVzZSwgb3BhY2l0eSApO1xuXHRSZWZsZWN0ZWRMaWdodCByZWZsZWN0ZWRMaWdodCA9IFJlZmxlY3RlZExpZ2h0KCB2ZWMzKCAwLjAgKSwgdmVjMyggMC4wICksIHZlYzMoIDAuMCApLCB2ZWMzKCAwLjAgKSApO1xuXHR2ZWMzIHRvdGFsRW1pc3NpdmVSYWRpYW5jZSA9IGVtaXNzaXZlO1xuXHQjaW5jbHVkZSA8bG9nZGVwdGhidWZfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxtYXBfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxjb2xvcl9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGFscGhhbWFwX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8YWxwaGF0ZXN0X2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8c3BlY3VsYXJtYXBfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxub3JtYWxfZmxpcD5cblx0I2luY2x1ZGUgPG5vcm1hbF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGVtaXNzaXZlbWFwX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8bGlnaHRzX3Bob25nX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8bGlnaHRzX3RlbXBsYXRlPlxuXHQjaW5jbHVkZSA8YW9tYXBfZnJhZ21lbnQ+XG5cdHZlYzMgb3V0Z29pbmdMaWdodCA9IHJlZmxlY3RlZExpZ2h0LmRpcmVjdERpZmZ1c2UgKyByZWZsZWN0ZWRMaWdodC5pbmRpcmVjdERpZmZ1c2UgKyByZWZsZWN0ZWRMaWdodC5kaXJlY3RTcGVjdWxhciArIHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0U3BlY3VsYXIgKyB0b3RhbEVtaXNzaXZlUmFkaWFuY2U7XG5cdCNpbmNsdWRlIDxlbnZtYXBfZnJhZ21lbnQ+XG5cdGdsX0ZyYWdDb2xvciA9IHZlYzQoIG91dGdvaW5nTGlnaHQsIGRpZmZ1c2VDb2xvci5hICk7XG5cdCNpbmNsdWRlIDxwcmVtdWx0aXBsaWVkX2FscGhhX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8dG9uZW1hcHBpbmdfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxlbmNvZGluZ3NfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxmb2dfZnJhZ21lbnQ+XG59XG4iLG1lc2hwaG9uZ192ZXJ0OiIjZGVmaW5lIFBIT05HXG52YXJ5aW5nIHZlYzMgdlZpZXdQb3NpdGlvbjtcbiNpZm5kZWYgRkxBVF9TSEFERURcblx0dmFyeWluZyB2ZWMzIHZOb3JtYWw7XG4jZW5kaWZcbiNpbmNsdWRlIDxjb21tb24+XG4jaW5jbHVkZSA8dXZfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8dXYyX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGRpc3BsYWNlbWVudG1hcF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxlbnZtYXBfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8Y29sb3JfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8bW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8c2tpbm5pbmdfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8c2hhZG93bWFwX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX3ZlcnRleD5cbnZvaWQgbWFpbigpIHtcblx0I2luY2x1ZGUgPHV2X3ZlcnRleD5cblx0I2luY2x1ZGUgPHV2Ml92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxjb2xvcl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxiZWdpbm5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxtb3JwaG5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2luYmFzZV92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2lubm9ybWFsX3ZlcnRleD5cblx0I2luY2x1ZGUgPGRlZmF1bHRub3JtYWxfdmVydGV4PlxuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2Tm9ybWFsID0gbm9ybWFsaXplKCB0cmFuc2Zvcm1lZE5vcm1hbCApO1xuI2VuZGlmXG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxkaXNwbGFjZW1lbnRtYXBfdmVydGV4PlxuXHQjaW5jbHVkZSA8bW9ycGh0YXJnZXRfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbm5pbmdfdmVydGV4PlxuXHQjaW5jbHVkZSA8cHJvamVjdF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfdmVydGV4PlxuXHR2Vmlld1Bvc2l0aW9uID0gLSBtdlBvc2l0aW9uLnh5ejtcblx0I2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cblx0I2luY2x1ZGUgPGVudm1hcF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxzaGFkb3dtYXBfdmVydGV4PlxufVxuIixtZXNocGh5c2ljYWxfZnJhZzoiI2RlZmluZSBQSFlTSUNBTFxudW5pZm9ybSB2ZWMzIGRpZmZ1c2U7XG51bmlmb3JtIHZlYzMgZW1pc3NpdmU7XG51bmlmb3JtIGZsb2F0IHJvdWdobmVzcztcbnVuaWZvcm0gZmxvYXQgbWV0YWxuZXNzO1xudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xuI2lmbmRlZiBTVEFOREFSRFxuXHR1bmlmb3JtIGZsb2F0IGNsZWFyQ29hdDtcblx0dW5pZm9ybSBmbG9hdCBjbGVhckNvYXRSb3VnaG5lc3M7XG4jZW5kaWZcbnZhcnlpbmcgdmVjMyB2Vmlld1Bvc2l0aW9uO1xuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcbiNlbmRpZlxuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDxwYWNraW5nPlxuI2luY2x1ZGUgPGNvbG9yX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8dXZfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDx1djJfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxhbHBoYW1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGFvbWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bGlnaHRtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxlbWlzc2l2ZW1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGVudm1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGZvZ19wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGJzZGZzPlxuI2luY2x1ZGUgPGN1YmVfdXZfcmVmbGVjdGlvbl9mcmFnbWVudD5cbiNpbmNsdWRlIDxsaWdodHNfcGFycz5cbiNpbmNsdWRlIDxsaWdodHNfcGh5c2ljYWxfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxzaGFkb3dtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxidW1wbWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bm9ybWFsbWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8cm91Z2huZXNzbWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bWV0YWxuZXNzbWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bG9nZGVwdGhidWZfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc19mcmFnbWVudD5cbnZvaWQgbWFpbigpIHtcblx0I2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19mcmFnbWVudD5cblx0dmVjNCBkaWZmdXNlQ29sb3IgPSB2ZWM0KCBkaWZmdXNlLCBvcGFjaXR5ICk7XG5cdFJlZmxlY3RlZExpZ2h0IHJlZmxlY3RlZExpZ2h0ID0gUmVmbGVjdGVkTGlnaHQoIHZlYzMoIDAuMCApLCB2ZWMzKCAwLjAgKSwgdmVjMyggMC4wICksIHZlYzMoIDAuMCApICk7XG5cdHZlYzMgdG90YWxFbWlzc2l2ZVJhZGlhbmNlID0gZW1pc3NpdmU7XG5cdCNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9mcmFnbWVudD5cblx0I2luY2x1ZGUgPG1hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGNvbG9yX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8YWxwaGFtYXBfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxhbHBoYXRlc3RfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxzcGVjdWxhcm1hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPHJvdWdobmVzc21hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPG1ldGFsbmVzc21hcF9mcmFnbWVudD5cblx0I2luY2x1ZGUgPG5vcm1hbF9mbGlwPlxuXHQjaW5jbHVkZSA8bm9ybWFsX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8ZW1pc3NpdmVtYXBfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxsaWdodHNfcGh5c2ljYWxfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxsaWdodHNfdGVtcGxhdGU+XG5cdCNpbmNsdWRlIDxhb21hcF9mcmFnbWVudD5cblx0dmVjMyBvdXRnb2luZ0xpZ2h0ID0gcmVmbGVjdGVkTGlnaHQuZGlyZWN0RGlmZnVzZSArIHJlZmxlY3RlZExpZ2h0LmluZGlyZWN0RGlmZnVzZSArIHJlZmxlY3RlZExpZ2h0LmRpcmVjdFNwZWN1bGFyICsgcmVmbGVjdGVkTGlnaHQuaW5kaXJlY3RTcGVjdWxhciArIHRvdGFsRW1pc3NpdmVSYWRpYW5jZTtcblx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggb3V0Z29pbmdMaWdodCwgZGlmZnVzZUNvbG9yLmEgKTtcblx0I2luY2x1ZGUgPHByZW11bHRpcGxpZWRfYWxwaGFfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cblx0I2luY2x1ZGUgPGVuY29kaW5nc19mcmFnbWVudD5cblx0I2luY2x1ZGUgPGZvZ19mcmFnbWVudD5cbn1cbiIsbWVzaHBoeXNpY2FsX3ZlcnQ6IiNkZWZpbmUgUEhZU0lDQUxcbnZhcnlpbmcgdmVjMyB2Vmlld1Bvc2l0aW9uO1xuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcbiNlbmRpZlxuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDx1dl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDx1djJfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8ZGlzcGxhY2VtZW50bWFwX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGNvbG9yX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPG1vcnBodGFyZ2V0X3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPHNraW5uaW5nX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPHNoYWRvd21hcF9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxzcGVjdWxhcm1hcF9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4PlxuI2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19wYXJzX3ZlcnRleD5cbnZvaWQgbWFpbigpIHtcblx0I2luY2x1ZGUgPHV2X3ZlcnRleD5cblx0I2luY2x1ZGUgPHV2Ml92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxjb2xvcl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxiZWdpbm5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxtb3JwaG5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2luYmFzZV92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2lubm9ybWFsX3ZlcnRleD5cblx0I2luY2x1ZGUgPGRlZmF1bHRub3JtYWxfdmVydGV4PlxuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2Tm9ybWFsID0gbm9ybWFsaXplKCB0cmFuc2Zvcm1lZE5vcm1hbCApO1xuI2VuZGlmXG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxkaXNwbGFjZW1lbnRtYXBfdmVydGV4PlxuXHQjaW5jbHVkZSA8bW9ycGh0YXJnZXRfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbm5pbmdfdmVydGV4PlxuXHQjaW5jbHVkZSA8cHJvamVjdF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfdmVydGV4PlxuXHR2Vmlld1Bvc2l0aW9uID0gLSBtdlBvc2l0aW9uLnh5ejtcblx0I2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cblx0I2luY2x1ZGUgPHNoYWRvd21hcF92ZXJ0ZXg+XG59XG4iLG5vcm1hbF9mcmFnOiIjZGVmaW5lIE5PUk1BTFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xuI2lmIGRlZmluZWQoIEZMQVRfU0hBREVEICApIHx8IGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApXG5cdHZhcnlpbmcgdmVjMyB2Vmlld1Bvc2l0aW9uO1xuI2VuZGlmXG4jaWZuZGVmIEZMQVRfU0hBREVEXG5cdHZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xuI2VuZGlmXG4jaW5jbHVkZSA8cGFja2luZz5cbiNpbmNsdWRlIDx1dl9wYXJzX2ZyYWdtZW50PlxuI2luY2x1ZGUgPGJ1bXBtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxub3JtYWxtYXBfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50Plxudm9pZCBtYWluKCkge1xuXHQjaW5jbHVkZSA8bG9nZGVwdGhidWZfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxub3JtYWxfZmxpcD5cblx0I2luY2x1ZGUgPG5vcm1hbF9mcmFnbWVudD5cblx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggcGFja05vcm1hbFRvUkdCKCBub3JtYWwgKSwgb3BhY2l0eSApO1xuXHQjaW5jbHVkZSA8cHJlbXVsdGlwbGllZF9hbHBoYV9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGVuY29kaW5nc19mcmFnbWVudD5cbn1cbiIsbm9ybWFsX3ZlcnQ6IiNkZWZpbmUgTk9STUFMXG4jaWYgZGVmaW5lZCggRkxBVF9TSEFERUQgICkgfHwgZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTk9STUFMTUFQIClcblx0dmFyeWluZyB2ZWMzIHZWaWV3UG9zaXRpb247XG4jZW5kaWZcbiNpZm5kZWYgRkxBVF9TSEFERURcblx0dmFyeWluZyB2ZWMzIHZOb3JtYWw7XG4jZW5kaWZcbiNpbmNsdWRlIDx1dl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxkaXNwbGFjZW1lbnRtYXBfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8bW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8c2tpbm5pbmdfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8bG9nZGVwdGhidWZfcGFyc192ZXJ0ZXg+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDx1dl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxiZWdpbm5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxtb3JwaG5vcm1hbF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2luYmFzZV92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxza2lubm9ybWFsX3ZlcnRleD5cblx0I2luY2x1ZGUgPGRlZmF1bHRub3JtYWxfdmVydGV4PlxuI2lmbmRlZiBGTEFUX1NIQURFRFxuXHR2Tm9ybWFsID0gbm9ybWFsaXplKCB0cmFuc2Zvcm1lZE5vcm1hbCApO1xuI2VuZGlmXG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxkaXNwbGFjZW1lbnRtYXBfdmVydGV4PlxuXHQjaW5jbHVkZSA8bW9ycGh0YXJnZXRfdmVydGV4PlxuXHQjaW5jbHVkZSA8c2tpbm5pbmdfdmVydGV4PlxuXHQjaW5jbHVkZSA8cHJvamVjdF92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxsb2dkZXB0aGJ1Zl92ZXJ0ZXg+XG4jaWYgZGVmaW5lZCggRkxBVF9TSEFERUQgICkgfHwgZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTk9STUFMTUFQIClcblx0dlZpZXdQb3NpdGlvbiA9IC0gbXZQb3NpdGlvbi54eXo7XG4jZW5kaWZcbn1cbiIscG9pbnRzX2ZyYWc6InVuaWZvcm0gdmVjMyBkaWZmdXNlO1xudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDxwYWNraW5nPlxuI2luY2x1ZGUgPGNvbG9yX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bWFwX3BhcnRpY2xlX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8Zm9nX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8c2hhZG93bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8bG9nZGVwdGhidWZfcGFyc19mcmFnbWVudD5cbiNpbmNsdWRlIDxjbGlwcGluZ19wbGFuZXNfcGFyc19mcmFnbWVudD5cbnZvaWQgbWFpbigpIHtcblx0I2luY2x1ZGUgPGNsaXBwaW5nX3BsYW5lc19mcmFnbWVudD5cblx0dmVjMyBvdXRnb2luZ0xpZ2h0ID0gdmVjMyggMC4wICk7XG5cdHZlYzQgZGlmZnVzZUNvbG9yID0gdmVjNCggZGlmZnVzZSwgb3BhY2l0eSApO1xuXHQjaW5jbHVkZSA8bG9nZGVwdGhidWZfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxtYXBfcGFydGljbGVfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxjb2xvcl9mcmFnbWVudD5cblx0I2luY2x1ZGUgPGFscGhhdGVzdF9mcmFnbWVudD5cblx0b3V0Z29pbmdMaWdodCA9IGRpZmZ1c2VDb2xvci5yZ2I7XG5cdGdsX0ZyYWdDb2xvciA9IHZlYzQoIG91dGdvaW5nTGlnaHQsIGRpZmZ1c2VDb2xvci5hICk7XG5cdCNpbmNsdWRlIDxwcmVtdWx0aXBsaWVkX2FscGhhX2ZyYWdtZW50PlxuXHQjaW5jbHVkZSA8dG9uZW1hcHBpbmdfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxlbmNvZGluZ3NfZnJhZ21lbnQ+XG5cdCNpbmNsdWRlIDxmb2dfZnJhZ21lbnQ+XG59XG4iLHBvaW50c192ZXJ0OiJ1bmlmb3JtIGZsb2F0IHNpemU7XG51bmlmb3JtIGZsb2F0IHNjYWxlO1xuI2luY2x1ZGUgPGNvbW1vbj5cbiNpbmNsdWRlIDxjb2xvcl9wYXJzX3ZlcnRleD5cbiNpbmNsdWRlIDxzaGFkb3dtYXBfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8bG9nZGVwdGhidWZfcGFyc192ZXJ0ZXg+XG4jaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX3BhcnNfdmVydGV4Plxudm9pZCBtYWluKCkge1xuXHQjaW5jbHVkZSA8Y29sb3JfdmVydGV4PlxuXHQjaW5jbHVkZSA8YmVnaW5fdmVydGV4PlxuXHQjaW5jbHVkZSA8cHJvamVjdF92ZXJ0ZXg+XG5cdCNpZmRlZiBVU0VfU0laRUFUVEVOVUFUSU9OXG5cdFx0Z2xfUG9pbnRTaXplID0gc2l6ZSAqICggc2NhbGUgLyAtIG12UG9zaXRpb24ueiApO1xuXHQjZWxzZVxuXHRcdGdsX1BvaW50U2l6ZSA9IHNpemU7XG5cdCNlbmRpZlxuXHQjaW5jbHVkZSA8bG9nZGVwdGhidWZfdmVydGV4PlxuXHQjaW5jbHVkZSA8Y2xpcHBpbmdfcGxhbmVzX3ZlcnRleD5cblx0I2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cblx0I2luY2x1ZGUgPHNoYWRvd21hcF92ZXJ0ZXg+XG59XG4iLHNoYWRvd19mcmFnOiJ1bmlmb3JtIGZsb2F0IG9wYWNpdHk7XG4jaW5jbHVkZSA8Y29tbW9uPlxuI2luY2x1ZGUgPHBhY2tpbmc+XG4jaW5jbHVkZSA8YnNkZnM+XG4jaW5jbHVkZSA8bGlnaHRzX3BhcnM+XG4jaW5jbHVkZSA8c2hhZG93bWFwX3BhcnNfZnJhZ21lbnQ+XG4jaW5jbHVkZSA8c2hhZG93bWFza19wYXJzX2ZyYWdtZW50Plxudm9pZCBtYWluKCkge1xuXHRnbF9GcmFnQ29sb3IgPSB2ZWM0KCAwLjAsIDAuMCwgMC4wLCBvcGFjaXR5ICogKCAxLjAgIC0gZ2V0U2hhZG93TWFzaygpICkgKTtcbn1cbiIsc2hhZG93X3ZlcnQ6IiNpbmNsdWRlIDxzaGFkb3dtYXBfcGFyc192ZXJ0ZXg+XG52b2lkIG1haW4oKSB7XG5cdCNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XG5cdCNpbmNsdWRlIDxwcm9qZWN0X3ZlcnRleD5cblx0I2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cblx0I2luY2x1ZGUgPHNoYWRvd21hcF92ZXJ0ZXg+XG59XG4ifTtOdC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOk50LGlzQ29sb3I6ITAscjoxLGc6MSxiOjEsc2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0LmlzQ29sb3I/dGhpcy5jb3B5KHQpOiJudW1iZXIiPT10eXBlb2YgdD90aGlzLnNldEhleCh0KToic3RyaW5nIj09dHlwZW9mIHQmJnRoaXMuc2V0U3R5bGUodCksdGhpc30sc2V0U2NhbGFyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmI9dGhpcy5nPXRoaXMucj10LHRoaXN9LHNldEhleDpmdW5jdGlvbih0KXtyZXR1cm4gdD1NYXRoLmZsb29yKHQpLHRoaXMucj0odD4+MTYmMjU1KS8yNTUsdGhpcy5nPSh0Pj44JjI1NSkvMjU1LHRoaXMuYj0oMjU1JnQpLzI1NSx0aGlzfSxzZXRSR0I6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLnI9dCx0aGlzLmc9ZSx0aGlzLmI9aSx0aGlzfSxzZXRIU0w6ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKHQsZSxpKXtyZXR1cm4gaTwwJiYoaSs9MSksMTxpJiYtLWksaTwxLzY/dCs2KihlLXQpKmk6aTwuNT9lOmk8Mi8zP3QrNiooZS10KSooMi8zLWkpOnR9cmV0dXJuIGZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdD1lci5ldWNsaWRlYW5Nb2R1bG8odCwxKSxlPWVyLmNsYW1wKGUsMCwxKSxpPWVyLmNsYW1wKGksMCwxKSwwPT09ZT90aGlzLnI9dGhpcy5nPXRoaXMuYj1pOihpPTIqaS0oZT1pPD0uNT9pKigxK2UpOmkrZS1pKmUpLHRoaXMucj1uKGksZSx0KzEvMyksdGhpcy5nPW4oaSxlLHQpLHRoaXMuYj1uKGksZSx0LTEvMykpLHRoaXN9fSgpLHNldFN0eWxlOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7dm9pZCAwIT09dCYmcGFyc2VGbG9hdCh0KTwxJiZjb25zb2xlLndhcm4oIlRIUkVFLkNvbG9yOiBBbHBoYSBjb21wb25lbnQgb2YgIitlKyIgd2lsbCBiZSBpZ25vcmVkLiIpfXZhciBpO2lmKGk9L14oKD86cmdifGhzbClhPylcKFxzKihbXlwpXSopXCkvLmV4ZWMoZSkpe3ZhciBuPWlbMl07c3dpdGNoKGlbMV0pe2Nhc2UicmdiIjpjYXNlInJnYmEiOmlmKGk9L14oXGQrKVxzKixccyooXGQrKVxzKixccyooXGQrKVxzKigsXHMqKFswLTldKlwuP1swLTldKylccyopPyQvLmV4ZWMobikpcmV0dXJuIHRoaXMucj1NYXRoLm1pbigyNTUscGFyc2VJbnQoaVsxXSwxMCkpLzI1NSx0aGlzLmc9TWF0aC5taW4oMjU1LHBhcnNlSW50KGlbMl0sMTApKS8yNTUsdGhpcy5iPU1hdGgubWluKDI1NSxwYXJzZUludChpWzNdLDEwKSkvMjU1LHQoaVs1XSksdGhpcztpZihpPS9eKFxkKylcJVxzKixccyooXGQrKVwlXHMqLFxzKihcZCspXCVccyooLFxzKihbMC05XSpcLj9bMC05XSspXHMqKT8kLy5leGVjKG4pKXJldHVybiB0aGlzLnI9TWF0aC5taW4oMTAwLHBhcnNlSW50KGlbMV0sMTApKS8xMDAsdGhpcy5nPU1hdGgubWluKDEwMCxwYXJzZUludChpWzJdLDEwKSkvMTAwLHRoaXMuYj1NYXRoLm1pbigxMDAscGFyc2VJbnQoaVszXSwxMCkpLzEwMCx0KGlbNV0pLHRoaXM7YnJlYWs7Y2FzZSJoc2wiOmNhc2UiaHNsYSI6aWYoaT0vXihbMC05XSpcLj9bMC05XSspXHMqLFxzKihcZCspXCVccyosXHMqKFxkKylcJVxzKigsXHMqKFswLTldKlwuP1swLTldKylccyopPyQvLmV4ZWMobikpe249cGFyc2VGbG9hdChpWzFdKS8zNjA7dmFyIHI9cGFyc2VJbnQoaVsyXSwxMCkvMTAwLGE9cGFyc2VJbnQoaVszXSwxMCkvMTAwO3JldHVybiB0KGlbNV0pLHRoaXMuc2V0SFNMKG4scixhKX19fWVsc2UgaWYoaT0vXlwjKFtBLUZhLWYwLTldKykkLy5leGVjKGUpKXtpZigzPT09KG49KGk9aVsxXSkubGVuZ3RoKSlyZXR1cm4gdGhpcy5yPXBhcnNlSW50KGkuY2hhckF0KDApK2kuY2hhckF0KDApLDE2KS8yNTUsdGhpcy5nPXBhcnNlSW50KGkuY2hhckF0KDEpK2kuY2hhckF0KDEpLDE2KS8yNTUsdGhpcy5iPXBhcnNlSW50KGkuY2hhckF0KDIpK2kuY2hhckF0KDIpLDE2KS8yNTUsdGhpcztpZig2PT09bilyZXR1cm4gdGhpcy5yPXBhcnNlSW50KGkuY2hhckF0KDApK2kuY2hhckF0KDEpLDE2KS8yNTUsdGhpcy5nPXBhcnNlSW50KGkuY2hhckF0KDIpK2kuY2hhckF0KDMpLDE2KS8yNTUsdGhpcy5iPXBhcnNlSW50KGkuY2hhckF0KDQpK2kuY2hhckF0KDUpLDE2KS8yNTUsdGhpc31yZXR1cm4gZSYmMDxlLmxlbmd0aCYmKHZvaWQgMCE9PShpPVByW2VdKT90aGlzLnNldEhleChpKTpjb25zb2xlLndhcm4oIlRIUkVFLkNvbG9yOiBVbmtub3duIGNvbG9yICIrZSkpLHRoaXN9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMucix0aGlzLmcsdGhpcy5iKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yPXQucix0aGlzLmc9dC5nLHRoaXMuYj10LmIsdGhpc30sY29weUdhbW1hVG9MaW5lYXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MiksdGhpcy5yPU1hdGgucG93KHQucixlKSx0aGlzLmc9TWF0aC5wb3codC5nLGUpLHRoaXMuYj1NYXRoLnBvdyh0LmIsZSksdGhpc30sY29weUxpbmVhclRvR2FtbWE6ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT0yKTt2YXIgaT0wPGU/MS9lOjE7cmV0dXJuIHRoaXMucj1NYXRoLnBvdyh0LnIsaSksdGhpcy5nPU1hdGgucG93KHQuZyxpKSx0aGlzLmI9TWF0aC5wb3codC5iLGkpLHRoaXN9LGNvbnZlcnRHYW1tYVRvTGluZWFyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5yLGU9dGhpcy5nLGk9dGhpcy5iO3JldHVybiB0aGlzLnI9dCp0LHRoaXMuZz1lKmUsdGhpcy5iPWkqaSx0aGlzfSxjb252ZXJ0TGluZWFyVG9HYW1tYTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnI9TWF0aC5zcXJ0KHRoaXMuciksdGhpcy5nPU1hdGguc3FydCh0aGlzLmcpLHRoaXMuYj1NYXRoLnNxcnQodGhpcy5iKSx0aGlzfSxnZXRIZXg6ZnVuY3Rpb24oKXtyZXR1cm4gMjU1KnRoaXMucjw8MTZeMjU1KnRoaXMuZzw8OF4yNTUqdGhpcy5iPDwwfSxnZXRIZXhTdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4oIjAwMDAwMCIrdGhpcy5nZXRIZXgoKS50b1N0cmluZygxNikpLnNsaWNlKC02KX0sZ2V0SFNMOmZ1bmN0aW9uKHQpe3Q9dHx8e2g6MCxzOjAsbDowfTt2YXIgZSxpPXRoaXMucixuPXRoaXMuZyxyPXRoaXMuYixhPU1hdGgubWF4KGksbixyKSxvPSgoYz1NYXRoLm1pbihpLG4scikpK2EpLzI7aWYoYz09PWEpYz1lPTA7ZWxzZXt2YXIgcz1hLWMsYz1vPD0uNT9zLyhhK2MpOnMvKDItYS1jKTtzd2l0Y2goYSl7Y2FzZSBpOmU9KG4tcikvcysobjxyPzY6MCk7YnJlYWs7Y2FzZSBuOmU9KHItaSkvcysyO2JyZWFrO2Nhc2UgcjplPShpLW4pL3MrNH1lLz02fXJldHVybiB0Lmg9ZSx0LnM9Yyx0Lmw9byx0fSxnZXRTdHlsZTpmdW5jdGlvbigpe3JldHVybiJyZ2IoIisoMjU1KnRoaXMucnwwKSsiLCIrKDI1NSp0aGlzLmd8MCkrIiwiKygyNTUqdGhpcy5ifDApKyIpIn0sb2Zmc2V0SFNMOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLmdldEhTTCgpO3JldHVybiBuLmgrPXQsbi5zKz1lLG4ubCs9aSx0aGlzLnNldEhTTChuLmgsbi5zLG4ubCksdGhpc30sYWRkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnIrPXQucix0aGlzLmcrPXQuZyx0aGlzLmIrPXQuYix0aGlzfSxhZGRDb2xvcnM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5yPXQucitlLnIsdGhpcy5nPXQuZytlLmcsdGhpcy5iPXQuYitlLmIsdGhpc30sYWRkU2NhbGFyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnIrPXQsdGhpcy5nKz10LHRoaXMuYis9dCx0aGlzfSxzdWI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucj1NYXRoLm1heCgwLHRoaXMuci10LnIpLHRoaXMuZz1NYXRoLm1heCgwLHRoaXMuZy10LmcpLHRoaXMuYj1NYXRoLm1heCgwLHRoaXMuYi10LmIpLHRoaXN9LG11bHRpcGx5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnIqPXQucix0aGlzLmcqPXQuZyx0aGlzLmIqPXQuYix0aGlzfSxtdWx0aXBseVNjYWxhcjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yKj10LHRoaXMuZyo9dCx0aGlzLmIqPXQsdGhpc30sbGVycDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnIrPSh0LnItdGhpcy5yKSplLHRoaXMuZys9KHQuZy10aGlzLmcpKmUsdGhpcy5iKz0odC5iLXRoaXMuYikqZSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQucj09PXRoaXMuciYmdC5nPT09dGhpcy5nJiZ0LmI9PT10aGlzLmJ9LGZyb21BcnJheTpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSx0aGlzLnI9dFtlXSx0aGlzLmc9dFtlKzFdLHRoaXMuYj10W2UrMl0sdGhpc30sdG9BcnJheTpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD1bXSksdm9pZCAwPT09ZSYmKGU9MCksdFtlXT10aGlzLnIsdFtlKzFdPXRoaXMuZyx0W2UrMl09dGhpcy5iLHR9LHRvSlNPTjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEhleCgpfX07dmFyIFByPXthbGljZWJsdWU6MTU3OTIzODMsYW50aXF1ZXdoaXRlOjE2NDQ0Mzc1LGFxdWE6NjU1MzUsYXF1YW1hcmluZTo4Mzg4NTY0LGF6dXJlOjE1Nzk0MTc1LGJlaWdlOjE2MTE5MjYwLGJpc3F1ZToxNjc3MDI0NCxibGFjazowLGJsYW5jaGVkYWxtb25kOjE2NzcyMDQ1LGJsdWU6MjU1LGJsdWV2aW9sZXQ6OTA1NTIwMixicm93bjoxMDgyNDIzNCxidXJseXdvb2Q6MTQ1OTYyMzEsY2FkZXRibHVlOjYyNjY1MjgsY2hhcnRyZXVzZTo4Mzg4MzUyLGNob2NvbGF0ZToxMzc4OTQ3MCxjb3JhbDoxNjc0NDI3Mixjb3JuZmxvd2VyYmx1ZTo2NTkxOTgxLGNvcm5zaWxrOjE2Nzc1Mzg4LGNyaW1zb246MTQ0MjMxMDAsY3lhbjo2NTUzNSxkYXJrYmx1ZToxMzksZGFya2N5YW46MzU3MjMsZGFya2dvbGRlbnJvZDoxMjA5MjkzOSxkYXJrZ3JheToxMTExOTAxNyxkYXJrZ3JlZW46MjU2MDAsZGFya2dyZXk6MTExMTkwMTcsZGFya2toYWtpOjEyNDMzMjU5LGRhcmttYWdlbnRhOjkxMDk2NDMsZGFya29saXZlZ3JlZW46NTU5Nzk5OSxkYXJrb3JhbmdlOjE2NzQ3NTIwLGRhcmtvcmNoaWQ6MTAwNDAwMTIsZGFya3JlZDo5MTA5NTA0LGRhcmtzYWxtb246MTUzMDg0MTAsZGFya3NlYWdyZWVuOjk0MTk5MTksZGFya3NsYXRlYmx1ZTo0NzM0MzQ3LGRhcmtzbGF0ZWdyYXk6MzEwMDQ5NSxkYXJrc2xhdGVncmV5OjMxMDA0OTUsZGFya3R1cnF1b2lzZTo1Mjk0NSxkYXJrdmlvbGV0Ojk2OTk1MzksZGVlcHBpbms6MTY3MTY5NDcsZGVlcHNreWJsdWU6NDkxNTEsZGltZ3JheTo2OTA4MjY1LGRpbWdyZXk6NjkwODI2NSxkb2RnZXJibHVlOjIwMDMxOTksZmlyZWJyaWNrOjExNjc0MTQ2LGZsb3JhbHdoaXRlOjE2Nzc1OTIwLGZvcmVzdGdyZWVuOjIyNjM4NDIsZnVjaHNpYToxNjcxMTkzNSxnYWluc2Jvcm86MTQ0NzQ0NjAsZ2hvc3R3aGl0ZToxNjMxNjY3MSxnb2xkOjE2NzY2NzIwLGdvbGRlbnJvZDoxNDMyOTEyMCxncmF5Ojg0MjE1MDQsZ3JlZW46MzI3NjgsZ3JlZW55ZWxsb3c6MTE0MDMwNTUsZ3JleTo4NDIxNTA0LGhvbmV5ZGV3OjE1Nzk0MTYwLGhvdHBpbms6MTY3Mzg3NDAsaW5kaWFucmVkOjEzNDU4NTI0LGluZGlnbzo0OTE1MzMwLGl2b3J5OjE2Nzc3MjAwLGtoYWtpOjE1Nzg3NjYwLGxhdmVuZGVyOjE1MTMyNDEwLGxhdmVuZGVyYmx1c2g6MTY3NzMzNjUsbGF3bmdyZWVuOjgxOTA5NzYsbGVtb25jaGlmZm9uOjE2Nzc1ODg1LGxpZ2h0Ymx1ZToxMTM5MzI1NCxsaWdodGNvcmFsOjE1NzYxNTM2LGxpZ2h0Y3lhbjoxNDc0NTU5OSxsaWdodGdvbGRlbnJvZHllbGxvdzoxNjQ0ODIxMCxsaWdodGdyYXk6MTM4ODIzMjMsbGlnaHRncmVlbjo5NDk4MjU2LGxpZ2h0Z3JleToxMzg4MjMyMyxsaWdodHBpbms6MTY3NTg0NjUsbGlnaHRzYWxtb246MTY3NTI3NjIsbGlnaHRzZWFncmVlbjoyMTQyODkwLGxpZ2h0c2t5Ymx1ZTo4OTAwMzQ2LGxpZ2h0c2xhdGVncmF5Ojc4MzM3NTMsbGlnaHRzbGF0ZWdyZXk6NzgzMzc1MyxsaWdodHN0ZWVsYmx1ZToxMTU4NDczNCxsaWdodHllbGxvdzoxNjc3NzE4NCxsaW1lOjY1MjgwLGxpbWVncmVlbjozMzI5MzMwLGxpbmVuOjE2NDQ1NjcwLG1hZ2VudGE6MTY3MTE5MzUsbWFyb29uOjgzODg2MDgsbWVkaXVtYXF1YW1hcmluZTo2NzM3MzIyLG1lZGl1bWJsdWU6MjA1LG1lZGl1bW9yY2hpZDoxMjIxMTY2NyxtZWRpdW1wdXJwbGU6OTY2MjY4MyxtZWRpdW1zZWFncmVlbjozOTc4MDk3LG1lZGl1bXNsYXRlYmx1ZTo4MDg3NzkwLG1lZGl1bXNwcmluZ2dyZWVuOjY0MTU0LG1lZGl1bXR1cnF1b2lzZTo0NzcyMzAwLG1lZGl1bXZpb2xldHJlZDoxMzA0NzE3MyxtaWRuaWdodGJsdWU6MTY0NDkxMixtaW50Y3JlYW06MTYxMjE4NTAsbWlzdHlyb3NlOjE2NzcwMjczLG1vY2Nhc2luOjE2NzcwMjI5LG5hdmFqb3doaXRlOjE2NzY4Njg1LG5hdnk6MTI4LG9sZGxhY2U6MTY2NDM1NTgsb2xpdmU6ODQyMTM3NixvbGl2ZWRyYWI6NzA0ODczOSxvcmFuZ2U6MTY3NTM5MjAsb3JhbmdlcmVkOjE2NzI5MzQ0LG9yY2hpZDoxNDMxNTczNCxwYWxlZ29sZGVucm9kOjE1NjU3MTMwLHBhbGVncmVlbjoxMDAyNTg4MCxwYWxldHVycXVvaXNlOjExNTI5OTY2LHBhbGV2aW9sZXRyZWQ6MTQzODEyMDMscGFwYXlhd2hpcDoxNjc3MzA3NyxwZWFjaHB1ZmY6MTY3Njc2NzMscGVydToxMzQ2ODk5MSxwaW5rOjE2NzYxMDM1LHBsdW06MTQ1MjQ2MzcscG93ZGVyYmx1ZToxMTU5MTkxMCxwdXJwbGU6ODM4ODczNixyZWQ6MTY3MTE2ODAscm9zeWJyb3duOjEyMzU3NTE5LHJveWFsYmx1ZTo0Mjg2OTQ1LHNhZGRsZWJyb3duOjkxMjcxODcsc2FsbW9uOjE2NDE2ODgyLHNhbmR5YnJvd246MTYwMzI4NjQsc2VhZ3JlZW46MzA1MDMyNyxzZWFzaGVsbDoxNjc3NDYzOCxzaWVubmE6MTA1MDY3OTcsc2lsdmVyOjEyNjMyMjU2LHNreWJsdWU6ODkwMDMzMSxzbGF0ZWJsdWU6Njk3MDA2MSxzbGF0ZWdyYXk6NzM3Mjk0NCxzbGF0ZWdyZXk6NzM3Mjk0NCxzbm93OjE2Nzc1OTMwLHNwcmluZ2dyZWVuOjY1NDA3LHN0ZWVsYmx1ZTo0NjIwOTgwLHRhbjoxMzgwODc4MCx0ZWFsOjMyODk2LHRoaXN0bGU6MTQyMDQ4ODgsdG9tYXRvOjE2NzM3MDk1LHR1cnF1b2lzZTo0MjUxODU2LHZpb2xldDoxNTYzMTA4Nix3aGVhdDoxNjExMzMzMSx3aGl0ZToxNjc3NzIxNSx3aGl0ZXNtb2tlOjE2MTE5Mjg1LHllbGxvdzoxNjc3Njk2MCx5ZWxsb3dncmVlbjoxMDE0NTA3NH07KChVLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHoucHJvdG90eXBlKSkuY29uc3RydWN0b3I9VSkucHJvdG90eXBlLmlzRGF0YVRleHR1cmU9ITA7dmFyIENyLElyLFVyPXtjb21tb246e2RpZmZ1c2U6e3ZhbHVlOm5ldyBOdCgxNTY1ODczNCl9LG9wYWNpdHk6e3ZhbHVlOjF9LG1hcDp7dmFsdWU6bnVsbH0sb2Zmc2V0UmVwZWF0Ont2YWx1ZTpuZXcgUHQoMCwwLDEsMSl9LHNwZWN1bGFyTWFwOnt2YWx1ZTpudWxsfSxhbHBoYU1hcDp7dmFsdWU6bnVsbH0sZW52TWFwOnt2YWx1ZTpudWxsfSxmbGlwRW52TWFwOnt2YWx1ZTotMX0scmVmbGVjdGl2aXR5Ont2YWx1ZToxfSxyZWZyYWN0aW9uUmF0aW86e3ZhbHVlOi45OH19LGFvbWFwOnthb01hcDp7dmFsdWU6bnVsbH0sYW9NYXBJbnRlbnNpdHk6e3ZhbHVlOjF9fSxsaWdodG1hcDp7bGlnaHRNYXA6e3ZhbHVlOm51bGx9LGxpZ2h0TWFwSW50ZW5zaXR5Ont2YWx1ZToxfX0sZW1pc3NpdmVtYXA6e2VtaXNzaXZlTWFwOnt2YWx1ZTpudWxsfX0sYnVtcG1hcDp7YnVtcE1hcDp7dmFsdWU6bnVsbH0sYnVtcFNjYWxlOnt2YWx1ZToxfX0sbm9ybWFsbWFwOntub3JtYWxNYXA6e3ZhbHVlOm51bGx9LG5vcm1hbFNjYWxlOnt2YWx1ZTpuZXcgVigxLDEpfX0sZGlzcGxhY2VtZW50bWFwOntkaXNwbGFjZW1lbnRNYXA6e3ZhbHVlOm51bGx9LGRpc3BsYWNlbWVudFNjYWxlOnt2YWx1ZToxfSxkaXNwbGFjZW1lbnRCaWFzOnt2YWx1ZTowfX0scm91Z2huZXNzbWFwOntyb3VnaG5lc3NNYXA6e3ZhbHVlOm51bGx9fSxtZXRhbG5lc3NtYXA6e21ldGFsbmVzc01hcDp7dmFsdWU6bnVsbH19LGdyYWRpZW50bWFwOntncmFkaWVudE1hcDp7dmFsdWU6bnVsbH19LGZvZzp7Zm9nRGVuc2l0eTp7dmFsdWU6MjVlLTV9LGZvZ05lYXI6e3ZhbHVlOjF9LGZvZ0Zhcjp7dmFsdWU6MmUzfSxmb2dDb2xvcjp7dmFsdWU6bmV3IE50KDE2Nzc3MjE1KX19LGxpZ2h0czp7YW1iaWVudExpZ2h0Q29sb3I6e3ZhbHVlOltdfSxkaXJlY3Rpb25hbExpZ2h0czp7dmFsdWU6W10scHJvcGVydGllczp7ZGlyZWN0aW9uOnt9LGNvbG9yOnt9LHNoYWRvdzp7fSxzaGFkb3dCaWFzOnt9LHNoYWRvd1JhZGl1czp7fSxzaGFkb3dNYXBTaXplOnt9fX0sZGlyZWN0aW9uYWxTaGFkb3dNYXA6e3ZhbHVlOltdfSxkaXJlY3Rpb25hbFNoYWRvd01hdHJpeDp7dmFsdWU6W119LHNwb3RMaWdodHM6e3ZhbHVlOltdLHByb3BlcnRpZXM6e2NvbG9yOnt9LHBvc2l0aW9uOnt9LGRpcmVjdGlvbjp7fSxkaXN0YW5jZTp7fSxjb25lQ29zOnt9LHBlbnVtYnJhQ29zOnt9LGRlY2F5Ont9LHNoYWRvdzp7fSxzaGFkb3dCaWFzOnt9LHNoYWRvd1JhZGl1czp7fSxzaGFkb3dNYXBTaXplOnt9fX0sc3BvdFNoYWRvd01hcDp7dmFsdWU6W119LHNwb3RTaGFkb3dNYXRyaXg6e3ZhbHVlOltdfSxwb2ludExpZ2h0czp7dmFsdWU6W10scHJvcGVydGllczp7Y29sb3I6e30scG9zaXRpb246e30sZGVjYXk6e30sZGlzdGFuY2U6e30sc2hhZG93Ont9LHNoYWRvd0JpYXM6e30sc2hhZG93UmFkaXVzOnt9LHNoYWRvd01hcFNpemU6e319fSxwb2ludFNoYWRvd01hcDp7dmFsdWU6W119LHBvaW50U2hhZG93TWF0cml4Ont2YWx1ZTpbXX0saGVtaXNwaGVyZUxpZ2h0czp7dmFsdWU6W10scHJvcGVydGllczp7ZGlyZWN0aW9uOnt9LHNreUNvbG9yOnt9LGdyb3VuZENvbG9yOnt9fX0scmVjdEFyZWFMaWdodHM6e3ZhbHVlOltdLHByb3BlcnRpZXM6e2NvbG9yOnt9LHBvc2l0aW9uOnt9LHdpZHRoOnt9LGhlaWdodDp7fX19fSxwb2ludHM6e2RpZmZ1c2U6e3ZhbHVlOm5ldyBOdCgxNTY1ODczNCl9LG9wYWNpdHk6e3ZhbHVlOjF9LHNpemU6e3ZhbHVlOjF9LHNjYWxlOnt2YWx1ZToxfSxtYXA6e3ZhbHVlOm51bGx9LG9mZnNldFJlcGVhdDp7dmFsdWU6bmV3IFB0KDAsMCwxLDEpfX19LE5yPXtiYXNpYzp7dW5pZm9ybXM6THIubWVyZ2UoW1VyLmNvbW1vbixVci5hb21hcCxVci5saWdodG1hcCxVci5mb2ddKSx2ZXJ0ZXhTaGFkZXI6UnIubWVzaGJhc2ljX3ZlcnQsZnJhZ21lbnRTaGFkZXI6UnIubWVzaGJhc2ljX2ZyYWd9LGxhbWJlcnQ6e3VuaWZvcm1zOkxyLm1lcmdlKFtVci5jb21tb24sVXIuYW9tYXAsVXIubGlnaHRtYXAsVXIuZW1pc3NpdmVtYXAsVXIuZm9nLFVyLmxpZ2h0cyx7ZW1pc3NpdmU6e3ZhbHVlOm5ldyBOdCgwKX19XSksdmVydGV4U2hhZGVyOlJyLm1lc2hsYW1iZXJ0X3ZlcnQsZnJhZ21lbnRTaGFkZXI6UnIubWVzaGxhbWJlcnRfZnJhZ30scGhvbmc6e3VuaWZvcm1zOkxyLm1lcmdlKFtVci5jb21tb24sVXIuYW9tYXAsVXIubGlnaHRtYXAsVXIuZW1pc3NpdmVtYXAsVXIuYnVtcG1hcCxVci5ub3JtYWxtYXAsVXIuZGlzcGxhY2VtZW50bWFwLFVyLmdyYWRpZW50bWFwLFVyLmZvZyxVci5saWdodHMse2VtaXNzaXZlOnt2YWx1ZTpuZXcgTnQoMCl9LHNwZWN1bGFyOnt2YWx1ZTpuZXcgTnQoMTExODQ4MSl9LHNoaW5pbmVzczp7dmFsdWU6MzB9fV0pLHZlcnRleFNoYWRlcjpSci5tZXNocGhvbmdfdmVydCxmcmFnbWVudFNoYWRlcjpSci5tZXNocGhvbmdfZnJhZ30sc3RhbmRhcmQ6e3VuaWZvcm1zOkxyLm1lcmdlKFtVci5jb21tb24sVXIuYW9tYXAsVXIubGlnaHRtYXAsVXIuZW1pc3NpdmVtYXAsVXIuYnVtcG1hcCxVci5ub3JtYWxtYXAsVXIuZGlzcGxhY2VtZW50bWFwLFVyLnJvdWdobmVzc21hcCxVci5tZXRhbG5lc3NtYXAsVXIuZm9nLFVyLmxpZ2h0cyx7ZW1pc3NpdmU6e3ZhbHVlOm5ldyBOdCgwKX0scm91Z2huZXNzOnt2YWx1ZTouNX0sbWV0YWxuZXNzOnt2YWx1ZTowfSxlbnZNYXBJbnRlbnNpdHk6e3ZhbHVlOjF9fV0pLHZlcnRleFNoYWRlcjpSci5tZXNocGh5c2ljYWxfdmVydCxmcmFnbWVudFNoYWRlcjpSci5tZXNocGh5c2ljYWxfZnJhZ30scG9pbnRzOnt1bmlmb3JtczpMci5tZXJnZShbVXIucG9pbnRzLFVyLmZvZ10pLHZlcnRleFNoYWRlcjpSci5wb2ludHNfdmVydCxmcmFnbWVudFNoYWRlcjpSci5wb2ludHNfZnJhZ30sZGFzaGVkOnt1bmlmb3JtczpMci5tZXJnZShbVXIuY29tbW9uLFVyLmZvZyx7c2NhbGU6e3ZhbHVlOjF9LGRhc2hTaXplOnt2YWx1ZToxfSx0b3RhbFNpemU6e3ZhbHVlOjJ9fV0pLHZlcnRleFNoYWRlcjpSci5saW5lZGFzaGVkX3ZlcnQsZnJhZ21lbnRTaGFkZXI6UnIubGluZWRhc2hlZF9mcmFnfSxkZXB0aDp7dW5pZm9ybXM6THIubWVyZ2UoW1VyLmNvbW1vbixVci5kaXNwbGFjZW1lbnRtYXBdKSx2ZXJ0ZXhTaGFkZXI6UnIuZGVwdGhfdmVydCxmcmFnbWVudFNoYWRlcjpSci5kZXB0aF9mcmFnfSxub3JtYWw6e3VuaWZvcm1zOkxyLm1lcmdlKFtVci5jb21tb24sVXIuYnVtcG1hcCxVci5ub3JtYWxtYXAsVXIuZGlzcGxhY2VtZW50bWFwLHtvcGFjaXR5Ont2YWx1ZToxfX1dKSx2ZXJ0ZXhTaGFkZXI6UnIubm9ybWFsX3ZlcnQsZnJhZ21lbnRTaGFkZXI6UnIubm9ybWFsX2ZyYWd9LGN1YmU6e3VuaWZvcm1zOnt0Q3ViZTp7dmFsdWU6bnVsbH0sdEZsaXA6e3ZhbHVlOi0xfSxvcGFjaXR5Ont2YWx1ZToxfX0sdmVydGV4U2hhZGVyOlJyLmN1YmVfdmVydCxmcmFnbWVudFNoYWRlcjpSci5jdWJlX2ZyYWd9LGVxdWlyZWN0Ont1bmlmb3Jtczp7dEVxdWlyZWN0Ont2YWx1ZTpudWxsfSx0RmxpcDp7dmFsdWU6LTF9fSx2ZXJ0ZXhTaGFkZXI6UnIuZXF1aXJlY3RfdmVydCxmcmFnbWVudFNoYWRlcjpSci5lcXVpcmVjdF9mcmFnfSxkaXN0YW5jZVJHQkE6e3VuaWZvcm1zOntsaWdodFBvczp7dmFsdWU6bmV3IEN0fX0sdmVydGV4U2hhZGVyOlJyLmRpc3RhbmNlUkdCQV92ZXJ0LGZyYWdtZW50U2hhZGVyOlJyLmRpc3RhbmNlUkdCQV9mcmFnfX07TnIucGh5c2ljYWw9e3VuaWZvcm1zOkxyLm1lcmdlKFtOci5zdGFuZGFyZC51bmlmb3Jtcyx7Y2xlYXJDb2F0Ont2YWx1ZTowfSxjbGVhckNvYXRSb3VnaG5lc3M6e3ZhbHVlOjB9fV0pLHZlcnRleFNoYWRlcjpSci5tZXNocGh5c2ljYWxfdmVydCxmcmFnbWVudFNoYWRlcjpSci5tZXNocGh5c2ljYWxfZnJhZ30sTy5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOk8sc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMubWluLmNvcHkodCksdGhpcy5tYXguY29weShlKSx0aGlzfSxzZXRGcm9tUG9pbnRzOmZ1bmN0aW9uKHQpe3RoaXMubWFrZUVtcHR5KCk7Zm9yKHZhciBlPTAsaT10Lmxlbmd0aDtlPGk7ZSsrKXRoaXMuZXhwYW5kQnlQb2ludCh0W2VdKTtyZXR1cm4gdGhpc30sc2V0RnJvbUNlbnRlckFuZFNpemU6KElyPW5ldyBWLGZ1bmN0aW9uKHQsZSl7dmFyIGk9SXIuY29weShlKS5tdWx0aXBseVNjYWxhciguNSk7cmV0dXJuIHRoaXMubWluLmNvcHkodCkuc3ViKGkpLHRoaXMubWF4LmNvcHkodCkuYWRkKGkpLHRoaXN9KSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5taW4uY29weSh0Lm1pbiksdGhpcy5tYXguY29weSh0Lm1heCksdGhpc30sbWFrZUVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWluLng9dGhpcy5taW4ueT0xLzAsdGhpcy5tYXgueD10aGlzLm1heC55PS0xLzAsdGhpc30saXNFbXB0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1heC54PHRoaXMubWluLnh8fHRoaXMubWF4Lnk8dGhpcy5taW4ueX0sZ2V0Q2VudGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBWLHRoaXMuaXNFbXB0eSgpP3Quc2V0KDAsMCk6dC5hZGRWZWN0b3JzKHRoaXMubWluLHRoaXMubWF4KS5tdWx0aXBseVNjYWxhciguNSl9LGdldFNpemU6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8bmV3IFYsdGhpcy5pc0VtcHR5KCk/dC5zZXQoMCwwKTp0LnN1YlZlY3RvcnModGhpcy5tYXgsdGhpcy5taW4pfSxleHBhbmRCeVBvaW50OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5taW4odCksdGhpcy5tYXgubWF4KHQpLHRoaXN9LGV4cGFuZEJ5VmVjdG9yOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5zdWIodCksdGhpcy5tYXguYWRkKHQpLHRoaXN9LGV4cGFuZEJ5U2NhbGFyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5hZGRTY2FsYXIoLXQpLHRoaXMubWF4LmFkZFNjYWxhcih0KSx0aGlzfSxjb250YWluc1BvaW50OmZ1bmN0aW9uKHQpe3JldHVybiEodC54PHRoaXMubWluLnh8fHQueD50aGlzLm1heC54fHx0Lnk8dGhpcy5taW4ueXx8dC55PnRoaXMubWF4LnkpfSxjb250YWluc0JveDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5taW4ueDw9dC5taW4ueCYmdC5tYXgueDw9dGhpcy5tYXgueCYmdGhpcy5taW4ueTw9dC5taW4ueSYmdC5tYXgueTw9dGhpcy5tYXgueX0sZ2V0UGFyYW1ldGVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuKGV8fG5ldyBWKS5zZXQoKHQueC10aGlzLm1pbi54KS8odGhpcy5tYXgueC10aGlzLm1pbi54KSwodC55LXRoaXMubWluLnkpLyh0aGlzLm1heC55LXRoaXMubWluLnkpKX0saW50ZXJzZWN0c0JveDpmdW5jdGlvbih0KXtyZXR1cm4hKHQubWF4Lng8dGhpcy5taW4ueHx8dC5taW4ueD50aGlzLm1heC54fHx0Lm1heC55PHRoaXMubWluLnl8fHQubWluLnk+dGhpcy5tYXgueSl9LGNsYW1wUG9pbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4oZXx8bmV3IFYpLmNvcHkodCkuY2xhbXAodGhpcy5taW4sdGhpcy5tYXgpfSxkaXN0YW5jZVRvUG9pbnQ6KENyPW5ldyBWLGZ1bmN0aW9uKHQpe3JldHVybiBDci5jb3B5KHQpLmNsYW1wKHRoaXMubWluLHRoaXMubWF4KS5zdWIodCkubGVuZ3RoKCl9KSxpbnRlcnNlY3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubWluLm1heCh0Lm1pbiksdGhpcy5tYXgubWluKHQubWF4KSx0aGlzfSx1bmlvbjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5taW4ubWluKHQubWluKSx0aGlzLm1heC5tYXgodC5tYXgpLHRoaXN9LHRyYW5zbGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5taW4uYWRkKHQpLHRoaXMubWF4LmFkZCh0KSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQubWluLmVxdWFscyh0aGlzLm1pbikmJnQubWF4LmVxdWFscyh0aGlzLm1heCl9fTt2YXIgRHIsT3IsRnIsenIsQnIsR3IsSHIsVnIsa3IsanIsV3IsWHIsWXIscXIsWnIsSnIsUXIsS3IsJHIsdGEsZWEsaWEsbmEscmEsYWEsb2Esc2EsY2EsaGEsbGEsdWEsZGE9MDtOLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Tixpc01hdGVyaWFsOiEwLGdldCBuZWVkc1VwZGF0ZSgpe3JldHVybiB0aGlzLl9uZWVkc1VwZGF0ZX0sc2V0IG5lZWRzVXBkYXRlKHQpeyEwPT09dCYmdGhpcy51cGRhdGUoKSx0aGlzLl9uZWVkc1VwZGF0ZT10fSxzZXRWYWx1ZXM6ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dClmb3IodmFyIGUgaW4gdCl7dmFyIGk9dFtlXTtpZih2b2lkIDA9PT1pKWNvbnNvbGUud2FybigiVEhSRUUuTWF0ZXJpYWw6ICciK2UrIicgcGFyYW1ldGVyIGlzIHVuZGVmaW5lZC4iKTtlbHNle3ZhciBuPXRoaXNbZV07dm9pZCAwPT09bj9jb25zb2xlLndhcm4oIlRIUkVFLiIrdGhpcy50eXBlKyI6ICciK2UrIicgaXMgbm90IGEgcHJvcGVydHkgb2YgdGhpcyBtYXRlcmlhbC4iKTpuJiZuLmlzQ29sb3I/bi5zZXQoaSk6biYmbi5pc1ZlY3RvcjMmJmkmJmkuaXNWZWN0b3IzP24uY29weShpKTp0aGlzW2VdPSJvdmVyZHJhdyI9PT1lP051bWJlcihpKTppfX19LHRvSlNPTjpmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe3ZhciBlLGk9W107Zm9yKGUgaW4gdCl7dmFyIG49dFtlXTtkZWxldGUgbi5tZXRhZGF0YSxpLnB1c2gobil9cmV0dXJuIGl9dmFyIGk9dm9pZCAwPT09dDtpJiYodD17dGV4dHVyZXM6e30saW1hZ2VzOnt9fSk7dmFyIG49e21ldGFkYXRhOnt2ZXJzaW9uOjQuNCx0eXBlOiJNYXRlcmlhbCIsZ2VuZXJhdG9yOiJNYXRlcmlhbC50b0pTT04ifX07cmV0dXJuIG4udXVpZD10aGlzLnV1aWQsbi50eXBlPXRoaXMudHlwZSwiIiE9PXRoaXMubmFtZSYmKG4ubmFtZT10aGlzLm5hbWUpLHRoaXMuY29sb3ImJnRoaXMuY29sb3IuaXNDb2xvciYmKG4uY29sb3I9dGhpcy5jb2xvci5nZXRIZXgoKSksdm9pZCAwIT09dGhpcy5yb3VnaG5lc3MmJihuLnJvdWdobmVzcz10aGlzLnJvdWdobmVzcyksdm9pZCAwIT09dGhpcy5tZXRhbG5lc3MmJihuLm1ldGFsbmVzcz10aGlzLm1ldGFsbmVzcyksdGhpcy5lbWlzc2l2ZSYmdGhpcy5lbWlzc2l2ZS5pc0NvbG9yJiYobi5lbWlzc2l2ZT10aGlzLmVtaXNzaXZlLmdldEhleCgpKSx0aGlzLnNwZWN1bGFyJiZ0aGlzLnNwZWN1bGFyLmlzQ29sb3ImJihuLnNwZWN1bGFyPXRoaXMuc3BlY3VsYXIuZ2V0SGV4KCkpLHZvaWQgMCE9PXRoaXMuc2hpbmluZXNzJiYobi5zaGluaW5lc3M9dGhpcy5zaGluaW5lc3MpLHZvaWQgMCE9PXRoaXMuY2xlYXJDb2F0JiYobi5jbGVhckNvYXQ9dGhpcy5jbGVhckNvYXQpLHZvaWQgMCE9PXRoaXMuY2xlYXJDb2F0Um91Z2huZXNzJiYobi5jbGVhckNvYXRSb3VnaG5lc3M9dGhpcy5jbGVhckNvYXRSb3VnaG5lc3MpLHRoaXMubWFwJiZ0aGlzLm1hcC5pc1RleHR1cmUmJihuLm1hcD10aGlzLm1hcC50b0pTT04odCkudXVpZCksdGhpcy5hbHBoYU1hcCYmdGhpcy5hbHBoYU1hcC5pc1RleHR1cmUmJihuLmFscGhhTWFwPXRoaXMuYWxwaGFNYXAudG9KU09OKHQpLnV1aWQpLHRoaXMubGlnaHRNYXAmJnRoaXMubGlnaHRNYXAuaXNUZXh0dXJlJiYobi5saWdodE1hcD10aGlzLmxpZ2h0TWFwLnRvSlNPTih0KS51dWlkKSx0aGlzLmJ1bXBNYXAmJnRoaXMuYnVtcE1hcC5pc1RleHR1cmUmJihuLmJ1bXBNYXA9dGhpcy5idW1wTWFwLnRvSlNPTih0KS51dWlkLG4uYnVtcFNjYWxlPXRoaXMuYnVtcFNjYWxlKSx0aGlzLm5vcm1hbE1hcCYmdGhpcy5ub3JtYWxNYXAuaXNUZXh0dXJlJiYobi5ub3JtYWxNYXA9dGhpcy5ub3JtYWxNYXAudG9KU09OKHQpLnV1aWQsbi5ub3JtYWxTY2FsZT10aGlzLm5vcm1hbFNjYWxlLnRvQXJyYXkoKSksdGhpcy5kaXNwbGFjZW1lbnRNYXAmJnRoaXMuZGlzcGxhY2VtZW50TWFwLmlzVGV4dHVyZSYmKG4uZGlzcGxhY2VtZW50TWFwPXRoaXMuZGlzcGxhY2VtZW50TWFwLnRvSlNPTih0KS51dWlkLG4uZGlzcGxhY2VtZW50U2NhbGU9dGhpcy5kaXNwbGFjZW1lbnRTY2FsZSxuLmRpc3BsYWNlbWVudEJpYXM9dGhpcy5kaXNwbGFjZW1lbnRCaWFzKSx0aGlzLnJvdWdobmVzc01hcCYmdGhpcy5yb3VnaG5lc3NNYXAuaXNUZXh0dXJlJiYobi5yb3VnaG5lc3NNYXA9dGhpcy5yb3VnaG5lc3NNYXAudG9KU09OKHQpLnV1aWQpLHRoaXMubWV0YWxuZXNzTWFwJiZ0aGlzLm1ldGFsbmVzc01hcC5pc1RleHR1cmUmJihuLm1ldGFsbmVzc01hcD10aGlzLm1ldGFsbmVzc01hcC50b0pTT04odCkudXVpZCksdGhpcy5lbWlzc2l2ZU1hcCYmdGhpcy5lbWlzc2l2ZU1hcC5pc1RleHR1cmUmJihuLmVtaXNzaXZlTWFwPXRoaXMuZW1pc3NpdmVNYXAudG9KU09OKHQpLnV1aWQpLHRoaXMuc3BlY3VsYXJNYXAmJnRoaXMuc3BlY3VsYXJNYXAuaXNUZXh0dXJlJiYobi5zcGVjdWxhck1hcD10aGlzLnNwZWN1bGFyTWFwLnRvSlNPTih0KS51dWlkKSx0aGlzLmVudk1hcCYmdGhpcy5lbnZNYXAuaXNUZXh0dXJlJiYobi5lbnZNYXA9dGhpcy5lbnZNYXAudG9KU09OKHQpLnV1aWQsbi5yZWZsZWN0aXZpdHk9dGhpcy5yZWZsZWN0aXZpdHkpLHRoaXMuZ3JhZGllbnRNYXAmJnRoaXMuZ3JhZGllbnRNYXAuaXNUZXh0dXJlJiYobi5ncmFkaWVudE1hcD10aGlzLmdyYWRpZW50TWFwLnRvSlNPTih0KS51dWlkKSx2b2lkIDAhPT10aGlzLnNpemUmJihuLnNpemU9dGhpcy5zaXplKSx2b2lkIDAhPT10aGlzLnNpemVBdHRlbnVhdGlvbiYmKG4uc2l6ZUF0dGVudWF0aW9uPXRoaXMuc2l6ZUF0dGVudWF0aW9uKSwxIT09dGhpcy5ibGVuZGluZyYmKG4uYmxlbmRpbmc9dGhpcy5ibGVuZGluZyksMiE9PXRoaXMuc2hhZGluZyYmKG4uc2hhZGluZz10aGlzLnNoYWRpbmcpLDAhPT10aGlzLnNpZGUmJihuLnNpZGU9dGhpcy5zaWRlKSwwIT09dGhpcy52ZXJ0ZXhDb2xvcnMmJihuLnZlcnRleENvbG9ycz10aGlzLnZlcnRleENvbG9ycyksdGhpcy5vcGFjaXR5PDEmJihuLm9wYWNpdHk9dGhpcy5vcGFjaXR5KSwhMD09PXRoaXMudHJhbnNwYXJlbnQmJihuLnRyYW5zcGFyZW50PXRoaXMudHJhbnNwYXJlbnQpLG4uZGVwdGhGdW5jPXRoaXMuZGVwdGhGdW5jLG4uZGVwdGhUZXN0PXRoaXMuZGVwdGhUZXN0LG4uZGVwdGhXcml0ZT10aGlzLmRlcHRoV3JpdGUsMDx0aGlzLmFscGhhVGVzdCYmKG4uYWxwaGFUZXN0PXRoaXMuYWxwaGFUZXN0KSwhMD09PXRoaXMucHJlbXVsdGlwbGllZEFscGhhJiYobi5wcmVtdWx0aXBsaWVkQWxwaGE9dGhpcy5wcmVtdWx0aXBsaWVkQWxwaGEpLCEwPT09dGhpcy53aXJlZnJhbWUmJihuLndpcmVmcmFtZT10aGlzLndpcmVmcmFtZSksMTx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aCYmKG4ud2lyZWZyYW1lTGluZXdpZHRoPXRoaXMud2lyZWZyYW1lTGluZXdpZHRoKSwicm91bmQiIT09dGhpcy53aXJlZnJhbWVMaW5lY2FwJiYobi53aXJlZnJhbWVMaW5lY2FwPXRoaXMud2lyZWZyYW1lTGluZWNhcCksInJvdW5kIiE9PXRoaXMud2lyZWZyYW1lTGluZWpvaW4mJihuLndpcmVmcmFtZUxpbmVqb2luPXRoaXMud2lyZWZyYW1lTGluZWpvaW4pLG4uc2tpbm5pbmc9dGhpcy5za2lubmluZyxuLm1vcnBoVGFyZ2V0cz10aGlzLm1vcnBoVGFyZ2V0cyxpJiYoaT1lKHQudGV4dHVyZXMpLHQ9ZSh0LmltYWdlcyksMDxpLmxlbmd0aCYmKG4udGV4dHVyZXM9aSksMDx0Lmxlbmd0aCYmKG4uaW1hZ2VzPXQpKSxufSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sY29weTpmdW5jdGlvbih0KXt0aGlzLm5hbWU9dC5uYW1lLHRoaXMuZm9nPXQuZm9nLHRoaXMubGlnaHRzPXQubGlnaHRzLHRoaXMuYmxlbmRpbmc9dC5ibGVuZGluZyx0aGlzLnNpZGU9dC5zaWRlLHRoaXMuc2hhZGluZz10LnNoYWRpbmcsdGhpcy52ZXJ0ZXhDb2xvcnM9dC52ZXJ0ZXhDb2xvcnMsdGhpcy5vcGFjaXR5PXQub3BhY2l0eSx0aGlzLnRyYW5zcGFyZW50PXQudHJhbnNwYXJlbnQsdGhpcy5ibGVuZFNyYz10LmJsZW5kU3JjLHRoaXMuYmxlbmREc3Q9dC5ibGVuZERzdCx0aGlzLmJsZW5kRXF1YXRpb249dC5ibGVuZEVxdWF0aW9uLHRoaXMuYmxlbmRTcmNBbHBoYT10LmJsZW5kU3JjQWxwaGEsdGhpcy5ibGVuZERzdEFscGhhPXQuYmxlbmREc3RBbHBoYSx0aGlzLmJsZW5kRXF1YXRpb25BbHBoYT10LmJsZW5kRXF1YXRpb25BbHBoYSx0aGlzLmRlcHRoRnVuYz10LmRlcHRoRnVuYyx0aGlzLmRlcHRoVGVzdD10LmRlcHRoVGVzdCx0aGlzLmRlcHRoV3JpdGU9dC5kZXB0aFdyaXRlLHRoaXMuY29sb3JXcml0ZT10LmNvbG9yV3JpdGUsdGhpcy5wcmVjaXNpb249dC5wcmVjaXNpb24sdGhpcy5wb2x5Z29uT2Zmc2V0PXQucG9seWdvbk9mZnNldCx0aGlzLnBvbHlnb25PZmZzZXRGYWN0b3I9dC5wb2x5Z29uT2Zmc2V0RmFjdG9yLHRoaXMucG9seWdvbk9mZnNldFVuaXRzPXQucG9seWdvbk9mZnNldFVuaXRzLHRoaXMuYWxwaGFUZXN0PXQuYWxwaGFUZXN0LHRoaXMucHJlbXVsdGlwbGllZEFscGhhPXQucHJlbXVsdGlwbGllZEFscGhhLHRoaXMub3ZlcmRyYXc9dC5vdmVyZHJhdyx0aGlzLnZpc2libGU9dC52aXNpYmxlLHRoaXMuY2xpcFNoYWRvd3M9dC5jbGlwU2hhZG93cyx0aGlzLmNsaXBJbnRlcnNlY3Rpb249dC5jbGlwSW50ZXJzZWN0aW9uO3ZhciBlPW51bGw7aWYobnVsbCE9PSh0PXQuY2xpcHBpbmdQbGFuZXMpKWZvcih2YXIgaT10Lmxlbmd0aCxuPShlPUFycmF5KGkpLDApO24hPT1pOysrbillW25dPXRbbl0uY2xvbmUoKTtyZXR1cm4gdGhpcy5jbGlwcGluZ1BsYW5lcz1lLHRoaXN9LHVwZGF0ZTpmdW5jdGlvbigpe3RoaXMuZGlzcGF0Y2hFdmVudCh7dHlwZToidXBkYXRlIn0pfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KHt0eXBlOiJkaXNwb3NlIn0pfX0sT2JqZWN0LmFzc2lnbihOLnByb3RvdHlwZSxlLnByb3RvdHlwZSksKChGdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUZ0KS5wcm90b3R5cGUuaXNTaGFkZXJNYXRlcmlhbD0hMCxGdC5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gTi5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5mcmFnbWVudFNoYWRlcj10LmZyYWdtZW50U2hhZGVyLHRoaXMudmVydGV4U2hhZGVyPXQudmVydGV4U2hhZGVyLHRoaXMudW5pZm9ybXM9THIuY2xvbmUodC51bmlmb3JtcyksdGhpcy5kZWZpbmVzPXQuZGVmaW5lcyx0aGlzLndpcmVmcmFtZT10LndpcmVmcmFtZSx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD10LndpcmVmcmFtZUxpbmV3aWR0aCx0aGlzLmxpZ2h0cz10LmxpZ2h0cyx0aGlzLmNsaXBwaW5nPXQuY2xpcHBpbmcsdGhpcy5za2lubmluZz10LnNraW5uaW5nLHRoaXMubW9ycGhUYXJnZXRzPXQubW9ycGhUYXJnZXRzLHRoaXMubW9ycGhOb3JtYWxzPXQubW9ycGhOb3JtYWxzLHRoaXMuZXh0ZW5zaW9ucz10LmV4dGVuc2lvbnMsdGhpc30sRnQucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbih0KXtyZXR1cm4odD1OLnByb3RvdHlwZS50b0pTT04uY2FsbCh0aGlzLHQpKS51bmlmb3Jtcz10aGlzLnVuaWZvcm1zLHQudmVydGV4U2hhZGVyPXRoaXMudmVydGV4U2hhZGVyLHQuZnJhZ21lbnRTaGFkZXI9dGhpcy5mcmFnbWVudFNoYWRlcix0fSwoKEcucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoTi5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1HKS5wcm90b3R5cGUuaXNNZXNoRGVwdGhNYXRlcmlhbD0hMCxHLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBOLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmRlcHRoUGFja2luZz10LmRlcHRoUGFja2luZyx0aGlzLnNraW5uaW5nPXQuc2tpbm5pbmcsdGhpcy5tb3JwaFRhcmdldHM9dC5tb3JwaFRhcmdldHMsdGhpcy5tYXA9dC5tYXAsdGhpcy5hbHBoYU1hcD10LmFscGhhTWFwLHRoaXMuZGlzcGxhY2VtZW50TWFwPXQuZGlzcGxhY2VtZW50TWFwLHRoaXMuZGlzcGxhY2VtZW50U2NhbGU9dC5kaXNwbGFjZW1lbnRTY2FsZSx0aGlzLmRpc3BsYWNlbWVudEJpYXM9dC5kaXNwbGFjZW1lbnRCaWFzLHRoaXMud2lyZWZyYW1lPXQud2lyZWZyYW1lLHRoaXMud2lyZWZyYW1lTGluZXdpZHRoPXQud2lyZWZyYW1lTGluZXdpZHRoLHRoaXN9LEQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpELGlzQm94MzohMCxzZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5taW4uY29weSh0KSx0aGlzLm1heC5jb3B5KGUpLHRoaXN9LHNldEZyb21BcnJheTpmdW5jdGlvbih0KXtmb3IodmFyIGU9MS8wLGk9MS8wLG49MS8wLHI9LTEvMCxhPS0xLzAsbz0tMS8wLHM9MCxjPXQubGVuZ3RoO3M8YztzKz0zKXt2YXIgaD10W3NdLGw9dFtzKzFdLHU9dFtzKzJdO2g8ZSYmKGU9aCksbDxpJiYoaT1sKSx1PG4mJihuPXUpLHI8aCYmKHI9aCksYTxsJiYoYT1sKSxvPHUmJihvPXUpfXRoaXMubWluLnNldChlLGksbiksdGhpcy5tYXguc2V0KHIsYSxvKX0sc2V0RnJvbUJ1ZmZlckF0dHJpYnV0ZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9MS8wLGk9MS8wLG49MS8wLHI9LTEvMCxhPS0xLzAsbz0tMS8wLHM9MCxjPXQuY291bnQ7czxjO3MrKyl7dmFyIGg9dC5nZXRYKHMpLGw9dC5nZXRZKHMpLHU9dC5nZXRaKHMpO2g8ZSYmKGU9aCksbDxpJiYoaT1sKSx1PG4mJihuPXUpLHI8aCYmKHI9aCksYTxsJiYoYT1sKSxvPHUmJihvPXUpfXRoaXMubWluLnNldChlLGksbiksdGhpcy5tYXguc2V0KHIsYSxvKX0sc2V0RnJvbVBvaW50czpmdW5jdGlvbih0KXt0aGlzLm1ha2VFbXB0eSgpO2Zvcih2YXIgZT0wLGk9dC5sZW5ndGg7ZTxpO2UrKyl0aGlzLmV4cGFuZEJ5UG9pbnQodFtlXSk7cmV0dXJuIHRoaXN9LHNldEZyb21DZW50ZXJBbmRTaXplOihHcj1uZXcgQ3QsZnVuY3Rpb24odCxlKXt2YXIgaT1Hci5jb3B5KGUpLm11bHRpcGx5U2NhbGFyKC41KTtyZXR1cm4gdGhpcy5taW4uY29weSh0KS5zdWIoaSksdGhpcy5tYXguY29weSh0KS5hZGQoaSksdGhpc30pLHNldEZyb21PYmplY3Q6KEJyPW5ldyBDdCxmdW5jdGlvbih0KXt2YXIgcj10aGlzO3JldHVybiB0LnVwZGF0ZU1hdHJpeFdvcmxkKCEwKSx0aGlzLm1ha2VFbXB0eSgpLHQudHJhdmVyc2UoZnVuY3Rpb24odCl7dmFyIGUsaTtpZih2b2lkIDAhPT0oZT10Lmdlb21ldHJ5KSlpZihlLmlzR2VvbWV0cnkpe3ZhciBuPWUudmVydGljZXM7Zm9yKGU9MCxpPW4ubGVuZ3RoO2U8aTtlKyspQnIuY29weShuW2VdKSxCci5hcHBseU1hdHJpeDQodC5tYXRyaXhXb3JsZCksci5leHBhbmRCeVBvaW50KEJyKX1lbHNlIGlmKGUuaXNCdWZmZXJHZW9tZXRyeSYmdm9pZCAwIT09KG49ZS5hdHRyaWJ1dGVzLnBvc2l0aW9uKSlmb3IoZT0wLGk9bi5jb3VudDtlPGk7ZSsrKUJyLmZyb21BdHRyaWJ1dGUobixlKS5hcHBseU1hdHJpeDQodC5tYXRyaXhXb3JsZCksci5leHBhbmRCeVBvaW50KEJyKX0pLHRoaXN9KSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5taW4uY29weSh0Lm1pbiksdGhpcy5tYXguY29weSh0Lm1heCksdGhpc30sbWFrZUVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWluLng9dGhpcy5taW4ueT10aGlzLm1pbi56PTEvMCx0aGlzLm1heC54PXRoaXMubWF4Lnk9dGhpcy5tYXguej0tMS8wLHRoaXN9LGlzRW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXgueDx0aGlzLm1pbi54fHx0aGlzLm1heC55PHRoaXMubWluLnl8fHRoaXMubWF4Lno8dGhpcy5taW4uen0sZ2V0Q2VudGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBDdCx0aGlzLmlzRW1wdHkoKT90LnNldCgwLDAsMCk6dC5hZGRWZWN0b3JzKHRoaXMubWluLHRoaXMubWF4KS5tdWx0aXBseVNjYWxhciguNSl9LGdldFNpemU6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8bmV3IEN0LHRoaXMuaXNFbXB0eSgpP3Quc2V0KDAsMCwwKTp0LnN1YlZlY3RvcnModGhpcy5tYXgsdGhpcy5taW4pfSxleHBhbmRCeVBvaW50OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5taW4odCksdGhpcy5tYXgubWF4KHQpLHRoaXN9LGV4cGFuZEJ5VmVjdG9yOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5zdWIodCksdGhpcy5tYXguYWRkKHQpLHRoaXN9LGV4cGFuZEJ5U2NhbGFyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5hZGRTY2FsYXIoLXQpLHRoaXMubWF4LmFkZFNjYWxhcih0KSx0aGlzfSxjb250YWluc1BvaW50OmZ1bmN0aW9uKHQpe3JldHVybiEodC54PHRoaXMubWluLnh8fHQueD50aGlzLm1heC54fHx0Lnk8dGhpcy5taW4ueXx8dC55PnRoaXMubWF4Lnl8fHQuejx0aGlzLm1pbi56fHx0Lno+dGhpcy5tYXgueil9LGNvbnRhaW5zQm94OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi54PD10Lm1pbi54JiZ0Lm1heC54PD10aGlzLm1heC54JiZ0aGlzLm1pbi55PD10Lm1pbi55JiZ0Lm1heC55PD10aGlzLm1heC55JiZ0aGlzLm1pbi56PD10Lm1pbi56JiZ0Lm1heC56PD10aGlzLm1heC56fSxnZXRQYXJhbWV0ZXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4oZXx8bmV3IEN0KS5zZXQoKHQueC10aGlzLm1pbi54KS8odGhpcy5tYXgueC10aGlzLm1pbi54KSwodC55LXRoaXMubWluLnkpLyh0aGlzLm1heC55LXRoaXMubWluLnkpLCh0LnotdGhpcy5taW4ueikvKHRoaXMubWF4LnotdGhpcy5taW4ueikpfSxpbnRlcnNlY3RzQm94OmZ1bmN0aW9uKHQpe3JldHVybiEodC5tYXgueDx0aGlzLm1pbi54fHx0Lm1pbi54PnRoaXMubWF4Lnh8fHQubWF4Lnk8dGhpcy5taW4ueXx8dC5taW4ueT50aGlzLm1heC55fHx0Lm1heC56PHRoaXMubWluLnp8fHQubWluLno+dGhpcy5tYXgueil9LGludGVyc2VjdHNTcGhlcmU6ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXpyJiYoenI9bmV3IEN0KSx0aGlzLmNsYW1wUG9pbnQodC5jZW50ZXIsenIpLHpyLmRpc3RhbmNlVG9TcXVhcmVkKHQuY2VudGVyKTw9dC5yYWRpdXMqdC5yYWRpdXN9LGludGVyc2VjdHNQbGFuZTpmdW5jdGlvbih0KXt2YXIgZSxpO3JldHVybiBpPTA8dC5ub3JtYWwueD8oZT10Lm5vcm1hbC54KnRoaXMubWluLngsdC5ub3JtYWwueCp0aGlzLm1heC54KTooZT10Lm5vcm1hbC54KnRoaXMubWF4LngsdC5ub3JtYWwueCp0aGlzLm1pbi54KSwwPHQubm9ybWFsLnk/KGUrPXQubm9ybWFsLnkqdGhpcy5taW4ueSxpKz10Lm5vcm1hbC55KnRoaXMubWF4LnkpOihlKz10Lm5vcm1hbC55KnRoaXMubWF4LnksaSs9dC5ub3JtYWwueSp0aGlzLm1pbi55KSwwPHQubm9ybWFsLno/KGUrPXQubm9ybWFsLnoqdGhpcy5taW4ueixpKz10Lm5vcm1hbC56KnRoaXMubWF4LnopOihlKz10Lm5vcm1hbC56KnRoaXMubWF4LnosaSs9dC5ub3JtYWwueip0aGlzLm1pbi56KSxlPD10LmNvbnN0YW50JiZpPj10LmNvbnN0YW50fSxjbGFtcFBvaW50OmZ1bmN0aW9uKHQsZSl7cmV0dXJuKGV8fG5ldyBDdCkuY29weSh0KS5jbGFtcCh0aGlzLm1pbix0aGlzLm1heCl9LGRpc3RhbmNlVG9Qb2ludDooRnI9bmV3IEN0LGZ1bmN0aW9uKHQpe3JldHVybiBGci5jb3B5KHQpLmNsYW1wKHRoaXMubWluLHRoaXMubWF4KS5zdWIodCkubGVuZ3RoKCl9KSxnZXRCb3VuZGluZ1NwaGVyZTooT3I9bmV3IEN0LGZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyB6dCx0aGlzLmdldENlbnRlcih0LmNlbnRlciksdC5yYWRpdXM9LjUqdGhpcy5nZXRTaXplKE9yKS5sZW5ndGgoKSx0fSksaW50ZXJzZWN0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5tYXgodC5taW4pLHRoaXMubWF4Lm1pbih0Lm1heCksdGhpcy5pc0VtcHR5KCkmJnRoaXMubWFrZUVtcHR5KCksdGhpc30sdW5pb246ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubWluLm1pbih0Lm1pbiksdGhpcy5tYXgubWF4KHQubWF4KSx0aGlzfSxhcHBseU1hdHJpeDQ6KERyPVtuZXcgQ3QsbmV3IEN0LG5ldyBDdCxuZXcgQ3QsbmV3IEN0LG5ldyBDdCxuZXcgQ3QsbmV3IEN0XSxmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5pc0VtcHR5KCl8fChEclswXS5zZXQodGhpcy5taW4ueCx0aGlzLm1pbi55LHRoaXMubWluLnopLmFwcGx5TWF0cml4NCh0KSxEclsxXS5zZXQodGhpcy5taW4ueCx0aGlzLm1pbi55LHRoaXMubWF4LnopLmFwcGx5TWF0cml4NCh0KSxEclsyXS5zZXQodGhpcy5taW4ueCx0aGlzLm1heC55LHRoaXMubWluLnopLmFwcGx5TWF0cml4NCh0KSxEclszXS5zZXQodGhpcy5taW4ueCx0aGlzLm1heC55LHRoaXMubWF4LnopLmFwcGx5TWF0cml4NCh0KSxEcls0XS5zZXQodGhpcy5tYXgueCx0aGlzLm1pbi55LHRoaXMubWluLnopLmFwcGx5TWF0cml4NCh0KSxEcls1XS5zZXQodGhpcy5tYXgueCx0aGlzLm1pbi55LHRoaXMubWF4LnopLmFwcGx5TWF0cml4NCh0KSxEcls2XS5zZXQodGhpcy5tYXgueCx0aGlzLm1heC55LHRoaXMubWluLnopLmFwcGx5TWF0cml4NCh0KSxEcls3XS5zZXQodGhpcy5tYXgueCx0aGlzLm1heC55LHRoaXMubWF4LnopLmFwcGx5TWF0cml4NCh0KSx0aGlzLnNldEZyb21Qb2ludHMoRHIpKSx0aGlzfSksdHJhbnNsYXRlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1pbi5hZGQodCksdGhpcy5tYXguYWRkKHQpLHRoaXN9LGVxdWFsczpmdW5jdGlvbih0KXtyZXR1cm4gdC5taW4uZXF1YWxzKHRoaXMubWluKSYmdC5tYXguZXF1YWxzKHRoaXMubWF4KX19LHp0LnByb3RvdHlwZT17Y29uc3RydWN0b3I6enQsc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY2VudGVyLmNvcHkodCksdGhpcy5yYWRpdXM9ZSx0aGlzfSxzZXRGcm9tUG9pbnRzOihIcj1uZXcgRCxmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuY2VudGVyO3ZvaWQgMCE9PWU/aS5jb3B5KGUpOkhyLnNldEZyb21Qb2ludHModCkuZ2V0Q2VudGVyKGkpO2Zvcih2YXIgbj0wLHI9MCxhPXQubGVuZ3RoO3I8YTtyKyspbj1NYXRoLm1heChuLGkuZGlzdGFuY2VUb1NxdWFyZWQodFtyXSkpO3JldHVybiB0aGlzLnJhZGl1cz1NYXRoLnNxcnQobiksdGhpc30pLGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyB0aGlzLmNvbnN0cnVjdG9yKS5jb3B5KHRoaXMpfSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNlbnRlci5jb3B5KHQuY2VudGVyKSx0aGlzLnJhZGl1cz10LnJhZGl1cyx0aGlzfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnJhZGl1czw9MH0sY29udGFpbnNQb2ludDpmdW5jdGlvbih0KXtyZXR1cm4gdC5kaXN0YW5jZVRvU3F1YXJlZCh0aGlzLmNlbnRlcik8PXRoaXMucmFkaXVzKnRoaXMucmFkaXVzfSxkaXN0YW5jZVRvUG9pbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQuZGlzdGFuY2VUbyh0aGlzLmNlbnRlciktdGhpcy5yYWRpdXN9LGludGVyc2VjdHNTcGhlcmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5yYWRpdXMrdC5yYWRpdXM7cmV0dXJuIHQuY2VudGVyLmRpc3RhbmNlVG9TcXVhcmVkKHRoaXMuY2VudGVyKTw9ZSplfSxpbnRlcnNlY3RzQm94OmZ1bmN0aW9uKHQpe3JldHVybiB0LmludGVyc2VjdHNTcGhlcmUodGhpcyl9LGludGVyc2VjdHNQbGFuZTpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5hYnModGhpcy5jZW50ZXIuZG90KHQubm9ybWFsKS10LmNvbnN0YW50KTw9dGhpcy5yYWRpdXN9LGNsYW1wUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmNlbnRlci5kaXN0YW5jZVRvU3F1YXJlZCh0KSxuPWV8fG5ldyBDdDtyZXR1cm4gbi5jb3B5KHQpLGk+dGhpcy5yYWRpdXMqdGhpcy5yYWRpdXMmJihuLnN1Yih0aGlzLmNlbnRlcikubm9ybWFsaXplKCksbi5tdWx0aXBseVNjYWxhcih0aGlzLnJhZGl1cykuYWRkKHRoaXMuY2VudGVyKSksbn0sZ2V0Qm91bmRpbmdCb3g6ZnVuY3Rpb24odCl7cmV0dXJuKHQ9dHx8bmV3IEQpLnNldCh0aGlzLmNlbnRlcix0aGlzLmNlbnRlciksdC5leHBhbmRCeVNjYWxhcih0aGlzLnJhZGl1cyksdH0sYXBwbHlNYXRyaXg0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNlbnRlci5hcHBseU1hdHJpeDQodCksdGhpcy5yYWRpdXMqPXQuZ2V0TWF4U2NhbGVPbkF4aXMoKSx0aGlzfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2VudGVyLmFkZCh0KSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQuY2VudGVyLmVxdWFscyh0aGlzLmNlbnRlcikmJnQucmFkaXVzPT09dGhpcy5yYWRpdXN9fSxGLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Rixpc01hdHJpeDM6ITAsc2V0OmZ1bmN0aW9uKHQsZSxpLG4scixhLG8scyxjKXt2YXIgaD10aGlzLmVsZW1lbnRzO3JldHVybiBoWzBdPXQsaFsxXT1uLGhbMl09byxoWzNdPWUsaFs0XT1yLGhbNV09cyxoWzZdPWksaFs3XT1hLGhbOF09Yyx0aGlzfSxpZGVudGl0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldCgxLDAsMCwwLDEsMCwwLDAsMSksdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmZyb21BcnJheSh0aGlzLmVsZW1lbnRzKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdD10LmVsZW1lbnRzLHRoaXMuc2V0KHRbMF0sdFszXSx0WzZdLHRbMV0sdFs0XSx0WzddLHRbMl0sdFs1XSx0WzhdKSx0aGlzfSxzZXRGcm9tTWF0cml4NDpmdW5jdGlvbih0KXtyZXR1cm4gdD10LmVsZW1lbnRzLHRoaXMuc2V0KHRbMF0sdFs0XSx0WzhdLHRbMV0sdFs1XSx0WzldLHRbMl0sdFs2XSx0WzEwXSksdGhpc30sYXBwbHlUb1ZlY3RvcjNBcnJheTpmdW5jdGlvbih0LGUsaSl7dm9pZCAwPT09a3ImJihrcj1uZXcgQ3QpLHZvaWQgMD09PWUmJihlPTApLHZvaWQgMD09PWkmJihpPXQubGVuZ3RoKTtmb3IodmFyIG49MDtuPGk7bis9MyxlKz0zKWtyLmZyb21BcnJheSh0LGUpLGtyLmFwcGx5TWF0cml4Myh0aGlzKSxrci50b0FycmF5KHQsZSk7cmV0dXJuIHR9LGFwcGx5VG9CdWZmZXJBdHRyaWJ1dGU6ZnVuY3Rpb24odCl7dm9pZCAwPT09VnImJihWcj1uZXcgQ3QpO2Zvcih2YXIgZT0wLGk9dC5jb3VudDtlPGk7ZSsrKVZyLng9dC5nZXRYKGUpLFZyLnk9dC5nZXRZKGUpLFZyLno9dC5nZXRaKGUpLFZyLmFwcGx5TWF0cml4Myh0aGlzKSx0LnNldFhZWihlLFZyLngsVnIueSxWci56KTtyZXR1cm4gdH0sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50cztyZXR1cm4gZVswXSo9dCxlWzNdKj10LGVbNl0qPXQsZVsxXSo9dCxlWzRdKj10LGVbN10qPXQsZVsyXSo9dCxlWzVdKj10LGVbOF0qPXQsdGhpc30sZGV0ZXJtaW5hbnQ6ZnVuY3Rpb24oKXt2YXIgdCxlPSh0PXRoaXMuZWxlbWVudHMpWzBdLGk9dFsxXSxuPXRbMl0scj10WzNdLGE9dFs0XSxvPXRbNV0scz10WzZdLGM9dFs3XTtyZXR1cm4gZSphKih0PXRbOF0pLWUqbypjLWkqcip0K2kqbypzK24qcipjLW4qYSpzfSxnZXRJbnZlcnNlOmZ1bmN0aW9uKHQsZSl7dCYmdC5pc01hdHJpeDQmJmNvbnNvbGUuZXJyb3IoIlRIUkVFLk1hdHJpeDMuZ2V0SW52ZXJzZSBubyBsb25nZXIgdGFrZXMgYSBNYXRyaXg0IGFyZ3VtZW50LiIpO3ZhciBpPXQuZWxlbWVudHMsbj10aGlzLmVsZW1lbnRzLHI9aVswXSxhPWlbMV0sbz1pWzJdLHM9aVszXSxjPWlbNF0saD1pWzVdLGw9aVs2XSx1PWlbN10sZD0oaT1pWzhdKSpjLWgqdSxwPWgqbC1pKnMsZj11KnMtYypsLG09cipkK2EqcCtvKmY7aWYoMCE9PW0pcmV0dXJuIG09MS9tLG5bMF09ZCptLG5bMV09KG8qdS1pKmEpKm0sblsyXT0oaCphLW8qYykqbSxuWzNdPXAqbSxuWzRdPShpKnItbypsKSptLG5bNV09KG8qcy1oKnIpKm0sbls2XT1mKm0sbls3XT0oYSpsLXUqcikqbSxuWzhdPShjKnItYSpzKSptLHRoaXM7aWYoITA9PT1lKXRocm93IEVycm9yKCJUSFJFRS5NYXRyaXgzLmdldEludmVyc2UoKTogY2FuJ3QgaW52ZXJ0IG1hdHJpeCwgZGV0ZXJtaW5hbnQgaXMgMCIpO3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdHJpeDMuZ2V0SW52ZXJzZSgpOiBjYW4ndCBpbnZlcnQgbWF0cml4LCBkZXRlcm1pbmFudCBpcyAwIiksdGhpcy5pZGVudGl0eSgpfSx0cmFuc3Bvc2U6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuZWxlbWVudHM7cmV0dXJuIHQ9ZVsxXSxlWzFdPWVbM10sZVszXT10LHQ9ZVsyXSxlWzJdPWVbNl0sZVs2XT10LHQ9ZVs1XSxlWzVdPWVbN10sZVs3XT10LHRoaXN9LGdldE5vcm1hbE1hdHJpeDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXRGcm9tTWF0cml4NCh0KS5nZXRJbnZlcnNlKHRoaXMpLnRyYW5zcG9zZSgpfSx0cmFuc3Bvc2VJbnRvQXJyYXk6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50cztyZXR1cm4gdFswXT1lWzBdLHRbMV09ZVszXSx0WzJdPWVbNl0sdFszXT1lWzFdLHRbNF09ZVs0XSx0WzVdPWVbN10sdFs2XT1lWzJdLHRbN109ZVs1XSx0WzhdPWVbOF0sdGhpc30sZnJvbUFycmF5OmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9MCk7Zm9yKHZhciBpPTA7aTw5O2krKyl0aGlzLmVsZW1lbnRzW2ldPXRbaStlXTtyZXR1cm4gdGhpc30sdG9BcnJheTpmdW5jdGlvbih0LGUpe3ZvaWQgMD09PXQmJih0PVtdKSx2b2lkIDA9PT1lJiYoZT0wKTt2YXIgaT10aGlzLmVsZW1lbnRzO3JldHVybiB0W2VdPWlbMF0sdFtlKzFdPWlbMV0sdFtlKzJdPWlbMl0sdFtlKzNdPWlbM10sdFtlKzRdPWlbNF0sdFtlKzVdPWlbNV0sdFtlKzZdPWlbNl0sdFtlKzddPWlbN10sdFtlKzhdPWlbOF0sdH19LEgucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpILHNldDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLm5vcm1hbC5jb3B5KHQpLHRoaXMuY29uc3RhbnQ9ZSx0aGlzfSxzZXRDb21wb25lbnRzOmZ1bmN0aW9uKHQsZSxpLG4pe3JldHVybiB0aGlzLm5vcm1hbC5zZXQodCxlLGkpLHRoaXMuY29uc3RhbnQ9bix0aGlzfSxzZXRGcm9tTm9ybWFsQW5kQ29wbGFuYXJQb2ludDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLm5vcm1hbC5jb3B5KHQpLHRoaXMuY29uc3RhbnQ9LWUuZG90KHRoaXMubm9ybWFsKSx0aGlzfSxzZXRGcm9tQ29wbGFuYXJQb2ludHM6KFlyPW5ldyBDdCxxcj1uZXcgQ3QsZnVuY3Rpb24odCxlLGkpe3JldHVybiBlPVlyLnN1YlZlY3RvcnMoaSxlKS5jcm9zcyhxci5zdWJWZWN0b3JzKHQsZSkpLm5vcm1hbGl6ZSgpLHRoaXMuc2V0RnJvbU5vcm1hbEFuZENvcGxhbmFyUG9pbnQoZSx0KSx0aGlzfSksY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmNvcHkodGhpcyl9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubm9ybWFsLmNvcHkodC5ub3JtYWwpLHRoaXMuY29uc3RhbnQ9dC5jb25zdGFudCx0aGlzfSxub3JtYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD0xL3RoaXMubm9ybWFsLmxlbmd0aCgpO3JldHVybiB0aGlzLm5vcm1hbC5tdWx0aXBseVNjYWxhcih0KSx0aGlzLmNvbnN0YW50Kj10LHRoaXN9LG5lZ2F0ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbnN0YW50Kj0tMSx0aGlzLm5vcm1hbC5uZWdhdGUoKSx0aGlzfSxkaXN0YW5jZVRvUG9pbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubm9ybWFsLmRvdCh0KSt0aGlzLmNvbnN0YW50fSxkaXN0YW5jZVRvU3BoZXJlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRpc3RhbmNlVG9Qb2ludCh0LmNlbnRlciktdC5yYWRpdXN9LHByb2plY3RQb2ludDpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLm9ydGhvUG9pbnQodCxlKS5zdWIodCkubmVnYXRlKCl9LG9ydGhvUG9pbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmRpc3RhbmNlVG9Qb2ludCh0KTtyZXR1cm4oZXx8bmV3IEN0KS5jb3B5KHRoaXMubm9ybWFsKS5tdWx0aXBseVNjYWxhcihpKX0saW50ZXJzZWN0TGluZTooWHI9bmV3IEN0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9ZXx8bmV3IEN0LG49dC5kZWx0YShYcikscj10aGlzLm5vcm1hbC5kb3Qobik7cmV0dXJuIDAhPT1yPyhyPS0odC5zdGFydC5kb3QodGhpcy5ub3JtYWwpK3RoaXMuY29uc3RhbnQpL3IpPDB8fDE8cj92b2lkIDA6aS5jb3B5KG4pLm11bHRpcGx5U2NhbGFyKHIpLmFkZCh0LnN0YXJ0KTowPT09dGhpcy5kaXN0YW5jZVRvUG9pbnQodC5zdGFydCk/aS5jb3B5KHQuc3RhcnQpOnZvaWQgMH0pLGludGVyc2VjdHNMaW5lOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZGlzdGFuY2VUb1BvaW50KHQuc3RhcnQpO3JldHVybiB0PXRoaXMuZGlzdGFuY2VUb1BvaW50KHQuZW5kKSxlPDAmJjA8dHx8dDwwJiYwPGV9LGludGVyc2VjdHNCb3g6ZnVuY3Rpb24odCl7cmV0dXJuIHQuaW50ZXJzZWN0c1BsYW5lKHRoaXMpfSxpbnRlcnNlY3RzU3BoZXJlOmZ1bmN0aW9uKHQpe3JldHVybiB0LmludGVyc2VjdHNQbGFuZSh0aGlzKX0sY29wbGFuYXJQb2ludDpmdW5jdGlvbih0KXtyZXR1cm4odHx8bmV3IEN0KS5jb3B5KHRoaXMubm9ybWFsKS5tdWx0aXBseVNjYWxhcigtdGhpcy5jb25zdGFudCl9LGFwcGx5TWF0cml4NDooanI9bmV3IEN0LFdyPW5ldyBGLGZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5jb3BsYW5hclBvaW50KGpyKS5hcHBseU1hdHJpeDQodCksbj1lfHxXci5nZXROb3JtYWxNYXRyaXgodCk7cmV0dXJuIG49dGhpcy5ub3JtYWwuYXBwbHlNYXRyaXgzKG4pLm5vcm1hbGl6ZSgpLHRoaXMuY29uc3RhbnQ9LWkuZG90KG4pLHRoaXN9KSx0cmFuc2xhdGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY29uc3RhbnQtPXQuZG90KHRoaXMubm9ybWFsKSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQubm9ybWFsLmVxdWFscyh0aGlzLm5vcm1hbCkmJnQuY29uc3RhbnQ9PT10aGlzLmNvbnN0YW50fX0sQnQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpCdCxzZXQ6ZnVuY3Rpb24odCxlLGksbixyLGEpe3ZhciBvPXRoaXMucGxhbmVzO3JldHVybiBvWzBdLmNvcHkodCksb1sxXS5jb3B5KGUpLG9bMl0uY29weShpKSxvWzNdLmNvcHkobiksb1s0XS5jb3B5KHIpLG9bNV0uY29weShhKSx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sY29weTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5wbGFuZXMsaT0wO2k8NjtpKyspZVtpXS5jb3B5KHQucGxhbmVzW2ldKTtyZXR1cm4gdGhpc30sc2V0RnJvbU1hdHJpeDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBsYW5lczt0PShnPXQuZWxlbWVudHMpWzBdO3ZhciBpPWdbMV0sbj1nWzJdLHI9Z1szXSxhPWdbNF0sbz1nWzVdLHM9Z1s2XSxjPWdbN10saD1nWzhdLGw9Z1s5XSx1PWdbMTBdLGQ9Z1sxMV0scD1nWzEyXSxmPWdbMTNdLG09Z1sxNF0sZz1nWzE1XTtyZXR1cm4gZVswXS5zZXRDb21wb25lbnRzKHItdCxjLWEsZC1oLGctcCkubm9ybWFsaXplKCksZVsxXS5zZXRDb21wb25lbnRzKHIrdCxjK2EsZCtoLGcrcCkubm9ybWFsaXplKCksZVsyXS5zZXRDb21wb25lbnRzKHIraSxjK28sZCtsLGcrZikubm9ybWFsaXplKCksZVszXS5zZXRDb21wb25lbnRzKHItaSxjLW8sZC1sLGctZikubm9ybWFsaXplKCksZVs0XS5zZXRDb21wb25lbnRzKHItbixjLXMsZC11LGctbSkubm9ybWFsaXplKCksZVs1XS5zZXRDb21wb25lbnRzKHIrbixjK3MsZCt1LGcrbSkubm9ybWFsaXplKCksdGhpc30saW50ZXJzZWN0c09iamVjdDooS3I9bmV3IHp0LGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2VvbWV0cnk7cmV0dXJuIG51bGw9PT1lLmJvdW5kaW5nU3BoZXJlJiZlLmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpLEtyLmNvcHkoZS5ib3VuZGluZ1NwaGVyZSkuYXBwbHlNYXRyaXg0KHQubWF0cml4V29ybGQpLHRoaXMuaW50ZXJzZWN0c1NwaGVyZShLcil9KSxpbnRlcnNlY3RzU3ByaXRlOihRcj1uZXcgenQsZnVuY3Rpb24odCl7cmV0dXJuIFFyLmNlbnRlci5zZXQoMCwwLDApLFFyLnJhZGl1cz0uNzA3MTA2NzgxMTg2NTQ3NixRci5hcHBseU1hdHJpeDQodC5tYXRyaXhXb3JsZCksdGhpcy5pbnRlcnNlY3RzU3BoZXJlKFFyKX0pLGludGVyc2VjdHNTcGhlcmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wbGFuZXMsaT10LmNlbnRlcjt0PS10LnJhZGl1cztmb3IodmFyIG49MDtuPDY7bisrKWlmKGVbbl0uZGlzdGFuY2VUb1BvaW50KGkpPHQpcmV0dXJuITE7cmV0dXJuITB9LGludGVyc2VjdHNCb3g6KFpyPW5ldyBDdCxKcj1uZXcgQ3QsZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMucGxhbmVzLGk9MDtpPDY7aSsrKXt2YXIgbj1lW2ldO1pyLng9MDxuLm5vcm1hbC54P3QubWluLng6dC5tYXgueCxKci54PTA8bi5ub3JtYWwueD90Lm1heC54OnQubWluLngsWnIueT0wPG4ubm9ybWFsLnk/dC5taW4ueTp0Lm1heC55LEpyLnk9MDxuLm5vcm1hbC55P3QubWF4Lnk6dC5taW4ueSxaci56PTA8bi5ub3JtYWwuej90Lm1pbi56OnQubWF4LnosSnIuej0wPG4ubm9ybWFsLno/dC5tYXguejp0Lm1pbi56O3ZhciByPW4uZGlzdGFuY2VUb1BvaW50KFpyKTtpZihuPW4uZGlzdGFuY2VUb1BvaW50KEpyKSxyPDAmJm48MClyZXR1cm4hMX1yZXR1cm4hMH0pLGNvbnRhaW5zUG9pbnQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMucGxhbmVzLGk9MDtpPDY7aSsrKWlmKGVbaV0uZGlzdGFuY2VUb1BvaW50KHQpPDApcmV0dXJuITE7cmV0dXJuITB9fSxrLnByb3RvdHlwZT17Y29uc3RydWN0b3I6ayxzZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5vcmlnaW4uY29weSh0KSx0aGlzLmRpcmVjdGlvbi5jb3B5KGUpLHRoaXN9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyB0aGlzLmNvbnN0cnVjdG9yKS5jb3B5KHRoaXMpfSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9yaWdpbi5jb3B5KHQub3JpZ2luKSx0aGlzLmRpcmVjdGlvbi5jb3B5KHQuZGlyZWN0aW9uKSx0aGlzfSxhdDpmdW5jdGlvbih0LGUpe3JldHVybihlfHxuZXcgQ3QpLmNvcHkodGhpcy5kaXJlY3Rpb24pLm11bHRpcGx5U2NhbGFyKHQpLmFkZCh0aGlzLm9yaWdpbil9LGxvb2tBdDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kaXJlY3Rpb24uY29weSh0KS5zdWIodGhpcy5vcmlnaW4pLm5vcm1hbGl6ZSgpLHRoaXN9LHJlY2FzdDooaGE9bmV3IEN0LGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9yaWdpbi5jb3B5KHRoaXMuYXQodCxoYSkpLHRoaXN9KSxjbG9zZXN0UG9pbnRUb1BvaW50OmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZXx8bmV3IEN0O2kuc3ViVmVjdG9ycyh0LHRoaXMub3JpZ2luKTt2YXIgbj1pLmRvdCh0aGlzLmRpcmVjdGlvbik7cmV0dXJuIG48MD9pLmNvcHkodGhpcy5vcmlnaW4pOmkuY29weSh0aGlzLmRpcmVjdGlvbikubXVsdGlwbHlTY2FsYXIobikuYWRkKHRoaXMub3JpZ2luKX0sZGlzdGFuY2VUb1BvaW50OmZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNxcnQodGhpcy5kaXN0YW5jZVNxVG9Qb2ludCh0KSl9LGRpc3RhbmNlU3FUb1BvaW50OihjYT1uZXcgQ3QsZnVuY3Rpb24odCl7dmFyIGU9Y2Euc3ViVmVjdG9ycyh0LHRoaXMub3JpZ2luKS5kb3QodGhpcy5kaXJlY3Rpb24pO3JldHVybiBlPDA/dGhpcy5vcmlnaW4uZGlzdGFuY2VUb1NxdWFyZWQodCk6KGNhLmNvcHkodGhpcy5kaXJlY3Rpb24pLm11bHRpcGx5U2NhbGFyKGUpLmFkZCh0aGlzLm9yaWdpbiksY2EuZGlzdGFuY2VUb1NxdWFyZWQodCkpfSksZGlzdGFuY2VTcVRvU2VnbWVudDooYWE9bmV3IEN0LG9hPW5ldyBDdCxzYT1uZXcgQ3QsZnVuY3Rpb24odCxlLGksbil7YWEuY29weSh0KS5hZGQoZSkubXVsdGlwbHlTY2FsYXIoLjUpLG9hLmNvcHkoZSkuc3ViKHQpLm5vcm1hbGl6ZSgpLHNhLmNvcHkodGhpcy5vcmlnaW4pLnN1YihhYSk7dmFyIHIsYT0uNSp0LmRpc3RhbmNlVG8oZSksbz0tdGhpcy5kaXJlY3Rpb24uZG90KG9hKSxzPXNhLmRvdCh0aGlzLmRpcmVjdGlvbiksYz0tc2EuZG90KG9hKSxoPXNhLmxlbmd0aFNxKCksbD1NYXRoLmFicygxLW8qbyk7cmV0dXJuIG89MDxsPyhlPW8qcy1jLHI9YSpsLDA8PSh0PW8qYy1zKT8tcjw9ZT9lPD1yPyh0Kj1hPTEvbCkqKHQrbyooZSo9YSkrMipzKStlKihvKnQrZSsyKmMpK2g6KGU9YSwtKHQ9TWF0aC5tYXgoMCwtKG8qZStzKSkpKnQrZSooZSsyKmMpK2gpOihlPS1hLC0odD1NYXRoLm1heCgwLC0obyplK3MpKSkqdCtlKihlKzIqYykraCk6ZTw9LXI/LSh0PU1hdGgubWF4KDAsLSgtbyphK3MpKSkqdCsoZT0wPHQ/LWE6TWF0aC5taW4oTWF0aC5tYXgoLWEsLWMpLGEpKSooZSsyKmMpK2g6ZTw9cj8odD0wLChlPU1hdGgubWluKE1hdGgubWF4KC1hLC1jKSxhKSkqKGUrMipjKStoKTotKHQ9TWF0aC5tYXgoMCwtKG8qYStzKSkpKnQrKGU9MDx0P2E6TWF0aC5taW4oTWF0aC5tYXgoLWEsLWMpLGEpKSooZSsyKmMpK2gpOihlPTA8bz8tYTphLC0odD1NYXRoLm1heCgwLC0obyplK3MpKSkqdCtlKihlKzIqYykraCksaSYmaS5jb3B5KHRoaXMuZGlyZWN0aW9uKS5tdWx0aXBseVNjYWxhcih0KS5hZGQodGhpcy5vcmlnaW4pLG4mJm4uY29weShvYSkubXVsdGlwbHlTY2FsYXIoZSkuYWRkKGFhKSxvfSksaW50ZXJzZWN0U3BoZXJlOihyYT1uZXcgQ3QsZnVuY3Rpb24odCxlKXtyYS5zdWJWZWN0b3JzKHQuY2VudGVyLHRoaXMub3JpZ2luKTt2YXIgaT1yYS5kb3QodGhpcy5kaXJlY3Rpb24pLG49cmEuZG90KHJhKS1pKmkscj10LnJhZGl1cyp0LnJhZGl1cztyZXR1cm4gcjxuP251bGw6KG49aS0ocj1NYXRoLnNxcnQoci1uKSksaSs9cixuPDAmJmk8MD9udWxsOm48MD90aGlzLmF0KGksZSk6dGhpcy5hdChuLGUpKX0pLGludGVyc2VjdHNTcGhlcmU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGlzdGFuY2VUb1BvaW50KHQuY2VudGVyKTw9dC5yYWRpdXN9LGRpc3RhbmNlVG9QbGFuZTpmdW5jdGlvbih0KXt2YXIgZT10Lm5vcm1hbC5kb3QodGhpcy5kaXJlY3Rpb24pO3JldHVybiAwPT09ZT8wPT09dC5kaXN0YW5jZVRvUG9pbnQodGhpcy5vcmlnaW4pPzA6bnVsbDowPD0odD0tKHRoaXMub3JpZ2luLmRvdCh0Lm5vcm1hbCkrdC5jb25zdGFudCkvZSk/dDpudWxsfSxpbnRlcnNlY3RQbGFuZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuZGlzdGFuY2VUb1BsYW5lKHQpO3JldHVybiBudWxsPT09aT9udWxsOnRoaXMuYXQoaSxlKX0saW50ZXJzZWN0c1BsYW5lOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZGlzdGFuY2VUb1BvaW50KHRoaXMub3JpZ2luKTtyZXR1cm4gMD09PWV8fHQubm9ybWFsLmRvdCh0aGlzLmRpcmVjdGlvbikqZTwwfSxpbnRlcnNlY3RCb3g6ZnVuY3Rpb24odCxlKXt2YXIgaSxuLHIsYSxvO249MS90aGlzLmRpcmVjdGlvbi54LGE9MS90aGlzLmRpcmVjdGlvbi55LG89MS90aGlzLmRpcmVjdGlvbi56O3ZhciBzPXRoaXMub3JpZ2luO3JldHVybiAwPD1uPyhpPSh0Lm1pbi54LXMueCkqbixuKj10Lm1heC54LXMueCk6KGk9KHQubWF4Lngtcy54KSpuLG4qPXQubWluLngtcy54KSwwPD1hPyhyPSh0Lm1pbi55LXMueSkqYSxhKj10Lm1heC55LXMueSk6KHI9KHQubWF4Lnktcy55KSphLGEqPXQubWluLnktcy55KSxhPGl8fG48cj9udWxsOigoaTxyfHxpIT1pKSYmKGk9ciksKGE8bnx8biE9bikmJihuPWEpLDA8PW8/KHI9KHQubWluLnotcy56KSpvLG8qPXQubWF4Lnotcy56KToocj0odC5tYXguei1zLnopKm8sbyo9dC5taW4uei1zLnopLG88aXx8bjxyP251bGw6KChpPHJ8fGkhPWkpJiYoaT1yKSwobzxufHxuIT1uKSYmKG49byksbjwwP251bGw6dGhpcy5hdCgwPD1pP2k6bixlKSkpfSxpbnRlcnNlY3RzQm94OihuYT1uZXcgQ3QsZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10aGlzLmludGVyc2VjdEJveCh0LG5hKX0pLGludGVyc2VjdFRyaWFuZ2xlOigkcj1uZXcgQ3QsdGE9bmV3IEN0LGVhPW5ldyBDdCxpYT1uZXcgQ3QsZnVuY3Rpb24odCxlLGksbixyKXtpZih0YS5zdWJWZWN0b3JzKGUsdCksZWEuc3ViVmVjdG9ycyhpLHQpLGlhLmNyb3NzVmVjdG9ycyh0YSxlYSksMDwoZT10aGlzLmRpcmVjdGlvbi5kb3QoaWEpKSl7aWYobilyZXR1cm4gbnVsbDtuPTF9ZWxzZXtpZighKGU8MCkpcmV0dXJuIG51bGw7bj0tMSxlPS1lfXJldHVybiAkci5zdWJWZWN0b3JzKHRoaXMub3JpZ2luLHQpLCh0PW4qdGhpcy5kaXJlY3Rpb24uZG90KGVhLmNyb3NzVmVjdG9ycygkcixlYSkpKTwwP251bGw6KGk9bip0aGlzLmRpcmVjdGlvbi5kb3QodGEuY3Jvc3MoJHIpKSk8MHx8ZTx0K2k/bnVsbDoodD0tbiokci5kb3QoaWEpKTwwP251bGw6dGhpcy5hdCh0L2Uscil9KSxhcHBseU1hdHJpeDQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGlyZWN0aW9uLmFkZCh0aGlzLm9yaWdpbikuYXBwbHlNYXRyaXg0KHQpLHRoaXMub3JpZ2luLmFwcGx5TWF0cml4NCh0KSx0aGlzLmRpcmVjdGlvbi5zdWIodGhpcy5vcmlnaW4pLHRoaXMuZGlyZWN0aW9uLm5vcm1hbGl6ZSgpLHRoaXN9LGVxdWFsczpmdW5jdGlvbih0KXtyZXR1cm4gdC5vcmlnaW4uZXF1YWxzKHRoaXMub3JpZ2luKSYmdC5kaXJlY3Rpb24uZXF1YWxzKHRoaXMuZGlyZWN0aW9uKX19LGouUm90YXRpb25PcmRlcnM9IlhZWiBZWlggWlhZIFhaWSBZWFogWllYIi5zcGxpdCgiICIpLGouRGVmYXVsdE9yZGVyPSJYWVoiLGoucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpqLGlzRXVsZXI6ITAsZ2V0IHgoKXtyZXR1cm4gdGhpcy5feH0sc2V0IHgodCl7dGhpcy5feD10LHRoaXMub25DaGFuZ2VDYWxsYmFjaygpfSxnZXQgeSgpe3JldHVybiB0aGlzLl95fSxzZXQgeSh0KXt0aGlzLl95PXQsdGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LGdldCB6KCl7cmV0dXJuIHRoaXMuX3p9LHNldCB6KHQpe3RoaXMuX3o9dCx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKX0sZ2V0IG9yZGVyKCl7cmV0dXJuIHRoaXMuX29yZGVyfSxzZXQgb3JkZXIodCl7dGhpcy5fb3JkZXI9dCx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKX0sc2V0OmZ1bmN0aW9uKHQsZSxpLG4pe3JldHVybiB0aGlzLl94PXQsdGhpcy5feT1lLHRoaXMuX3o9aSx0aGlzLl9vcmRlcj1ufHx0aGlzLl9vcmRlcix0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLl94LHRoaXMuX3ksdGhpcy5feix0aGlzLl9vcmRlcil9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3g9dC5feCx0aGlzLl95PXQuX3ksdGhpcy5fej10Ll96LHRoaXMuX29yZGVyPXQuX29yZGVyLHRoaXMub25DaGFuZ2VDYWxsYmFjaygpLHRoaXN9LHNldEZyb21Sb3RhdGlvbk1hdHJpeDpmdW5jdGlvbih0LGUsaSl7dmFyIG49ZXIuY2xhbXA7dD0odT10LmVsZW1lbnRzKVswXTt2YXIgcj11WzRdLGE9dVs4XSxvPXVbMV0scz11WzVdLGM9dVs5XSxoPXVbMl0sbD11WzZdLHU9dVsxMF07cmV0dXJuIlhZWiI9PT0oZT1lfHx0aGlzLl9vcmRlcik/KHRoaXMuX3k9TWF0aC5hc2luKG4oYSwtMSwxKSksTWF0aC5hYnMoYSk8Ljk5OTk5Pyh0aGlzLl94PU1hdGguYXRhbjIoLWMsdSksdGhpcy5fej1NYXRoLmF0YW4yKC1yLHQpKToodGhpcy5feD1NYXRoLmF0YW4yKGwscyksdGhpcy5fej0wKSk6IllYWiI9PT1lPyh0aGlzLl94PU1hdGguYXNpbigtbihjLC0xLDEpKSxNYXRoLmFicyhjKTwuOTk5OTk/KHRoaXMuX3k9TWF0aC5hdGFuMihhLHUpLHRoaXMuX3o9TWF0aC5hdGFuMihvLHMpKToodGhpcy5feT1NYXRoLmF0YW4yKC1oLHQpLHRoaXMuX3o9MCkpOiJaWFkiPT09ZT8odGhpcy5feD1NYXRoLmFzaW4obihsLC0xLDEpKSxNYXRoLmFicyhsKTwuOTk5OTk/KHRoaXMuX3k9TWF0aC5hdGFuMigtaCx1KSx0aGlzLl96PU1hdGguYXRhbjIoLXIscykpOih0aGlzLl95PTAsdGhpcy5fej1NYXRoLmF0YW4yKG8sdCkpKToiWllYIj09PWU/KHRoaXMuX3k9TWF0aC5hc2luKC1uKGgsLTEsMSkpLE1hdGguYWJzKGgpPC45OTk5OT8odGhpcy5feD1NYXRoLmF0YW4yKGwsdSksdGhpcy5fej1NYXRoLmF0YW4yKG8sdCkpOih0aGlzLl94PTAsdGhpcy5fej1NYXRoLmF0YW4yKC1yLHMpKSk6IllaWCI9PT1lPyh0aGlzLl96PU1hdGguYXNpbihuKG8sLTEsMSkpLE1hdGguYWJzKG8pPC45OTk5OT8odGhpcy5feD1NYXRoLmF0YW4yKC1jLHMpLHRoaXMuX3k9TWF0aC5hdGFuMigtaCx0KSk6KHRoaXMuX3g9MCx0aGlzLl95PU1hdGguYXRhbjIoYSx1KSkpOiJYWlkiPT09ZT8odGhpcy5fej1NYXRoLmFzaW4oLW4ociwtMSwxKSksTWF0aC5hYnMocik8Ljk5OTk5Pyh0aGlzLl94PU1hdGguYXRhbjIobCxzKSx0aGlzLl95PU1hdGguYXRhbjIoYSx0KSk6KHRoaXMuX3g9TWF0aC5hdGFuMigtYyx1KSx0aGlzLl95PTApKTpjb25zb2xlLndhcm4oIlRIUkVFLkV1bGVyOiAuc2V0RnJvbVJvdGF0aW9uTWF0cml4KCkgZ2l2ZW4gdW5zdXBwb3J0ZWQgb3JkZXI6ICIrZSksdGhpcy5fb3JkZXI9ZSwhMSE9PWkmJnRoaXMub25DaGFuZ2VDYWxsYmFjaygpLHRoaXN9LHNldEZyb21RdWF0ZXJuaW9uOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdm9pZCAwPT09dWEmJih1YT1uZXcgSXQpLHVhLm1ha2VSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKHQpLHRoaXMuc2V0RnJvbVJvdGF0aW9uTWF0cml4KHVhLGUsaSl9LHNldEZyb21WZWN0b3IzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuc2V0KHQueCx0LnksdC56LGV8fHRoaXMuX29yZGVyKX0scmVvcmRlcjoobGE9bmV3IHMsZnVuY3Rpb24odCl7cmV0dXJuIGxhLnNldEZyb21FdWxlcih0aGlzKSx0aGlzLnNldEZyb21RdWF0ZXJuaW9uKGxhLHQpfSksZXF1YWxzOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll94PT09dGhpcy5feCYmdC5feT09PXRoaXMuX3kmJnQuX3o9PT10aGlzLl96JiZ0Ll9vcmRlcj09PXRoaXMuX29yZGVyfSxmcm9tQXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3g9dFswXSx0aGlzLl95PXRbMV0sdGhpcy5fej10WzJdLHZvaWQgMCE9PXRbM10mJih0aGlzLl9vcmRlcj10WzNdKSx0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKSx0aGlzfSx0b0FycmF5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PVtdKSx2b2lkIDA9PT1lJiYoZT0wKSx0W2VdPXRoaXMuX3gsdFtlKzFdPXRoaXMuX3ksdFtlKzJdPXRoaXMuX3osdFtlKzNdPXRoaXMuX29yZGVyLHR9LHRvVmVjdG9yMzpmdW5jdGlvbih0KXtyZXR1cm4gdD90LnNldCh0aGlzLl94LHRoaXMuX3ksdGhpcy5feik6bmV3IEN0KHRoaXMuX3gsdGhpcy5feSx0aGlzLl96KX0sb25DaGFuZ2U6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub25DaGFuZ2VDYWxsYmFjaz10LHRoaXN9LG9uQ2hhbmdlQ2FsbGJhY2s6ZnVuY3Rpb24oKXt9fSxXLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VyxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5tYXNrPTE8PHR9LGVuYWJsZTpmdW5jdGlvbih0KXt0aGlzLm1hc2t8PTE8PHR9LHRvZ2dsZTpmdW5jdGlvbih0KXt0aGlzLm1hc2tePTE8PHR9LGRpc2FibGU6ZnVuY3Rpb24odCl7dGhpcy5tYXNrJj1+KDE8PHQpfSx0ZXN0OmZ1bmN0aW9uKHQpe3JldHVybiAwIT0odGhpcy5tYXNrJnQubWFzayl9fTt2YXIgcGEsZmEsbWEsZ2EsdmEseWEseGEsX2EsYmEsd2EsTWEsRWEsVGEsU2EsQWEsTGEsUmEsUGEsQ2EsSWEsVWEsTmEsRGEsT2EsRmEsemEsQmEsR2EsSGEsVmEsa2EsamEsV2EsWGEsWWEscWE9MDtYLkRlZmF1bHRVcD1uZXcgQ3QoMCwxLDApLFguRGVmYXVsdE1hdHJpeEF1dG9VcGRhdGU9ITAsT2JqZWN0LmFzc2lnbihYLnByb3RvdHlwZSxlLnByb3RvdHlwZSx7aXNPYmplY3QzRDohMCxhcHBseU1hdHJpeDpmdW5jdGlvbih0KXt0aGlzLm1hdHJpeC5tdWx0aXBseU1hdHJpY2VzKHQsdGhpcy5tYXRyaXgpLHRoaXMubWF0cml4LmRlY29tcG9zZSh0aGlzLnBvc2l0aW9uLHRoaXMucXVhdGVybmlvbix0aGlzLnNjYWxlKX0sc2V0Um90YXRpb25Gcm9tQXhpc0FuZ2xlOmZ1bmN0aW9uKHQsZSl7dGhpcy5xdWF0ZXJuaW9uLnNldEZyb21BeGlzQW5nbGUodCxlKX0sc2V0Um90YXRpb25Gcm9tRXVsZXI6ZnVuY3Rpb24odCl7dGhpcy5xdWF0ZXJuaW9uLnNldEZyb21FdWxlcih0LCEwKX0sc2V0Um90YXRpb25Gcm9tTWF0cml4OmZ1bmN0aW9uKHQpe3RoaXMucXVhdGVybmlvbi5zZXRGcm9tUm90YXRpb25NYXRyaXgodCl9LHNldFJvdGF0aW9uRnJvbVF1YXRlcm5pb246ZnVuY3Rpb24odCl7dGhpcy5xdWF0ZXJuaW9uLmNvcHkodCl9LHJvdGF0ZU9uQXhpczooTGE9bmV3IHMsZnVuY3Rpb24odCxlKXtyZXR1cm4gTGEuc2V0RnJvbUF4aXNBbmdsZSh0LGUpLHRoaXMucXVhdGVybmlvbi5tdWx0aXBseShMYSksdGhpc30pLHJvdGF0ZVg6KEFhPW5ldyBDdCgxLDAsMCksZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucm90YXRlT25BeGlzKEFhLHQpfSkscm90YXRlWTooU2E9bmV3IEN0KDAsMSwwKSxmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yb3RhdGVPbkF4aXMoU2EsdCl9KSxyb3RhdGVaOihUYT1uZXcgQ3QoMCwwLDEpLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnJvdGF0ZU9uQXhpcyhUYSx0KX0pLHRyYW5zbGF0ZU9uQXhpczooRWE9bmV3IEN0LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEVhLmNvcHkodCkuYXBwbHlRdWF0ZXJuaW9uKHRoaXMucXVhdGVybmlvbiksdGhpcy5wb3NpdGlvbi5hZGQoRWEubXVsdGlwbHlTY2FsYXIoZSkpLHRoaXN9KSx0cmFuc2xhdGVYOihNYT1uZXcgQ3QoMSwwLDApLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRyYW5zbGF0ZU9uQXhpcyhNYSx0KX0pLHRyYW5zbGF0ZVk6KHdhPW5ldyBDdCgwLDEsMCksZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudHJhbnNsYXRlT25BeGlzKHdhLHQpfSksdHJhbnNsYXRlWjooYmE9bmV3IEN0KDAsMCwxKSxmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50cmFuc2xhdGVPbkF4aXMoYmEsdCl9KSxsb2NhbFRvV29ybGQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQuYXBwbHlNYXRyaXg0KHRoaXMubWF0cml4V29ybGQpfSx3b3JsZFRvTG9jYWw6KF9hPW5ldyBJdCxmdW5jdGlvbih0KXtyZXR1cm4gdC5hcHBseU1hdHJpeDQoX2EuZ2V0SW52ZXJzZSh0aGlzLm1hdHJpeFdvcmxkKSl9KSxsb29rQXQ6KHhhPW5ldyBJdCxmdW5jdGlvbih0KXt4YS5sb29rQXQodCx0aGlzLnBvc2l0aW9uLHRoaXMudXApLHRoaXMucXVhdGVybmlvbi5zZXRGcm9tUm90YXRpb25NYXRyaXgoeGEpfSksYWRkOmZ1bmN0aW9uKHQpe2lmKDE8YXJndW1lbnRzLmxlbmd0aCl7Zm9yKHZhciBlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0aGlzLmFkZChhcmd1bWVudHNbZV0pO3JldHVybiB0aGlzfXJldHVybiB0PT09dGhpcz9jb25zb2xlLmVycm9yKCJUSFJFRS5PYmplY3QzRC5hZGQ6IG9iamVjdCBjYW4ndCBiZSBhZGRlZCBhcyBhIGNoaWxkIG9mIGl0c2VsZi4iLHQpOnQmJnQuaXNPYmplY3QzRD8obnVsbCE9PXQucGFyZW50JiZ0LnBhcmVudC5yZW1vdmUodCksdC5wYXJlbnQ9dGhpcyx0LmRpc3BhdGNoRXZlbnQoe3R5cGU6ImFkZGVkIn0pLHRoaXMuY2hpbGRyZW4ucHVzaCh0KSk6Y29uc29sZS5lcnJvcigiVEhSRUUuT2JqZWN0M0QuYWRkOiBvYmplY3Qgbm90IGFuIGluc3RhbmNlIG9mIFRIUkVFLk9iamVjdDNELiIsdCksdGhpc30scmVtb3ZlOmZ1bmN0aW9uKHQpe2lmKDE8YXJndW1lbnRzLmxlbmd0aClmb3IodmFyIGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRoaXMucmVtb3ZlKGFyZ3VtZW50c1tlXSk7LTEhPT0oZT10aGlzLmNoaWxkcmVuLmluZGV4T2YodCkpJiYodC5wYXJlbnQ9bnVsbCx0LmRpc3BhdGNoRXZlbnQoe3R5cGU6InJlbW92ZWQifSksdGhpcy5jaGlsZHJlbi5zcGxpY2UoZSwxKSl9LGdldE9iamVjdEJ5SWQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZ2V0T2JqZWN0QnlQcm9wZXJ0eSgiaWQiLHQpfSxnZXRPYmplY3RCeU5hbWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZ2V0T2JqZWN0QnlQcm9wZXJ0eSgibmFtZSIsdCl9LGdldE9iamVjdEJ5UHJvcGVydHk6ZnVuY3Rpb24odCxlKXtpZih0aGlzW3RdPT09ZSlyZXR1cm4gdGhpcztmb3IodmFyIGk9MCxuPXRoaXMuY2hpbGRyZW4ubGVuZ3RoO2k8bjtpKyspe3ZhciByPXRoaXMuY2hpbGRyZW5baV0uZ2V0T2JqZWN0QnlQcm9wZXJ0eSh0LGUpO2lmKHZvaWQgMCE9PXIpcmV0dXJuIHJ9fSxnZXRXb3JsZFBvc2l0aW9uOmZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBDdCx0aGlzLnVwZGF0ZU1hdHJpeFdvcmxkKCEwKSx0LnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLm1hdHJpeFdvcmxkKX0sZ2V0V29ybGRRdWF0ZXJuaW9uOih2YT1uZXcgQ3QseWE9bmV3IEN0LGZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBzLHRoaXMudXBkYXRlTWF0cml4V29ybGQoITApLHRoaXMubWF0cml4V29ybGQuZGVjb21wb3NlKHZhLHQseWEpLHR9KSxnZXRXb3JsZFJvdGF0aW9uOihnYT1uZXcgcyxmdW5jdGlvbih0KXtyZXR1cm4gdD10fHxuZXcgaix0aGlzLmdldFdvcmxkUXVhdGVybmlvbihnYSksdC5zZXRGcm9tUXVhdGVybmlvbihnYSx0aGlzLnJvdGF0aW9uLm9yZGVyLCExKX0pLGdldFdvcmxkU2NhbGU6KGZhPW5ldyBDdCxtYT1uZXcgcyxmdW5jdGlvbih0KXtyZXR1cm4gdD10fHxuZXcgQ3QsdGhpcy51cGRhdGVNYXRyaXhXb3JsZCghMCksdGhpcy5tYXRyaXhXb3JsZC5kZWNvbXBvc2UoZmEsbWEsdCksdH0pLGdldFdvcmxkRGlyZWN0aW9uOihwYT1uZXcgcyxmdW5jdGlvbih0KXtyZXR1cm4gdD10fHxuZXcgQ3QsdGhpcy5nZXRXb3JsZFF1YXRlcm5pb24ocGEpLHQuc2V0KDAsMCwxKS5hcHBseVF1YXRlcm5pb24ocGEpfSkscmF5Y2FzdDpmdW5jdGlvbigpe30sdHJhdmVyc2U6ZnVuY3Rpb24odCl7dCh0aGlzKTtmb3IodmFyIGU9dGhpcy5jaGlsZHJlbixpPTAsbj1lLmxlbmd0aDtpPG47aSsrKWVbaV0udHJhdmVyc2UodCl9LHRyYXZlcnNlVmlzaWJsZTpmdW5jdGlvbih0KXtpZighMSE9PXRoaXMudmlzaWJsZSl7dCh0aGlzKTtmb3IodmFyIGU9dGhpcy5jaGlsZHJlbixpPTAsbj1lLmxlbmd0aDtpPG47aSsrKWVbaV0udHJhdmVyc2VWaXNpYmxlKHQpfX0sdHJhdmVyc2VBbmNlc3RvcnM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wYXJlbnQ7bnVsbCE9PWUmJih0KGUpLGUudHJhdmVyc2VBbmNlc3RvcnModCkpfSx1cGRhdGVNYXRyaXg6ZnVuY3Rpb24oKXt0aGlzLm1hdHJpeC5jb21wb3NlKHRoaXMucG9zaXRpb24sdGhpcy5xdWF0ZXJuaW9uLHRoaXMuc2NhbGUpLHRoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMH0sdXBkYXRlTWF0cml4V29ybGQ6ZnVuY3Rpb24odCl7ITA9PT10aGlzLm1hdHJpeEF1dG9VcGRhdGUmJnRoaXMudXBkYXRlTWF0cml4KCksITAhPT10aGlzLm1hdHJpeFdvcmxkTmVlZHNVcGRhdGUmJiEwIT09dHx8KG51bGw9PT10aGlzLnBhcmVudD90aGlzLm1hdHJpeFdvcmxkLmNvcHkodGhpcy5tYXRyaXgpOnRoaXMubWF0cml4V29ybGQubXVsdGlwbHlNYXRyaWNlcyh0aGlzLnBhcmVudC5tYXRyaXhXb3JsZCx0aGlzLm1hdHJpeCksdD0hKHRoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMSkpO2Zvcih2YXIgZT10aGlzLmNoaWxkcmVuLGk9MCxuPWUubGVuZ3RoO2k8bjtpKyspZVtpXS51cGRhdGVNYXRyaXhXb3JsZCh0KX0sdG9KU09OOmZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCl7dmFyIGUsaT1bXTtmb3IoZSBpbiB0KXt2YXIgbj10W2VdO2RlbGV0ZSBuLm1ldGFkYXRhLGkucHVzaChuKX1yZXR1cm4gaX12YXIgaT17fTsoYT12b2lkIDA9PT10fHwiIj09PXQpJiYodD17Z2VvbWV0cmllczp7fSxtYXRlcmlhbHM6e30sdGV4dHVyZXM6e30saW1hZ2VzOnt9fSxpLm1ldGFkYXRhPXt2ZXJzaW9uOjQuNCx0eXBlOiJPYmplY3QiLGdlbmVyYXRvcjoiT2JqZWN0M0QudG9KU09OIn0pO3ZhciBuPXt9O2lmKG4udXVpZD10aGlzLnV1aWQsbi50eXBlPXRoaXMudHlwZSwiIiE9PXRoaXMubmFtZSYmKG4ubmFtZT10aGlzLm5hbWUpLCJ7fSIhPT1KU09OLnN0cmluZ2lmeSh0aGlzLnVzZXJEYXRhKSYmKG4udXNlckRhdGE9dGhpcy51c2VyRGF0YSksITA9PT10aGlzLmNhc3RTaGFkb3cmJihuLmNhc3RTaGFkb3c9ITApLCEwPT09dGhpcy5yZWNlaXZlU2hhZG93JiYobi5yZWNlaXZlU2hhZG93PSEwKSwhMT09PXRoaXMudmlzaWJsZSYmKG4udmlzaWJsZT0hMSksbi5tYXRyaXg9dGhpcy5tYXRyaXgudG9BcnJheSgpLHZvaWQgMCE9PXRoaXMuZ2VvbWV0cnkmJih2b2lkIDA9PT10Lmdlb21ldHJpZXNbdGhpcy5nZW9tZXRyeS51dWlkXSYmKHQuZ2VvbWV0cmllc1t0aGlzLmdlb21ldHJ5LnV1aWRdPXRoaXMuZ2VvbWV0cnkudG9KU09OKHQpKSxuLmdlb21ldHJ5PXRoaXMuZ2VvbWV0cnkudXVpZCksdm9pZCAwIT09dGhpcy5tYXRlcmlhbCYmKHZvaWQgMD09PXQubWF0ZXJpYWxzW3RoaXMubWF0ZXJpYWwudXVpZF0mJih0Lm1hdGVyaWFsc1t0aGlzLm1hdGVyaWFsLnV1aWRdPXRoaXMubWF0ZXJpYWwudG9KU09OKHQpKSxuLm1hdGVyaWFsPXRoaXMubWF0ZXJpYWwudXVpZCksMDx0aGlzLmNoaWxkcmVuLmxlbmd0aCl7bi5jaGlsZHJlbj1bXTtmb3IodmFyIHI9MDtyPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3IrKyluLmNoaWxkcmVuLnB1c2godGhpcy5jaGlsZHJlbltyXS50b0pTT04odCkub2JqZWN0KX1pZihhKXt2YXIgYT1lKHQuZ2VvbWV0cmllcyksbz0ocj1lKHQubWF0ZXJpYWxzKSxlKHQudGV4dHVyZXMpKTt0PWUodC5pbWFnZXMpLDA8YS5sZW5ndGgmJihpLmdlb21ldHJpZXM9YSksMDxyLmxlbmd0aCYmKGkubWF0ZXJpYWxzPXIpLDA8by5sZW5ndGgmJihpLnRleHR1cmVzPW8pLDA8dC5sZW5ndGgmJihpLmltYWdlcz10KX1yZXR1cm4gaS5vYmplY3Q9bixpfSxjbG9uZTpmdW5jdGlvbih0KXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmNvcHkodGhpcyx0KX0sY29weTpmdW5jdGlvbih0LGUpe2lmKHZvaWQgMD09PWUmJihlPSEwKSx0aGlzLm5hbWU9dC5uYW1lLHRoaXMudXAuY29weSh0LnVwKSx0aGlzLnBvc2l0aW9uLmNvcHkodC5wb3NpdGlvbiksdGhpcy5xdWF0ZXJuaW9uLmNvcHkodC5xdWF0ZXJuaW9uKSx0aGlzLnNjYWxlLmNvcHkodC5zY2FsZSksdGhpcy5tYXRyaXguY29weSh0Lm1hdHJpeCksdGhpcy5tYXRyaXhXb3JsZC5jb3B5KHQubWF0cml4V29ybGQpLHRoaXMubWF0cml4QXV0b1VwZGF0ZT10Lm1hdHJpeEF1dG9VcGRhdGUsdGhpcy5tYXRyaXhXb3JsZE5lZWRzVXBkYXRlPXQubWF0cml4V29ybGROZWVkc1VwZGF0ZSx0aGlzLmxheWVycy5tYXNrPXQubGF5ZXJzLm1hc2ssdGhpcy52aXNpYmxlPXQudmlzaWJsZSx0aGlzLmNhc3RTaGFkb3c9dC5jYXN0U2hhZG93LHRoaXMucmVjZWl2ZVNoYWRvdz10LnJlY2VpdmVTaGFkb3csdGhpcy5mcnVzdHVtQ3VsbGVkPXQuZnJ1c3R1bUN1bGxlZCx0aGlzLnJlbmRlck9yZGVyPXQucmVuZGVyT3JkZXIsdGhpcy51c2VyRGF0YT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHQudXNlckRhdGEpKSwhMD09PWUpZm9yKHZhciBpPTA7aTx0LmNoaWxkcmVuLmxlbmd0aDtpKyspdGhpcy5hZGQodC5jaGlsZHJlbltpXS5jbG9uZSgpKTtyZXR1cm4gdGhpc319KSxZLnByb3RvdHlwZT17Y29uc3RydWN0b3I6WSxzZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5zdGFydC5jb3B5KHQpLHRoaXMuZW5kLmNvcHkoZSksdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmNvcHkodGhpcyl9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3RhcnQuY29weSh0LnN0YXJ0KSx0aGlzLmVuZC5jb3B5KHQuZW5kKSx0aGlzfSxnZXRDZW50ZXI6ZnVuY3Rpb24odCl7cmV0dXJuKHR8fG5ldyBDdCkuYWRkVmVjdG9ycyh0aGlzLnN0YXJ0LHRoaXMuZW5kKS5tdWx0aXBseVNjYWxhciguNSl9LGRlbHRhOmZ1bmN0aW9uKHQpe3JldHVybih0fHxuZXcgQ3QpLnN1YlZlY3RvcnModGhpcy5lbmQsdGhpcy5zdGFydCl9LGRpc3RhbmNlU3E6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGFydC5kaXN0YW5jZVRvU3F1YXJlZCh0aGlzLmVuZCl9LGRpc3RhbmNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhcnQuZGlzdGFuY2VUbyh0aGlzLmVuZCl9LGF0OmZ1bmN0aW9uKHQsZSl7dmFyIGk9ZXx8bmV3IEN0O3JldHVybiB0aGlzLmRlbHRhKGkpLm11bHRpcGx5U2NhbGFyKHQpLmFkZCh0aGlzLnN0YXJ0KX0sY2xvc2VzdFBvaW50VG9Qb2ludFBhcmFtZXRlcjooUmE9bmV3IEN0LFBhPW5ldyBDdCxmdW5jdGlvbih0LGUpe1JhLnN1YlZlY3RvcnModCx0aGlzLnN0YXJ0KSxQYS5zdWJWZWN0b3JzKHRoaXMuZW5kLHRoaXMuc3RhcnQpO3ZhciBpPVBhLmRvdChQYSk7cmV0dXJuIGk9UGEuZG90KFJhKS9pLGUmJihpPWVyLmNsYW1wKGksMCwxKSksaX0pLGNsb3Nlc3RQb2ludFRvUG9pbnQ6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0PXRoaXMuY2xvc2VzdFBvaW50VG9Qb2ludFBhcmFtZXRlcih0LGUpLGk9aXx8bmV3IEN0LHRoaXMuZGVsdGEoaSkubXVsdGlwbHlTY2FsYXIodCkuYWRkKHRoaXMuc3RhcnQpfSxhcHBseU1hdHJpeDQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3RhcnQuYXBwbHlNYXRyaXg0KHQpLHRoaXMuZW5kLmFwcGx5TWF0cml4NCh0KSx0aGlzfSxlcXVhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RhcnQuZXF1YWxzKHRoaXMuc3RhcnQpJiZ0LmVuZC5lcXVhbHModGhpcy5lbmQpfX0scS5ub3JtYWw9KENhPW5ldyBDdCxmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4obj1ufHxuZXcgQ3QpLnN1YlZlY3RvcnMoaSxlKSxDYS5zdWJWZWN0b3JzKHQsZSksbi5jcm9zcyhDYSksMDwodD1uLmxlbmd0aFNxKCkpP24ubXVsdGlwbHlTY2FsYXIoMS9NYXRoLnNxcnQodCkpOm4uc2V0KDAsMCwwKX0pLHEuYmFyeWNvb3JkRnJvbVBvaW50PShJYT1uZXcgQ3QsVWE9bmV3IEN0LE5hPW5ldyBDdCxmdW5jdGlvbih0LGUsaSxuLHIpe0lhLnN1YlZlY3RvcnMobixlKSxVYS5zdWJWZWN0b3JzKGksZSksTmEuc3ViVmVjdG9ycyh0LGUpLHQ9SWEuZG90KElhKSxlPUlhLmRvdChVYSksaT1JYS5kb3QoTmEpO3ZhciBhPVVhLmRvdChVYSk7bj1VYS5kb3QoTmEpO3ZhciBvPXQqYS1lKmU7cmV0dXJuIHI9cnx8bmV3IEN0LDA9PT1vP3Iuc2V0KC0yLC0xLC0xKTooYT0oYSppLWUqbikqKG89MS9vKSx0PSh0Km4tZSppKSpvLHIuc2V0KDEtYS10LHQsYSkpfSkscS5jb250YWluc1BvaW50PShEYT1uZXcgQ3QsZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIDA8PSh0PXEuYmFyeWNvb3JkRnJvbVBvaW50KHQsZSxpLG4sRGEpKS54JiYwPD10LnkmJnQueCt0Lnk8PTF9KSxxLnByb3RvdHlwZT17Y29uc3RydWN0b3I6cSxzZXQ6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLmEuY29weSh0KSx0aGlzLmIuY29weShlKSx0aGlzLmMuY29weShpKSx0aGlzfSxzZXRGcm9tUG9pbnRzQW5kSW5kaWNlczpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdGhpcy5hLmNvcHkodFtlXSksdGhpcy5iLmNvcHkodFtpXSksdGhpcy5jLmNvcHkodFtuXSksdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmNvcHkodGhpcyl9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYS5jb3B5KHQuYSksdGhpcy5iLmNvcHkodC5iKSx0aGlzLmMuY29weSh0LmMpLHRoaXN9LGFyZWE6KEdhPW5ldyBDdCxIYT1uZXcgQ3QsZnVuY3Rpb24oKXtyZXR1cm4gR2Euc3ViVmVjdG9ycyh0aGlzLmMsdGhpcy5iKSxIYS5zdWJWZWN0b3JzKHRoaXMuYSx0aGlzLmIpLC41KkdhLmNyb3NzKEhhKS5sZW5ndGgoKX0pLG1pZHBvaW50OmZ1bmN0aW9uKHQpe3JldHVybih0fHxuZXcgQ3QpLmFkZFZlY3RvcnModGhpcy5hLHRoaXMuYikuYWRkKHRoaXMuYykubXVsdGlwbHlTY2FsYXIoMS8zKX0sbm9ybWFsOmZ1bmN0aW9uKHQpe3JldHVybiBxLm5vcm1hbCh0aGlzLmEsdGhpcy5iLHRoaXMuYyx0KX0scGxhbmU6ZnVuY3Rpb24odCl7cmV0dXJuKHR8fG5ldyBIKS5zZXRGcm9tQ29wbGFuYXJQb2ludHModGhpcy5hLHRoaXMuYix0aGlzLmMpfSxiYXJ5Y29vcmRGcm9tUG9pbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcS5iYXJ5Y29vcmRGcm9tUG9pbnQodCx0aGlzLmEsdGhpcy5iLHRoaXMuYyxlKX0sY29udGFpbnNQb2ludDpmdW5jdGlvbih0KXtyZXR1cm4gcS5jb250YWluc1BvaW50KHQsdGhpcy5hLHRoaXMuYix0aGlzLmMpfSxjbG9zZXN0UG9pbnRUb1BvaW50OmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09T2EmJihPYT1uZXcgSCxGYT1bbmV3IFksbmV3IFksbmV3IFldLHphPW5ldyBDdCxCYT1uZXcgQ3QpO3ZhciBpPWV8fG5ldyBDdCxuPTEvMDtpZihPYS5zZXRGcm9tQ29wbGFuYXJQb2ludHModGhpcy5hLHRoaXMuYix0aGlzLmMpLE9hLnByb2plY3RQb2ludCh0LHphKSwhMD09PXRoaXMuY29udGFpbnNQb2ludCh6YSkpaS5jb3B5KHphKTtlbHNle0ZhWzBdLnNldCh0aGlzLmEsdGhpcy5iKSxGYVsxXS5zZXQodGhpcy5iLHRoaXMuYyksRmFbMl0uc2V0KHRoaXMuYyx0aGlzLmEpO2Zvcih2YXIgcj0wO3I8RmEubGVuZ3RoO3IrKyl7RmFbcl0uY2xvc2VzdFBvaW50VG9Qb2ludCh6YSwhMCxCYSk7dmFyIGE9emEuZGlzdGFuY2VUb1NxdWFyZWQoQmEpO2E8biYmKG49YSxpLmNvcHkoQmEpKX19cmV0dXJuIGl9LGVxdWFsczpmdW5jdGlvbih0KXtyZXR1cm4gdC5hLmVxdWFscyh0aGlzLmEpJiZ0LmIuZXF1YWxzKHRoaXMuYikmJnQuYy5lcXVhbHModGhpcy5jKX19LFoucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpaLGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyB0aGlzLmNvbnN0cnVjdG9yKS5jb3B5KHRoaXMpfSxjb3B5OmZ1bmN0aW9uKHQpe3RoaXMuYT10LmEsdGhpcy5iPXQuYix0aGlzLmM9dC5jLHRoaXMubm9ybWFsLmNvcHkodC5ub3JtYWwpLHRoaXMuY29sb3IuY29weSh0LmNvbG9yKSx0aGlzLm1hdGVyaWFsSW5kZXg9dC5tYXRlcmlhbEluZGV4O2Zvcih2YXIgZT0wLGk9dC52ZXJ0ZXhOb3JtYWxzLmxlbmd0aDtlPGk7ZSsrKXRoaXMudmVydGV4Tm9ybWFsc1tlXT10LnZlcnRleE5vcm1hbHNbZV0uY2xvbmUoKTtmb3IoZT0wLGk9dC52ZXJ0ZXhDb2xvcnMubGVuZ3RoO2U8aTtlKyspdGhpcy52ZXJ0ZXhDb2xvcnNbZV09dC52ZXJ0ZXhDb2xvcnNbZV0uY2xvbmUoKTtyZXR1cm4gdGhpc319LCgoSHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoTi5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1IdCkucHJvdG90eXBlLmlzTWVzaEJhc2ljTWF0ZXJpYWw9ITAsSHQucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24odCl7cmV0dXJuIE4ucHJvdG90eXBlLmNvcHkuY2FsbCh0aGlzLHQpLHRoaXMuY29sb3IuY29weSh0LmNvbG9yKSx0aGlzLm1hcD10Lm1hcCx0aGlzLmxpZ2h0TWFwPXQubGlnaHRNYXAsdGhpcy5saWdodE1hcEludGVuc2l0eT10LmxpZ2h0TWFwSW50ZW5zaXR5LHRoaXMuYW9NYXA9dC5hb01hcCx0aGlzLmFvTWFwSW50ZW5zaXR5PXQuYW9NYXBJbnRlbnNpdHksdGhpcy5zcGVjdWxhck1hcD10LnNwZWN1bGFyTWFwLHRoaXMuYWxwaGFNYXA9dC5hbHBoYU1hcCx0aGlzLmVudk1hcD10LmVudk1hcCx0aGlzLmNvbWJpbmU9dC5jb21iaW5lLHRoaXMucmVmbGVjdGl2aXR5PXQucmVmbGVjdGl2aXR5LHRoaXMucmVmcmFjdGlvblJhdGlvPXQucmVmcmFjdGlvblJhdGlvLHRoaXMud2lyZWZyYW1lPXQud2lyZWZyYW1lLHRoaXMud2lyZWZyYW1lTGluZXdpZHRoPXQud2lyZWZyYW1lTGluZXdpZHRoLHRoaXMud2lyZWZyYW1lTGluZWNhcD10LndpcmVmcmFtZUxpbmVjYXAsdGhpcy53aXJlZnJhbWVMaW5lam9pbj10LndpcmVmcmFtZUxpbmVqb2luLHRoaXMuc2tpbm5pbmc9dC5za2lubmluZyx0aGlzLm1vcnBoVGFyZ2V0cz10Lm1vcnBoVGFyZ2V0cyx0aGlzfSxKLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Sixpc0J1ZmZlckF0dHJpYnV0ZTohMCxzZXQgbmVlZHNVcGRhdGUodCl7ITA9PT10JiZ0aGlzLnZlcnNpb24rK30sc2V0QXJyYXk6ZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJUSFJFRS5CdWZmZXJBdHRyaWJ1dGU6IGFycmF5IHNob3VsZCBiZSBhIFR5cGVkIEFycmF5LiIpO3RoaXMuY291bnQ9dm9pZCAwIT09dD90Lmxlbmd0aC90aGlzLml0ZW1TaXplOjAsdGhpcy5hcnJheT10fSxzZXREeW5hbWljOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmR5bmFtaWM9dCx0aGlzfSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFycmF5PW5ldyB0LmFycmF5LmNvbnN0cnVjdG9yKHQuYXJyYXkpLHRoaXMuaXRlbVNpemU9dC5pdGVtU2l6ZSx0aGlzLmNvdW50PXQuY291bnQsdGhpcy5ub3JtYWxpemVkPXQubm9ybWFsaXplZCx0aGlzLmR5bmFtaWM9dC5keW5hbWljLHRoaXN9LGNvcHlBdDpmdW5jdGlvbih0LGUsaSl7dCo9dGhpcy5pdGVtU2l6ZSxpKj1lLml0ZW1TaXplO2Zvcih2YXIgbj0wLHI9dGhpcy5pdGVtU2l6ZTtuPHI7bisrKXRoaXMuYXJyYXlbdCtuXT1lLmFycmF5W2krbl07cmV0dXJuIHRoaXN9LGNvcHlBcnJheTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hcnJheS5zZXQodCksdGhpc30sY29weUNvbG9yc0FycmF5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmFycmF5LGk9MCxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgYT10W25dO3ZvaWQgMD09PWEmJihjb25zb2xlLndhcm4oIlRIUkVFLkJ1ZmZlckF0dHJpYnV0ZS5jb3B5Q29sb3JzQXJyYXkoKTogY29sb3IgaXMgdW5kZWZpbmVkIixuKSxhPW5ldyBOdCksZVtpKytdPWEucixlW2krK109YS5nLGVbaSsrXT1hLmJ9cmV0dXJuIHRoaXN9LGNvcHlJbmRpY2VzQXJyYXk6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuYXJyYXksaT0wLG49MCxyPXQubGVuZ3RoO248cjtuKyspe3ZhciBhPXRbbl07ZVtpKytdPWEuYSxlW2krK109YS5iLGVbaSsrXT1hLmN9cmV0dXJuIHRoaXN9LGNvcHlWZWN0b3Iyc0FycmF5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmFycmF5LGk9MCxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgYT10W25dO3ZvaWQgMD09PWEmJihjb25zb2xlLndhcm4oIlRIUkVFLkJ1ZmZlckF0dHJpYnV0ZS5jb3B5VmVjdG9yMnNBcnJheSgpOiB2ZWN0b3IgaXMgdW5kZWZpbmVkIixuKSxhPW5ldyBWKSxlW2krK109YS54LGVbaSsrXT1hLnl9cmV0dXJuIHRoaXN9LGNvcHlWZWN0b3Izc0FycmF5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmFycmF5LGk9MCxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgYT10W25dO3ZvaWQgMD09PWEmJihjb25zb2xlLndhcm4oIlRIUkVFLkJ1ZmZlckF0dHJpYnV0ZS5jb3B5VmVjdG9yM3NBcnJheSgpOiB2ZWN0b3IgaXMgdW5kZWZpbmVkIixuKSxhPW5ldyBDdCksZVtpKytdPWEueCxlW2krK109YS55LGVbaSsrXT1hLnp9cmV0dXJuIHRoaXN9LGNvcHlWZWN0b3I0c0FycmF5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmFycmF5LGk9MCxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgYT10W25dO3ZvaWQgMD09PWEmJihjb25zb2xlLndhcm4oIlRIUkVFLkJ1ZmZlckF0dHJpYnV0ZS5jb3B5VmVjdG9yNHNBcnJheSgpOiB2ZWN0b3IgaXMgdW5kZWZpbmVkIixuKSxhPW5ldyBQdCksZVtpKytdPWEueCxlW2krK109YS55LGVbaSsrXT1hLnosZVtpKytdPWEud31yZXR1cm4gdGhpc30sc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLHRoaXMuYXJyYXkuc2V0KHQsZSksdGhpc30sZ2V0WDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hcnJheVt0KnRoaXMuaXRlbVNpemVdfSxzZXRYOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXJyYXlbdCp0aGlzLml0ZW1TaXplXT1lLHRoaXN9LGdldFk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYXJyYXlbdCp0aGlzLml0ZW1TaXplKzFdfSxzZXRZOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXJyYXlbdCp0aGlzLml0ZW1TaXplKzFdPWUsdGhpc30sZ2V0WjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hcnJheVt0KnRoaXMuaXRlbVNpemUrMl19LHNldFo6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hcnJheVt0KnRoaXMuaXRlbVNpemUrMl09ZSx0aGlzfSxnZXRXOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFycmF5W3QqdGhpcy5pdGVtU2l6ZSszXX0sc2V0VzpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFycmF5W3QqdGhpcy5pdGVtU2l6ZSszXT1lLHRoaXN9LHNldFhZOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdCo9dGhpcy5pdGVtU2l6ZSx0aGlzLmFycmF5W3QrMF09ZSx0aGlzLmFycmF5W3QrMV09aSx0aGlzfSxzZXRYWVo6ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIHQqPXRoaXMuaXRlbVNpemUsdGhpcy5hcnJheVt0KzBdPWUsdGhpcy5hcnJheVt0KzFdPWksdGhpcy5hcnJheVt0KzJdPW4sdGhpc30sc2V0WFlaVzpmdW5jdGlvbih0LGUsaSxuLHIpe3JldHVybiB0Kj10aGlzLml0ZW1TaXplLHRoaXMuYXJyYXlbdCswXT1lLHRoaXMuYXJyYXlbdCsxXT1pLHRoaXMuYXJyYXlbdCsyXT1uLHRoaXMuYXJyYXlbdCszXT1yLHRoaXN9LG9uVXBsb2FkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9uVXBsb2FkQ2FsbGJhY2s9dCx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX19LChRLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEoucHJvdG90eXBlKSkuY29uc3RydWN0b3I9USwoSy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUssKCQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoSi5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj0kLCh0dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXR0LChldC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWV0LChpdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWl0LChudC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPW50LChydC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXJ0LChhdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShKLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWF0LE9iamVjdC5hc3NpZ24ob3QucHJvdG90eXBlLHtjb21wdXRlR3JvdXBzOmZ1bmN0aW9uKHQpe3ZhciBlLGk9W10sbj12b2lkIDA7dD10LmZhY2VzO2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgYT10W3JdO2EubWF0ZXJpYWxJbmRleCE9PW4mJihuPWEubWF0ZXJpYWxJbmRleCx2b2lkIDAhPT1lJiYoZS5jb3VudD0zKnItZS5zdGFydCxpLnB1c2goZSkpLGU9e3N0YXJ0OjMqcixtYXRlcmlhbEluZGV4Om59KX12b2lkIDAhPT1lJiYoZS5jb3VudD0zKnItZS5zdGFydCxpLnB1c2goZSkpLHRoaXMuZ3JvdXBzPWl9LGZyb21HZW9tZXRyeTpmdW5jdGlvbih0KXt2YXIgZSxpPXQuZmFjZXMsbj10LnZlcnRpY2VzLHI9dC5mYWNlVmVydGV4VXZzLGE9clswXSYmMDxyWzBdLmxlbmd0aCxvPXJbMV0mJjA8clsxXS5sZW5ndGgscz10Lm1vcnBoVGFyZ2V0cyxjPXMubGVuZ3RoO2lmKDA8Yyl7ZT1bXTtmb3IodmFyIGg9MDtoPGM7aCsrKWVbaF09W107dGhpcy5tb3JwaFRhcmdldHMucG9zaXRpb249ZX12YXIgbCx1PXQubW9ycGhOb3JtYWxzLGQ9dS5sZW5ndGg7aWYoMDxkKXtmb3IobD1bXSxoPTA7aDxkO2grKylsW2hdPVtdO3RoaXMubW9ycGhUYXJnZXRzLm5vcm1hbD1sfXZhciBwPXQuc2tpbkluZGljZXMsZj10LnNraW5XZWlnaHRzLG09cC5sZW5ndGg9PT1uLmxlbmd0aCxnPWYubGVuZ3RoPT09bi5sZW5ndGg7Zm9yKGg9MDtoPGkubGVuZ3RoO2grKyl7dmFyIHY9aVtoXTt0aGlzLnZlcnRpY2VzLnB1c2goblt2LmFdLG5bdi5iXSxuW3YuY10pO3ZhciB5PXYudmVydGV4Tm9ybWFscztmb3IoMz09PXkubGVuZ3RoP3RoaXMubm9ybWFscy5wdXNoKHlbMF0seVsxXSx5WzJdKTooeT12Lm5vcm1hbCx0aGlzLm5vcm1hbHMucHVzaCh5LHkseSkpLDM9PT0oeT12LnZlcnRleENvbG9ycykubGVuZ3RoP3RoaXMuY29sb3JzLnB1c2goeVswXSx5WzFdLHlbMl0pOih5PXYuY29sb3IsdGhpcy5jb2xvcnMucHVzaCh5LHkseSkpLCEwPT09YSYmKHZvaWQgMCE9PSh5PXJbMF1baF0pP3RoaXMudXZzLnB1c2goeVswXSx5WzFdLHlbMl0pOihjb25zb2xlLndhcm4oIlRIUkVFLkRpcmVjdEdlb21ldHJ5LmZyb21HZW9tZXRyeSgpOiBVbmRlZmluZWQgdmVydGV4VXYgIixoKSx0aGlzLnV2cy5wdXNoKG5ldyBWLG5ldyBWLG5ldyBWKSkpLCEwPT09byYmKHZvaWQgMCE9PSh5PXJbMV1baF0pP3RoaXMudXZzMi5wdXNoKHlbMF0seVsxXSx5WzJdKTooY29uc29sZS53YXJuKCJUSFJFRS5EaXJlY3RHZW9tZXRyeS5mcm9tR2VvbWV0cnkoKTogVW5kZWZpbmVkIHZlcnRleFV2MiAiLGgpLHRoaXMudXZzMi5wdXNoKG5ldyBWLG5ldyBWLG5ldyBWKSkpLHk9MDt5PGM7eSsrKXt2YXIgeD1zW3ldLnZlcnRpY2VzO2VbeV0ucHVzaCh4W3YuYV0seFt2LmJdLHhbdi5jXSl9Zm9yKHk9MDt5PGQ7eSsrKXg9dVt5XS52ZXJ0ZXhOb3JtYWxzW2hdLGxbeV0ucHVzaCh4LmEseC5iLHguYyk7bSYmdGhpcy5za2luSW5kaWNlcy5wdXNoKHBbdi5hXSxwW3YuYl0scFt2LmNdKSxnJiZ0aGlzLnNraW5XZWlnaHRzLnB1c2goZlt2LmFdLGZbdi5iXSxmW3YuY10pfXJldHVybiB0aGlzLmNvbXB1dGVHcm91cHModCksdGhpcy52ZXJ0aWNlc05lZWRVcGRhdGU9dC52ZXJ0aWNlc05lZWRVcGRhdGUsdGhpcy5ub3JtYWxzTmVlZFVwZGF0ZT10Lm5vcm1hbHNOZWVkVXBkYXRlLHRoaXMuY29sb3JzTmVlZFVwZGF0ZT10LmNvbG9yc05lZWRVcGRhdGUsdGhpcy51dnNOZWVkVXBkYXRlPXQudXZzTmVlZFVwZGF0ZSx0aGlzLmdyb3Vwc05lZWRVcGRhdGU9dC5ncm91cHNOZWVkVXBkYXRlLHRoaXN9fSksT2JqZWN0LmFzc2lnbihzdC5wcm90b3R5cGUsZS5wcm90b3R5cGUse2lzR2VvbWV0cnk6ITAsYXBwbHlNYXRyaXg6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPShuZXcgRikuZ2V0Tm9ybWFsTWF0cml4KHQpLGk9MCxuPXRoaXMudmVydGljZXMubGVuZ3RoO2k8bjtpKyspdGhpcy52ZXJ0aWNlc1tpXS5hcHBseU1hdHJpeDQodCk7Zm9yKGk9MCxuPXRoaXMuZmFjZXMubGVuZ3RoO2k8bjtpKyspeyh0PXRoaXMuZmFjZXNbaV0pLm5vcm1hbC5hcHBseU1hdHJpeDMoZSkubm9ybWFsaXplKCk7Zm9yKHZhciByPTAsYT10LnZlcnRleE5vcm1hbHMubGVuZ3RoO3I8YTtyKyspdC52ZXJ0ZXhOb3JtYWxzW3JdLmFwcGx5TWF0cml4MyhlKS5ub3JtYWxpemUoKX1yZXR1cm4gbnVsbCE9PXRoaXMuYm91bmRpbmdCb3gmJnRoaXMuY29tcHV0ZUJvdW5kaW5nQm94KCksbnVsbCE9PXRoaXMuYm91bmRpbmdTcGhlcmUmJnRoaXMuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCksdGhpcy5ub3JtYWxzTmVlZFVwZGF0ZT10aGlzLnZlcnRpY2VzTmVlZFVwZGF0ZT0hMCx0aGlzfSxyb3RhdGVYOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT1ZYSYmKFlhPW5ldyBJdCksWWEubWFrZVJvdGF0aW9uWCh0KSx0aGlzLmFwcGx5TWF0cml4KFlhKSx0aGlzfSxyb3RhdGVZOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT1YYSYmKFhhPW5ldyBJdCksWGEubWFrZVJvdGF0aW9uWSh0KSx0aGlzLmFwcGx5TWF0cml4KFhhKSx0aGlzfSxyb3RhdGVaOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT1XYSYmKFdhPW5ldyBJdCksV2EubWFrZVJvdGF0aW9uWih0KSx0aGlzLmFwcGx5TWF0cml4KFdhKSx0aGlzfSx0cmFuc2xhdGU6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB2b2lkIDA9PT1qYSYmKGphPW5ldyBJdCksamEubWFrZVRyYW5zbGF0aW9uKHQsZSxpKSx0aGlzLmFwcGx5TWF0cml4KGphKSx0aGlzfSxzY2FsZTpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHZvaWQgMD09PWthJiYoa2E9bmV3IEl0KSxrYS5tYWtlU2NhbGUodCxlLGkpLHRoaXMuYXBwbHlNYXRyaXgoa2EpLHRoaXN9LGxvb2tBdDpmdW5jdGlvbih0KXt2b2lkIDA9PT1WYSYmKFZhPW5ldyBYKSxWYS5sb29rQXQodCksVmEudXBkYXRlTWF0cml4KCksdGhpcy5hcHBseU1hdHJpeChWYS5tYXRyaXgpfSxmcm9tQnVmZmVyR2VvbWV0cnk6ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LGUsaSxuKXtuPW5ldyBaKHQsZSxpLHZvaWQgMCE9PW8/W2xbdF0uY2xvbmUoKSxsW2VdLmNsb25lKCksbFtpXS5jbG9uZSgpXTpbXSx2b2lkIDAhPT1zP1tyLmNvbG9yc1t0XS5jbG9uZSgpLHIuY29sb3JzW2VdLmNsb25lKCksci5jb2xvcnNbaV0uY2xvbmUoKV06W10sbiksci5mYWNlcy5wdXNoKG4pLHZvaWQgMCE9PWMmJnIuZmFjZVZlcnRleFV2c1swXS5wdXNoKFt1W3RdLmNsb25lKCksdVtlXS5jbG9uZSgpLHVbaV0uY2xvbmUoKV0pLHZvaWQgMCE9PWgmJnIuZmFjZVZlcnRleFV2c1sxXS5wdXNoKFtkW3RdLmNsb25lKCksZFtlXS5jbG9uZSgpLGRbaV0uY2xvbmUoKV0pfXZhciByPXRoaXMsaT1udWxsIT09dC5pbmRleD90LmluZGV4LmFycmF5OnZvaWQgMCxuPXQuYXR0cmlidXRlcyxhPW4ucG9zaXRpb24uYXJyYXksbz12b2lkIDAhPT1uLm5vcm1hbD9uLm5vcm1hbC5hcnJheTp2b2lkIDAscz12b2lkIDAhPT1uLmNvbG9yP24uY29sb3IuYXJyYXk6dm9pZCAwLGM9dm9pZCAwIT09bi51dj9uLnV2LmFycmF5OnZvaWQgMCxoPXZvaWQgMCE9PW4udXYyP24udXYyLmFycmF5OnZvaWQgMDt2b2lkIDAhPT1oJiYodGhpcy5mYWNlVmVydGV4VXZzWzFdPVtdKTtmb3IodmFyIGw9W10sdT1bXSxkPVtdLHA9bj0wO248YS5sZW5ndGg7bis9MyxwKz0yKXIudmVydGljZXMucHVzaChuZXcgQ3QoYVtuXSxhW24rMV0sYVtuKzJdKSksdm9pZCAwIT09byYmbC5wdXNoKG5ldyBDdChvW25dLG9bbisxXSxvW24rMl0pKSx2b2lkIDAhPT1zJiZyLmNvbG9ycy5wdXNoKG5ldyBOdChzW25dLHNbbisxXSxzW24rMl0pKSx2b2lkIDAhPT1jJiZ1LnB1c2gobmV3IFYoY1twXSxjW3ArMV0pKSx2b2lkIDAhPT1oJiZkLnB1c2gobmV3IFYoaFtwXSxoW3ArMV0pKTtpZih2b2lkIDAhPT1pKWlmKDA8KGE9dC5ncm91cHMpLmxlbmd0aClmb3Iobj0wO248YS5sZW5ndGg7bisrKWZvcih2YXIgZj1hW25dLG09KHA9bT1mLnN0YXJ0LG0rZi5jb3VudCk7cDxtO3ArPTMpZShpW3BdLGlbcCsxXSxpW3ArMl0sZi5tYXRlcmlhbEluZGV4KTtlbHNlIGZvcihuPTA7bjxpLmxlbmd0aDtuKz0zKWUoaVtuXSxpW24rMV0saVtuKzJdKTtlbHNlIGZvcihuPTA7bjxhLmxlbmd0aC8zO24rPTMpZShuLG4rMSxuKzIpO3JldHVybiB0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpLG51bGwhPT10LmJvdW5kaW5nQm94JiYodGhpcy5ib3VuZGluZ0JveD10LmJvdW5kaW5nQm94LmNsb25lKCkpLG51bGwhPT10LmJvdW5kaW5nU3BoZXJlJiYodGhpcy5ib3VuZGluZ1NwaGVyZT10LmJvdW5kaW5nU3BoZXJlLmNsb25lKCkpLHRoaXN9LGNlbnRlcjpmdW5jdGlvbigpe3RoaXMuY29tcHV0ZUJvdW5kaW5nQm94KCk7dmFyIHQ9dGhpcy5ib3VuZGluZ0JveC5nZXRDZW50ZXIoKS5uZWdhdGUoKTtyZXR1cm4gdGhpcy50cmFuc2xhdGUodC54LHQueSx0LnopLHR9LG5vcm1hbGl6ZTpmdW5jdGlvbigpe3RoaXMuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCk7dmFyIHQ9dGhpcy5ib3VuZGluZ1NwaGVyZS5jZW50ZXIsZT0wPT09KGU9dGhpcy5ib3VuZGluZ1NwaGVyZS5yYWRpdXMpPzE6MS9lLGk9bmV3IEl0O3JldHVybiBpLnNldChlLDAsMCwtZSp0LngsMCxlLDAsLWUqdC55LDAsMCxlLC1lKnQueiwwLDAsMCwxKSx0aGlzLmFwcGx5TWF0cml4KGkpLHRoaXN9LGNvbXB1dGVGYWNlTm9ybWFsczpmdW5jdGlvbigpe2Zvcih2YXIgdD1uZXcgQ3QsZT1uZXcgQ3QsaT0wLG49dGhpcy5mYWNlcy5sZW5ndGg7aTxuO2krKyl7dmFyIHI9dGhpcy5mYWNlc1tpXSxhPXRoaXMudmVydGljZXNbci5hXSxvPXRoaXMudmVydGljZXNbci5iXTt0LnN1YlZlY3RvcnModGhpcy52ZXJ0aWNlc1tyLmNdLG8pLGUuc3ViVmVjdG9ycyhhLG8pLHQuY3Jvc3MoZSksdC5ub3JtYWxpemUoKSxyLm5vcm1hbC5jb3B5KHQpfX0sY29tcHV0ZVZlcnRleE5vcm1hbHM6ZnVuY3Rpb24odCl7dmFyIGUsaSxuO2Zvcih2b2lkIDA9PT10JiYodD0hMCksbj1BcnJheSh0aGlzLnZlcnRpY2VzLmxlbmd0aCksZT0wLGk9dGhpcy52ZXJ0aWNlcy5sZW5ndGg7ZTxpO2UrKyluW2VdPW5ldyBDdDtpZih0KXt2YXIgcixhLG8scz1uZXcgQ3QsYz1uZXcgQ3Q7Zm9yKHQ9MCxlPXRoaXMuZmFjZXMubGVuZ3RoO3Q8ZTt0KyspaT10aGlzLmZhY2VzW3RdLHI9dGhpcy52ZXJ0aWNlc1tpLmFdLGE9dGhpcy52ZXJ0aWNlc1tpLmJdLG89dGhpcy52ZXJ0aWNlc1tpLmNdLHMuc3ViVmVjdG9ycyhvLGEpLGMuc3ViVmVjdG9ycyhyLGEpLHMuY3Jvc3MoYyksbltpLmFdLmFkZChzKSxuW2kuYl0uYWRkKHMpLG5baS5jXS5hZGQocyl9ZWxzZSBmb3IodGhpcy5jb21wdXRlRmFjZU5vcm1hbHMoKSx0PTAsZT10aGlzLmZhY2VzLmxlbmd0aDt0PGU7dCsrKW5bKGk9dGhpcy5mYWNlc1t0XSkuYV0uYWRkKGkubm9ybWFsKSxuW2kuYl0uYWRkKGkubm9ybWFsKSxuW2kuY10uYWRkKGkubm9ybWFsKTtmb3IoZT0wLGk9dGhpcy52ZXJ0aWNlcy5sZW5ndGg7ZTxpO2UrKyluW2VdLm5vcm1hbGl6ZSgpO2Zvcih0PTAsZT10aGlzLmZhY2VzLmxlbmd0aDt0PGU7dCsrKTM9PT0ocj0oaT10aGlzLmZhY2VzW3RdKS52ZXJ0ZXhOb3JtYWxzKS5sZW5ndGg/KHJbMF0uY29weShuW2kuYV0pLHJbMV0uY29weShuW2kuYl0pLHJbMl0uY29weShuW2kuY10pKTooclswXT1uW2kuYV0uY2xvbmUoKSxyWzFdPW5baS5iXS5jbG9uZSgpLHJbMl09bltpLmNdLmNsb25lKCkpOzA8dGhpcy5mYWNlcy5sZW5ndGgmJih0aGlzLm5vcm1hbHNOZWVkVXBkYXRlPSEwKX0sY29tcHV0ZUZsYXRWZXJ0ZXhOb3JtYWxzOmZ1bmN0aW9uKCl7dmFyIHQsZSxpO2Zvcih0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpLHQ9MCxlPXRoaXMuZmFjZXMubGVuZ3RoO3Q8ZTt0Kyspe3ZhciBuPShpPXRoaXMuZmFjZXNbdF0pLnZlcnRleE5vcm1hbHM7Mz09PW4ubGVuZ3RoPyhuWzBdLmNvcHkoaS5ub3JtYWwpLG5bMV0uY29weShpLm5vcm1hbCksblsyXS5jb3B5KGkubm9ybWFsKSk6KG5bMF09aS5ub3JtYWwuY2xvbmUoKSxuWzFdPWkubm9ybWFsLmNsb25lKCksblsyXT1pLm5vcm1hbC5jbG9uZSgpKX0wPHRoaXMuZmFjZXMubGVuZ3RoJiYodGhpcy5ub3JtYWxzTmVlZFVwZGF0ZT0hMCl9LGNvbXB1dGVNb3JwaE5vcm1hbHM6ZnVuY3Rpb24oKXt2YXIgdCxlLGksbixyO2ZvcihpPTAsbj10aGlzLmZhY2VzLmxlbmd0aDtpPG47aSsrKWZvcigocj10aGlzLmZhY2VzW2ldKS5fX29yaWdpbmFsRmFjZU5vcm1hbD9yLl9fb3JpZ2luYWxGYWNlTm9ybWFsLmNvcHkoci5ub3JtYWwpOnIuX19vcmlnaW5hbEZhY2VOb3JtYWw9ci5ub3JtYWwuY2xvbmUoKSxyLl9fb3JpZ2luYWxWZXJ0ZXhOb3JtYWxzfHwoci5fX29yaWdpbmFsVmVydGV4Tm9ybWFscz1bXSksdD0wLGU9ci52ZXJ0ZXhOb3JtYWxzLmxlbmd0aDt0PGU7dCsrKXIuX19vcmlnaW5hbFZlcnRleE5vcm1hbHNbdF0/ci5fX29yaWdpbmFsVmVydGV4Tm9ybWFsc1t0XS5jb3B5KHIudmVydGV4Tm9ybWFsc1t0XSk6ci5fX29yaWdpbmFsVmVydGV4Tm9ybWFsc1t0XT1yLnZlcnRleE5vcm1hbHNbdF0uY2xvbmUoKTt2YXIgYT1uZXcgc3Q7Zm9yKGEuZmFjZXM9dGhpcy5mYWNlcyx0PTAsZT10aGlzLm1vcnBoVGFyZ2V0cy5sZW5ndGg7dDxlO3QrKyl7aWYoIXRoaXMubW9ycGhOb3JtYWxzW3RdKXt0aGlzLm1vcnBoTm9ybWFsc1t0XT17fSx0aGlzLm1vcnBoTm9ybWFsc1t0XS5mYWNlTm9ybWFscz1bXSx0aGlzLm1vcnBoTm9ybWFsc1t0XS52ZXJ0ZXhOb3JtYWxzPVtdLHI9dGhpcy5tb3JwaE5vcm1hbHNbdF0uZmFjZU5vcm1hbHM7dmFyIG8scyxjPXRoaXMubW9ycGhOb3JtYWxzW3RdLnZlcnRleE5vcm1hbHM7Zm9yKGk9MCxuPXRoaXMuZmFjZXMubGVuZ3RoO2k8bjtpKyspbz1uZXcgQ3Qscz17YTpuZXcgQ3QsYjpuZXcgQ3QsYzpuZXcgQ3R9LHIucHVzaChvKSxjLnB1c2gocyl9Zm9yKGM9dGhpcy5tb3JwaE5vcm1hbHNbdF0sYS52ZXJ0aWNlcz10aGlzLm1vcnBoVGFyZ2V0c1t0XS52ZXJ0aWNlcyxhLmNvbXB1dGVGYWNlTm9ybWFscygpLGEuY29tcHV0ZVZlcnRleE5vcm1hbHMoKSxpPTAsbj10aGlzLmZhY2VzLmxlbmd0aDtpPG47aSsrKXI9dGhpcy5mYWNlc1tpXSxvPWMuZmFjZU5vcm1hbHNbaV0scz1jLnZlcnRleE5vcm1hbHNbaV0sby5jb3B5KHIubm9ybWFsKSxzLmEuY29weShyLnZlcnRleE5vcm1hbHNbMF0pLHMuYi5jb3B5KHIudmVydGV4Tm9ybWFsc1sxXSkscy5jLmNvcHkoci52ZXJ0ZXhOb3JtYWxzWzJdKX1mb3IoaT0wLG49dGhpcy5mYWNlcy5sZW5ndGg7aTxuO2krKykocj10aGlzLmZhY2VzW2ldKS5ub3JtYWw9ci5fX29yaWdpbmFsRmFjZU5vcm1hbCxyLnZlcnRleE5vcm1hbHM9ci5fX29yaWdpbmFsVmVydGV4Tm9ybWFsc30sY29tcHV0ZUxpbmVEaXN0YW5jZXM6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMudmVydGljZXMsaT0wLG49ZS5sZW5ndGg7aTxuO2krKykwPGkmJih0Kz1lW2ldLmRpc3RhbmNlVG8oZVtpLTFdKSksdGhpcy5saW5lRGlzdGFuY2VzW2ldPXR9LGNvbXB1dGVCb3VuZGluZ0JveDpmdW5jdGlvbigpe251bGw9PT10aGlzLmJvdW5kaW5nQm94JiYodGhpcy5ib3VuZGluZ0JveD1uZXcgRCksdGhpcy5ib3VuZGluZ0JveC5zZXRGcm9tUG9pbnRzKHRoaXMudmVydGljZXMpfSxjb21wdXRlQm91bmRpbmdTcGhlcmU6ZnVuY3Rpb24oKXtudWxsPT09dGhpcy5ib3VuZGluZ1NwaGVyZSYmKHRoaXMuYm91bmRpbmdTcGhlcmU9bmV3IHp0KSx0aGlzLmJvdW5kaW5nU3BoZXJlLnNldEZyb21Qb2ludHModGhpcy52ZXJ0aWNlcyl9LG1lcmdlOmZ1bmN0aW9uKHQsZSxpKXtpZighMT09PSh0JiZ0LmlzR2VvbWV0cnkpKWNvbnNvbGUuZXJyb3IoIlRIUkVFLkdlb21ldHJ5Lm1lcmdlKCk6IGdlb21ldHJ5IG5vdCBhbiBpbnN0YW5jZSBvZiBUSFJFRS5HZW9tZXRyeS4iLHQpO2Vsc2V7dmFyIG4scj10aGlzLnZlcnRpY2VzLmxlbmd0aCxhPXRoaXMudmVydGljZXMsbz10LnZlcnRpY2VzLHM9dGhpcy5mYWNlcyxjPXQuZmFjZXMsaD10aGlzLmZhY2VWZXJ0ZXhVdnNbMF0sbD10LmZhY2VWZXJ0ZXhVdnNbMF0sdT10aGlzLmNvbG9ycyxkPXQuY29sb3JzO3ZvaWQgMD09PWkmJihpPTApLHZvaWQgMCE9PWUmJihuPShuZXcgRikuZ2V0Tm9ybWFsTWF0cml4KGUpKSx0PTA7Zm9yKHZhciBwPW8ubGVuZ3RoO3Q8cDt0Kyspe3ZhciBmPW9bdF0uY2xvbmUoKTt2b2lkIDAhPT1lJiZmLmFwcGx5TWF0cml4NChlKSxhLnB1c2goZil9Zm9yKHQ9MCxwPWQubGVuZ3RoO3Q8cDt0KyspdS5wdXNoKGRbdF0uY2xvbmUoKSk7Zm9yKHQ9MCxwPWMubGVuZ3RoO3Q8cDt0Kyspe3ZhciBtPShvPWNbdF0pLnZlcnRleE5vcm1hbHM7ZD1vLnZlcnRleENvbG9ycztmb3IoKHU9bmV3IFooby5hK3Isby5iK3Isby5jK3IpKS5ub3JtYWwuY29weShvLm5vcm1hbCksdm9pZCAwIT09biYmdS5ub3JtYWwuYXBwbHlNYXRyaXgzKG4pLm5vcm1hbGl6ZSgpLGU9MCxhPW0ubGVuZ3RoO2U8YTtlKyspZj1tW2VdLmNsb25lKCksdm9pZCAwIT09biYmZi5hcHBseU1hdHJpeDMobikubm9ybWFsaXplKCksdS52ZXJ0ZXhOb3JtYWxzLnB1c2goZik7Zm9yKHUuY29sb3IuY29weShvLmNvbG9yKSxlPTAsYT1kLmxlbmd0aDtlPGE7ZSsrKWY9ZFtlXSx1LnZlcnRleENvbG9ycy5wdXNoKGYuY2xvbmUoKSk7dS5tYXRlcmlhbEluZGV4PW8ubWF0ZXJpYWxJbmRleCtpLHMucHVzaCh1KX1mb3IodD0wLHA9bC5sZW5ndGg7dDxwO3QrKylpZihuPVtdLHZvaWQgMCE9PShpPWxbdF0pKXtmb3IoZT0wLGE9aS5sZW5ndGg7ZTxhO2UrKyluLnB1c2goaVtlXS5jbG9uZSgpKTtoLnB1c2gobil9fX0sbWVyZ2VNZXNoOmZ1bmN0aW9uKHQpeyExPT09KHQmJnQuaXNNZXNoKT9jb25zb2xlLmVycm9yKCJUSFJFRS5HZW9tZXRyeS5tZXJnZU1lc2goKTogbWVzaCBub3QgYW4gaW5zdGFuY2Ugb2YgVEhSRUUuTWVzaC4iLHQpOih0Lm1hdHJpeEF1dG9VcGRhdGUmJnQudXBkYXRlTWF0cml4KCksdGhpcy5tZXJnZSh0Lmdlb21ldHJ5LHQubWF0cml4KSl9LG1lcmdlVmVydGljZXM6ZnVuY3Rpb24oKXt2YXIgdCxlLGksbj17fSxyPVtdLGE9W10sbz1NYXRoLnBvdygxMCw0KTtmb3IoZT0wLGk9dGhpcy52ZXJ0aWNlcy5sZW5ndGg7ZTxpO2UrKyl0PXRoaXMudmVydGljZXNbZV0sdm9pZCAwPT09blt0PU1hdGgucm91bmQodC54Km8pKyJfIitNYXRoLnJvdW5kKHQueSpvKSsiXyIrTWF0aC5yb3VuZCh0LnoqbyldPyhuW3RdPWUsci5wdXNoKHRoaXMudmVydGljZXNbZV0pLGFbZV09ci5sZW5ndGgtMSk6YVtlXT1hW25bdF1dO2ZvcihuPVtdLGU9MCxpPXRoaXMuZmFjZXMubGVuZ3RoO2U8aTtlKyspZm9yKChvPXRoaXMuZmFjZXNbZV0pLmE9YVtvLmFdLG8uYj1hW28uYl0sby5jPWFbby5jXSxvPVtvLmEsby5iLG8uY10sdD0wO3Q8Mzt0KyspaWYob1t0XT09PW9bKHQrMSklM10pe24ucHVzaChlKTticmVha31mb3IoZT1uLmxlbmd0aC0xOzA8PWU7ZS0tKWZvcihvPW5bZV0sdGhpcy5mYWNlcy5zcGxpY2UobywxKSxhPTAsaT10aGlzLmZhY2VWZXJ0ZXhVdnMubGVuZ3RoO2E8aTthKyspdGhpcy5mYWNlVmVydGV4VXZzW2FdLnNwbGljZShvLDEpO3JldHVybiBlPXRoaXMudmVydGljZXMubGVuZ3RoLXIubGVuZ3RoLHRoaXMudmVydGljZXM9cixlfSxzb3J0RmFjZXNCeU1hdGVyaWFsSW5kZXg6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5mYWNlcyxlPXQubGVuZ3RoLGk9MDtpPGU7aSsrKXRbaV0uX2lkPWk7dC5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubWF0ZXJpYWxJbmRleC1lLm1hdGVyaWFsSW5kZXh9KTt2YXIgbixyLGE9dGhpcy5mYWNlVmVydGV4VXZzWzBdLG89dGhpcy5mYWNlVmVydGV4VXZzWzFdO2ZvcihhJiZhLmxlbmd0aD09PWUmJihuPVtdKSxvJiZvLmxlbmd0aD09PWUmJihyPVtdKSxpPTA7aTxlO2krKyl7dmFyIHM9dFtpXS5faWQ7biYmbi5wdXNoKGFbc10pLHImJnIucHVzaChvW3NdKX1uJiYodGhpcy5mYWNlVmVydGV4VXZzWzBdPW4pLHImJih0aGlzLmZhY2VWZXJ0ZXhVdnNbMV09cil9LHRvSlNPTjpmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLGkpe3JldHVybiBpP3R8MTw8ZTp0Jn4oMTw8ZSl9ZnVuY3Rpb24gZSh0KXt2YXIgZT10LngudG9TdHJpbmcoKSt0LnkudG9TdHJpbmcoKSt0LnoudG9TdHJpbmcoKTtyZXR1cm4gdm9pZCAwIT09aFtlXXx8KGhbZV09Yy5sZW5ndGgvMyxjLnB1c2godC54LHQueSx0LnopKSxoW2VdfWZ1bmN0aW9uIGkodCl7dmFyIGU9dC5yLnRvU3RyaW5nKCkrdC5nLnRvU3RyaW5nKCkrdC5iLnRvU3RyaW5nKCk7cmV0dXJuIHZvaWQgMCE9PXVbZV18fCh1W2VdPWwubGVuZ3RoLGwucHVzaCh0LmdldEhleCgpKSksdVtlXX1mdW5jdGlvbiBuKHQpe3ZhciBlPXQueC50b1N0cmluZygpK3QueS50b1N0cmluZygpO3JldHVybiB2b2lkIDAhPT1wW2VdfHwocFtlXT1kLmxlbmd0aC8yLGQucHVzaCh0LngsdC55KSkscFtlXX12YXIgcj17bWV0YWRhdGE6e3ZlcnNpb246NC40LHR5cGU6Ikdlb21ldHJ5IixnZW5lcmF0b3I6Ikdlb21ldHJ5LnRvSlNPTiJ9fTtpZihyLnV1aWQ9dGhpcy51dWlkLHIudHlwZT10aGlzLnR5cGUsIiIhPT10aGlzLm5hbWUmJihyLm5hbWU9dGhpcy5uYW1lKSx2b2lkIDAhPT10aGlzLnBhcmFtZXRlcnMpe3ZhciBhLG89dGhpcy5wYXJhbWV0ZXJzO2ZvcihhIGluIG8pdm9pZCAwIT09b1thXSYmKHJbYV09b1thXSk7cmV0dXJuIHJ9Zm9yKG89W10sYT0wO2E8dGhpcy52ZXJ0aWNlcy5sZW5ndGg7YSsrKXt2YXIgcz10aGlzLnZlcnRpY2VzW2FdO28ucHVzaChzLngscy55LHMueil9cz1bXTt2YXIgYz1bXSxoPXt9LGw9W10sdT17fSxkPVtdLHA9e307Zm9yKGE9MDthPHRoaXMuZmFjZXMubGVuZ3RoO2ErKyl7dmFyIGY9dGhpcy5mYWNlc1thXSxtPXZvaWQgMCE9PXRoaXMuZmFjZVZlcnRleFV2c1swXVthXSxnPTA8Zi5ub3JtYWwubGVuZ3RoKCksdj0wPGYudmVydGV4Tm9ybWFscy5sZW5ndGgseT0xIT09Zi5jb2xvci5yfHwxIT09Zi5jb2xvci5nfHwxIT09Zi5jb2xvci5iLHg9MDxmLnZlcnRleENvbG9ycy5sZW5ndGgsXz10KF89dChfPXQoXz10KF89dChfPXQoXz10KF89dChfPTAsMCwwKSwxLCEwKSwyLCExKSwzLG0pLDQsZyksNSx2KSw2LHkpLDcseCk7cy5wdXNoKF8pLHMucHVzaChmLmEsZi5iLGYuYykscy5wdXNoKGYubWF0ZXJpYWxJbmRleCksbSYmKG09dGhpcy5mYWNlVmVydGV4VXZzWzBdW2FdLHMucHVzaChuKG1bMF0pLG4obVsxXSksbihtWzJdKSkpLGcmJnMucHVzaChlKGYubm9ybWFsKSksdiYmKGc9Zi52ZXJ0ZXhOb3JtYWxzLHMucHVzaChlKGdbMF0pLGUoZ1sxXSksZShnWzJdKSkpLHkmJnMucHVzaChpKGYuY29sb3IpKSx4JiYoZj1mLnZlcnRleENvbG9ycyxzLnB1c2goaShmWzBdKSxpKGZbMV0pLGkoZlsyXSkpKX1yZXR1cm4gci5kYXRhPXt9LHIuZGF0YS52ZXJ0aWNlcz1vLHIuZGF0YS5ub3JtYWxzPWMsMDxsLmxlbmd0aCYmKHIuZGF0YS5jb2xvcnM9bCksMDxkLmxlbmd0aCYmKHIuZGF0YS51dnM9W2RdKSxyLmRhdGEuZmFjZXM9cyxyfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgc3QpLmNvcHkodGhpcyl9LGNvcHk6ZnVuY3Rpb24odCl7dGhpcy52ZXJ0aWNlcz1bXSx0aGlzLmZhY2VzPVtdLHRoaXMuZmFjZVZlcnRleFV2cz1bW11dLHRoaXMuY29sb3JzPVtdO2Zvcih2YXIgZT10LnZlcnRpY2VzLGk9MCxuPWUubGVuZ3RoO2k8bjtpKyspdGhpcy52ZXJ0aWNlcy5wdXNoKGVbaV0uY2xvbmUoKSk7Zm9yKGk9MCxuPShlPXQuY29sb3JzKS5sZW5ndGg7aTxuO2krKyl0aGlzLmNvbG9ycy5wdXNoKGVbaV0uY2xvbmUoKSk7Zm9yKGk9MCxuPShlPXQuZmFjZXMpLmxlbmd0aDtpPG47aSsrKXRoaXMuZmFjZXMucHVzaChlW2ldLmNsb25lKCkpO2ZvcihpPTAsbj10LmZhY2VWZXJ0ZXhVdnMubGVuZ3RoO2k8bjtpKyspe2U9dC5mYWNlVmVydGV4VXZzW2ldLHZvaWQgMD09PXRoaXMuZmFjZVZlcnRleFV2c1tpXSYmKHRoaXMuZmFjZVZlcnRleFV2c1tpXT1bXSk7Zm9yKHZhciByPTAsYT1lLmxlbmd0aDtyPGE7cisrKXtmb3IodmFyIG89ZVtyXSxzPVtdLGM9MCxoPW8ubGVuZ3RoO2M8aDtjKyspcy5wdXNoKG9bY10uY2xvbmUoKSk7dGhpcy5mYWNlVmVydGV4VXZzW2ldLnB1c2gocyl9fXJldHVybiB0aGlzfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KHt0eXBlOiJkaXNwb3NlIn0pfX0pO3ZhciBaYSxKYSxRYSxLYSwkYSx0byxlbyxpbyxubyxybyxhbz0wO09iamVjdC5hc3NpZ24oVnQucHJvdG90eXBlLGUucHJvdG90eXBlLHtpc0J1ZmZlckdlb21ldHJ5OiEwLGdldEluZGV4OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5kZXh9LHNldEluZGV4OmZ1bmN0aW9uKHQpe3RoaXMuaW5kZXg9dH0sYWRkQXR0cmlidXRlOmZ1bmN0aW9uKHQsZSxpKXtpZighMT09PShlJiZlLmlzQnVmZmVyQXR0cmlidXRlKSYmITE9PT0oZSYmZS5pc0ludGVybGVhdmVkQnVmZmVyQXR0cmlidXRlKSljb25zb2xlLndhcm4oIlRIUkVFLkJ1ZmZlckdlb21ldHJ5OiAuYWRkQXR0cmlidXRlKCkgbm93IGV4cGVjdHMgKCBuYW1lLCBhdHRyaWJ1dGUgKS4iKSx0aGlzLmFkZEF0dHJpYnV0ZSh0LG5ldyBKKGUsaSkpO2Vsc2V7aWYoImluZGV4IiE9PXQpcmV0dXJuIHRoaXMuYXR0cmlidXRlc1t0XT1lLHRoaXM7Y29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeS5hZGRBdHRyaWJ1dGU6IFVzZSAuc2V0SW5kZXgoKSBmb3IgaW5kZXggYXR0cmlidXRlLiIpLHRoaXMuc2V0SW5kZXgoZSl9fSxnZXRBdHRyaWJ1dGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYXR0cmlidXRlc1t0XX0scmVtb3ZlQXR0cmlidXRlOmZ1bmN0aW9uKHQpe3JldHVybiBkZWxldGUgdGhpcy5hdHRyaWJ1dGVzW3RdLHRoaXN9LGFkZEdyb3VwOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLmdyb3Vwcy5wdXNoKHtzdGFydDp0LGNvdW50OmUsbWF0ZXJpYWxJbmRleDp2b2lkIDAhPT1pP2k6MH0pfSxjbGVhckdyb3VwczpmdW5jdGlvbigpe3RoaXMuZ3JvdXBzPVtdfSxzZXREcmF3UmFuZ2U6ZnVuY3Rpb24odCxlKXt0aGlzLmRyYXdSYW5nZS5zdGFydD10LHRoaXMuZHJhd1JhbmdlLmNvdW50PWV9LGFwcGx5TWF0cml4OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYXR0cmlidXRlcy5wb3NpdGlvbjtyZXR1cm4gdm9pZCAwIT09ZSYmKHQuYXBwbHlUb1ZlY3RvcjNBcnJheShlLmFycmF5KSxlLm5lZWRzVXBkYXRlPSEwKSx2b2lkIDAhPT0oZT10aGlzLmF0dHJpYnV0ZXMubm9ybWFsKSYmKChuZXcgRikuZ2V0Tm9ybWFsTWF0cml4KHQpLmFwcGx5VG9WZWN0b3IzQXJyYXkoZS5hcnJheSksZS5uZWVkc1VwZGF0ZT0hMCksbnVsbCE9PXRoaXMuYm91bmRpbmdCb3gmJnRoaXMuY29tcHV0ZUJvdW5kaW5nQm94KCksbnVsbCE9PXRoaXMuYm91bmRpbmdTcGhlcmUmJnRoaXMuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCksdGhpc30scm90YXRlWDpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09aW8mJihpbz1uZXcgSXQpLGlvLm1ha2VSb3RhdGlvblgodCksdGhpcy5hcHBseU1hdHJpeChpbyksdGhpc30scm90YXRlWTpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09ZW8mJihlbz1uZXcgSXQpLGVvLm1ha2VSb3RhdGlvblkodCksdGhpcy5hcHBseU1hdHJpeChlbyksdGhpc30scm90YXRlWjpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dG8mJih0bz1uZXcgSXQpLHRvLm1ha2VSb3RhdGlvbloodCksdGhpcy5hcHBseU1hdHJpeCh0byksdGhpc30sdHJhbnNsYXRlOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdm9pZCAwPT09JGEmJigkYT1uZXcgSXQpLCRhLm1ha2VUcmFuc2xhdGlvbih0LGUsaSksdGhpcy5hcHBseU1hdHJpeCgkYSksdGhpc30sc2NhbGU6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB2b2lkIDA9PT1LYSYmKEthPW5ldyBJdCksS2EubWFrZVNjYWxlKHQsZSxpKSx0aGlzLmFwcGx5TWF0cml4KEthKSx0aGlzfSxsb29rQXQ6ZnVuY3Rpb24odCl7dm9pZCAwPT09UWEmJihRYT1uZXcgWCksUWEubG9va0F0KHQpLFFhLnVwZGF0ZU1hdHJpeCgpLHRoaXMuYXBwbHlNYXRyaXgoUWEubWF0cml4KX0sY2VudGVyOmZ1bmN0aW9uKCl7dGhpcy5jb21wdXRlQm91bmRpbmdCb3goKTt2YXIgdD10aGlzLmJvdW5kaW5nQm94LmdldENlbnRlcigpLm5lZ2F0ZSgpO3JldHVybiB0aGlzLnRyYW5zbGF0ZSh0LngsdC55LHQueiksdH0sc2V0RnJvbU9iamVjdDpmdW5jdGlvbih0KXt2YXIgZT10Lmdlb21ldHJ5O2lmKHQuaXNQb2ludHN8fHQuaXNMaW5lKXt0PW5ldyBydCgzKmUudmVydGljZXMubGVuZ3RoLDMpO3ZhciBpPW5ldyBydCgzKmUuY29sb3JzLmxlbmd0aCwzKTt0aGlzLmFkZEF0dHJpYnV0ZSgicG9zaXRpb24iLHQuY29weVZlY3RvcjNzQXJyYXkoZS52ZXJ0aWNlcykpLHRoaXMuYWRkQXR0cmlidXRlKCJjb2xvciIsaS5jb3B5Q29sb3JzQXJyYXkoZS5jb2xvcnMpKSxlLmxpbmVEaXN0YW5jZXMmJmUubGluZURpc3RhbmNlcy5sZW5ndGg9PT1lLnZlcnRpY2VzLmxlbmd0aCYmKHQ9bmV3IHJ0KGUubGluZURpc3RhbmNlcy5sZW5ndGgsMSksdGhpcy5hZGRBdHRyaWJ1dGUoImxpbmVEaXN0YW5jZSIsdC5jb3B5QXJyYXkoZS5saW5lRGlzdGFuY2VzKSkpLG51bGwhPT1lLmJvdW5kaW5nU3BoZXJlJiYodGhpcy5ib3VuZGluZ1NwaGVyZT1lLmJvdW5kaW5nU3BoZXJlLmNsb25lKCkpLG51bGwhPT1lLmJvdW5kaW5nQm94JiYodGhpcy5ib3VuZGluZ0JveD1lLmJvdW5kaW5nQm94LmNsb25lKCkpfWVsc2UgdC5pc01lc2gmJmUmJmUuaXNHZW9tZXRyeSYmdGhpcy5mcm9tR2VvbWV0cnkoZSk7cmV0dXJuIHRoaXN9LHVwZGF0ZUZyb21PYmplY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dC5nZW9tZXRyeTtpZih0LmlzTWVzaCl7dmFyIGk9ZS5fX2RpcmVjdEdlb21ldHJ5O2lmKCEwPT09ZS5lbGVtZW50c05lZWRVcGRhdGUmJihpPXZvaWQgMCxlLmVsZW1lbnRzTmVlZFVwZGF0ZT0hMSksdm9pZCAwPT09aSlyZXR1cm4gdGhpcy5mcm9tR2VvbWV0cnkoZSk7aS52ZXJ0aWNlc05lZWRVcGRhdGU9ZS52ZXJ0aWNlc05lZWRVcGRhdGUsaS5ub3JtYWxzTmVlZFVwZGF0ZT1lLm5vcm1hbHNOZWVkVXBkYXRlLGkuY29sb3JzTmVlZFVwZGF0ZT1lLmNvbG9yc05lZWRVcGRhdGUsaS51dnNOZWVkVXBkYXRlPWUudXZzTmVlZFVwZGF0ZSxpLmdyb3Vwc05lZWRVcGRhdGU9ZS5ncm91cHNOZWVkVXBkYXRlLGUudmVydGljZXNOZWVkVXBkYXRlPSExLGUubm9ybWFsc05lZWRVcGRhdGU9ITEsZS5jb2xvcnNOZWVkVXBkYXRlPSExLGUudXZzTmVlZFVwZGF0ZT0hMSxlLmdyb3Vwc05lZWRVcGRhdGU9ITEsZT1pfXJldHVybiEwPT09ZS52ZXJ0aWNlc05lZWRVcGRhdGUmJih2b2lkIDAhPT0oaT10aGlzLmF0dHJpYnV0ZXMucG9zaXRpb24pJiYoaS5jb3B5VmVjdG9yM3NBcnJheShlLnZlcnRpY2VzKSxpLm5lZWRzVXBkYXRlPSEwKSxlLnZlcnRpY2VzTmVlZFVwZGF0ZT0hMSksITA9PT1lLm5vcm1hbHNOZWVkVXBkYXRlJiYodm9pZCAwIT09KGk9dGhpcy5hdHRyaWJ1dGVzLm5vcm1hbCkmJihpLmNvcHlWZWN0b3Izc0FycmF5KGUubm9ybWFscyksaS5uZWVkc1VwZGF0ZT0hMCksZS5ub3JtYWxzTmVlZFVwZGF0ZT0hMSksITA9PT1lLmNvbG9yc05lZWRVcGRhdGUmJih2b2lkIDAhPT0oaT10aGlzLmF0dHJpYnV0ZXMuY29sb3IpJiYoaS5jb3B5Q29sb3JzQXJyYXkoZS5jb2xvcnMpLGkubmVlZHNVcGRhdGU9ITApLGUuY29sb3JzTmVlZFVwZGF0ZT0hMSksZS51dnNOZWVkVXBkYXRlJiYodm9pZCAwIT09KGk9dGhpcy5hdHRyaWJ1dGVzLnV2KSYmKGkuY29weVZlY3RvcjJzQXJyYXkoZS51dnMpLGkubmVlZHNVcGRhdGU9ITApLGUudXZzTmVlZFVwZGF0ZT0hMSksZS5saW5lRGlzdGFuY2VzTmVlZFVwZGF0ZSYmKHZvaWQgMCE9PShpPXRoaXMuYXR0cmlidXRlcy5saW5lRGlzdGFuY2UpJiYoaS5jb3B5QXJyYXkoZS5saW5lRGlzdGFuY2VzKSxpLm5lZWRzVXBkYXRlPSEwKSxlLmxpbmVEaXN0YW5jZXNOZWVkVXBkYXRlPSExKSxlLmdyb3Vwc05lZWRVcGRhdGUmJihlLmNvbXB1dGVHcm91cHModC5nZW9tZXRyeSksdGhpcy5ncm91cHM9ZS5ncm91cHMsZS5ncm91cHNOZWVkVXBkYXRlPSExKSx0aGlzfSxmcm9tR2VvbWV0cnk6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19kaXJlY3RHZW9tZXRyeT0obmV3IG90KS5mcm9tR2VvbWV0cnkodCksdGhpcy5mcm9tRGlyZWN0R2VvbWV0cnkodC5fX2RpcmVjdEdlb21ldHJ5KX0sZnJvbURpcmVjdEdlb21ldHJ5OmZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBGbG9hdDMyQXJyYXkoMyp0LnZlcnRpY2VzLmxlbmd0aCk7Zm9yKHZhciBpIGluIHRoaXMuYWRkQXR0cmlidXRlKCJwb3NpdGlvbiIsbmV3IEooZSwzKS5jb3B5VmVjdG9yM3NBcnJheSh0LnZlcnRpY2VzKSksMDx0Lm5vcm1hbHMubGVuZ3RoJiYoZT1uZXcgRmxvYXQzMkFycmF5KDMqdC5ub3JtYWxzLmxlbmd0aCksdGhpcy5hZGRBdHRyaWJ1dGUoIm5vcm1hbCIsbmV3IEooZSwzKS5jb3B5VmVjdG9yM3NBcnJheSh0Lm5vcm1hbHMpKSksMDx0LmNvbG9ycy5sZW5ndGgmJihlPW5ldyBGbG9hdDMyQXJyYXkoMyp0LmNvbG9ycy5sZW5ndGgpLHRoaXMuYWRkQXR0cmlidXRlKCJjb2xvciIsbmV3IEooZSwzKS5jb3B5Q29sb3JzQXJyYXkodC5jb2xvcnMpKSksMDx0LnV2cy5sZW5ndGgmJihlPW5ldyBGbG9hdDMyQXJyYXkoMip0LnV2cy5sZW5ndGgpLHRoaXMuYWRkQXR0cmlidXRlKCJ1diIsbmV3IEooZSwyKS5jb3B5VmVjdG9yMnNBcnJheSh0LnV2cykpKSwwPHQudXZzMi5sZW5ndGgmJihlPW5ldyBGbG9hdDMyQXJyYXkoMip0LnV2czIubGVuZ3RoKSx0aGlzLmFkZEF0dHJpYnV0ZSgidXYyIixuZXcgSihlLDIpLmNvcHlWZWN0b3Iyc0FycmF5KHQudXZzMikpKSwwPHQuaW5kaWNlcy5sZW5ndGgmJihlPW5ldyg2NTUzNTx0LnZlcnRpY2VzLmxlbmd0aD9VaW50MzJBcnJheTpVaW50MTZBcnJheSkoMyp0LmluZGljZXMubGVuZ3RoKSx0aGlzLnNldEluZGV4KG5ldyBKKGUsMSkuY29weUluZGljZXNBcnJheSh0LmluZGljZXMpKSksdGhpcy5ncm91cHM9dC5ncm91cHMsdC5tb3JwaFRhcmdldHMpe2U9W107Zm9yKHZhciBuPXQubW9ycGhUYXJnZXRzW2ldLHI9MCxhPW4ubGVuZ3RoO3I8YTtyKyspe3ZhciBvPW5bcl0scz1uZXcgcnQoMypvLmxlbmd0aCwzKTtlLnB1c2gocy5jb3B5VmVjdG9yM3NBcnJheShvKSl9dGhpcy5tb3JwaEF0dHJpYnV0ZXNbaV09ZX1yZXR1cm4gMDx0LnNraW5JbmRpY2VzLmxlbmd0aCYmKGk9bmV3IHJ0KDQqdC5za2luSW5kaWNlcy5sZW5ndGgsNCksdGhpcy5hZGRBdHRyaWJ1dGUoInNraW5JbmRleCIsaS5jb3B5VmVjdG9yNHNBcnJheSh0LnNraW5JbmRpY2VzKSkpLDA8dC5za2luV2VpZ2h0cy5sZW5ndGgmJihpPW5ldyBydCg0KnQuc2tpbldlaWdodHMubGVuZ3RoLDQpLHRoaXMuYWRkQXR0cmlidXRlKCJza2luV2VpZ2h0IixpLmNvcHlWZWN0b3I0c0FycmF5KHQuc2tpbldlaWdodHMpKSksbnVsbCE9PXQuYm91bmRpbmdTcGhlcmUmJih0aGlzLmJvdW5kaW5nU3BoZXJlPXQuYm91bmRpbmdTcGhlcmUuY2xvbmUoKSksbnVsbCE9PXQuYm91bmRpbmdCb3gmJih0aGlzLmJvdW5kaW5nQm94PXQuYm91bmRpbmdCb3guY2xvbmUoKSksdGhpc30sY29tcHV0ZUJvdW5kaW5nQm94OmZ1bmN0aW9uKCl7bnVsbD09PXRoaXMuYm91bmRpbmdCb3gmJih0aGlzLmJvdW5kaW5nQm94PW5ldyBEKTt2YXIgdD10aGlzLmF0dHJpYnV0ZXMucG9zaXRpb247dm9pZCAwIT09dD90aGlzLmJvdW5kaW5nQm94LnNldEZyb21CdWZmZXJBdHRyaWJ1dGUodCk6dGhpcy5ib3VuZGluZ0JveC5tYWtlRW1wdHkoKSwoaXNOYU4odGhpcy5ib3VuZGluZ0JveC5taW4ueCl8fGlzTmFOKHRoaXMuYm91bmRpbmdCb3gubWluLnkpfHxpc05hTih0aGlzLmJvdW5kaW5nQm94Lm1pbi56KSkmJmNvbnNvbGUuZXJyb3IoJ1RIUkVFLkJ1ZmZlckdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ0JveDogQ29tcHV0ZWQgbWluL21heCBoYXZlIE5hTiB2YWx1ZXMuIFRoZSAicG9zaXRpb24iIGF0dHJpYnV0ZSBpcyBsaWtlbHkgdG8gaGF2ZSBOYU4gdmFsdWVzLicsdGhpcyl9LGNvbXB1dGVCb3VuZGluZ1NwaGVyZTooWmE9bmV3IEQsSmE9bmV3IEN0LGZ1bmN0aW9uKCl7bnVsbD09PXRoaXMuYm91bmRpbmdTcGhlcmUmJih0aGlzLmJvdW5kaW5nU3BoZXJlPW5ldyB6dCk7dmFyIHQ9dGhpcy5hdHRyaWJ1dGVzLnBvc2l0aW9uO2lmKHQpe3ZhciBlPXRoaXMuYm91bmRpbmdTcGhlcmUuY2VudGVyO1phLnNldEZyb21CdWZmZXJBdHRyaWJ1dGUodCksWmEuZ2V0Q2VudGVyKGUpO2Zvcih2YXIgaT0wLG49MCxyPXQuY291bnQ7bjxyO24rKylKYS54PXQuZ2V0WChuKSxKYS55PXQuZ2V0WShuKSxKYS56PXQuZ2V0WihuKSxpPU1hdGgubWF4KGksZS5kaXN0YW5jZVRvU3F1YXJlZChKYSkpO3RoaXMuYm91bmRpbmdTcGhlcmUucmFkaXVzPU1hdGguc3FydChpKSxpc05hTih0aGlzLmJvdW5kaW5nU3BoZXJlLnJhZGl1cykmJmNvbnNvbGUuZXJyb3IoJ1RIUkVFLkJ1ZmZlckdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpOiBDb21wdXRlZCByYWRpdXMgaXMgTmFOLiBUaGUgInBvc2l0aW9uIiBhdHRyaWJ1dGUgaXMgbGlrZWx5IHRvIGhhdmUgTmFOIHZhbHVlcy4nLHRoaXMpfX0pLGNvbXB1dGVGYWNlTm9ybWFsczpmdW5jdGlvbigpe30sY29tcHV0ZVZlcnRleE5vcm1hbHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmluZGV4LGU9dGhpcy5hdHRyaWJ1dGVzLGk9dGhpcy5ncm91cHM7aWYoZS5wb3NpdGlvbil7dmFyIG49ZS5wb3NpdGlvbi5hcnJheTtpZih2b2lkIDA9PT1lLm5vcm1hbCl0aGlzLmFkZEF0dHJpYnV0ZSgibm9ybWFsIixuZXcgSihuZXcgRmxvYXQzMkFycmF5KG4ubGVuZ3RoKSwzKSk7ZWxzZSBmb3IodmFyIHI9MCxhPShoPWUubm9ybWFsLmFycmF5KS5sZW5ndGg7cjxhO3IrKyloW3JdPTA7dmFyIG8scyxjLGg9ZS5ub3JtYWwuYXJyYXksbD1uZXcgQ3QsdT1uZXcgQ3QsZD1uZXcgQ3QscD1uZXcgQ3QsZj1uZXcgQ3Q7aWYodCl7dD10LmFycmF5LDA9PT1pLmxlbmd0aCYmdGhpcy5hZGRHcm91cCgwLHQubGVuZ3RoKTtmb3IodmFyIG09MCxnPWkubGVuZ3RoO208ZzsrK20pZm9yKGE9KHI9aVttXSkuc3RhcnQsbz1yLmNvdW50LHI9YSxhKz1vO3I8YTtyKz0zKW89Myp0W3IrMF0scz0zKnRbcisxXSxjPTMqdFtyKzJdLGwuZnJvbUFycmF5KG4sbyksdS5mcm9tQXJyYXkobixzKSxkLmZyb21BcnJheShuLGMpLHAuc3ViVmVjdG9ycyhkLHUpLGYuc3ViVmVjdG9ycyhsLHUpLHAuY3Jvc3MoZiksaFtvXSs9cC54LGhbbysxXSs9cC55LGhbbysyXSs9cC56LGhbc10rPXAueCxoWzErc10rPXAueSxoWzIrc10rPXAueixoW2NdKz1wLngsaFsxK2NdKz1wLnksaFsyK2NdKz1wLnp9ZWxzZSBmb3Iocj0wLGE9bi5sZW5ndGg7cjxhO3IrPTkpbC5mcm9tQXJyYXkobixyKSx1LmZyb21BcnJheShuLHIrMyksZC5mcm9tQXJyYXkobixyKzYpLHAuc3ViVmVjdG9ycyhkLHUpLGYuc3ViVmVjdG9ycyhsLHUpLHAuY3Jvc3MoZiksaFtyXT1wLngsaFtyKzFdPXAueSxoW3IrMl09cC56LGhbciszXT1wLngsaFtyKzRdPXAueSxoW3IrNV09cC56LGhbcis2XT1wLngsaFtyKzddPXAueSxoW3IrOF09cC56O3RoaXMubm9ybWFsaXplTm9ybWFscygpLGUubm9ybWFsLm5lZWRzVXBkYXRlPSEwfX0sbWVyZ2U6ZnVuY3Rpb24odCxlKXtpZighMSE9PSh0JiZ0LmlzQnVmZmVyR2VvbWV0cnkpKXt2b2lkIDA9PT1lJiYoZT0wKTt2YXIgaSxuPXRoaXMuYXR0cmlidXRlcztmb3IoaSBpbiBuKWlmKHZvaWQgMCE9PXQuYXR0cmlidXRlc1tpXSlmb3IodmFyIHI9bltpXS5hcnJheSxhPShzPXQuYXR0cmlidXRlc1tpXSkuYXJyYXksbz0wLHM9cy5pdGVtU2l6ZSplO288YS5sZW5ndGg7bysrLHMrKylyW3NdPWFbb107cmV0dXJuIHRoaXN9Y29uc29sZS5lcnJvcigiVEhSRUUuQnVmZmVyR2VvbWV0cnkubWVyZ2UoKTogZ2VvbWV0cnkgbm90IGFuIGluc3RhbmNlIG9mIFRIUkVFLkJ1ZmZlckdlb21ldHJ5LiIsdCl9LG5vcm1hbGl6ZU5vcm1hbHM6ZnVuY3Rpb24oKXtmb3IodmFyIHQsZSxpLG49dGhpcy5hdHRyaWJ1dGVzLm5vcm1hbC5hcnJheSxyPTAsYT1uLmxlbmd0aDtyPGE7cis9Myl0PW5bcl0sZT1uW3IrMV0saT1uW3IrMl0sdD0xL01hdGguc3FydCh0KnQrZSplK2kqaSksbltyXSo9dCxuW3IrMV0qPXQsbltyKzJdKj10fSx0b05vbkluZGV4ZWQ6ZnVuY3Rpb24oKXtpZihudWxsPT09dGhpcy5pbmRleClyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeS50b05vbkluZGV4ZWQoKTogR2VvbWV0cnkgaXMgYWxyZWFkeSBub24taW5kZXhlZC4iKSx0aGlzO3ZhciB0LGU9bmV3IFZ0LGk9dGhpcy5pbmRleC5hcnJheSxuPXRoaXMuYXR0cmlidXRlcztmb3IodCBpbiBuKXtmb3IodmFyIHIsYT0obz1uW3RdKS5hcnJheSxvPW8uaXRlbVNpemUscz1uZXcgYS5jb25zdHJ1Y3RvcihpLmxlbmd0aCpvKSxjPTAsaD0wLGw9aS5sZW5ndGg7aDxsO2grKyl7cj1pW2hdKm87Zm9yKHZhciB1PTA7dTxvO3UrKylzW2MrK109YVtyKytdfWUuYWRkQXR0cmlidXRlKHQsbmV3IEoocyxvKSl9cmV0dXJuIGV9LHRvSlNPTjpmdW5jdGlvbigpe3ZhciB0PXttZXRhZGF0YTp7dmVyc2lvbjo0LjQsdHlwZToiQnVmZmVyR2VvbWV0cnkiLGdlbmVyYXRvcjoiQnVmZmVyR2VvbWV0cnkudG9KU09OIn19O2lmKHQudXVpZD10aGlzLnV1aWQsdC50eXBlPXRoaXMudHlwZSwiIiE9PXRoaXMubmFtZSYmKHQubmFtZT10aGlzLm5hbWUpLHZvaWQgMCE9PXRoaXMucGFyYW1ldGVycyl7dmFyIGUsaT10aGlzLnBhcmFtZXRlcnM7Zm9yKGUgaW4gaSl2b2lkIDAhPT1pW2VdJiYodFtlXT1pW2VdKTtyZXR1cm4gdH10LmRhdGE9e2F0dHJpYnV0ZXM6e319O3ZhciBuPXRoaXMuaW5kZXg7Zm9yKGUgaW4gbnVsbCE9PW4mJihpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG4uYXJyYXkpLHQuZGF0YS5pbmRleD17dHlwZTpuLmFycmF5LmNvbnN0cnVjdG9yLm5hbWUsYXJyYXk6aX0pLG49dGhpcy5hdHRyaWJ1dGVzKXt2YXIgcj1uW2VdO2k9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoci5hcnJheSk7dC5kYXRhLmF0dHJpYnV0ZXNbZV09e2l0ZW1TaXplOnIuaXRlbVNpemUsdHlwZTpyLmFycmF5LmNvbnN0cnVjdG9yLm5hbWUsYXJyYXk6aSxub3JtYWxpemVkOnIubm9ybWFsaXplZH19cmV0dXJuIDA8KGU9dGhpcy5ncm91cHMpLmxlbmd0aCYmKHQuZGF0YS5ncm91cHM9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShlKSkpLG51bGwhPT0oZT10aGlzLmJvdW5kaW5nU3BoZXJlKSYmKHQuZGF0YS5ib3VuZGluZ1NwaGVyZT17Y2VudGVyOmUuY2VudGVyLnRvQXJyYXkoKSxyYWRpdXM6ZS5yYWRpdXN9KSx0fSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgVnQpLmNvcHkodGhpcyl9LGNvcHk6ZnVuY3Rpb24odCl7bnVsbCE9PShpPXQuaW5kZXgpJiZ0aGlzLnNldEluZGV4KGkuY2xvbmUoKSk7dmFyIGUsaT10LmF0dHJpYnV0ZXM7Zm9yKGUgaW4gaSl0aGlzLmFkZEF0dHJpYnV0ZShlLGlbZV0uY2xvbmUoKSk7Zm9yKGU9MCxpPSh0PXQuZ3JvdXBzKS5sZW5ndGg7ZTxpO2UrKyl7dmFyIG49dFtlXTt0aGlzLmFkZEdyb3VwKG4uc3RhcnQsbi5jb3VudCxuLm1hdGVyaWFsSW5kZXgpfXJldHVybiB0aGlzfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KHt0eXBlOiJkaXNwb3NlIn0pfX0pLFZ0Lk1heEluZGV4PTY1NTM1LGt0LnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoWC5wcm90b3R5cGUpLHtjb25zdHJ1Y3RvcjprdCxpc01lc2g6ITAsc2V0RHJhd01vZGU6ZnVuY3Rpb24odCl7dGhpcy5kcmF3TW9kZT10fSxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiBYLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmRyYXdNb2RlPXQuZHJhd01vZGUsdGhpc30sdXBkYXRlTW9ycGhUYXJnZXRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZW9tZXRyeS5tb3JwaFRhcmdldHM7aWYodm9pZCAwIT09dCYmMDx0Lmxlbmd0aCl7dGhpcy5tb3JwaFRhcmdldEluZmx1ZW5jZXM9W10sdGhpcy5tb3JwaFRhcmdldERpY3Rpb25hcnk9e307Zm9yKHZhciBlPTAsaT10Lmxlbmd0aDtlPGk7ZSsrKXRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzLnB1c2goMCksdGhpcy5tb3JwaFRhcmdldERpY3Rpb25hcnlbdFtlXS5uYW1lXT1lfX0scmF5Y2FzdDpmdW5jdGlvbigpe2Z1bmN0aW9uIGIodCxlLGksbixyLGEsbyl7cmV0dXJuIHEuYmFyeWNvb3JkRnJvbVBvaW50KHQsZSxpLG4scyksci5tdWx0aXBseVNjYWxhcihzLngpLGEubXVsdGlwbHlTY2FsYXIocy55KSxvLm11bHRpcGx5U2NhbGFyKHMueiksci5hZGQoYSkuYWRkKG8pLHIuY2xvbmUoKX1mdW5jdGlvbiB3KHQsZSxpLG4scixhLG8pe3ZhciBzPXQubWF0ZXJpYWw7cmV0dXJuIG51bGw9PT0oMT09PXMuc2lkZT9pLmludGVyc2VjdFRyaWFuZ2xlKGEscixuLCEwLG8pOmkuaW50ZXJzZWN0VHJpYW5nbGUobixyLGEsMiE9PXMuc2lkZSxvKSk/bnVsbDooYy5jb3B5KG8pLGMuYXBwbHlNYXRyaXg0KHQubWF0cml4V29ybGQpLChpPWUucmF5Lm9yaWdpbi5kaXN0YW5jZVRvKGMpKTxlLm5lYXJ8fGk+ZS5mYXI/bnVsbDp7ZGlzdGFuY2U6aSxwb2ludDpjLmNsb25lKCksb2JqZWN0OnR9KX1mdW5jdGlvbiBNKHQsZSxpLG4scixhLG8scyl7cmV0dXJuIEEuZnJvbUFycmF5KG4sMyphKSxMLmZyb21BcnJheShuLDMqbyksUi5mcm9tQXJyYXkobiwzKnMpLCh0PXcodCxlLGksQSxMLFIsTykpJiYociYmKFUuZnJvbUFycmF5KHIsMiphKSxOLmZyb21BcnJheShyLDIqbyksRC5mcm9tQXJyYXkociwyKnMpLHQudXY9YihPLEEsTCxSLFUsTixEKSksdC5mYWNlPW5ldyBaKGEsbyxzLHEubm9ybWFsKEEsTCxSKSksdC5mYWNlSW5kZXg9YSksdH12YXIgRT1uZXcgSXQsVD1uZXcgayxTPW5ldyB6dCxBPW5ldyBDdCxMPW5ldyBDdCxSPW5ldyBDdCxQPW5ldyBDdCxDPW5ldyBDdCxJPW5ldyBDdCxVPW5ldyBWLE49bmV3IFYsRD1uZXcgVixzPW5ldyBDdCxPPW5ldyBDdCxjPW5ldyBDdDtyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgaSxuLHI9dGhpcy5nZW9tZXRyeSxhPXRoaXMubWF0ZXJpYWwsbz10aGlzLm1hdHJpeFdvcmxkO2lmKHZvaWQgMCE9PWEmJihudWxsPT09ci5ib3VuZGluZ1NwaGVyZSYmci5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSxTLmNvcHkoci5ib3VuZGluZ1NwaGVyZSksUy5hcHBseU1hdHJpeDQobyksITEhPT10LnJheS5pbnRlcnNlY3RzU3BoZXJlKFMpJiYoRS5nZXRJbnZlcnNlKG8pLFQuY29weSh0LnJheSkuYXBwbHlNYXRyaXg0KEUpLG51bGw9PT1yLmJvdW5kaW5nQm94fHwhMSE9PVQuaW50ZXJzZWN0c0JveChyLmJvdW5kaW5nQm94KSkpKWlmKHIuaXNCdWZmZXJHZW9tZXRyeSl7dmFyIHMsYzthPXIuaW5kZXgscj0obz1yLmF0dHJpYnV0ZXMpLnBvc2l0aW9uLmFycmF5O2lmKHZvaWQgMCE9PW8udXYmJihpPW8udXYuYXJyYXkpLG51bGwhPT1hKWZvcih2YXIgaD0wLGw9KG89YS5hcnJheSkubGVuZ3RoO2g8bDtoKz0zKWE9b1toXSxzPW9baCsxXSxjPW9baCsyXSwobj1NKHRoaXMsdCxULHIsaSxhLHMsYykpJiYobi5mYWNlSW5kZXg9TWF0aC5mbG9vcihoLzMpLGUucHVzaChuKSk7ZWxzZSBmb3IoaD0wLGw9ci5sZW5ndGg7aDxsO2grPTkpKG49TSh0aGlzLHQsVCxyLGksYT1oLzMscz1hKzEsYz1hKzIpKSYmKG4uaW5kZXg9YSxlLnB1c2gobikpfWVsc2UgaWYoci5pc0dlb21ldHJ5KXt2YXIgdSxkO2g9ITA9PT0obz1hJiZhLmlzTXVsdGlNYXRlcmlhbCk/YS5tYXRlcmlhbHM6bnVsbCxsPXIudmVydGljZXM7cz1yLmZhY2VzLDA8KGM9ci5mYWNlVmVydGV4VXZzWzBdKS5sZW5ndGgmJihpPWMpO2Zvcih2YXIgcD0wLGY9cy5sZW5ndGg7cDxmO3ArKyl7dmFyIG09c1twXTtpZih2b2lkIDAhPT0obj0hMD09PW8/aFttLm1hdGVyaWFsSW5kZXhdOmEpKXtpZihjPWxbbS5hXSx1PWxbbS5iXSxkPWxbbS5jXSwhMD09PW4ubW9ycGhUYXJnZXRzKXtuPXIubW9ycGhUYXJnZXRzO3ZhciBnPXRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzO0Euc2V0KDAsMCwwKSxMLnNldCgwLDAsMCksUi5zZXQoMCwwLDApO2Zvcih2YXIgdj0wLHk9bi5sZW5ndGg7djx5O3YrKyl7dmFyIHg9Z1t2XTtpZigwIT09eCl7dmFyIF89blt2XS52ZXJ0aWNlcztBLmFkZFNjYWxlZFZlY3RvcihQLnN1YlZlY3RvcnMoX1ttLmFdLGMpLHgpLEwuYWRkU2NhbGVkVmVjdG9yKEMuc3ViVmVjdG9ycyhfW20uYl0sdSkseCksUi5hZGRTY2FsZWRWZWN0b3IoSS5zdWJWZWN0b3JzKF9bbS5jXSxkKSx4KX19QS5hZGQoYyksTC5hZGQodSksUi5hZGQoZCksYz1BLHU9TCxkPVJ9KG49dyh0aGlzLHQsVCxjLHUsZCxPKSkmJihpJiYoZz1pW3BdLFUuY29weShnWzBdKSxOLmNvcHkoZ1sxXSksRC5jb3B5KGdbMl0pLG4udXY9YihPLGMsdSxkLFUsTixEKSksbi5mYWNlPW0sbi5mYWNlSW5kZXg9cCxlLnB1c2gobikpfX19fX0oKSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih0aGlzLmdlb21ldHJ5LHRoaXMubWF0ZXJpYWwpLmNvcHkodGhpcyl9fSksKGp0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFZ0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWp0LChXdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1XdCwoKGN0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSkuY29uc3RydWN0b3I9Y3QpLnByb3RvdHlwZS5pc0NhbWVyYT0hMCxjdC5wcm90b3R5cGUuZ2V0V29ybGREaXJlY3Rpb249KG5vPW5ldyBzLGZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBDdCx0aGlzLmdldFdvcmxkUXVhdGVybmlvbihubyksdC5zZXQoMCwwLC0xKS5hcHBseVF1YXRlcm5pb24obm8pfSksY3QucHJvdG90eXBlLmxvb2tBdD0ocm89bmV3IEl0LGZ1bmN0aW9uKHQpe3JvLmxvb2tBdCh0aGlzLnBvc2l0aW9uLHQsdGhpcy51cCksdGhpcy5xdWF0ZXJuaW9uLnNldEZyb21Sb3RhdGlvbk1hdHJpeChybyl9KSxjdC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmNvcHkodGhpcyl9LGN0LnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBYLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLm1hdHJpeFdvcmxkSW52ZXJzZS5jb3B5KHQubWF0cml4V29ybGRJbnZlcnNlKSx0aGlzLnByb2plY3Rpb25NYXRyaXguY29weSh0LnByb2plY3Rpb25NYXRyaXgpLHRoaXN9LFh0LnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoY3QucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6WHQsaXNQZXJzcGVjdGl2ZUNhbWVyYTohMCxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiBjdC5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5mb3Y9dC5mb3YsdGhpcy56b29tPXQuem9vbSx0aGlzLm5lYXI9dC5uZWFyLHRoaXMuZmFyPXQuZmFyLHRoaXMuZm9jdXM9dC5mb2N1cyx0aGlzLmFzcGVjdD10LmFzcGVjdCx0aGlzLnZpZXc9bnVsbD09PXQudmlldz9udWxsOk9iamVjdC5hc3NpZ24oe30sdC52aWV3KSx0aGlzLmZpbG1HYXVnZT10LmZpbG1HYXVnZSx0aGlzLmZpbG1PZmZzZXQ9dC5maWxtT2Zmc2V0LHRoaXN9LHNldEZvY2FsTGVuZ3RoOmZ1bmN0aW9uKHQpe3Q9LjUqdGhpcy5nZXRGaWxtSGVpZ2h0KCkvdCx0aGlzLmZvdj0yKmVyLlJBRDJERUcqTWF0aC5hdGFuKHQpLHRoaXMudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpfSxnZXRGb2NhbExlbmd0aDpmdW5jdGlvbigpe3ZhciB0PU1hdGgudGFuKC41KmVyLkRFRzJSQUQqdGhpcy5mb3YpO3JldHVybi41KnRoaXMuZ2V0RmlsbUhlaWdodCgpL3R9LGdldEVmZmVjdGl2ZUZPVjpmdW5jdGlvbigpe3JldHVybiAyKmVyLlJBRDJERUcqTWF0aC5hdGFuKE1hdGgudGFuKC41KmVyLkRFRzJSQUQqdGhpcy5mb3YpL3RoaXMuem9vbSl9LGdldEZpbG1XaWR0aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbG1HYXVnZSpNYXRoLm1pbih0aGlzLmFzcGVjdCwxKX0sZ2V0RmlsbUhlaWdodDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbG1HYXVnZS9NYXRoLm1heCh0aGlzLmFzcGVjdCwxKX0sc2V0Vmlld09mZnNldDpmdW5jdGlvbih0LGUsaSxuLHIsYSl7dGhpcy5hc3BlY3Q9dC9lLHRoaXMudmlldz17ZnVsbFdpZHRoOnQsZnVsbEhlaWdodDplLG9mZnNldFg6aSxvZmZzZXRZOm4sd2lkdGg6cixoZWlnaHQ6YX0sdGhpcy51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCl9LGNsZWFyVmlld09mZnNldDpmdW5jdGlvbigpe3RoaXMudmlldz1udWxsLHRoaXMudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpfSx1cGRhdGVQcm9qZWN0aW9uTWF0cml4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5uZWFyLGU9Mioobz10Kk1hdGgudGFuKC41KmVyLkRFRzJSQUQqdGhpcy5mb3YpL3RoaXMuem9vbSksaT0tLjUqKHM9dGhpcy5hc3BlY3QqZSksbj10aGlzLnZpZXc7aWYobnVsbCE9PW4pe3ZhciByPW4uZnVsbFdpZHRoLGE9bi5mdWxsSGVpZ2h0LG89KGk9aStuLm9mZnNldFgqcy9yLG8tbi5vZmZzZXRZKmUvYSkscz1uLndpZHRoL3IqcztlPW4uaGVpZ2h0L2EqZX0wIT09KG49dGhpcy5maWxtT2Zmc2V0KSYmKGkrPXQqbi90aGlzLmdldEZpbG1XaWR0aCgpKSx0aGlzLnByb2plY3Rpb25NYXRyaXgubWFrZUZydXN0dW0oaSxpK3Msby1lLG8sdCx0aGlzLmZhcil9LHRvSlNPTjpmdW5jdGlvbih0KXtyZXR1cm4odD1YLnByb3RvdHlwZS50b0pTT04uY2FsbCh0aGlzLHQpKS5vYmplY3QuZm92PXRoaXMuZm92LHQub2JqZWN0Lnpvb209dGhpcy56b29tLHQub2JqZWN0Lm5lYXI9dGhpcy5uZWFyLHQub2JqZWN0LmZhcj10aGlzLmZhcix0Lm9iamVjdC5mb2N1cz10aGlzLmZvY3VzLHQub2JqZWN0LmFzcGVjdD10aGlzLmFzcGVjdCxudWxsIT09dGhpcy52aWV3JiYodC5vYmplY3Qudmlldz1PYmplY3QuYXNzaWduKHt9LHRoaXMudmlldykpLHQub2JqZWN0LmZpbG1HYXVnZT10aGlzLmZpbG1HYXVnZSx0Lm9iamVjdC5maWxtT2Zmc2V0PXRoaXMuZmlsbU9mZnNldCx0fX0pLFl0LnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoY3QucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6WXQsaXNPcnRob2dyYXBoaWNDYW1lcmE6ITAsY29weTpmdW5jdGlvbih0KXtyZXR1cm4gY3QucHJvdG90eXBlLmNvcHkuY2FsbCh0aGlzLHQpLHRoaXMubGVmdD10LmxlZnQsdGhpcy5yaWdodD10LnJpZ2h0LHRoaXMudG9wPXQudG9wLHRoaXMuYm90dG9tPXQuYm90dG9tLHRoaXMubmVhcj10Lm5lYXIsdGhpcy5mYXI9dC5mYXIsdGhpcy56b29tPXQuem9vbSx0aGlzLnZpZXc9bnVsbD09PXQudmlldz9udWxsOk9iamVjdC5hc3NpZ24oe30sdC52aWV3KSx0aGlzfSxzZXRWaWV3T2Zmc2V0OmZ1bmN0aW9uKHQsZSxpLG4scixhKXt0aGlzLnZpZXc9e2Z1bGxXaWR0aDp0LGZ1bGxIZWlnaHQ6ZSxvZmZzZXRYOmksb2Zmc2V0WTpuLHdpZHRoOnIsaGVpZ2h0OmF9LHRoaXMudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpfSxjbGVhclZpZXdPZmZzZXQ6ZnVuY3Rpb24oKXt0aGlzLnZpZXc9bnVsbCx0aGlzLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKX0sdXBkYXRlUHJvamVjdGlvbk1hdHJpeDpmdW5jdGlvbigpe3ZhciB0PSh0aGlzLnJpZ2h0LXRoaXMubGVmdCkvKDIqdGhpcy56b29tKSxlPSh0aGlzLnRvcC10aGlzLmJvdHRvbSkvKDIqdGhpcy56b29tKSxpPShuPSh0aGlzLnJpZ2h0K3RoaXMubGVmdCkvMiktdCxuPW4rdDt0PShhPSh0aGlzLnRvcCt0aGlzLmJvdHRvbSkvMikrZSxlPWEtZTtpZihudWxsIT09dGhpcy52aWV3KXtuPXRoaXMuem9vbS8odGhpcy52aWV3LndpZHRoL3RoaXMudmlldy5mdWxsV2lkdGgpLGU9dGhpcy56b29tLyh0aGlzLnZpZXcuaGVpZ2h0L3RoaXMudmlldy5mdWxsSGVpZ2h0KTt2YXIgcj0odGhpcy5yaWdodC10aGlzLmxlZnQpL3RoaXMudmlldy53aWR0aCxhPSh0aGlzLnRvcC10aGlzLmJvdHRvbSkvdGhpcy52aWV3LmhlaWdodDtuPShpPWkrdGhpcy52aWV3Lm9mZnNldFgvbipyKSt0aGlzLnZpZXcud2lkdGgvbipyLGU9KHQ9dC10aGlzLnZpZXcub2Zmc2V0WS9lKmEpLXRoaXMudmlldy5oZWlnaHQvZSphfXRoaXMucHJvamVjdGlvbk1hdHJpeC5tYWtlT3J0aG9ncmFwaGljKGksbix0LGUsdGhpcy5uZWFyLHRoaXMuZmFyKX0sdG9KU09OOmZ1bmN0aW9uKHQpe3JldHVybih0PVgucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMsdCkpLm9iamVjdC56b29tPXRoaXMuem9vbSx0Lm9iamVjdC5sZWZ0PXRoaXMubGVmdCx0Lm9iamVjdC5yaWdodD10aGlzLnJpZ2h0LHQub2JqZWN0LnRvcD10aGlzLnRvcCx0Lm9iamVjdC5ib3R0b209dGhpcy5ib3R0b20sdC5vYmplY3QubmVhcj10aGlzLm5lYXIsdC5vYmplY3QuZmFyPXRoaXMuZmFyLG51bGwhPT10aGlzLnZpZXcmJih0Lm9iamVjdC52aWV3PU9iamVjdC5hc3NpZ24oe30sdGhpcy52aWV3KSksdH19KTt2YXIgb28sc28sY28saG8sbG8sdW8scG8sZm8sbW8sZ28sdm8seW89MDt4dC5wcm90b3R5cGUuaXNGb2dFeHAyPSEwLHh0LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgeHQodGhpcy5jb2xvci5nZXRIZXgoKSx0aGlzLmRlbnNpdHkpfSx4dC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOiJGb2dFeHAyIixjb2xvcjp0aGlzLmNvbG9yLmdldEhleCgpLGRlbnNpdHk6dGhpcy5kZW5zaXR5fX0sX3QucHJvdG90eXBlLmlzRm9nPSEwLF90LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgX3QodGhpcy5jb2xvci5nZXRIZXgoKSx0aGlzLm5lYXIsdGhpcy5mYXIpfSxfdC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKHQpe3JldHVybnt0eXBlOiJGb2ciLGNvbG9yOnRoaXMuY29sb3IuZ2V0SGV4KCksbmVhcjp0aGlzLm5lYXIsZmFyOnRoaXMuZmFyfX0sKChidC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShYLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWJ0KS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0LGUpe3JldHVybiBYLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0LGUpLG51bGwhPT10LmJhY2tncm91bmQmJih0aGlzLmJhY2tncm91bmQ9dC5iYWNrZ3JvdW5kLmNsb25lKCkpLG51bGwhPT10LmZvZyYmKHRoaXMuZm9nPXQuZm9nLmNsb25lKCkpLG51bGwhPT10Lm92ZXJyaWRlTWF0ZXJpYWwmJih0aGlzLm92ZXJyaWRlTWF0ZXJpYWw9dC5vdmVycmlkZU1hdGVyaWFsLmNsb25lKCkpLHRoaXMuYXV0b1VwZGF0ZT10LmF1dG9VcGRhdGUsdGhpcy5tYXRyaXhBdXRvVXBkYXRlPXQubWF0cml4QXV0b1VwZGF0ZSx0aGlzfSxidC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKHQpe3ZhciBlPVgucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMsdCk7cmV0dXJuIG51bGwhPT10aGlzLmJhY2tncm91bmQmJihlLm9iamVjdC5iYWNrZ3JvdW5kPXRoaXMuYmFja2dyb3VuZC50b0pTT04odCkpLG51bGwhPT10aGlzLmZvZyYmKGUub2JqZWN0LmZvZz10aGlzLmZvZy50b0pTT04oKSksZX0sd3QucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShYLnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOnd0LGlzTGVuc0ZsYXJlOiEwLGNvcHk6ZnVuY3Rpb24odCl7WC5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5wb3NpdGlvblNjcmVlbi5jb3B5KHQucG9zaXRpb25TY3JlZW4pLHRoaXMuY3VzdG9tVXBkYXRlQ2FsbGJhY2s9dC5jdXN0b21VcGRhdGVDYWxsYmFjaztmb3IodmFyIGU9MCxpPXQubGVuc0ZsYXJlcy5sZW5ndGg7ZTxpO2UrKyl0aGlzLmxlbnNGbGFyZXMucHVzaCh0LmxlbnNGbGFyZXNbZV0pO3JldHVybiB0aGlzfSxhZGQ6ZnVuY3Rpb24odCxlLGksbixyLGEpe3ZvaWQgMD09PWUmJihlPS0xKSx2b2lkIDA9PT1pJiYoaT0wKSx2b2lkIDA9PT1hJiYoYT0xKSx2b2lkIDA9PT1yJiYocj1uZXcgTnQoMTY3NzcyMTUpKSx2b2lkIDA9PT1uJiYobj0xKSxpPU1hdGgubWluKGksTWF0aC5tYXgoMCxpKSksdGhpcy5sZW5zRmxhcmVzLnB1c2goe3RleHR1cmU6dCxzaXplOmUsZGlzdGFuY2U6aSx4OjAseTowLHo6MCxzY2FsZToxLHJvdGF0aW9uOjAsb3BhY2l0eTphLGNvbG9yOnIsYmxlbmRpbmc6bn0pfSx1cGRhdGVMZW5zRmxhcmVzOmZ1bmN0aW9uKCl7dmFyIHQsZSxpPXRoaXMubGVuc0ZsYXJlcy5sZW5ndGgsbj0yKi10aGlzLnBvc2l0aW9uU2NyZWVuLngscj0yKi10aGlzLnBvc2l0aW9uU2NyZWVuLnk7Zm9yKHQ9MDt0PGk7dCsrKShlPXRoaXMubGVuc0ZsYXJlc1t0XSkueD10aGlzLnBvc2l0aW9uU2NyZWVuLngrbiplLmRpc3RhbmNlLGUueT10aGlzLnBvc2l0aW9uU2NyZWVuLnkrciplLmRpc3RhbmNlLGUud2FudGVkUm90YXRpb249ZS54Kk1hdGguUEkqLjI1LGUucm90YXRpb24rPS4yNSooZS53YW50ZWRSb3RhdGlvbi1lLnJvdGF0aW9uKX19KSwoKE10LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKE4ucHJvdG90eXBlKSkuY29uc3RydWN0b3I9TXQpLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBOLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmNvbG9yLmNvcHkodC5jb2xvciksdGhpcy5tYXA9dC5tYXAsdGhpcy5yb3RhdGlvbj10LnJvdGF0aW9uLHRoaXN9LEV0LnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoWC5wcm90b3R5cGUpLHtjb25zdHJ1Y3RvcjpFdCxpc1Nwcml0ZTohMCxyYXljYXN0Oihvbz1uZXcgQ3QsZnVuY3Rpb24odCxlKXtvby5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5tYXRyaXhXb3JsZCk7dmFyIGk9dC5yYXkuZGlzdGFuY2VTcVRvUG9pbnQob28pO2k+dGhpcy5zY2FsZS54KnRoaXMuc2NhbGUueS80fHxlLnB1c2goe2Rpc3RhbmNlOk1hdGguc3FydChpKSxwb2ludDp0aGlzLnBvc2l0aW9uLGZhY2U6bnVsbCxvYmplY3Q6dGhpc30pfSksY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5tYXRlcmlhbCkuY29weSh0aGlzKX19KSxUdC5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6VHQsY29weTpmdW5jdGlvbih0KXtYLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0LCExKTtmb3IodmFyIGU9MCxpPSh0PXQubGV2ZWxzKS5sZW5ndGg7ZTxpO2UrKyl7dmFyIG49dFtlXTt0aGlzLmFkZExldmVsKG4ub2JqZWN0LmNsb25lKCksbi5kaXN0YW5jZSl9cmV0dXJuIHRoaXN9LGFkZExldmVsOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9MCksZT1NYXRoLmFicyhlKTtmb3IodmFyIGk9dGhpcy5sZXZlbHMsbj0wO248aS5sZW5ndGgmJiEoZTxpW25dLmRpc3RhbmNlKTtuKyspO2kuc3BsaWNlKG4sMCx7ZGlzdGFuY2U6ZSxvYmplY3Q6dH0pLHRoaXMuYWRkKHQpfSxnZXRPYmplY3RGb3JEaXN0YW5jZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5sZXZlbHMsaT0xLG49ZS5sZW5ndGg7aTxuJiYhKHQ8ZVtpXS5kaXN0YW5jZSk7aSsrKTtyZXR1cm4gZVtpLTFdLm9iamVjdH0scmF5Y2FzdDooaG89bmV3IEN0LGZ1bmN0aW9uKHQsZSl7aG8uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRoaXMubWF0cml4V29ybGQpO3ZhciBpPXQucmF5Lm9yaWdpbi5kaXN0YW5jZVRvKGhvKTt0aGlzLmdldE9iamVjdEZvckRpc3RhbmNlKGkpLnJheWNhc3QodCxlKX0pLHVwZGF0ZTooc289bmV3IEN0LGNvPW5ldyBDdCxmdW5jdGlvbih0KXt2YXIgZT10aGlzLmxldmVscztpZigxPGUubGVuZ3RoKXtzby5zZXRGcm9tTWF0cml4UG9zaXRpb24odC5tYXRyaXhXb3JsZCksY28uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRoaXMubWF0cml4V29ybGQpLHQ9c28uZGlzdGFuY2VUbyhjbyksZVswXS5vYmplY3QudmlzaWJsZT0hMDtmb3IodmFyIGk9MSxuPWUubGVuZ3RoO2k8biYmdD49ZVtpXS5kaXN0YW5jZTtpKyspZVtpLTFdLm9iamVjdC52aXNpYmxlPSExLGVbaV0ub2JqZWN0LnZpc2libGU9ITA7Zm9yKDtpPG47aSsrKWVbaV0ub2JqZWN0LnZpc2libGU9ITF9fSksdG9KU09OOmZ1bmN0aW9uKHQpeyh0PVgucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMsdCkpLm9iamVjdC5sZXZlbHM9W107Zm9yKHZhciBlPXRoaXMubGV2ZWxzLGk9MCxuPWUubGVuZ3RoO2k8bjtpKyspe3ZhciByPWVbaV07dC5vYmplY3QubGV2ZWxzLnB1c2goe29iamVjdDpyLm9iamVjdC51dWlkLGRpc3RhbmNlOnIuZGlzdGFuY2V9KX1yZXR1cm4gdH19KSxPYmplY3QuYXNzaWduKFN0LnByb3RvdHlwZSx7Y2FsY3VsYXRlSW52ZXJzZXM6ZnVuY3Rpb24oKXt0aGlzLmJvbmVJbnZlcnNlcz1bXTtmb3IodmFyIHQ9MCxlPXRoaXMuYm9uZXMubGVuZ3RoO3Q8ZTt0Kyspe3ZhciBpPW5ldyBJdDt0aGlzLmJvbmVzW3RdJiZpLmdldEludmVyc2UodGhpcy5ib25lc1t0XS5tYXRyaXhXb3JsZCksdGhpcy5ib25lSW52ZXJzZXMucHVzaChpKX19LHBvc2U6ZnVuY3Rpb24oKXtmb3IodmFyIHQsZT0wLGk9dGhpcy5ib25lcy5sZW5ndGg7ZTxpO2UrKykodD10aGlzLmJvbmVzW2VdKSYmdC5tYXRyaXhXb3JsZC5nZXRJbnZlcnNlKHRoaXMuYm9uZUludmVyc2VzW2VdKTtmb3IoZT0wLGk9dGhpcy5ib25lcy5sZW5ndGg7ZTxpO2UrKykodD10aGlzLmJvbmVzW2VdKSYmKHQucGFyZW50JiZ0LnBhcmVudC5pc0JvbmU/KHQubWF0cml4LmdldEludmVyc2UodC5wYXJlbnQubWF0cml4V29ybGQpLHQubWF0cml4Lm11bHRpcGx5KHQubWF0cml4V29ybGQpKTp0Lm1hdHJpeC5jb3B5KHQubWF0cml4V29ybGQpLHQubWF0cml4LmRlY29tcG9zZSh0LnBvc2l0aW9uLHQucXVhdGVybmlvbix0LnNjYWxlKSl9LHVwZGF0ZToobG89bmV3IEl0LGZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT10aGlzLmJvbmVzLmxlbmd0aDt0PGU7dCsrKWxvLm11bHRpcGx5TWF0cmljZXModGhpcy5ib25lc1t0XT90aGlzLmJvbmVzW3RdLm1hdHJpeFdvcmxkOnRoaXMuaWRlbnRpdHlNYXRyaXgsdGhpcy5ib25lSW52ZXJzZXNbdF0pLGxvLnRvQXJyYXkodGhpcy5ib25lTWF0cmljZXMsMTYqdCk7dGhpcy51c2VWZXJ0ZXhUZXh0dXJlJiYodGhpcy5ib25lVGV4dHVyZS5uZWVkc1VwZGF0ZT0hMCl9KSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgU3QodGhpcy5ib25lcyx0aGlzLmJvbmVJbnZlcnNlcyx0aGlzLnVzZVZlcnRleFRleHR1cmUpfX0pLEF0LnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoWC5wcm90b3R5cGUpLHtjb25zdHJ1Y3RvcjpBdCxpc0JvbmU6ITB9KSxMdC5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKGt0LnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOkx0LGlzU2tpbm5lZE1lc2g6ITAsYmluZDpmdW5jdGlvbih0LGUpe3RoaXMuc2tlbGV0b249dCx2b2lkIDA9PT1lJiYodGhpcy51cGRhdGVNYXRyaXhXb3JsZCghMCksdGhpcy5za2VsZXRvbi5jYWxjdWxhdGVJbnZlcnNlcygpLGU9dGhpcy5tYXRyaXhXb3JsZCksdGhpcy5iaW5kTWF0cml4LmNvcHkoZSksdGhpcy5iaW5kTWF0cml4SW52ZXJzZS5nZXRJbnZlcnNlKGUpfSxwb3NlOmZ1bmN0aW9uKCl7dGhpcy5za2VsZXRvbi5wb3NlKCl9LG5vcm1hbGl6ZVNraW5XZWlnaHRzOmZ1bmN0aW9uKCl7aWYodGhpcy5nZW9tZXRyeSYmdGhpcy5nZW9tZXRyeS5pc0dlb21ldHJ5KWZvcih2YXIgdD0wO3Q8dGhpcy5nZW9tZXRyeS5za2luV2VpZ2h0cy5sZW5ndGg7dCsrKXt2YXIgZT0xLyhpPXRoaXMuZ2VvbWV0cnkuc2tpbldlaWdodHNbdF0pLmxlbmd0aE1hbmhhdHRhbigpOzEvMCE9PWU/aS5tdWx0aXBseVNjYWxhcihlKTppLnNldCgxLDAsMCwwKX1lbHNlIGlmKHRoaXMuZ2VvbWV0cnkmJnRoaXMuZ2VvbWV0cnkuaXNCdWZmZXJHZW9tZXRyeSl7dmFyIGk9bmV3IFB0LG49dGhpcy5nZW9tZXRyeS5hdHRyaWJ1dGVzLnNraW5XZWlnaHQ7Zm9yKHQ9MDt0PG4uY291bnQ7dCsrKWkueD1uLmdldFgodCksaS55PW4uZ2V0WSh0KSxpLno9bi5nZXRaKHQpLGkudz1uLmdldFcodCksMS8wIT09KGU9MS9pLmxlbmd0aE1hbmhhdHRhbigpKT9pLm11bHRpcGx5U2NhbGFyKGUpOmkuc2V0KDEsMCwwLDApLG4uc2V0WFlaVyh0LGkueCxpLnksaS56LGkudyl9fSx1cGRhdGVNYXRyaXhXb3JsZDpmdW5jdGlvbih0KXtrdC5wcm90b3R5cGUudXBkYXRlTWF0cml4V29ybGQuY2FsbCh0aGlzLCEwKSwiYXR0YWNoZWQiPT09dGhpcy5iaW5kTW9kZT90aGlzLmJpbmRNYXRyaXhJbnZlcnNlLmdldEludmVyc2UodGhpcy5tYXRyaXhXb3JsZCk6ImRldGFjaGVkIj09PXRoaXMuYmluZE1vZGU/dGhpcy5iaW5kTWF0cml4SW52ZXJzZS5nZXRJbnZlcnNlKHRoaXMuYmluZE1hdHJpeCk6Y29uc29sZS53YXJuKCJUSFJFRS5Ta2lubmVkTWVzaCB1bnJlY29nbml6ZWQgYmluZE1vZGU6ICIrdGhpcy5iaW5kTW9kZSl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMuZ2VvbWV0cnksdGhpcy5tYXRlcmlhbCx0aGlzLnNrZWxldG9uLnVzZVZlcnRleFRleHR1cmUpLmNvcHkodGhpcyl9fSksKChSdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVJ0KS5wcm90b3R5cGUuaXNMaW5lQmFzaWNNYXRlcmlhbD0hMCxSdC5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gTi5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5jb2xvci5jb3B5KHQuY29sb3IpLHRoaXMubGluZXdpZHRoPXQubGluZXdpZHRoLHRoaXMubGluZWNhcD10LmxpbmVjYXAsdGhpcy5saW5lam9pbj10LmxpbmVqb2luLHRoaXN9LGFlLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoWC5wcm90b3R5cGUpLHtjb25zdHJ1Y3RvcjphZSxpc0xpbmU6ITAscmF5Y2FzdDoodW89bmV3IEl0LHBvPW5ldyBrLGZvPW5ldyB6dCxmdW5jdGlvbih0LGUpe3ZhciBpPShpPXQubGluZVByZWNpc2lvbikqaSxuPXRoaXMuZ2VvbWV0cnkscj10aGlzLm1hdHJpeFdvcmxkO2lmKG51bGw9PT1uLmJvdW5kaW5nU3BoZXJlJiZuLmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpLGZvLmNvcHkobi5ib3VuZGluZ1NwaGVyZSksZm8uYXBwbHlNYXRyaXg0KHIpLCExIT09dC5yYXkuaW50ZXJzZWN0c1NwaGVyZShmbykpe3VvLmdldEludmVyc2UocikscG8uY29weSh0LnJheSkuYXBwbHlNYXRyaXg0KHVvKTt2YXIgYT1uZXcgQ3Qsbz1uZXcgQ3Qscz0ocj1uZXcgQ3QsbmV3IEN0KSxjPXRoaXMmJnRoaXMuaXNMaW5lU2VnbWVudHM/MjoxO2lmKG4uaXNCdWZmZXJHZW9tZXRyeSl7dmFyIGg9bi5pbmRleCxsPW4uYXR0cmlidXRlcy5wb3NpdGlvbi5hcnJheTtpZihudWxsIT09aCl7bj0wO2Zvcih2YXIgdT0oaD1oLmFycmF5KS5sZW5ndGgtMTtuPHU7bis9Yyl7dmFyIGQ9aFtuKzFdO2EuZnJvbUFycmF5KGwsMypoW25dKSxvLmZyb21BcnJheShsLDMqZCksaTwoZD1wby5kaXN0YW5jZVNxVG9TZWdtZW50KGEsbyxzLHIpKXx8KHMuYXBwbHlNYXRyaXg0KHRoaXMubWF0cml4V29ybGQpLChkPXQucmF5Lm9yaWdpbi5kaXN0YW5jZVRvKHMpKTx0Lm5lYXJ8fGQ+dC5mYXJ8fGUucHVzaCh7ZGlzdGFuY2U6ZCxwb2ludDpyLmNsb25lKCkuYXBwbHlNYXRyaXg0KHRoaXMubWF0cml4V29ybGQpLGluZGV4Om4sZmFjZTpudWxsLGZhY2VJbmRleDpudWxsLG9iamVjdDp0aGlzfSkpfX1lbHNlIGZvcihuPTAsdT1sLmxlbmd0aC8zLTE7bjx1O24rPWMpYS5mcm9tQXJyYXkobCwzKm4pLG8uZnJvbUFycmF5KGwsMypuKzMpLGk8KGQ9cG8uZGlzdGFuY2VTcVRvU2VnbWVudChhLG8scyxyKSl8fChzLmFwcGx5TWF0cml4NCh0aGlzLm1hdHJpeFdvcmxkKSwoZD10LnJheS5vcmlnaW4uZGlzdGFuY2VUbyhzKSk8dC5uZWFyfHxkPnQuZmFyfHxlLnB1c2goe2Rpc3RhbmNlOmQscG9pbnQ6ci5jbG9uZSgpLmFwcGx5TWF0cml4NCh0aGlzLm1hdHJpeFdvcmxkKSxpbmRleDpuLGZhY2U6bnVsbCxmYWNlSW5kZXg6bnVsbCxvYmplY3Q6dGhpc30pKX1lbHNlIGlmKG4uaXNHZW9tZXRyeSlmb3Iobz0oYT1uLnZlcnRpY2VzKS5sZW5ndGgsbj0wO248by0xO24rPWMpaTwoZD1wby5kaXN0YW5jZVNxVG9TZWdtZW50KGFbbl0sYVtuKzFdLHMscikpfHwocy5hcHBseU1hdHJpeDQodGhpcy5tYXRyaXhXb3JsZCksKGQ9dC5yYXkub3JpZ2luLmRpc3RhbmNlVG8ocykpPHQubmVhcnx8ZD50LmZhcnx8ZS5wdXNoKHtkaXN0YW5jZTpkLHBvaW50OnIuY2xvbmUoKS5hcHBseU1hdHJpeDQodGhpcy5tYXRyaXhXb3JsZCksaW5kZXg6bixmYWNlOm51bGwsZmFjZUluZGV4Om51bGwsb2JqZWN0OnRoaXN9KSl9fSksY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5nZW9tZXRyeSx0aGlzLm1hdGVyaWFsKS5jb3B5KHRoaXMpfX0pLG9lLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoYWUucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6b2UsaXNMaW5lU2VnbWVudHM6ITB9KSwoKHNlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKE4ucHJvdG90eXBlKSkuY29uc3RydWN0b3I9c2UpLnByb3RvdHlwZS5pc1BvaW50c01hdGVyaWFsPSEwLHNlLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBOLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmNvbG9yLmNvcHkodC5jb2xvciksdGhpcy5tYXA9dC5tYXAsdGhpcy5zaXplPXQuc2l6ZSx0aGlzLnNpemVBdHRlbnVhdGlvbj10LnNpemVBdHRlbnVhdGlvbix0aGlzfSxjZS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6Y2UsaXNQb2ludHM6ITAscmF5Y2FzdDoobW89bmV3IEl0LGdvPW5ldyBrLHZvPW5ldyB6dCxmdW5jdGlvbihhLG8pe2Z1bmN0aW9uIHQodCxlKXt2YXIgaT1nby5kaXN0YW5jZVNxVG9Qb2ludCh0KTtpZihpPGgpe3ZhciBuPWdvLmNsb3Nlc3RQb2ludFRvUG9pbnQodCk7bi5hcHBseU1hdHJpeDQoYyk7dmFyIHI9YS5yYXkub3JpZ2luLmRpc3RhbmNlVG8obik7cjxhLm5lYXJ8fHI+YS5mYXJ8fG8ucHVzaCh7ZGlzdGFuY2U6cixkaXN0YW5jZVRvUmF5Ok1hdGguc3FydChpKSxwb2ludDpuLmNsb25lKCksaW5kZXg6ZSxmYWNlOm51bGwsb2JqZWN0OnN9KX19dmFyIHM9dGhpcyxlPXRoaXMuZ2VvbWV0cnksYz10aGlzLm1hdHJpeFdvcmxkLGk9YS5wYXJhbXMuUG9pbnRzLnRocmVzaG9sZDtpZihudWxsPT09ZS5ib3VuZGluZ1NwaGVyZSYmZS5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSx2by5jb3B5KGUuYm91bmRpbmdTcGhlcmUpLHZvLmFwcGx5TWF0cml4NChjKSwhMSE9PWEucmF5LmludGVyc2VjdHNTcGhlcmUodm8pKXttby5nZXRJbnZlcnNlKGMpLGdvLmNvcHkoYS5yYXkpLmFwcGx5TWF0cml4NChtbyk7dmFyIGg9KGkvPSh0aGlzLnNjYWxlLngrdGhpcy5zY2FsZS55K3RoaXMuc2NhbGUueikvMykqaTtpZihpPW5ldyBDdCxlLmlzQnVmZmVyR2VvbWV0cnkpe3ZhciBuPWUuaW5kZXg7aWYoZT1lLmF0dHJpYnV0ZXMucG9zaXRpb24uYXJyYXksbnVsbCE9PW4pZm9yKHZhciByPW4uYXJyYXksbD0obj0wLHIubGVuZ3RoKTtuPGw7bisrKXt2YXIgdT1yW25dO2kuZnJvbUFycmF5KGUsMyp1KSx0KGksdSl9ZWxzZSBmb3Iobj0wLHI9ZS5sZW5ndGgvMztuPHI7bisrKWkuZnJvbUFycmF5KGUsMypuKSx0KGksbil9ZWxzZSBmb3Iobj0wLHI9KGk9ZS52ZXJ0aWNlcykubGVuZ3RoO248cjtuKyspdChpW25dLG4pfX0pLGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMuZ2VvbWV0cnksdGhpcy5tYXRlcmlhbCkuY29weSh0aGlzKX19KSxoZS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6aGV9KSwobGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoei5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1sZSwoKHVlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHoucHJvdG90eXBlKSkuY29uc3RydWN0b3I9dWUpLnByb3RvdHlwZS5pc0NvbXByZXNzZWRUZXh0dXJlPSEwLChkZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh6LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWRlLCgocGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoei5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1wZSkucHJvdG90eXBlLmlzRGVwdGhUZXh0dXJlPSEwLChmZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1mZSwobWUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVnQucHJvdG90eXBlKSkuY29uc3RydWN0b3I9bWUsKGdlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWdlLCh2ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj12ZSwoeWUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9eWUsKHhlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXhlLChfZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh2ZS5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1fZSwoYmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3QucHJvdG90eXBlKSkuY29uc3RydWN0b3I9YmUsKHdlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHZlLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXdlLChNZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1NZSwoRWUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9RWUsKFRlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVRlLChTZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1TZSwoQWUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVnQucHJvdG90eXBlKSkuY29uc3RydWN0b3I9QWUsKExlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUxlLChSZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1SZSwoUGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3QucHJvdG90eXBlKSkuY29uc3RydWN0b3I9UGUsKENlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFZ0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUNlLChJZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1JZTt2YXIgeG89e2FyZWE6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoLGk9MCxuPWUtMSxyPTA7cjxlO249cisrKWkrPXRbbl0ueCp0W3JdLnktdFtyXS54KnRbbl0ueTtyZXR1cm4uNSppfSx0cmlhbmd1bGF0ZTpmdW5jdGlvbih0LGUpe3ZhciBpPXQubGVuZ3RoO2lmKGk8MylyZXR1cm4gbnVsbDt2YXIgbixyLGEsbz1bXSxzPVtdLGM9W107aWYoMDx4by5hcmVhKHQpKWZvcihyPTA7cjxpO3IrKylzW3JdPXI7ZWxzZSBmb3Iocj0wO3I8aTtyKyspc1tyXT1pLTEtcjt2YXIgaD0yKmk7Zm9yKHI9aS0xOzI8aTspe2lmKGgtLTw9MCl7Y29uc29sZS53YXJuKCJUSFJFRS5TaGFwZVV0aWxzOiBVbmFibGUgdG8gdHJpYW5ndWxhdGUgcG9seWdvbiEgaW4gdHJpYW5ndWxhdGUoKSIpO2JyZWFrfXZhciBsO2k8PShuPXIpJiYobj0wKSxpPD0ocj1uKzEpJiYocj0wKSxpPD0oYT1yKzEpJiYoYT0wKTt0Ont2YXIgdSxkLHAsZixtLGcsdix5O2lmKHU9dFtzW25dXS54LGQ9dFtzW25dXS55LHA9dFtzW3JdXS54LGY9dFtzW3JdXS55LG09dFtzW2FdXS54LChwLXUpKigoZz10W3NbYV1dLnkpLWQpLShmLWQpKihtLXUpPD0wKWw9ITE7ZWxzZXt2YXIgeCxfLGIsdyxNLEUsVCxTLEEsTDtmb3IoeD1tLXAsXz1nLWYsYj11LW0sdz1kLWcsTT1wLXUsRT1mLWQsbD0wO2w8aTtsKyspaWYodj10W3NbbF1dLngseT10W3NbbF1dLnksISh2PT09dSYmeT09PWR8fHY9PT1wJiZ5PT09Znx8dj09PW0mJnk9PT1nKSYmKEE9di1wLEw9eS1mLFQ9TSooUz15LWQpLUUqKFQ9di11KSxTPWIqKHktPWcpLXcqKHYtPW0pLChBPXgqTC1fKkEpPj0tTnVtYmVyLkVQU0lMT04mJlM+PS1OdW1iZXIuRVBTSUxPTiYmVD49LU51bWJlci5FUFNJTE9OKSl7bD0hMTticmVhayB0fWw9ITB9fWlmKGwpe2ZvcihvLnB1c2goW3Rbc1tuXV0sdFtzW3JdXSx0W3NbYV1dXSksYy5wdXNoKFtzW25dLHNbcl0sc1thXV0pLGE9KG49cikrMTthPGk7bisrLGErKylzW25dPXNbYV07aD0yKi0taX19cmV0dXJuIGU/YzpvfSx0cmlhbmd1bGF0ZVNoYXBlOmZ1bmN0aW9uKHgsdCl7ZnVuY3Rpb24gZSh0KXt2YXIgZT10Lmxlbmd0aDsyPGUmJnRbZS0xXS5lcXVhbHModFswXSkmJnQucG9wKCl9ZnVuY3Rpb24gcCh0LGUsaSl7cmV0dXJuIHQueCE9PWUueD90Lng8ZS54P3QueDw9aS54JiZpLng8PWUueDplLng8PWkueCYmaS54PD10Lng6dC55PGUueT90Lnk8PWkueSYmaS55PD1lLnk6ZS55PD1pLnkmJmkueTw9dC55fWZ1bmN0aW9uIF8odCxlLGksbixyKXt2YXIgYT1lLngtdC54LG89ZS55LXQueSxzPW4ueC1pLngsYz1uLnktaS55LGg9dC54LWkueCxsPXQueS1pLnksdT1vKnMtYSpjLGQ9bypoLWEqbDtpZihNYXRoLmFicyh1KT5OdW1iZXIuRVBTSUxPTil7aWYoMDx1KXtpZihkPDB8fHU8ZClyZXR1cm5bXTtpZigocz1jKmgtcypsKTwwfHx1PHMpcmV0dXJuW119ZWxzZXtpZigwPGR8fGQ8dSlyZXR1cm5bXTtpZigwPChzPWMqaC1zKmwpfHxzPHUpcmV0dXJuW119cmV0dXJuIDA9PT1zPyFyfHwwIT1kJiZkIT09dT9bdF06W106cz09PXU/IXJ8fDAhPWQmJmQhPT11P1tlXTpbXTowPT1kP1tpXTpkPT09dT9bbl06KHI9cy91LFt7eDp0LngrciphLHk6dC55K3Iqb31dKX1yZXR1cm4gMCE9ZHx8YypoIT1zKmw/W106KHM9MD09PXMmJjA9PT1jLChvPTA9PT1hJiYwPT09bykmJnM/dC54IT09aS54fHx0LnkhPT1pLnk/W106W3RdOm8/cChpLG4sdCk/W3RdOltdOnM/cCh0LGUsaSk/W2ldOltdOihpPTAhPT1hPyh0PXQueDxlLng/KHM9KGE9dCkueCwobz1lKS54KToocz0oYT1lKS54LChvPXQpLngpLGkueDxuLng/KHU9KGU9aSkueCwoYz1uKS54KToodT0oZT1uKS54LChjPWkpLngpKToodD10Lnk8ZS55PyhzPShhPXQpLnksKG89ZSkueSk6KHM9KGE9ZSkueSwobz10KS55KSxpLnk8bi55Pyh1PShlPWkpLnksKGM9bikueSk6KHU9KGU9bikueSwoYz1pKS55KSksczw9dT90PHU/W106dD09PXU/cj9bXTpbZV06dDw9aT9bZSxvXTpbZSxjXTppPHM/W106cz09PWk/cj9bXTpbYV06dDw9aT9bYSxvXTpbYSxjXSkpfWZ1bmN0aW9uIGIodCxlLGksbil7dmFyIHI9ZS54LXQueCxhPWUueS10Lnk7ZT1pLngtdC54LGk9aS55LXQueTt2YXIgbz1uLngtdC54O3JldHVybiBuPW4ueS10LnksdD1yKmktYSplLHI9cipuLWEqbyxNYXRoLmFicyh0KT5OdW1iZXIuRVBTSUxPTj8oZT1vKmktbiplLDA8dD8wPD1yJiYwPD1lOjA8PXJ8fDA8PWUpOjA8cn1lKHgpLHQuZm9yRWFjaChlKTt2YXIgaSxuLHIsYSxvLHM9e307Zm9yKHI9eC5jb25jYXQoKSxpPTAsbj10Lmxlbmd0aDtpPG47aSsrKUFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHIsdFtpXSk7Zm9yKGk9MCxuPXIubGVuZ3RoO2k8bjtpKyspdm9pZCAwIT09c1tvPXJbaV0ueCsiOiIrcltpXS55XSYmY29uc29sZS53YXJuKCJUSFJFRS5TaGFwZVV0aWxzOiBEdXBsaWNhdGUgcG9pbnQiLG8saSksc1tvXT1pO2k9ZnVuY3Rpb24odCxvKXtmdW5jdGlvbiBlKHQsZSl7dmFyIGk9Zi5sZW5ndGgtMSxuPXQtMTtuPDAmJihuPWkpO3ZhciByPXQrMTtyZXR1cm4gaTxyJiYocj0wKSwhIShpPWIoZlt0XSxmW25dLGZbcl0sYVtlXSkpJiYoaT1hLmxlbmd0aC0xLChuPWUtMSk8MCYmKG49aSksaTwocj1lKzEpJiYocj0wKSwhIShpPWIoYVtlXSxhW25dLGFbcl0sZlt0XSkpKX1mdW5jdGlvbiBpKHQsZSl7dmFyIGksbjtmb3IoaT0wO2k8Zi5sZW5ndGg7aSsrKWlmKG49aSsxLG4lPWYubGVuZ3RoLDA8KG49Xyh0LGUsZltpXSxmW25dLCEwKSkubGVuZ3RoKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIG4odCxlKXt2YXIgaSxuLHIsYTtmb3IoaT0wO2k8bS5sZW5ndGg7aSsrKWZvcihuPW9bbVtpXV0scj0wO3I8bi5sZW5ndGg7cisrKWlmKGE9cisxLGElPW4ubGVuZ3RoLDA8KGE9Xyh0LGUsbltyXSxuW2FdLCEwKSkubGVuZ3RoKXJldHVybiEwO3JldHVybiExfXZhciBhLHIscyxjLGgsbCx1LGQscCxmPXguY29uY2F0KCksbT1bXSxnPVtdLHY9MDtmb3Iocj1vLmxlbmd0aDt2PHI7disrKW0ucHVzaCh2KTt1PTA7Zm9yKHZhciB5PTIqbS5sZW5ndGg7MDxtLmxlbmd0aDspe2lmKC0teTwwKXtjb25zb2xlLmxvZygiSW5maW5pdGUgTG9vcCEgSG9sZXMgbGVmdDoiK20ubGVuZ3RoKyIsIFByb2JhYmx5IEhvbGUgb3V0c2lkZSBTaGFwZSEiKTticmVha31mb3Iocz11O3M8Zi5sZW5ndGg7cysrKXtmb3IoYz1mW3NdLHI9LTEsdj0wO3Y8bS5sZW5ndGg7disrKWlmKGg9bVt2XSx2b2lkIDA9PT1nW2w9Yy54KyI6IitjLnkrIjoiK2hdKXtmb3IoYT1vW2hdLGQ9MDtkPGEubGVuZ3RoO2QrKylpZihoPWFbZF0sZShzLGQpJiYhaShjLGgpJiYhbihjLGgpKXtyPWQsbS5zcGxpY2UodiwxKSx1PWYuc2xpY2UoMCxzKzEpLGg9Zi5zbGljZShzKSxkPWEuc2xpY2UocikscD1hLnNsaWNlKDAscisxKSxmPXUuY29uY2F0KGQpLmNvbmNhdChwKS5jb25jYXQoaCksdT1zO2JyZWFrfWlmKDA8PXIpYnJlYWs7Z1tsXT0hMH1pZigwPD1yKWJyZWFrfX1yZXR1cm4gZn0oMCx0KTt2YXIgYz14by50cmlhbmd1bGF0ZShpLCExKTtmb3IoaT0wLG49Yy5sZW5ndGg7aTxuO2krKylmb3IoYT1jW2ldLHI9MDtyPDM7cisrKXZvaWQgMCE9PShvPXNbbz1hW3JdLngrIjoiK2Fbcl0ueV0pJiYoYVtyXT1vKTtyZXR1cm4gYy5jb25jYXQoKX0saXNDbG9ja1dpc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHhvLmFyZWEodCk8MH0sYjI6ZnVuY3Rpb24odCxlLGksbil7dmFyIHI9MS10O3JldHVybiByKnIqZSsyKigxLXQpKnQqaSt0KnQqbn0sYjM6ZnVuY3Rpb24odCxlLGksbixyKXt2YXIgYT0xLXQsbz0xLXQ7cmV0dXJuIGEqYSphKmUrMypvKm8qdCppKzMqKDEtdCkqdCp0Km4rdCp0KnQqcn19OygoVWUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3QucHJvdG90eXBlKSkuY29uc3RydWN0b3I9VWUpLnByb3RvdHlwZS5hZGRTaGFwZUxpc3Q9ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dC5sZW5ndGgsbj0wO248aTtuKyspdGhpcy5hZGRTaGFwZSh0W25dLGUpfSxVZS5wcm90b3R5cGUuYWRkU2hhcGU9ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBpKHQsZSxpKXtyZXR1cm4gZXx8Y29uc29sZS5lcnJvcigiVEhSRUUuRXh0cnVkZUdlb21ldHJ5OiB2ZWMgZG9lcyBub3QgZXhpc3QiKSxlLmNsb25lKCkubXVsdGlwbHlTY2FsYXIoaSkuYWRkKHQpfWZ1bmN0aW9uIG4odCxlLGkpe3ZhciBuLHIsYTtyPXQueC1lLngsYT10LnktZS55LG49aS54LXQueDt2YXIgbz1pLnktdC55LHM9cipyK2EqYTtpZihNYXRoLmFicyhyKm8tYSpuKT5OdW1iZXIuRVBTSUxPTil7dmFyIGM9TWF0aC5zcXJ0KHMpLGg9TWF0aC5zcXJ0KG4qbitvKm8pO3M9ZS54LWEvYztpZihlPWUueStyL2MsKGE9KG49cytyKihvPSgoaS54LW8vaC1zKSpvLShpLnkrbi9oLWUpKm4pLyhyKm8tYSpuKSktdC54KSpuKyhyPWUrYSpvLXQueSkqcik8PTIpcmV0dXJuIG5ldyBWKG4scik7YT1NYXRoLnNxcnQoYS8yKX1lbHNlIHQ9ITEscj5OdW1iZXIuRVBTSUxPTj9uPk51bWJlci5FUFNJTE9OJiYodD0hMCk6cjwtTnVtYmVyLkVQU0lMT04/bjwtTnVtYmVyLkVQU0lMT04mJih0PSEwKTpNYXRoLnNpZ24oYSk9PT1NYXRoLnNpZ24obykmJih0PSEwKSxhPXQ/KG49LWEsTWF0aC5zcXJ0KHMpKToobj1yLHI9YSxNYXRoLnNxcnQocy8yKSk7cmV0dXJuIG5ldyBWKG4vYSxyL2EpfWZ1bmN0aW9uIHIodCxlKXt2YXIgaSxuO2Zvcih6PXQubGVuZ3RoOzA8PS0tejspeyhuPShpPXopLTEpPDAmJihuPXQubGVuZ3RoLTEpO3ZhciByLGE9eSsyKm07Zm9yKHI9MDtyPGE7cisrKXt2YXIgbz0obz1lK2krKHM9TypyKSkrUyxzPShzPWUrbitzKStTLGM9KGM9ZStuKyhoPU8qKHIrMSkpKStTLGg9KGg9ZStpK2gpK1M7VC5mYWNlcy5wdXNoKG5ldyBaKG8scyxoLG51bGwsbnVsbCwxKSksVC5mYWNlcy5wdXNoKG5ldyBaKHMsYyxoLG51bGwsbnVsbCwxKSksbz1iLmdlbmVyYXRlU2lkZVdhbGxVVihULG8scyxjLGgpLFQuZmFjZVZlcnRleFV2c1swXS5wdXNoKFtvWzBdLG9bMV0sb1szXV0pLFQuZmFjZVZlcnRleFV2c1swXS5wdXNoKFtvWzFdLG9bMl0sb1szXV0pfX19ZnVuY3Rpb24gYSh0LGUsaSl7VC52ZXJ0aWNlcy5wdXNoKG5ldyBDdCh0LGUsaSkpfWZ1bmN0aW9uIG8odCxlLGkpe3QrPVMsZSs9UyxpKz1TLFQuZmFjZXMucHVzaChuZXcgWih0LGUsaSxudWxsLG51bGwsMCkpLHQ9Yi5nZW5lcmF0ZVRvcFVWKFQsdCxlLGkpLFQuZmFjZVZlcnRleFV2c1swXS5wdXNoKHQpfXZhciBzLGMsaCxsLHUsZD12b2lkIDAhPT1lLmFtb3VudD9lLmFtb3VudDoxMDAscD12b2lkIDAhPT1lLmJldmVsVGhpY2tuZXNzP2UuYmV2ZWxUaGlja25lc3M6NixmPXZvaWQgMCE9PWUuYmV2ZWxTaXplP2UuYmV2ZWxTaXplOnAtMixtPXZvaWQgMCE9PWUuYmV2ZWxTZWdtZW50cz9lLmJldmVsU2VnbWVudHM6MyxnPXZvaWQgMD09PWUuYmV2ZWxFbmFibGVkfHxlLmJldmVsRW5hYmxlZCx2PXZvaWQgMCE9PWUuY3VydmVTZWdtZW50cz9lLmN1cnZlU2VnbWVudHM6MTIseT12b2lkIDAhPT1lLnN0ZXBzP2Uuc3RlcHM6MSx4PWUuZXh0cnVkZVBhdGgsXz0hMSxiPXZvaWQgMCE9PWUuVVZHZW5lcmF0b3I/ZS5VVkdlbmVyYXRvcjpVZS5Xb3JsZFVWR2VuZXJhdG9yO3gmJihzPXguZ2V0U3BhY2VkUG9pbnRzKHkpLGc9IShfPSEwKSxjPXZvaWQgMCE9PWUuZnJhbWVzP2UuZnJhbWVzOnguY29tcHV0ZUZyZW5ldEZyYW1lcyh5LCExKSxoPW5ldyBDdCxsPW5ldyBDdCx1PW5ldyBDdCksZ3x8KGY9cD1tPTApO3ZhciB3LE0sRSxUPXRoaXMsUz10aGlzLnZlcnRpY2VzLmxlbmd0aCxBPSh2PSh4PXQuZXh0cmFjdFBvaW50cyh2KSkuc2hhcGUseC5ob2xlcyk7aWYoeD0heG8uaXNDbG9ja1dpc2Uodikpe2Zvcih2PXYucmV2ZXJzZSgpLE09MCxFPUEubGVuZ3RoO008RTtNKyspdz1BW01dLHhvLmlzQ2xvY2tXaXNlKHcpJiYoQVtNXT13LnJldmVyc2UoKSk7eD0hMX12YXIgTD14by50cmlhbmd1bGF0ZVNoYXBlKHYsQSksUj12O2ZvcihNPTAsRT1BLmxlbmd0aDtNPEU7TSsrKXc9QVtNXSx2PXYuY29uY2F0KHcpO3ZhciBQLEMsSSxVLE4sRCxPPXYubGVuZ3RoLEY9TC5sZW5ndGgsej0oeD1bXSwwKTtmb3IoUD0oST1SLmxlbmd0aCktMSxDPXorMTt6PEk7eisrLFArKyxDKyspUD09PUkmJihQPTApLEM9PT1JJiYoQz0wKSx4W3pdPW4oUlt6XSxSW1BdLFJbQ10pO3ZhciBCLEc9W10sSD14LmNvbmNhdCgpO2ZvcihNPTAsRT1BLmxlbmd0aDtNPEU7TSsrKXtmb3Iodz1BW01dLEI9W10sej0wLFA9KEk9dy5sZW5ndGgpLTEsQz16KzE7ejxJO3orKyxQKyssQysrKVA9PT1JJiYoUD0wKSxDPT09SSYmKEM9MCksQlt6XT1uKHdbel0sd1tQXSx3W0NdKTtHLnB1c2goQiksSD1ILmNvbmNhdChCKX1mb3IoUD0wO1A8bTtQKyspe2ZvcihJPVAvbSxVPXAqTWF0aC5jb3MoSSpNYXRoLlBJLzIpLEM9ZipNYXRoLnNpbihJKk1hdGguUEkvMiksej0wLEk9Ui5sZW5ndGg7ejxJO3orKylhKChOPWkoUlt6XSx4W3pdLEMpKS54LE4ueSwtVSk7Zm9yKE09MCxFPUEubGVuZ3RoO008RTtNKyspZm9yKHc9QVtNXSxCPUdbTV0sej0wLEk9dy5sZW5ndGg7ejxJO3orKylhKChOPWkod1t6XSxCW3pdLEMpKS54LE4ueSwtVSl9Zm9yKEM9Zix6PTA7ejxPO3orKylOPWc/aSh2W3pdLEhbel0sQyk6dlt6XSxfPyhsLmNvcHkoYy5ub3JtYWxzWzBdKS5tdWx0aXBseVNjYWxhcihOLngpLGguY29weShjLmJpbm9ybWFsc1swXSkubXVsdGlwbHlTY2FsYXIoTi55KSx1LmNvcHkoc1swXSkuYWRkKGwpLmFkZChoKSxhKHUueCx1LnksdS56KSk6YShOLngsTi55LDApO2ZvcihJPTE7STw9eTtJKyspZm9yKHo9MDt6PE87eisrKU49Zz9pKHZbel0sSFt6XSxDKTp2W3pdLF8/KGwuY29weShjLm5vcm1hbHNbSV0pLm11bHRpcGx5U2NhbGFyKE4ueCksaC5jb3B5KGMuYmlub3JtYWxzW0ldKS5tdWx0aXBseVNjYWxhcihOLnkpLHUuY29weShzW0ldKS5hZGQobCkuYWRkKGgpLGEodS54LHUueSx1LnopKTphKE4ueCxOLnksZC95KkkpO2ZvcihQPW0tMTswPD1QO1AtLSl7Zm9yKEk9UC9tLFU9cCpNYXRoLmNvcyhJKk1hdGguUEkvMiksQz1mKk1hdGguc2luKEkqTWF0aC5QSS8yKSx6PTAsST1SLmxlbmd0aDt6PEk7eisrKWEoKE49aShSW3pdLHhbel0sQykpLngsTi55LGQrVSk7Zm9yKE09MCxFPUEubGVuZ3RoO008RTtNKyspZm9yKHc9QVtNXSxCPUdbTV0sej0wLEk9dy5sZW5ndGg7ejxJO3orKylOPWkod1t6XSxCW3pdLEMpLF8/YShOLngsTi55K3NbeS0xXS55LHNbeS0xXS54K1UpOmEoTi54LE4ueSxkK1UpfSFmdW5jdGlvbigpe2lmKGcpe3ZhciB0PTAqTztmb3Ioej0wO3o8Rjt6KyspbygoRD1MW3pdKVsyXSt0LERbMV0rdCxEWzBdK3QpO2Zvcih0PU8qKHkrMiptKSx6PTA7ejxGO3orKylvKChEPUxbel0pWzBdK3QsRFsxXSt0LERbMl0rdCl9ZWxzZXtmb3Ioej0wO3o8Rjt6KyspbygoRD1MW3pdKVsyXSxEWzFdLERbMF0pO2Zvcih6PTA7ejxGO3orKylvKChEPUxbel0pWzBdK08qeSxEWzFdK08qeSxEWzJdK08qeSl9fSgpLGZ1bmN0aW9uKCl7dmFyIHQ9MDtmb3IocihSLHQpLHQrPVIubGVuZ3RoLE09MCxFPUEubGVuZ3RoO008RTtNKyspcih3PUFbTV0sdCksdCs9dy5sZW5ndGh9KCl9LFVlLldvcmxkVVZHZW5lcmF0b3I9e2dlbmVyYXRlVG9wVVY6ZnVuY3Rpb24odCxlLGksbil7cmV0dXJuIGU9KHQ9dC52ZXJ0aWNlcylbZV0saT10W2ldLG49dFtuXSxbbmV3IFYoZS54LGUueSksbmV3IFYoaS54LGkueSksbmV3IFYobi54LG4ueSldfSxnZW5lcmF0ZVNpZGVXYWxsVVY6ZnVuY3Rpb24odCxlLGksbixyKXtyZXR1cm4gZT0odD10LnZlcnRpY2VzKVtlXSxpPXRbaV0sbj10W25dLHI9dFtyXSxNYXRoLmFicyhlLnktaS55KTwuMDE/W25ldyBWKGUueCwxLWUueiksbmV3IFYoaS54LDEtaS56KSxuZXcgVihuLngsMS1uLnopLG5ldyBWKHIueCwxLXIueildOltuZXcgVihlLnksMS1lLnopLG5ldyBWKGkueSwxLWkueiksbmV3IFYobi55LDEtbi56KSxuZXcgVihyLnksMS1yLnopXX19LChOZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShVZS5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1OZSwoRGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVnQucHJvdG90eXBlKSkuY29uc3RydWN0b3I9RGUsKE9lLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPU9lLChGZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1GZSwoemUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3QucHJvdG90eXBlKSkuY29uc3RydWN0b3I9emUsKEJlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUJlLChHZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1HZSwoSGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3QucHJvdG90eXBlKSkuY29uc3RydWN0b3I9SGUsKFZlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFZ0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVZlLChrZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1rZSwoamUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVnQucHJvdG90eXBlKSkuY29uc3RydWN0b3I9amUsKFdlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFZ0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVdlLChYZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1YZSwoWWUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoWGUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9WWUsKHFlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFdlLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXFlLChaZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShWdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1aZSwoSmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3QucHJvdG90eXBlKSkuY29uc3RydWN0b3I9SmUsKFFlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVFlO3ZhciBfbz1PYmplY3QuZnJlZXplKHtXaXJlZnJhbWVHZW9tZXRyeTpmZSxQYXJhbWV0cmljR2VvbWV0cnk6Z2UsUGFyYW1ldHJpY0J1ZmZlckdlb21ldHJ5Om1lLFRldHJhaGVkcm9uR2VvbWV0cnk6eGUsVGV0cmFoZWRyb25CdWZmZXJHZW9tZXRyeTp5ZSxPY3RhaGVkcm9uR2VvbWV0cnk6YmUsT2N0YWhlZHJvbkJ1ZmZlckdlb21ldHJ5Ol9lLEljb3NhaGVkcm9uR2VvbWV0cnk6TWUsSWNvc2FoZWRyb25CdWZmZXJHZW9tZXRyeTp3ZSxEb2RlY2FoZWRyb25HZW9tZXRyeTpUZSxEb2RlY2FoZWRyb25CdWZmZXJHZW9tZXRyeTpFZSxQb2x5aGVkcm9uR2VvbWV0cnk6U2UsUG9seWhlZHJvbkJ1ZmZlckdlb21ldHJ5OnZlLFR1YmVHZW9tZXRyeTpMZSxUdWJlQnVmZmVyR2VvbWV0cnk6QWUsVG9ydXNLbm90R2VvbWV0cnk6UGUsVG9ydXNLbm90QnVmZmVyR2VvbWV0cnk6UmUsVG9ydXNHZW9tZXRyeTpJZSxUb3J1c0J1ZmZlckdlb21ldHJ5OkNlLFRleHRHZW9tZXRyeTpOZSxTcGhlcmVCdWZmZXJHZW9tZXRyeTpEZSxTcGhlcmVHZW9tZXRyeTpPZSxSaW5nR2VvbWV0cnk6emUsUmluZ0J1ZmZlckdlb21ldHJ5OkZlLFBsYW5lQnVmZmVyR2VvbWV0cnk6V3QsUGxhbmVHZW9tZXRyeTpCZSxMYXRoZUdlb21ldHJ5OkhlLExhdGhlQnVmZmVyR2VvbWV0cnk6R2UsU2hhcGVHZW9tZXRyeTprZSxTaGFwZUJ1ZmZlckdlb21ldHJ5OlZlLEV4dHJ1ZGVHZW9tZXRyeTpVZSxFZGdlc0dlb21ldHJ5OmplLENvbmVHZW9tZXRyeTpZZSxDb25lQnVmZmVyR2VvbWV0cnk6cWUsQ3lsaW5kZXJHZW9tZXRyeTpYZSxDeWxpbmRlckJ1ZmZlckdlb21ldHJ5OldlLENpcmNsZUJ1ZmZlckdlb21ldHJ5OlplLENpcmNsZUdlb21ldHJ5OkplLEJveEJ1ZmZlckdlb21ldHJ5Omp0LEJveEdlb21ldHJ5OlFlfSk7KChLZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShGdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1LZSkucHJvdG90eXBlLmlzU2hhZG93TWF0ZXJpYWw9ITAsJGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoRnQucHJvdG90eXBlKSx0aS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnRpLGlzTXVsdGlNYXRlcmlhbDooJGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPSRlKS5wcm90b3R5cGUuaXNSYXdTaGFkZXJNYXRlcmlhbD0hMCx0b0pTT046ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXttZXRhZGF0YTp7dmVyc2lvbjo0LjIsdHlwZToibWF0ZXJpYWwiLGdlbmVyYXRvcjoiTWF0ZXJpYWxFeHBvcnRlciJ9LHV1aWQ6dGhpcy51dWlkLHR5cGU6dGhpcy50eXBlLG1hdGVyaWFsczpbXX0saT10aGlzLm1hdGVyaWFscyxuPTAscj1pLmxlbmd0aDtuPHI7bisrKXt2YXIgYT1pW25dLnRvSlNPTih0KTtkZWxldGUgYS5tZXRhZGF0YSxlLm1hdGVyaWFscy5wdXNoKGEpfXJldHVybiBlLnZpc2libGU9dGhpcy52aXNpYmxlLGV9LGNsb25lOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PW5ldyB0aGlzLmNvbnN0cnVjdG9yLGU9MDtlPHRoaXMubWF0ZXJpYWxzLmxlbmd0aDtlKyspdC5tYXRlcmlhbHMucHVzaCh0aGlzLm1hdGVyaWFsc1tlXS5jbG9uZSgpKTtyZXR1cm4gdC52aXNpYmxlPXRoaXMudmlzaWJsZSx0fX0sKChlaS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPWVpKS5wcm90b3R5cGUuaXNNZXNoU3RhbmRhcmRNYXRlcmlhbD0hMCxlaS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gTi5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5kZWZpbmVzPXtTVEFOREFSRDoiIn0sdGhpcy5jb2xvci5jb3B5KHQuY29sb3IpLHRoaXMucm91Z2huZXNzPXQucm91Z2huZXNzLHRoaXMubWV0YWxuZXNzPXQubWV0YWxuZXNzLHRoaXMubWFwPXQubWFwLHRoaXMubGlnaHRNYXA9dC5saWdodE1hcCx0aGlzLmxpZ2h0TWFwSW50ZW5zaXR5PXQubGlnaHRNYXBJbnRlbnNpdHksdGhpcy5hb01hcD10LmFvTWFwLHRoaXMuYW9NYXBJbnRlbnNpdHk9dC5hb01hcEludGVuc2l0eSx0aGlzLmVtaXNzaXZlLmNvcHkodC5lbWlzc2l2ZSksdGhpcy5lbWlzc2l2ZU1hcD10LmVtaXNzaXZlTWFwLHRoaXMuZW1pc3NpdmVJbnRlbnNpdHk9dC5lbWlzc2l2ZUludGVuc2l0eSx0aGlzLmJ1bXBNYXA9dC5idW1wTWFwLHRoaXMuYnVtcFNjYWxlPXQuYnVtcFNjYWxlLHRoaXMubm9ybWFsTWFwPXQubm9ybWFsTWFwLHRoaXMubm9ybWFsU2NhbGUuY29weSh0Lm5vcm1hbFNjYWxlKSx0aGlzLmRpc3BsYWNlbWVudE1hcD10LmRpc3BsYWNlbWVudE1hcCx0aGlzLmRpc3BsYWNlbWVudFNjYWxlPXQuZGlzcGxhY2VtZW50U2NhbGUsdGhpcy5kaXNwbGFjZW1lbnRCaWFzPXQuZGlzcGxhY2VtZW50Qmlhcyx0aGlzLnJvdWdobmVzc01hcD10LnJvdWdobmVzc01hcCx0aGlzLm1ldGFsbmVzc01hcD10Lm1ldGFsbmVzc01hcCx0aGlzLmFscGhhTWFwPXQuYWxwaGFNYXAsdGhpcy5lbnZNYXA9dC5lbnZNYXAsdGhpcy5lbnZNYXBJbnRlbnNpdHk9dC5lbnZNYXBJbnRlbnNpdHksdGhpcy5yZWZyYWN0aW9uUmF0aW89dC5yZWZyYWN0aW9uUmF0aW8sdGhpcy53aXJlZnJhbWU9dC53aXJlZnJhbWUsdGhpcy53aXJlZnJhbWVMaW5ld2lkdGg9dC53aXJlZnJhbWVMaW5ld2lkdGgsdGhpcy53aXJlZnJhbWVMaW5lY2FwPXQud2lyZWZyYW1lTGluZWNhcCx0aGlzLndpcmVmcmFtZUxpbmVqb2luPXQud2lyZWZyYW1lTGluZWpvaW4sdGhpcy5za2lubmluZz10LnNraW5uaW5nLHRoaXMubW9ycGhUYXJnZXRzPXQubW9ycGhUYXJnZXRzLHRoaXMubW9ycGhOb3JtYWxzPXQubW9ycGhOb3JtYWxzLHRoaXN9LCgoaWkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZWkucHJvdG90eXBlKSkuY29uc3RydWN0b3I9aWkpLnByb3RvdHlwZS5pc01lc2hQaHlzaWNhbE1hdGVyaWFsPSEwLGlpLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBlaS5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5kZWZpbmVzPXtQSFlTSUNBTDoiIn0sdGhpcy5yZWZsZWN0aXZpdHk9dC5yZWZsZWN0aXZpdHksdGhpcy5jbGVhckNvYXQ9dC5jbGVhckNvYXQsdGhpcy5jbGVhckNvYXRSb3VnaG5lc3M9dC5jbGVhckNvYXRSb3VnaG5lc3MsdGhpc30sKChuaS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPW5pKS5wcm90b3R5cGUuaXNNZXNoUGhvbmdNYXRlcmlhbD0hMCxuaS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gTi5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5jb2xvci5jb3B5KHQuY29sb3IpLHRoaXMuc3BlY3VsYXIuY29weSh0LnNwZWN1bGFyKSx0aGlzLnNoaW5pbmVzcz10LnNoaW5pbmVzcyx0aGlzLm1hcD10Lm1hcCx0aGlzLmxpZ2h0TWFwPXQubGlnaHRNYXAsdGhpcy5saWdodE1hcEludGVuc2l0eT10LmxpZ2h0TWFwSW50ZW5zaXR5LHRoaXMuYW9NYXA9dC5hb01hcCx0aGlzLmFvTWFwSW50ZW5zaXR5PXQuYW9NYXBJbnRlbnNpdHksdGhpcy5lbWlzc2l2ZS5jb3B5KHQuZW1pc3NpdmUpLHRoaXMuZW1pc3NpdmVNYXA9dC5lbWlzc2l2ZU1hcCx0aGlzLmVtaXNzaXZlSW50ZW5zaXR5PXQuZW1pc3NpdmVJbnRlbnNpdHksdGhpcy5idW1wTWFwPXQuYnVtcE1hcCx0aGlzLmJ1bXBTY2FsZT10LmJ1bXBTY2FsZSx0aGlzLm5vcm1hbE1hcD10Lm5vcm1hbE1hcCx0aGlzLm5vcm1hbFNjYWxlLmNvcHkodC5ub3JtYWxTY2FsZSksdGhpcy5kaXNwbGFjZW1lbnRNYXA9dC5kaXNwbGFjZW1lbnRNYXAsdGhpcy5kaXNwbGFjZW1lbnRTY2FsZT10LmRpc3BsYWNlbWVudFNjYWxlLHRoaXMuZGlzcGxhY2VtZW50Qmlhcz10LmRpc3BsYWNlbWVudEJpYXMsdGhpcy5zcGVjdWxhck1hcD10LnNwZWN1bGFyTWFwLHRoaXMuYWxwaGFNYXA9dC5hbHBoYU1hcCx0aGlzLmVudk1hcD10LmVudk1hcCx0aGlzLmNvbWJpbmU9dC5jb21iaW5lLHRoaXMucmVmbGVjdGl2aXR5PXQucmVmbGVjdGl2aXR5LHRoaXMucmVmcmFjdGlvblJhdGlvPXQucmVmcmFjdGlvblJhdGlvLHRoaXMud2lyZWZyYW1lPXQud2lyZWZyYW1lLHRoaXMud2lyZWZyYW1lTGluZXdpZHRoPXQud2lyZWZyYW1lTGluZXdpZHRoLHRoaXMud2lyZWZyYW1lTGluZWNhcD10LndpcmVmcmFtZUxpbmVjYXAsdGhpcy53aXJlZnJhbWVMaW5lam9pbj10LndpcmVmcmFtZUxpbmVqb2luLHRoaXMuc2tpbm5pbmc9dC5za2lubmluZyx0aGlzLm1vcnBoVGFyZ2V0cz10Lm1vcnBoVGFyZ2V0cyx0aGlzLm1vcnBoTm9ybWFscz10Lm1vcnBoTm9ybWFscyx0aGlzfSwoKHJpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG5pLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXJpKS5wcm90b3R5cGUuaXNNZXNoVG9vbk1hdGVyaWFsPSEwLHJpLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBuaS5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5ncmFkaWVudE1hcD10LmdyYWRpZW50TWFwLHRoaXN9LCgoYWkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoTi5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1haSkucHJvdG90eXBlLmlzTWVzaE5vcm1hbE1hdGVyaWFsPSEwLGFpLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBOLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmJ1bXBNYXA9dC5idW1wTWFwLHRoaXMuYnVtcFNjYWxlPXQuYnVtcFNjYWxlLHRoaXMubm9ybWFsTWFwPXQubm9ybWFsTWFwLHRoaXMubm9ybWFsU2NhbGUuY29weSh0Lm5vcm1hbFNjYWxlKSx0aGlzLmRpc3BsYWNlbWVudE1hcD10LmRpc3BsYWNlbWVudE1hcCx0aGlzLmRpc3BsYWNlbWVudFNjYWxlPXQuZGlzcGxhY2VtZW50U2NhbGUsdGhpcy5kaXNwbGFjZW1lbnRCaWFzPXQuZGlzcGxhY2VtZW50Qmlhcyx0aGlzLndpcmVmcmFtZT10LndpcmVmcmFtZSx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD10LndpcmVmcmFtZUxpbmV3aWR0aCx0aGlzLnNraW5uaW5nPXQuc2tpbm5pbmcsdGhpcy5tb3JwaFRhcmdldHM9dC5tb3JwaFRhcmdldHMsdGhpcy5tb3JwaE5vcm1hbHM9dC5tb3JwaE5vcm1hbHMsdGhpc30sKChvaS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPW9pKS5wcm90b3R5cGUuaXNNZXNoTGFtYmVydE1hdGVyaWFsPSEwLG9pLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBOLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmNvbG9yLmNvcHkodC5jb2xvciksdGhpcy5tYXA9dC5tYXAsdGhpcy5saWdodE1hcD10LmxpZ2h0TWFwLHRoaXMubGlnaHRNYXBJbnRlbnNpdHk9dC5saWdodE1hcEludGVuc2l0eSx0aGlzLmFvTWFwPXQuYW9NYXAsdGhpcy5hb01hcEludGVuc2l0eT10LmFvTWFwSW50ZW5zaXR5LHRoaXMuZW1pc3NpdmUuY29weSh0LmVtaXNzaXZlKSx0aGlzLmVtaXNzaXZlTWFwPXQuZW1pc3NpdmVNYXAsdGhpcy5lbWlzc2l2ZUludGVuc2l0eT10LmVtaXNzaXZlSW50ZW5zaXR5LHRoaXMuc3BlY3VsYXJNYXA9dC5zcGVjdWxhck1hcCx0aGlzLmFscGhhTWFwPXQuYWxwaGFNYXAsdGhpcy5lbnZNYXA9dC5lbnZNYXAsdGhpcy5jb21iaW5lPXQuY29tYmluZSx0aGlzLnJlZmxlY3Rpdml0eT10LnJlZmxlY3Rpdml0eSx0aGlzLnJlZnJhY3Rpb25SYXRpbz10LnJlZnJhY3Rpb25SYXRpbyx0aGlzLndpcmVmcmFtZT10LndpcmVmcmFtZSx0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD10LndpcmVmcmFtZUxpbmV3aWR0aCx0aGlzLndpcmVmcmFtZUxpbmVjYXA9dC53aXJlZnJhbWVMaW5lY2FwLHRoaXMud2lyZWZyYW1lTGluZWpvaW49dC53aXJlZnJhbWVMaW5lam9pbix0aGlzLnNraW5uaW5nPXQuc2tpbm5pbmcsdGhpcy5tb3JwaFRhcmdldHM9dC5tb3JwaFRhcmdldHMsdGhpcy5tb3JwaE5vcm1hbHM9dC5tb3JwaE5vcm1hbHMsdGhpc30sKChzaS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShOLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXNpKS5wcm90b3R5cGUuaXNMaW5lRGFzaGVkTWF0ZXJpYWw9ITAsc2kucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24odCl7cmV0dXJuIE4ucHJvdG90eXBlLmNvcHkuY2FsbCh0aGlzLHQpLHRoaXMuY29sb3IuY29weSh0LmNvbG9yKSx0aGlzLmxpbmV3aWR0aD10LmxpbmV3aWR0aCx0aGlzLnNjYWxlPXQuc2NhbGUsdGhpcy5kYXNoU2l6ZT10LmRhc2hTaXplLHRoaXMuZ2FwU2l6ZT10LmdhcFNpemUsdGhpc307dmFyIGJvPU9iamVjdC5mcmVlemUoe1NoYWRvd01hdGVyaWFsOktlLFNwcml0ZU1hdGVyaWFsOk10LFJhd1NoYWRlck1hdGVyaWFsOiRlLFNoYWRlck1hdGVyaWFsOkZ0LFBvaW50c01hdGVyaWFsOnNlLE11bHRpTWF0ZXJpYWw6dGksTWVzaFBoeXNpY2FsTWF0ZXJpYWw6aWksTWVzaFN0YW5kYXJkTWF0ZXJpYWw6ZWksTWVzaFBob25nTWF0ZXJpYWw6bmksTWVzaFRvb25NYXRlcmlhbDpyaSxNZXNoTm9ybWFsTWF0ZXJpYWw6YWksTWVzaExhbWJlcnRNYXRlcmlhbDpvaSxNZXNoRGVwdGhNYXRlcmlhbDpHLE1lc2hCYXNpY01hdGVyaWFsOkh0LExpbmVEYXNoZWRNYXRlcmlhbDpzaSxMaW5lQmFzaWNNYXRlcmlhbDpSdCxNYXRlcmlhbDpOfSksd289e2VuYWJsZWQ6ITEsZmlsZXM6e30sYWRkOmZ1bmN0aW9uKHQsZSl7ITEhPT10aGlzLmVuYWJsZWQmJih0aGlzLmZpbGVzW3RdPWUpfSxnZXQ6ZnVuY3Rpb24odCl7aWYoITEhPT10aGlzLmVuYWJsZWQpcmV0dXJuIHRoaXMuZmlsZXNbdF19LHJlbW92ZTpmdW5jdGlvbih0KXtkZWxldGUgdGhpcy5maWxlc1t0XX0sY2xlYXI6ZnVuY3Rpb24oKXt0aGlzLmZpbGVzPXt9fX0sTW89bmV3IGNpO09iamVjdC5hc3NpZ24oaGkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKGksbixlLHIpe3ZvaWQgMD09PWkmJihpPSIiKSx2b2lkIDAhPT10aGlzLnBhdGgmJihpPXRoaXMucGF0aCtpKTt2YXIgYT10aGlzLHQ9d28uZ2V0KGkpO2lmKHZvaWQgMCE9PXQpcmV0dXJuIGEubWFuYWdlci5pdGVtU3RhcnQoaSksc2V0VGltZW91dChmdW5jdGlvbigpe24mJm4odCksYS5tYW5hZ2VyLml0ZW1FbmQoaSl9LDApLHQ7aWYoYz1pLm1hdGNoKC9eZGF0YTooLio/KSg7YmFzZTY0KT8sKC4qKSQvKSl7dmFyIG89Y1sxXSxzPSEhY1syXSxjPWNbM107Yz13aW5kb3cuZGVjb2RlVVJJQ29tcG9uZW50KGMpO3MmJihjPXdpbmRvdy5hdG9iKGMpKTt0cnl7dmFyIGgsbD0odGhpcy5yZXNwb25zZVR5cGV8fCIiKS50b0xvd2VyQ2FzZSgpO3N3aXRjaChsKXtjYXNlImFycmF5YnVmZmVyIjpjYXNlImJsb2IiOmg9bmV3IEFycmF5QnVmZmVyKGMubGVuZ3RoKTt2YXIgdT1uZXcgVWludDhBcnJheShoKTtmb3Iocz0wO3M8Yy5sZW5ndGg7cysrKXVbc109Yy5jaGFyQ29kZUF0KHMpOyJibG9iIj09PWwmJihoPW5ldyBCbG9iKFtoXSx7dHlwZTpvfSkpO2JyZWFrO2Nhc2UiZG9jdW1lbnQiOmg9KG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhjLG8pO2JyZWFrO2Nhc2UianNvbiI6aD1KU09OLnBhcnNlKGMpO2JyZWFrO2RlZmF1bHQ6aD1jfXdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7biYmbihoKSxhLm1hbmFnZXIuaXRlbUVuZChpKX0sMCl9Y2F0Y2godCl7d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyJiZyKHQpLGEubWFuYWdlci5pdGVtRXJyb3IoaSl9LDApfX1lbHNle3ZhciBkPW5ldyBYTUxIdHRwUmVxdWVzdDtkLm9wZW4oIkdFVCIsaSwhMCksZC5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixmdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldC5yZXNwb25zZTt3by5hZGQoaSxlKSwyMDA9PT10aGlzLnN0YXR1cz8obiYmbihlKSxhLm1hbmFnZXIuaXRlbUVuZChpKSk6MD09PXRoaXMuc3RhdHVzPyhjb25zb2xlLndhcm4oIlRIUkVFLkZpbGVMb2FkZXI6IEhUVFAgU3RhdHVzIDAgcmVjZWl2ZWQuIiksbiYmbihlKSxhLm1hbmFnZXIuaXRlbUVuZChpKSk6KHImJnIodCksYS5tYW5hZ2VyLml0ZW1FcnJvcihpKSl9LCExKSx2b2lkIDAhPT1lJiZkLmFkZEV2ZW50TGlzdGVuZXIoInByb2dyZXNzIixmdW5jdGlvbih0KXtlKHQpfSwhMSksZC5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIsZnVuY3Rpb24odCl7ciYmcih0KSxhLm1hbmFnZXIuaXRlbUVycm9yKGkpfSwhMSksdm9pZCAwIT09dGhpcy5yZXNwb25zZVR5cGUmJihkLnJlc3BvbnNlVHlwZT10aGlzLnJlc3BvbnNlVHlwZSksdm9pZCAwIT09dGhpcy53aXRoQ3JlZGVudGlhbHMmJihkLndpdGhDcmVkZW50aWFscz10aGlzLndpdGhDcmVkZW50aWFscyksZC5vdmVycmlkZU1pbWVUeXBlJiZkLm92ZXJyaWRlTWltZVR5cGUodm9pZCAwIT09dGhpcy5taW1lVHlwZT90aGlzLm1pbWVUeXBlOiJ0ZXh0L3BsYWluIiksZC5zZW5kKG51bGwpfXJldHVybiBhLm1hbmFnZXIuaXRlbVN0YXJ0KGkpLGR9LHNldFBhdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucGF0aD10LHRoaXN9LHNldFJlc3BvbnNlVHlwZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yZXNwb25zZVR5cGU9dCx0aGlzfSxzZXRXaXRoQ3JlZGVudGlhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud2l0aENyZWRlbnRpYWxzPXQsdGhpc30sc2V0TWltZVR5cGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubWltZVR5cGU9dCx0aGlzfX0pLE9iamVjdC5hc3NpZ24obGkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKHQscixpLG4pe2Z1bmN0aW9uIGUoZSl7Yy5sb2FkKHRbZV0sZnVuY3Rpb24odCl7dD1hLl9wYXJzZXIodCwhMCksb1tlXT17d2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHQsZm9ybWF0OnQuZm9ybWF0LG1pcG1hcHM6dC5taXBtYXBzfSw2PT09KGgrPTEpJiYoMT09PXQubWlwbWFwQ291bnQmJihzLm1pbkZpbHRlcj0xMDA2KSxzLmZvcm1hdD10LmZvcm1hdCxzLm5lZWRzVXBkYXRlPSEwLHImJnIocykpfSxpLG4pfXZhciBhPXRoaXMsbz1bXSxzPW5ldyB1ZTtzLmltYWdlPW87dmFyIGM9bmV3IGhpKHRoaXMubWFuYWdlcik7aWYoYy5zZXRQYXRoKHRoaXMucGF0aCksYy5zZXRSZXNwb25zZVR5cGUoImFycmF5YnVmZmVyIiksQXJyYXkuaXNBcnJheSh0KSlmb3IodmFyIGg9MCxsPTAsdT10Lmxlbmd0aDtsPHU7KytsKWUobCk7ZWxzZSBjLmxvYWQodCxmdW5jdGlvbih0KXtpZigodD1hLl9wYXJzZXIodCwhMCkpLmlzQ3ViZW1hcClmb3IodmFyIGU9dC5taXBtYXBzLmxlbmd0aC90Lm1pcG1hcENvdW50LGk9MDtpPGU7aSsrKXtvW2ldPXttaXBtYXBzOltdfTtmb3IodmFyIG49MDtuPHQubWlwbWFwQ291bnQ7bisrKW9baV0ubWlwbWFwcy5wdXNoKHQubWlwbWFwc1tpKnQubWlwbWFwQ291bnQrbl0pLG9baV0uZm9ybWF0PXQuZm9ybWF0LG9baV0ud2lkdGg9dC53aWR0aCxvW2ldLmhlaWdodD10LmhlaWdodH1lbHNlIHMuaW1hZ2Uud2lkdGg9dC53aWR0aCxzLmltYWdlLmhlaWdodD10LmhlaWdodCxzLm1pcG1hcHM9dC5taXBtYXBzOzE9PT10Lm1pcG1hcENvdW50JiYocy5taW5GaWx0ZXI9MTAwNikscy5mb3JtYXQ9dC5mb3JtYXQscy5uZWVkc1VwZGF0ZT0hMCxyJiZyKHMpfSxpLG4pO3JldHVybiBzfSxzZXRQYXRoOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnBhdGg9dCx0aGlzfX0pLE9iamVjdC5hc3NpZ24odWkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXMsYT1uZXcgVSxvPW5ldyBoaSh0aGlzLm1hbmFnZXIpO3JldHVybiBvLnNldFJlc3BvbnNlVHlwZSgiYXJyYXlidWZmZXIiKSxvLmxvYWQodCxmdW5jdGlvbih0KXsodD1yLl9wYXJzZXIodCkpJiYodm9pZCAwIT09dC5pbWFnZT9hLmltYWdlPXQuaW1hZ2U6dm9pZCAwIT09dC5kYXRhJiYoYS5pbWFnZS53aWR0aD10LndpZHRoLGEuaW1hZ2UuaGVpZ2h0PXQuaGVpZ2h0LGEuaW1hZ2UuZGF0YT10LmRhdGEpLGEud3JhcFM9dm9pZCAwIT09dC53cmFwUz90LndyYXBTOjEwMDEsYS53cmFwVD12b2lkIDAhPT10LndyYXBUP3Qud3JhcFQ6MTAwMSxhLm1hZ0ZpbHRlcj12b2lkIDAhPT10Lm1hZ0ZpbHRlcj90Lm1hZ0ZpbHRlcjoxMDA2LGEubWluRmlsdGVyPXZvaWQgMCE9PXQubWluRmlsdGVyP3QubWluRmlsdGVyOjEwMDgsYS5hbmlzb3Ryb3B5PXZvaWQgMCE9PXQuYW5pc290cm9weT90LmFuaXNvdHJvcHk6MSx2b2lkIDAhPT10LmZvcm1hdCYmKGEuZm9ybWF0PXQuZm9ybWF0KSx2b2lkIDAhPT10LnR5cGUmJihhLnR5cGU9dC50eXBlKSx2b2lkIDAhPT10Lm1pcG1hcHMmJihhLm1pcG1hcHM9dC5taXBtYXBzKSwxPT09dC5taXBtYXBDb3VudCYmKGEubWluRmlsdGVyPTEwMDYpLGEubmVlZHNVcGRhdGU9ITAsZSYmZShhLHQpKX0saSxuKSxhfX0pLE9iamVjdC5hc3NpZ24oZGkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXMsYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCJpbWciKTtpZihhLm9ubG9hZD1mdW5jdGlvbigpe2Eub25sb2FkPW51bGwsVVJMLnJldm9rZU9iamVjdFVSTChhLnNyYyksZSYmZShhKSxyLm1hbmFnZXIuaXRlbUVuZCh0KX0sYS5vbmVycm9yPW4sMD09PXQuaW5kZXhPZigiZGF0YToiKSlhLnNyYz10O2Vsc2UgaWYodm9pZCAwIT09dGhpcy5jcm9zc09yaWdpbilhLmNyb3NzT3JpZ2luPXRoaXMuY3Jvc3NPcmlnaW4sYS5zcmM9dDtlbHNle3ZhciBvPW5ldyBoaTtvLnNldFBhdGgodGhpcy5wYXRoKSxvLnNldFJlc3BvbnNlVHlwZSgiYmxvYiIpLG8uc2V0V2l0aENyZWRlbnRpYWxzKHRoaXMud2l0aENyZWRlbnRpYWxzKSxvLmxvYWQodCxmdW5jdGlvbih0KXthLnNyYz1VUkwuY3JlYXRlT2JqZWN0VVJMKHQpfSxpLG4pfXJldHVybiByLm1hbmFnZXIuaXRlbVN0YXJ0KHQpLGF9LHNldENyb3NzT3JpZ2luOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNyb3NzT3JpZ2luPXQsdGhpc30sc2V0V2l0aENyZWRlbnRpYWxzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndpdGhDcmVkZW50aWFscz10LHRoaXN9LHNldFBhdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucGF0aD10LHRoaXN9fSksT2JqZWN0LmFzc2lnbihwaS5wcm90b3R5cGUse2xvYWQ6ZnVuY3Rpb24odCxpLGUsbil7ZnVuY3Rpb24gcihlKXtvLmxvYWQodFtlXSxmdW5jdGlvbih0KXthLmltYWdlc1tlXT10LDY9PT0rK3MmJihhLm5lZWRzVXBkYXRlPSEwLGkmJmkoYSkpfSx2b2lkIDAsbil9dmFyIGE9bmV3IGMsbz1uZXcgZGkodGhpcy5tYW5hZ2VyKTtvLnNldENyb3NzT3JpZ2luKHRoaXMuY3Jvc3NPcmlnaW4pLG8uc2V0UGF0aCh0aGlzLnBhdGgpO3ZhciBzPTA7Zm9yKGU9MDtlPHQubGVuZ3RoOysrZSlyKGUpO3JldHVybiBhfSxzZXRDcm9zc09yaWdpbjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jcm9zc09yaWdpbj10LHRoaXN9LHNldFBhdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucGF0aD10LHRoaXN9fSksT2JqZWN0LmFzc2lnbihmaS5wcm90b3R5cGUse2xvYWQ6ZnVuY3Rpb24oaSxuLHQsZSl7dmFyIHI9bmV3IHosYT1uZXcgZGkodGhpcy5tYW5hZ2VyKTtyZXR1cm4gYS5zZXRDcm9zc09yaWdpbih0aGlzLmNyb3NzT3JpZ2luKSxhLnNldFdpdGhDcmVkZW50aWFscyh0aGlzLndpdGhDcmVkZW50aWFscyksYS5zZXRQYXRoKHRoaXMucGF0aCksYS5sb2FkKGksZnVuY3Rpb24odCl7dmFyIGU9MDxpLnNlYXJjaCgvXC4oanBnfGpwZWcpJC8pfHwwPT09aS5zZWFyY2goL15kYXRhXDppbWFnZVwvanBlZy8pO3IuZm9ybWF0PWU/MTAyMjoxMDIzLHIuaW1hZ2U9dCxyLm5lZWRzVXBkYXRlPSEwLHZvaWQgMCE9PW4mJm4ocil9LHQsZSkscn0sc2V0Q3Jvc3NPcmlnaW46ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY3Jvc3NPcmlnaW49dCx0aGlzfSxzZXRXaXRoQ3JlZGVudGlhbHM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud2l0aENyZWRlbnRpYWxzPXQsdGhpc30sc2V0UGF0aDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5wYXRoPXQsdGhpc319KSxtaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6bWksaXNMaWdodDohMCxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiBYLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmNvbG9yLmNvcHkodC5jb2xvciksdGhpcy5pbnRlbnNpdHk9dC5pbnRlbnNpdHksdGhpc30sdG9KU09OOmZ1bmN0aW9uKHQpe3JldHVybih0PVgucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMsdCkpLm9iamVjdC5jb2xvcj10aGlzLmNvbG9yLmdldEhleCgpLHQub2JqZWN0LmludGVuc2l0eT10aGlzLmludGVuc2l0eSx2b2lkIDAhPT10aGlzLmdyb3VuZENvbG9yJiYodC5vYmplY3QuZ3JvdW5kQ29sb3I9dGhpcy5ncm91bmRDb2xvci5nZXRIZXgoKSksdm9pZCAwIT09dGhpcy5kaXN0YW5jZSYmKHQub2JqZWN0LmRpc3RhbmNlPXRoaXMuZGlzdGFuY2UpLHZvaWQgMCE9PXRoaXMuYW5nbGUmJih0Lm9iamVjdC5hbmdsZT10aGlzLmFuZ2xlKSx2b2lkIDAhPT10aGlzLmRlY2F5JiYodC5vYmplY3QuZGVjYXk9dGhpcy5kZWNheSksdm9pZCAwIT09dGhpcy5wZW51bWJyYSYmKHQub2JqZWN0LnBlbnVtYnJhPXRoaXMucGVudW1icmEpLHZvaWQgMCE9PXRoaXMuc2hhZG93JiYodC5vYmplY3Quc2hhZG93PXRoaXMuc2hhZG93LnRvSlNPTigpKSx0fX0pLGdpLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobWkucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6Z2ksaXNIZW1pc3BoZXJlTGlnaHQ6ITAsY29weTpmdW5jdGlvbih0KXtyZXR1cm4gbWkucHJvdG90eXBlLmNvcHkuY2FsbCh0aGlzLHQpLHRoaXMuZ3JvdW5kQ29sb3IuY29weSh0Lmdyb3VuZENvbG9yKSx0aGlzfX0pLE9iamVjdC5hc3NpZ24odmkucHJvdG90eXBlLHtjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNhbWVyYT10LmNhbWVyYS5jbG9uZSgpLHRoaXMuYmlhcz10LmJpYXMsdGhpcy5yYWRpdXM9dC5yYWRpdXMsdGhpcy5tYXBTaXplLmNvcHkodC5tYXBTaXplKSx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sdG9KU09OOmZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIDAhPT10aGlzLmJpYXMmJih0LmJpYXM9dGhpcy5iaWFzKSwxIT09dGhpcy5yYWRpdXMmJih0LnJhZGl1cz10aGlzLnJhZGl1cyksNTEyPT09dGhpcy5tYXBTaXplLngmJjUxMj09PXRoaXMubWFwU2l6ZS55fHwodC5tYXBTaXplPXRoaXMubWFwU2l6ZS50b0FycmF5KCkpLHQuY2FtZXJhPXRoaXMuY2FtZXJhLnRvSlNPTighMSkub2JqZWN0LGRlbGV0ZSB0LmNhbWVyYS5tYXRyaXgsdH19KSx5aS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKHZpLnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOnlpLGlzU3BvdExpZ2h0U2hhZG93OiEwLHVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT0yKmVyLlJBRDJERUcqdC5hbmdsZSxpPXRoaXMubWFwU2l6ZS53aWR0aC90aGlzLm1hcFNpemUuaGVpZ2h0O3Q9dC5kaXN0YW5jZXx8NTAwO3ZhciBuPXRoaXMuY2FtZXJhO2U9PT1uLmZvdiYmaT09PW4uYXNwZWN0JiZ0PT09bi5mYXJ8fChuLmZvdj1lLG4uYXNwZWN0PWksbi5mYXI9dCxuLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKSl9fSkseGkucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShtaS5wcm90b3R5cGUpLHtjb25zdHJ1Y3Rvcjp4aSxpc1Nwb3RMaWdodDohMCxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiBtaS5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy5kaXN0YW5jZT10LmRpc3RhbmNlLHRoaXMuYW5nbGU9dC5hbmdsZSx0aGlzLnBlbnVtYnJhPXQucGVudW1icmEsdGhpcy5kZWNheT10LmRlY2F5LHRoaXMudGFyZ2V0PXQudGFyZ2V0LmNsb25lKCksdGhpcy5zaGFkb3c9dC5zaGFkb3cuY2xvbmUoKSx0aGlzfX0pLF9pLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobWkucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6X2ksaXNQb2ludExpZ2h0OiEwLGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIG1pLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLmRpc3RhbmNlPXQuZGlzdGFuY2UsdGhpcy5kZWNheT10LmRlY2F5LHRoaXMuc2hhZG93PXQuc2hhZG93LmNsb25lKCksdGhpc319KSxiaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKHZpLnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOmJpfSksd2kucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShtaS5wcm90b3R5cGUpLHtjb25zdHJ1Y3Rvcjp3aSxpc0RpcmVjdGlvbmFsTGlnaHQ6ITAsY29weTpmdW5jdGlvbih0KXtyZXR1cm4gbWkucHJvdG90eXBlLmNvcHkuY2FsbCh0aGlzLHQpLHRoaXMudGFyZ2V0PXQudGFyZ2V0LmNsb25lKCksdGhpcy5zaGFkb3c9dC5zaGFkb3cuY2xvbmUoKSx0aGlzfX0pLE1pLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobWkucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6TWksaXNBbWJpZW50TGlnaHQ6ITB9KTt2YXIgRW8sVG8sU28sQW8sTG8sUm89e2FycmF5U2xpY2U6ZnVuY3Rpb24odCxlLGkpe3JldHVybiBSby5pc1R5cGVkQXJyYXkodCk/bmV3IHQuY29uc3RydWN0b3IodC5zdWJhcnJheShlLGkpKTp0LnNsaWNlKGUsaSl9LGNvbnZlcnRBcnJheTpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIXR8fCFpJiZ0LmNvbnN0cnVjdG9yPT09ZT90OiJudW1iZXIiPT10eXBlb2YgZS5CWVRFU19QRVJfRUxFTUVOVD9uZXcgZSh0KTpBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0KX0saXNUeXBlZEFycmF5OmZ1bmN0aW9uKHQpe3JldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcodCkmJiEodCBpbnN0YW5jZW9mIERhdGFWaWV3KX0sZ2V0S2V5ZnJhbWVPcmRlcjpmdW5jdGlvbihpKXtmb3IodmFyIHQ9aS5sZW5ndGgsZT1BcnJheSh0KSxuPTA7biE9PXQ7KytuKWVbbl09bjtyZXR1cm4gZS5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGlbdF0taVtlXX0pLGV9LHNvcnRlZEFycmF5OmZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG49dC5sZW5ndGgscj1uZXcgdC5jb25zdHJ1Y3RvcihuKSxhPTAsbz0wO28hPT1uOysrYSlmb3IodmFyIHM9aVthXSplLGM9MDtjIT09ZTsrK2MpcltvKytdPXRbcytjXTtyZXR1cm4gcn0sZmxhdHRlbkpTT046ZnVuY3Rpb24odCxlLGksbil7Zm9yKHZhciByPTEsYT10WzBdO3ZvaWQgMCE9PWEmJnZvaWQgMD09PWFbbl07KWE9dFtyKytdO2lmKHZvaWQgMCE9PWEpe3ZhciBvPWFbbl07aWYodm9pZCAwIT09bylpZihBcnJheS5pc0FycmF5KG8pKWZvcig7dm9pZCAwIT09KG89YVtuXSkmJihlLnB1c2goYS50aW1lKSxpLnB1c2guYXBwbHkoaSxvKSksdm9pZCAwIT09KGE9dFtyKytdKTspO2Vsc2UgaWYodm9pZCAwIT09by50b0FycmF5KWZvcig7dm9pZCAwIT09KG89YVtuXSkmJihlLnB1c2goYS50aW1lKSxvLnRvQXJyYXkoaSxpLmxlbmd0aCkpLHZvaWQgMCE9PShhPXRbcisrXSk7KTtlbHNlIGZvcig7dm9pZCAwIT09KG89YVtuXSkmJihlLnB1c2goYS50aW1lKSxpLnB1c2gobykpLHZvaWQgMCE9PShhPXRbcisrXSk7KTt9fX07RWkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpFaSxldmFsdWF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBhcmFtZXRlclBvc2l0aW9ucyxpPXRoaXMuX2NhY2hlZEluZGV4LG49ZVtpXSxyPWVbaS0xXTt0OntlOntpOntuOmlmKCEodDxuKSl7Zm9yKHZhciBhPWkrMjs7KXtpZih2b2lkIDA9PT1uKXtpZih0PHIpYnJlYWsgbjtyZXR1cm4gdGhpcy5fY2FjaGVkSW5kZXg9aT1lLmxlbmd0aCx0aGlzLmFmdGVyRW5kXyhpLTEsdCxyKX1pZihpPT09YSlicmVhaztpZihyPW4sdDwobj1lWysraV0pKWJyZWFrIGV9bj1lLmxlbmd0aDticmVhayBpfWlmKHI8PXQpYnJlYWsgdDtmb3IodDwoYT1lWzFdKSYmKGk9MixyPWEpLGE9aS0yOzspe2lmKHZvaWQgMD09PXIpcmV0dXJuIHRoaXMuX2NhY2hlZEluZGV4PTAsdGhpcy5iZWZvcmVTdGFydF8oMCx0LG4pO2lmKGk9PT1hKWJyZWFrO2lmKG49ciwocj1lWy0taS0xXSk8PXQpYnJlYWsgZX1uPWksaT0wfWZvcig7aTxuOyl0PGVbcj1pK24+Pj4xXT9uPXI6aT1yKzE7aWYobj1lW2ldLHZvaWQgMD09PShyPWVbaS0xXSkpcmV0dXJuIHRoaXMuX2NhY2hlZEluZGV4PTAsdGhpcy5iZWZvcmVTdGFydF8oMCx0LG4pO2lmKHZvaWQgMD09PW4pcmV0dXJuIHRoaXMuX2NhY2hlZEluZGV4PWk9ZS5sZW5ndGgsdGhpcy5hZnRlckVuZF8oaS0xLHIsdCl9dGhpcy5fY2FjaGVkSW5kZXg9aSx0aGlzLmludGVydmFsQ2hhbmdlZF8oaSxyLG4pfXJldHVybiB0aGlzLmludGVycG9sYXRlXyhpLHIsdCxuKX0sc2V0dGluZ3M6bnVsbCxEZWZhdWx0U2V0dGluZ3NfOnt9LGdldFNldHRpbmdzXzpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldHRpbmdzfHx0aGlzLkRlZmF1bHRTZXR0aW5nc199LGNvcHlTYW1wbGVWYWx1ZV86ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5yZXN1bHRCdWZmZXIsaT10aGlzLnNhbXBsZVZhbHVlcyxuPXRoaXMudmFsdWVTaXplO3QqPW47Zm9yKHZhciByPTA7ciE9PW47KytyKWVbcl09aVt0K3JdO3JldHVybiBlfSxpbnRlcnBvbGF0ZV86ZnVuY3Rpb24odCxlLGksbil7dGhyb3cgRXJyb3IoImNhbGwgdG8gYWJzdHJhY3QgbWV0aG9kIil9LGludGVydmFsQ2hhbmdlZF86ZnVuY3Rpb24odCxlLGkpe319LE9iamVjdC5hc3NpZ24oRWkucHJvdG90eXBlLHtiZWZvcmVTdGFydF86RWkucHJvdG90eXBlLmNvcHlTYW1wbGVWYWx1ZV8sYWZ0ZXJFbmRfOkVpLnByb3RvdHlwZS5jb3B5U2FtcGxlVmFsdWVffSksVGkucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShFaS5wcm90b3R5cGUpLHtjb25zdHJ1Y3RvcjpUaSxEZWZhdWx0U2V0dGluZ3NfOntlbmRpbmdTdGFydDoyNDAwLGVuZGluZ0VuZDoyNDAwfSxpbnRlcnZhbENoYW5nZWRfOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLnBhcmFtZXRlclBvc2l0aW9ucyxyPXQtMixhPXQrMSxvPW5bcl0scz1uW2FdO2lmKHZvaWQgMD09PW8pc3dpdGNoKHRoaXMuZ2V0U2V0dGluZ3NfKCkuZW5kaW5nU3RhcnQpe2Nhc2UgMjQwMTpyPXQsbz0yKmUtaTticmVhaztjYXNlIDI0MDI6bz1lK25bcj1uLmxlbmd0aC0yXS1uW3IrMV07YnJlYWs7ZGVmYXVsdDpyPXQsbz1pfWlmKHZvaWQgMD09PXMpc3dpdGNoKHRoaXMuZ2V0U2V0dGluZ3NfKCkuZW5kaW5nRW5kKXtjYXNlIDI0MDE6YT10LHM9MippLWU7YnJlYWs7Y2FzZSAyNDAyOnM9aStuW2E9MV0tblswXTticmVhaztkZWZhdWx0OmE9dC0xLHM9ZX10PS41KihpLWUpLG49dGhpcy52YWx1ZVNpemUsdGhpcy5fd2VpZ2h0UHJldj10LyhlLW8pLHRoaXMuX3dlaWdodE5leHQ9dC8ocy1pKSx0aGlzLl9vZmZzZXRQcmV2PXIqbix0aGlzLl9vZmZzZXROZXh0PWEqbn0saW50ZXJwb2xhdGVfOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXMucmVzdWx0QnVmZmVyLGE9dGhpcy5zYW1wbGVWYWx1ZXMsbz10aGlzLnZhbHVlU2l6ZSxzPSh0Kj1vKS1vLGM9dGhpcy5fb2Zmc2V0UHJldixoPXRoaXMuX29mZnNldE5leHQsbD10aGlzLl93ZWlnaHRQcmV2LHU9dGhpcy5fd2VpZ2h0TmV4dCxkPShpLWUpLyhuLWUpO2ZvcihlPS1sKihuPShpPWQqZCkqZCkrMipsKmktbCpkLGw9KDErbCkqbisoLTEuNS0yKmwpKmkrKC0uNStsKSpkKzEsZD0oLTEtdSkqbisoMS41K3UpKmkrLjUqZCx1PXUqbi11KmksaT0wO2khPT1vOysraSlyW2ldPWUqYVtjK2ldK2wqYVtzK2ldK2QqYVt0K2ldK3UqYVtoK2ldO3JldHVybiByfX0pLFNpLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoRWkucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6U2ksaW50ZXJwb2xhdGVfOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXMucmVzdWx0QnVmZmVyLGE9dGhpcy5zYW1wbGVWYWx1ZXMsbz10aGlzLnZhbHVlU2l6ZSxzPSh0Kj1vKS1vO2ZvcihpPTEtKGU9KGktZSkvKG4tZSkpLG49MDtuIT09bzsrK24pcltuXT1hW3Mrbl0qaSthW3Qrbl0qZTtyZXR1cm4gcn19KSxBaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKEVpLnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOkFpLGludGVycG9sYXRlXzpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdGhpcy5jb3B5U2FtcGxlVmFsdWVfKHQtMSl9fSksRW89e1RpbWVCdWZmZXJUeXBlOkZsb2F0MzJBcnJheSxWYWx1ZUJ1ZmZlclR5cGU6RmxvYXQzMkFycmF5LERlZmF1bHRJbnRlcnBvbGF0aW9uOjIzMDEsSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kRGlzY3JldGU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBBaSh0aGlzLnRpbWVzLHRoaXMudmFsdWVzLHRoaXMuZ2V0VmFsdWVTaXplKCksdCl9LEludGVycG9sYW50RmFjdG9yeU1ldGhvZExpbmVhcjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFNpKHRoaXMudGltZXMsdGhpcy52YWx1ZXMsdGhpcy5nZXRWYWx1ZVNpemUoKSx0KX0sSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kU21vb3RoOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgVGkodGhpcy50aW1lcyx0aGlzLnZhbHVlcyx0aGlzLmdldFZhbHVlU2l6ZSgpLHQpfSxzZXRJbnRlcnBvbGF0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlO3N3aXRjaCh0KXtjYXNlIDIzMDA6ZT10aGlzLkludGVycG9sYW50RmFjdG9yeU1ldGhvZERpc2NyZXRlO2JyZWFrO2Nhc2UgMjMwMTplPXRoaXMuSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kTGluZWFyO2JyZWFrO2Nhc2UgMjMwMjplPXRoaXMuSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kU21vb3RofWlmKHZvaWQgMD09PWUpe2lmKGU9InVuc3VwcG9ydGVkIGludGVycG9sYXRpb24gZm9yICIrdGhpcy5WYWx1ZVR5cGVOYW1lKyIga2V5ZnJhbWUgdHJhY2sgbmFtZWQgIit0aGlzLm5hbWUsdm9pZCAwPT09dGhpcy5jcmVhdGVJbnRlcnBvbGFudCl7aWYodD09PXRoaXMuRGVmYXVsdEludGVycG9sYXRpb24pdGhyb3cgRXJyb3IoZSk7dGhpcy5zZXRJbnRlcnBvbGF0aW9uKHRoaXMuRGVmYXVsdEludGVycG9sYXRpb24pfWNvbnNvbGUud2FybihlKX1lbHNlIHRoaXMuY3JlYXRlSW50ZXJwb2xhbnQ9ZX0sZ2V0SW50ZXJwb2xhdGlvbjpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLmNyZWF0ZUludGVycG9sYW50KXtjYXNlIHRoaXMuSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kRGlzY3JldGU6cmV0dXJuIDIzMDA7Y2FzZSB0aGlzLkludGVycG9sYW50RmFjdG9yeU1ldGhvZExpbmVhcjpyZXR1cm4gMjMwMTtjYXNlIHRoaXMuSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kU21vb3RoOnJldHVybiAyMzAyfX0sZ2V0VmFsdWVTaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVzLmxlbmd0aC90aGlzLnRpbWVzLmxlbmd0aH0sc2hpZnQ6ZnVuY3Rpb24odCl7aWYoMCE9PXQpZm9yKHZhciBlPXRoaXMudGltZXMsaT0wLG49ZS5sZW5ndGg7aSE9PW47KytpKWVbaV0rPXQ7cmV0dXJuIHRoaXN9LHNjYWxlOmZ1bmN0aW9uKHQpe2lmKDEhPT10KWZvcih2YXIgZT10aGlzLnRpbWVzLGk9MCxuPWUubGVuZ3RoO2khPT1uOysraSllW2ldKj10O3JldHVybiB0aGlzfSx0cmltOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXRoaXMudGltZXMsbj1pLmxlbmd0aCxyPTAsYT1uLTE7ciE9PW4mJmlbcl08dDspKytyO2Zvcig7LTEhPT1hJiZpW2FdPmU7KS0tYTtyZXR1cm4rK2EsMD09PXImJmE9PT1ufHwoYTw9ciYmKHI9KGE9TWF0aC5tYXgoYSwxKSktMSksbj10aGlzLmdldFZhbHVlU2l6ZSgpLHRoaXMudGltZXM9Um8uYXJyYXlTbGljZShpLHIsYSksdGhpcy52YWx1ZXM9Um8uYXJyYXlTbGljZSh0aGlzLnZhbHVlcyxyKm4sYSpuKSksdGhpc30sdmFsaWRhdGU6ZnVuY3Rpb24oKXt2YXIgdD0hMDswIT0oaT10aGlzLmdldFZhbHVlU2l6ZSgpKS1NYXRoLmZsb29yKGkpJiYoY29uc29sZS5lcnJvcigiaW52YWxpZCB2YWx1ZSBzaXplIGluIHRyYWNrIix0aGlzKSx0PSExKTt2YXIgZT10aGlzLnRpbWVzLGk9dGhpcy52YWx1ZXMsbj1lLmxlbmd0aDswPT09biYmKGNvbnNvbGUuZXJyb3IoInRyYWNrIGlzIGVtcHR5Iix0aGlzKSx0PSExKTtmb3IodmFyIHI9bnVsbCxhPTA7YSE9PW47YSsrKXt2YXIgbz1lW2FdO2lmKCJudW1iZXIiPT10eXBlb2YgbyYmaXNOYU4obykpe2NvbnNvbGUuZXJyb3IoInRpbWUgaXMgbm90IGEgdmFsaWQgbnVtYmVyIix0aGlzLGEsbyksdD0hMTticmVha31pZihudWxsIT09ciYmbzxyKXtjb25zb2xlLmVycm9yKCJvdXQgb2Ygb3JkZXIga2V5cyIsdGhpcyxhLG8sciksdD0hMTticmVha31yPW99aWYodm9pZCAwIT09aSYmUm8uaXNUeXBlZEFycmF5KGkpKWZvcihhPTAsZT1pLmxlbmd0aDthIT09ZTsrK2EpaWYobj1pW2FdLGlzTmFOKG4pKXtjb25zb2xlLmVycm9yKCJ2YWx1ZSBpcyBub3QgYSB2YWxpZCBudW1iZXIiLHRoaXMsYSxuKSx0PSExO2JyZWFrfXJldHVybiB0fSxvcHRpbWl6ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLnRpbWVzLGU9dGhpcy52YWx1ZXMsaT10aGlzLmdldFZhbHVlU2l6ZSgpLG49MjMwMj09PXRoaXMuZ2V0SW50ZXJwb2xhdGlvbigpLHI9MSxhPXQubGVuZ3RoLTEsbz0xO288YTsrK28pe3ZhciBzPSExO2lmKCh1PXRbb10pIT09dFtvKzFdJiYoMSE9PW98fHUhPT11WzBdKSlpZihuKXM9ITA7ZWxzZSBmb3IodmFyIGM9byppLGg9Yy1pLGw9YytpLHU9MDt1IT09aTsrK3Upe3ZhciBkPWVbYyt1XTtpZihkIT09ZVtoK3VdfHxkIT09ZVtsK3VdKXtzPSEwO2JyZWFrfX1pZihzKXtpZihvIT09cilmb3IodFtyXT10W29dLHM9byppLGM9cippLHU9MDt1IT09aTsrK3UpZVtjK3VdPWVbcyt1XTsrK3J9fWlmKDA8YSl7Zm9yKHRbcl09dFthXSxzPWEqaSxjPXIqaSx1PTA7dSE9PWk7Kyt1KWVbYyt1XT1lW3MrdV07KytyfXJldHVybiByIT09dC5sZW5ndGgmJih0aGlzLnRpbWVzPVJvLmFycmF5U2xpY2UodCwwLHIpLHRoaXMudmFsdWVzPVJvLmFycmF5U2xpY2UoZSwwLHIqaSkpLHRoaXN9fSxSaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKEVvKSx7Y29uc3RydWN0b3I6UmksVmFsdWVUeXBlTmFtZToidmVjdG9yIn0pLFBpLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoRWkucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6UGksaW50ZXJwb2xhdGVfOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXMucmVzdWx0QnVmZmVyLGE9dGhpcy5zYW1wbGVWYWx1ZXMsbz10aGlzLnZhbHVlU2l6ZTtmb3IoZT0oaS1lKS8obi1lKSxpPSh0Kj1vKStvO3QhPT1pO3QrPTQpcy5zbGVycEZsYXQociwwLGEsdC1vLGEsdCxlKTtyZXR1cm4gcn19KSxDaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKEVvKSx7Y29uc3RydWN0b3I6Q2ksVmFsdWVUeXBlTmFtZToicXVhdGVybmlvbiIsRGVmYXVsdEludGVycG9sYXRpb246MjMwMSxJbnRlcnBvbGFudEZhY3RvcnlNZXRob2RMaW5lYXI6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBQaSh0aGlzLnRpbWVzLHRoaXMudmFsdWVzLHRoaXMuZ2V0VmFsdWVTaXplKCksdCl9LEludGVycG9sYW50RmFjdG9yeU1ldGhvZFNtb290aDp2b2lkIDB9KSxJaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKEVvKSx7Y29uc3RydWN0b3I6SWksVmFsdWVUeXBlTmFtZToibnVtYmVyIn0pLFVpLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoRW8pLHtjb25zdHJ1Y3RvcjpVaSxWYWx1ZVR5cGVOYW1lOiJzdHJpbmciLFZhbHVlQnVmZmVyVHlwZTpBcnJheSxEZWZhdWx0SW50ZXJwb2xhdGlvbjoyMzAwLEludGVycG9sYW50RmFjdG9yeU1ldGhvZExpbmVhcjp2b2lkIDAsSW50ZXJwb2xhbnRGYWN0b3J5TWV0aG9kU21vb3RoOnZvaWQgMH0pLE5pLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoRW8pLHtjb25zdHJ1Y3RvcjpOaSxWYWx1ZVR5cGVOYW1lOiJib29sIixWYWx1ZUJ1ZmZlclR5cGU6QXJyYXksRGVmYXVsdEludGVycG9sYXRpb246MjMwMCxJbnRlcnBvbGFudEZhY3RvcnlNZXRob2RMaW5lYXI6dm9pZCAwLEludGVycG9sYW50RmFjdG9yeU1ldGhvZFNtb290aDp2b2lkIDB9KSxEaS5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKEVvKSx7Y29uc3RydWN0b3I6RGksVmFsdWVUeXBlTmFtZToiY29sb3IifSksKE9pLnByb3RvdHlwZT1FbykuY29uc3RydWN0b3I9T2ksT2JqZWN0LmFzc2lnbihPaSx7cGFyc2U6ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dC50eXBlKXRocm93IEVycm9yKCJ0cmFjayB0eXBlIHVuZGVmaW5lZCwgY2FuIG5vdCBwYXJzZSIpO3ZhciBlPU9pLl9nZXRUcmFja1R5cGVGb3JWYWx1ZVR5cGVOYW1lKHQudHlwZSk7aWYodm9pZCAwPT09dC50aW1lcyl7dmFyIGk9W10sbj1bXTtSby5mbGF0dGVuSlNPTih0LmtleXMsaSxuLCJ2YWx1ZSIpLHQudGltZXM9aSx0LnZhbHVlcz1ufXJldHVybiB2b2lkIDAhPT1lLnBhcnNlP2UucGFyc2UodCk6bmV3IGUodC5uYW1lLHQudGltZXMsdC52YWx1ZXMsdC5pbnRlcnBvbGF0aW9uKX0sdG9KU09OOmZ1bmN0aW9uKHQpe2lmKHZvaWQgMCE9PShlPXQuY29uc3RydWN0b3IpLnRvSlNPTillPWUudG9KU09OKHQpO2Vsc2V7dmFyIGU9e25hbWU6dC5uYW1lLHRpbWVzOlJvLmNvbnZlcnRBcnJheSh0LnRpbWVzLEFycmF5KSx2YWx1ZXM6Um8uY29udmVydEFycmF5KHQudmFsdWVzLEFycmF5KX0saT10LmdldEludGVycG9sYXRpb24oKTtpIT09dC5EZWZhdWx0SW50ZXJwb2xhdGlvbiYmKGUuaW50ZXJwb2xhdGlvbj1pKX1yZXR1cm4gZS50eXBlPXQuVmFsdWVUeXBlTmFtZSxlfSxfZ2V0VHJhY2tUeXBlRm9yVmFsdWVUeXBlTmFtZTpmdW5jdGlvbih0KXtzd2l0Y2godC50b0xvd2VyQ2FzZSgpKXtjYXNlInNjYWxhciI6Y2FzZSJkb3VibGUiOmNhc2UiZmxvYXQiOmNhc2UibnVtYmVyIjpjYXNlImludGVnZXIiOnJldHVybiBJaTtjYXNlInZlY3RvciI6Y2FzZSJ2ZWN0b3IyIjpjYXNlInZlY3RvcjMiOmNhc2UidmVjdG9yNCI6cmV0dXJuIFJpO2Nhc2UiY29sb3IiOnJldHVybiBEaTtjYXNlInF1YXRlcm5pb24iOnJldHVybiBDaTtjYXNlImJvb2wiOmNhc2UiYm9vbGVhbiI6cmV0dXJuIE5pO2Nhc2Uic3RyaW5nIjpyZXR1cm4gVWl9dGhyb3cgRXJyb3IoIlVuc3VwcG9ydGVkIHR5cGVOYW1lOiAiK3QpfX0pLEZpLnByb3RvdHlwZT17Y29uc3RydWN0b3I6RmkscmVzZXREdXJhdGlvbjpmdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9MCxpPXRoaXMudHJhY2tzLmxlbmd0aDtlIT09aTsrK2Upe3ZhciBuPXRoaXMudHJhY2tzW2VdO3Q9TWF0aC5tYXgodCxuLnRpbWVzW24udGltZXMubGVuZ3RoLTFdKX10aGlzLmR1cmF0aW9uPXR9LHRyaW06ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MDt0PHRoaXMudHJhY2tzLmxlbmd0aDt0KyspdGhpcy50cmFja3NbdF0udHJpbSgwLHRoaXMuZHVyYXRpb24pO3JldHVybiB0aGlzfSxvcHRpbWl6ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8dGhpcy50cmFja3MubGVuZ3RoO3QrKyl0aGlzLnRyYWNrc1t0XS5vcHRpbWl6ZSgpO3JldHVybiB0aGlzfX0sT2JqZWN0LmFzc2lnbihGaSx7cGFyc2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGk9dC50cmFja3Msbj0xLyh0LmZwc3x8MSkscj0wLGE9aS5sZW5ndGg7ciE9PWE7KytyKWUucHVzaChPaS5wYXJzZShpW3JdKS5zY2FsZShuKSk7cmV0dXJuIG5ldyBGaSh0Lm5hbWUsdC5kdXJhdGlvbixlKX0sdG9KU09OOmZ1bmN0aW9uKHQpe3ZhciBlPVtdLGk9dC50cmFja3M7dD17bmFtZTp0Lm5hbWUsZHVyYXRpb246dC5kdXJhdGlvbix0cmFja3M6ZX07Zm9yKHZhciBuPTAscj1pLmxlbmd0aDtuIT09cjsrK24pZS5wdXNoKE9pLnRvSlNPTihpW25dKSk7cmV0dXJuIHR9LENyZWF0ZUZyb21Nb3JwaFRhcmdldFNlcXVlbmNlOmZ1bmN0aW9uKHQsZSxpLG4pe2Zvcih2YXIgcj1lLmxlbmd0aCxhPVtdLG89MDtvPHI7bysrKXt2YXIgcz1bXTsoaD1bXSkucHVzaCgobytyLTEpJXIsbywobysxKSVyKSxzLnB1c2goMCwxLDApO3ZhciBjPVJvLmdldEtleWZyYW1lT3JkZXIoaCksaD1Sby5zb3J0ZWRBcnJheShoLDEsYyk7cz1Sby5zb3J0ZWRBcnJheShzLDEsYyk7bnx8MCE9PWhbMF18fChoLnB1c2gocikscy5wdXNoKHNbMF0pKSxhLnB1c2gobmV3IElpKCIubW9ycGhUYXJnZXRJbmZsdWVuY2VzWyIrZVtvXS5uYW1lKyJdIixoLHMpLnNjYWxlKDEvaSkpfXJldHVybiBuZXcgRmkodCwtMSxhKX0sZmluZEJ5TmFtZTpmdW5jdGlvbih0LGUpe3ZhciBpPXQ7QXJyYXkuaXNBcnJheSh0KXx8KGk9dC5nZW9tZXRyeSYmdC5nZW9tZXRyeS5hbmltYXRpb25zfHx0LmFuaW1hdGlvbnMpO2Zvcih2YXIgbj0wO248aS5sZW5ndGg7bisrKWlmKGlbbl0ubmFtZT09PWUpcmV0dXJuIGlbbl07cmV0dXJuIG51bGx9LENyZWF0ZUNsaXBzRnJvbU1vcnBoVGFyZ2V0U2VxdWVuY2VzOmZ1bmN0aW9uKHQsZSxpKXtmb3IodmFyIG49e30scj0vXihbXHctXSo/KShbXGRdKykkLyxhPTAsbz10Lmxlbmd0aDthPG87YSsrKXt2YXIgcz10W2FdLGM9cy5uYW1lLm1hdGNoKHIpO2lmKGMmJjE8Yy5sZW5ndGgpe3ZhciBoPWNbMV07KGM9bltoXSl8fChuW2hdPWM9W10pLGMucHVzaChzKX19Zm9yKGggaW4gdD1bXSxuKXQucHVzaChGaS5DcmVhdGVGcm9tTW9ycGhUYXJnZXRTZXF1ZW5jZShoLG5baF0sZSxpKSk7cmV0dXJuIHR9LHBhcnNlQW5pbWF0aW9uOmZ1bmN0aW9uKHQsZSl7aWYoIXQpcmV0dXJuIGNvbnNvbGUuZXJyb3IoIiAgbm8gYW5pbWF0aW9uIGluIEpTT05Mb2FkZXIgZGF0YSIpLG51bGw7Zm9yKHZhciBpPWZ1bmN0aW9uKHQsZSxpLG4scil7aWYoMCE9PWkubGVuZ3RoKXt2YXIgYT1bXSxvPVtdO1JvLmZsYXR0ZW5KU09OKGksYSxvLG4pLDAhPT1hLmxlbmd0aCYmci5wdXNoKG5ldyB0KGUsYSxvKSl9fSxuPVtdLHI9dC5uYW1lfHwiZGVmYXVsdCIsYT10Lmxlbmd0aHx8LTEsbz10LmZwc3x8MzAscz10LmhpZXJhcmNoeXx8W10sYz0wO2M8cy5sZW5ndGg7YysrKXt2YXIgaD1zW2NdLmtleXM7aWYoaCYmMCE9PWgubGVuZ3RoKWlmKGhbMF0ubW9ycGhUYXJnZXRzKXthPXt9O2Zvcih2YXIgbD0wO2w8aC5sZW5ndGg7bCsrKWlmKGhbbF0ubW9ycGhUYXJnZXRzKWZvcih2YXIgdT0wO3U8aFtsXS5tb3JwaFRhcmdldHMubGVuZ3RoO3UrKylhW2hbbF0ubW9ycGhUYXJnZXRzW3VdXT0tMTtmb3IodmFyIGQgaW4gYSl7dmFyIHA9W10sZj1bXTtmb3IodT0wO3UhPT1oW2xdLm1vcnBoVGFyZ2V0cy5sZW5ndGg7Kyt1KXt2YXIgbT1oW2xdO3AucHVzaChtLnRpbWUpLGYucHVzaChtLm1vcnBoVGFyZ2V0PT09ZD8xOjApfW4ucHVzaChuZXcgSWkoIi5tb3JwaFRhcmdldEluZmx1ZW5jZVsiK2QrIl0iLHAsZikpfWE9YS5sZW5ndGgqKG98fDEpfWVsc2UgaShSaSwobD0iLmJvbmVzWyIrZVtjXS5uYW1lKyJdIikrIi5wb3NpdGlvbiIsaCwicG9zIixuKSxpKENpLGwrIi5xdWF0ZXJuaW9uIixoLCJyb3QiLG4pLGkoUmksbCsiLnNjYWxlIixoLCJzY2wiLG4pfXJldHVybiAwPT09bi5sZW5ndGg/bnVsbDpuZXcgRmkocixhLG4pfX0pLE9iamVjdC5hc3NpZ24oemkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXM7bmV3IGhpKHIubWFuYWdlcikubG9hZCh0LGZ1bmN0aW9uKHQpe2Uoci5wYXJzZShKU09OLnBhcnNlKHQpKSl9LGksbil9LHNldFRleHR1cmVzOmZ1bmN0aW9uKHQpe3RoaXMudGV4dHVyZXM9dH0scGFyc2U6ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdm9pZCAwPT09aVt0XSYmY29uc29sZS53YXJuKCJUSFJFRS5NYXRlcmlhbExvYWRlcjogVW5kZWZpbmVkIHRleHR1cmUiLHQpLGlbdF19dmFyIGk9dGhpcy50ZXh0dXJlcyxuPW5ldyBib1t0LnR5cGVdO2lmKHZvaWQgMCE9PXQudXVpZCYmKG4udXVpZD10LnV1aWQpLHZvaWQgMCE9PXQubmFtZSYmKG4ubmFtZT10Lm5hbWUpLHZvaWQgMCE9PXQuY29sb3ImJm4uY29sb3Iuc2V0SGV4KHQuY29sb3IpLHZvaWQgMCE9PXQucm91Z2huZXNzJiYobi5yb3VnaG5lc3M9dC5yb3VnaG5lc3MpLHZvaWQgMCE9PXQubWV0YWxuZXNzJiYobi5tZXRhbG5lc3M9dC5tZXRhbG5lc3MpLHZvaWQgMCE9PXQuZW1pc3NpdmUmJm4uZW1pc3NpdmUuc2V0SGV4KHQuZW1pc3NpdmUpLHZvaWQgMCE9PXQuc3BlY3VsYXImJm4uc3BlY3VsYXIuc2V0SGV4KHQuc3BlY3VsYXIpLHZvaWQgMCE9PXQuc2hpbmluZXNzJiYobi5zaGluaW5lc3M9dC5zaGluaW5lc3MpLHZvaWQgMCE9PXQuY2xlYXJDb2F0JiYobi5jbGVhckNvYXQ9dC5jbGVhckNvYXQpLHZvaWQgMCE9PXQuY2xlYXJDb2F0Um91Z2huZXNzJiYobi5jbGVhckNvYXRSb3VnaG5lc3M9dC5jbGVhckNvYXRSb3VnaG5lc3MpLHZvaWQgMCE9PXQudW5pZm9ybXMmJihuLnVuaWZvcm1zPXQudW5pZm9ybXMpLHZvaWQgMCE9PXQudmVydGV4U2hhZGVyJiYobi52ZXJ0ZXhTaGFkZXI9dC52ZXJ0ZXhTaGFkZXIpLHZvaWQgMCE9PXQuZnJhZ21lbnRTaGFkZXImJihuLmZyYWdtZW50U2hhZGVyPXQuZnJhZ21lbnRTaGFkZXIpLHZvaWQgMCE9PXQudmVydGV4Q29sb3JzJiYobi52ZXJ0ZXhDb2xvcnM9dC52ZXJ0ZXhDb2xvcnMpLHZvaWQgMCE9PXQuZm9nJiYobi5mb2c9dC5mb2cpLHZvaWQgMCE9PXQuc2hhZGluZyYmKG4uc2hhZGluZz10LnNoYWRpbmcpLHZvaWQgMCE9PXQuYmxlbmRpbmcmJihuLmJsZW5kaW5nPXQuYmxlbmRpbmcpLHZvaWQgMCE9PXQuc2lkZSYmKG4uc2lkZT10LnNpZGUpLHZvaWQgMCE9PXQub3BhY2l0eSYmKG4ub3BhY2l0eT10Lm9wYWNpdHkpLHZvaWQgMCE9PXQudHJhbnNwYXJlbnQmJihuLnRyYW5zcGFyZW50PXQudHJhbnNwYXJlbnQpLHZvaWQgMCE9PXQuYWxwaGFUZXN0JiYobi5hbHBoYVRlc3Q9dC5hbHBoYVRlc3QpLHZvaWQgMCE9PXQuZGVwdGhUZXN0JiYobi5kZXB0aFRlc3Q9dC5kZXB0aFRlc3QpLHZvaWQgMCE9PXQuZGVwdGhXcml0ZSYmKG4uZGVwdGhXcml0ZT10LmRlcHRoV3JpdGUpLHZvaWQgMCE9PXQuY29sb3JXcml0ZSYmKG4uY29sb3JXcml0ZT10LmNvbG9yV3JpdGUpLHZvaWQgMCE9PXQud2lyZWZyYW1lJiYobi53aXJlZnJhbWU9dC53aXJlZnJhbWUpLHZvaWQgMCE9PXQud2lyZWZyYW1lTGluZXdpZHRoJiYobi53aXJlZnJhbWVMaW5ld2lkdGg9dC53aXJlZnJhbWVMaW5ld2lkdGgpLHZvaWQgMCE9PXQud2lyZWZyYW1lTGluZWNhcCYmKG4ud2lyZWZyYW1lTGluZWNhcD10LndpcmVmcmFtZUxpbmVjYXApLHZvaWQgMCE9PXQud2lyZWZyYW1lTGluZWpvaW4mJihuLndpcmVmcmFtZUxpbmVqb2luPXQud2lyZWZyYW1lTGluZWpvaW4pLHZvaWQgMCE9PXQuc2tpbm5pbmcmJihuLnNraW5uaW5nPXQuc2tpbm5pbmcpLHZvaWQgMCE9PXQubW9ycGhUYXJnZXRzJiYobi5tb3JwaFRhcmdldHM9dC5tb3JwaFRhcmdldHMpLHZvaWQgMCE9PXQuc2l6ZSYmKG4uc2l6ZT10LnNpemUpLHZvaWQgMCE9PXQuc2l6ZUF0dGVudWF0aW9uJiYobi5zaXplQXR0ZW51YXRpb249dC5zaXplQXR0ZW51YXRpb24pLHZvaWQgMCE9PXQubWFwJiYobi5tYXA9ZSh0Lm1hcCkpLHZvaWQgMCE9PXQuYWxwaGFNYXAmJihuLmFscGhhTWFwPWUodC5hbHBoYU1hcCksbi50cmFuc3BhcmVudD0hMCksdm9pZCAwIT09dC5idW1wTWFwJiYobi5idW1wTWFwPWUodC5idW1wTWFwKSksdm9pZCAwIT09dC5idW1wU2NhbGUmJihuLmJ1bXBTY2FsZT10LmJ1bXBTY2FsZSksdm9pZCAwIT09dC5ub3JtYWxNYXAmJihuLm5vcm1hbE1hcD1lKHQubm9ybWFsTWFwKSksdm9pZCAwIT09dC5ub3JtYWxTY2FsZSl7dmFyIHI9dC5ub3JtYWxTY2FsZTshMT09PUFycmF5LmlzQXJyYXkocikmJihyPVtyLHJdKSxuLm5vcm1hbFNjYWxlPShuZXcgVikuZnJvbUFycmF5KHIpfWlmKHZvaWQgMCE9PXQuZGlzcGxhY2VtZW50TWFwJiYobi5kaXNwbGFjZW1lbnRNYXA9ZSh0LmRpc3BsYWNlbWVudE1hcCkpLHZvaWQgMCE9PXQuZGlzcGxhY2VtZW50U2NhbGUmJihuLmRpc3BsYWNlbWVudFNjYWxlPXQuZGlzcGxhY2VtZW50U2NhbGUpLHZvaWQgMCE9PXQuZGlzcGxhY2VtZW50QmlhcyYmKG4uZGlzcGxhY2VtZW50Qmlhcz10LmRpc3BsYWNlbWVudEJpYXMpLHZvaWQgMCE9PXQucm91Z2huZXNzTWFwJiYobi5yb3VnaG5lc3NNYXA9ZSh0LnJvdWdobmVzc01hcCkpLHZvaWQgMCE9PXQubWV0YWxuZXNzTWFwJiYobi5tZXRhbG5lc3NNYXA9ZSh0Lm1ldGFsbmVzc01hcCkpLHZvaWQgMCE9PXQuZW1pc3NpdmVNYXAmJihuLmVtaXNzaXZlTWFwPWUodC5lbWlzc2l2ZU1hcCkpLHZvaWQgMCE9PXQuZW1pc3NpdmVJbnRlbnNpdHkmJihuLmVtaXNzaXZlSW50ZW5zaXR5PXQuZW1pc3NpdmVJbnRlbnNpdHkpLHZvaWQgMCE9PXQuc3BlY3VsYXJNYXAmJihuLnNwZWN1bGFyTWFwPWUodC5zcGVjdWxhck1hcCkpLHZvaWQgMCE9PXQuZW52TWFwJiYobi5lbnZNYXA9ZSh0LmVudk1hcCkpLHZvaWQgMCE9PXQucmVmbGVjdGl2aXR5JiYobi5yZWZsZWN0aXZpdHk9dC5yZWZsZWN0aXZpdHkpLHZvaWQgMCE9PXQubGlnaHRNYXAmJihuLmxpZ2h0TWFwPWUodC5saWdodE1hcCkpLHZvaWQgMCE9PXQubGlnaHRNYXBJbnRlbnNpdHkmJihuLmxpZ2h0TWFwSW50ZW5zaXR5PXQubGlnaHRNYXBJbnRlbnNpdHkpLHZvaWQgMCE9PXQuYW9NYXAmJihuLmFvTWFwPWUodC5hb01hcCkpLHZvaWQgMCE9PXQuYW9NYXBJbnRlbnNpdHkmJihuLmFvTWFwSW50ZW5zaXR5PXQuYW9NYXBJbnRlbnNpdHkpLHZvaWQgMCE9PXQuZ3JhZGllbnRNYXAmJihuLmdyYWRpZW50TWFwPWUodC5ncmFkaWVudE1hcCkpLHZvaWQgMCE9PXQubWF0ZXJpYWxzKXtyPTA7Zm9yKHZhciBhPXQubWF0ZXJpYWxzLmxlbmd0aDtyPGE7cisrKW4ubWF0ZXJpYWxzLnB1c2godGhpcy5wYXJzZSh0Lm1hdGVyaWFsc1tyXSkpfXJldHVybiBufX0pLE9iamVjdC5hc3NpZ24oQmkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXRoaXM7bmV3IGhpKHIubWFuYWdlcikubG9hZCh0LGZ1bmN0aW9uKHQpe2Uoci5wYXJzZShKU09OLnBhcnNlKHQpKSl9LGksbil9LHBhcnNlOmZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBWdCxpPXQuZGF0YS5pbmRleCxuPXtJbnQ4QXJyYXk6SW50OEFycmF5LFVpbnQ4QXJyYXk6VWludDhBcnJheSxVaW50OENsYW1wZWRBcnJheTpVaW50OENsYW1wZWRBcnJheSxJbnQxNkFycmF5OkludDE2QXJyYXksVWludDE2QXJyYXk6VWludDE2QXJyYXksSW50MzJBcnJheTpJbnQzMkFycmF5LFVpbnQzMkFycmF5OlVpbnQzMkFycmF5LEZsb2F0MzJBcnJheTpGbG9hdDMyQXJyYXksRmxvYXQ2NEFycmF5OkZsb2F0NjRBcnJheX07dm9pZCAwIT09aSYmKGk9bmV3IG5baS50eXBlXShpLmFycmF5KSxlLnNldEluZGV4KG5ldyBKKGksMSkpKTt2YXIgcixhPXQuZGF0YS5hdHRyaWJ1dGVzO2ZvcihyIGluIGEpe3ZhciBvPWFbcl07aT1uZXcgbltvLnR5cGVdKG8uYXJyYXkpO2UuYWRkQXR0cmlidXRlKHIsbmV3IEooaSxvLml0ZW1TaXplLG8ubm9ybWFsaXplZCkpfWlmKHZvaWQgMCE9PShuPXQuZGF0YS5ncm91cHN8fHQuZGF0YS5kcmF3Y2FsbHN8fHQuZGF0YS5vZmZzZXRzKSlmb3Iocj0wLGk9bi5sZW5ndGg7ciE9PWk7KytyKWE9bltyXSxlLmFkZEdyb3VwKGEuc3RhcnQsYS5jb3VudCxhLm1hdGVyaWFsSW5kZXgpO3JldHVybiB2b2lkIDAhPT0odD10LmRhdGEuYm91bmRpbmdTcGhlcmUpJiYobj1uZXcgQ3Qsdm9pZCAwIT09dC5jZW50ZXImJm4uZnJvbUFycmF5KHQuY2VudGVyKSxlLmJvdW5kaW5nU3BoZXJlPW5ldyB6dChuLHQucmFkaXVzKSksZX19KSxHaS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkdpLGNyb3NzT3JpZ2luOnZvaWQgMCxleHRyYWN0VXJsQmFzZTpmdW5jdGlvbih0KXtyZXR1cm4gMT09PSh0PXQuc3BsaXQoIi8iKSkubGVuZ3RoPyIuLyI6KHQucG9wKCksdC5qb2luKCIvIikrIi8iKX0saW5pdE1hdGVyaWFsczpmdW5jdGlvbih0LGUsaSl7Zm9yKHZhciBuPVtdLHI9MDtyPHQubGVuZ3RoOysrciluW3JdPXRoaXMuY3JlYXRlTWF0ZXJpYWwodFtyXSxlLGkpO3JldHVybiBufSxjcmVhdGVNYXRlcmlhbDpmdW5jdGlvbih0LG8scyl7ZnVuY3Rpb24gZSh0LGUsaSxuLHIpe3Q9byt0O3ZhciBhPUdpLkhhbmRsZXJzLmdldCh0KTtyZXR1cm4gdD1udWxsIT09YT9hLmxvYWQodCk6KFNvLnNldENyb3NzT3JpZ2luKHMpLFNvLmxvYWQodCkpLHZvaWQgMCE9PWUmJih0LnJlcGVhdC5mcm9tQXJyYXkoZSksMSE9PWVbMF0mJih0LndyYXBTPTFlMyksMSE9PWVbMV0mJih0LndyYXBUPTFlMykpLHZvaWQgMCE9PWkmJnQub2Zmc2V0LmZyb21BcnJheShpKSx2b2lkIDAhPT1uJiYoInJlcGVhdCI9PT1uWzBdJiYodC53cmFwUz0xZTMpLCJtaXJyb3IiPT09blswXSYmKHQud3JhcFM9MTAwMiksInJlcGVhdCI9PT1uWzFdJiYodC53cmFwVD0xZTMpLCJtaXJyb3IiPT09blsxXSYmKHQud3JhcFQ9MTAwMikpLHZvaWQgMCE9PXImJih0LmFuaXNvdHJvcHk9ciksZT1lci5nZW5lcmF0ZVVVSUQoKSxjW2VdPXQsZX12b2lkIDA9PT1UbyYmKFRvPW5ldyBOdCksdm9pZCAwPT09U28mJihTbz1uZXcgZmkpLHZvaWQgMD09PUFvJiYoQW89bmV3IHppKTt2YXIgaSxjPXt9LG49e3V1aWQ6ZXIuZ2VuZXJhdGVVVUlEKCksdHlwZToiTWVzaExhbWJlcnRNYXRlcmlhbCJ9O2ZvcihpIGluIHQpe3ZhciByPXRbaV07c3dpdGNoKGkpe2Nhc2UiRGJnQ29sb3IiOmNhc2UiRGJnSW5kZXgiOmNhc2Uib3B0aWNhbERlbnNpdHkiOmNhc2UiaWxsdW1pbmF0aW9uIjpicmVhaztjYXNlIkRiZ05hbWUiOm4ubmFtZT1yO2JyZWFrO2Nhc2UiYmxlbmRpbmciOm4uYmxlbmRpbmc9UW5bcl07YnJlYWs7Y2FzZSJjb2xvckFtYmllbnQiOmNhc2UibWFwQW1iaWVudCI6Y29uc29sZS53YXJuKCJUSFJFRS5Mb2FkZXIuY3JlYXRlTWF0ZXJpYWw6IixpLCJpcyBubyBsb25nZXIgc3VwcG9ydGVkLiIpO2JyZWFrO2Nhc2UiY29sb3JEaWZmdXNlIjpuLmNvbG9yPVRvLmZyb21BcnJheShyKS5nZXRIZXgoKTticmVhaztjYXNlImNvbG9yU3BlY3VsYXIiOm4uc3BlY3VsYXI9VG8uZnJvbUFycmF5KHIpLmdldEhleCgpO2JyZWFrO2Nhc2UiY29sb3JFbWlzc2l2ZSI6bi5lbWlzc2l2ZT1Uby5mcm9tQXJyYXkocikuZ2V0SGV4KCk7YnJlYWs7Y2FzZSJzcGVjdWxhckNvZWYiOm4uc2hpbmluZXNzPXI7YnJlYWs7Y2FzZSJzaGFkaW5nIjoiYmFzaWMiPT09ci50b0xvd2VyQ2FzZSgpJiYobi50eXBlPSJNZXNoQmFzaWNNYXRlcmlhbCIpLCJwaG9uZyI9PT1yLnRvTG93ZXJDYXNlKCkmJihuLnR5cGU9Ik1lc2hQaG9uZ01hdGVyaWFsIiksInN0YW5kYXJkIj09PXIudG9Mb3dlckNhc2UoKSYmKG4udHlwZT0iTWVzaFN0YW5kYXJkTWF0ZXJpYWwiKTticmVhaztjYXNlIm1hcERpZmZ1c2UiOm4ubWFwPWUocix0Lm1hcERpZmZ1c2VSZXBlYXQsdC5tYXBEaWZmdXNlT2Zmc2V0LHQubWFwRGlmZnVzZVdyYXAsdC5tYXBEaWZmdXNlQW5pc290cm9weSk7YnJlYWs7Y2FzZSJtYXBEaWZmdXNlUmVwZWF0IjpjYXNlIm1hcERpZmZ1c2VPZmZzZXQiOmNhc2UibWFwRGlmZnVzZVdyYXAiOmNhc2UibWFwRGlmZnVzZUFuaXNvdHJvcHkiOmJyZWFrO2Nhc2UibWFwRW1pc3NpdmUiOm4uZW1pc3NpdmVNYXA9ZShyLHQubWFwRW1pc3NpdmVSZXBlYXQsdC5tYXBFbWlzc2l2ZU9mZnNldCx0Lm1hcEVtaXNzaXZlV3JhcCx0Lm1hcEVtaXNzaXZlQW5pc290cm9weSk7YnJlYWs7Y2FzZSJtYXBFbWlzc2l2ZVJlcGVhdCI6Y2FzZSJtYXBFbWlzc2l2ZU9mZnNldCI6Y2FzZSJtYXBFbWlzc2l2ZVdyYXAiOmNhc2UibWFwRW1pc3NpdmVBbmlzb3Ryb3B5IjpicmVhaztjYXNlIm1hcExpZ2h0IjpuLmxpZ2h0TWFwPWUocix0Lm1hcExpZ2h0UmVwZWF0LHQubWFwTGlnaHRPZmZzZXQsdC5tYXBMaWdodFdyYXAsdC5tYXBMaWdodEFuaXNvdHJvcHkpO2JyZWFrO2Nhc2UibWFwTGlnaHRSZXBlYXQiOmNhc2UibWFwTGlnaHRPZmZzZXQiOmNhc2UibWFwTGlnaHRXcmFwIjpjYXNlIm1hcExpZ2h0QW5pc290cm9weSI6YnJlYWs7Y2FzZSJtYXBBTyI6bi5hb01hcD1lKHIsdC5tYXBBT1JlcGVhdCx0Lm1hcEFPT2Zmc2V0LHQubWFwQU9XcmFwLHQubWFwQU9Bbmlzb3Ryb3B5KTticmVhaztjYXNlIm1hcEFPUmVwZWF0IjpjYXNlIm1hcEFPT2Zmc2V0IjpjYXNlIm1hcEFPV3JhcCI6Y2FzZSJtYXBBT0FuaXNvdHJvcHkiOmJyZWFrO2Nhc2UibWFwQnVtcCI6bi5idW1wTWFwPWUocix0Lm1hcEJ1bXBSZXBlYXQsdC5tYXBCdW1wT2Zmc2V0LHQubWFwQnVtcFdyYXAsdC5tYXBCdW1wQW5pc290cm9weSk7YnJlYWs7Y2FzZSJtYXBCdW1wU2NhbGUiOm4uYnVtcFNjYWxlPXI7YnJlYWs7Y2FzZSJtYXBCdW1wUmVwZWF0IjpjYXNlIm1hcEJ1bXBPZmZzZXQiOmNhc2UibWFwQnVtcFdyYXAiOmNhc2UibWFwQnVtcEFuaXNvdHJvcHkiOmJyZWFrO2Nhc2UibWFwTm9ybWFsIjpuLm5vcm1hbE1hcD1lKHIsdC5tYXBOb3JtYWxSZXBlYXQsdC5tYXBOb3JtYWxPZmZzZXQsdC5tYXBOb3JtYWxXcmFwLHQubWFwTm9ybWFsQW5pc290cm9weSk7YnJlYWs7Y2FzZSJtYXBOb3JtYWxGYWN0b3IiOm4ubm9ybWFsU2NhbGU9W3Iscl07YnJlYWs7Y2FzZSJtYXBOb3JtYWxSZXBlYXQiOmNhc2UibWFwTm9ybWFsT2Zmc2V0IjpjYXNlIm1hcE5vcm1hbFdyYXAiOmNhc2UibWFwTm9ybWFsQW5pc290cm9weSI6YnJlYWs7Y2FzZSJtYXBTcGVjdWxhciI6bi5zcGVjdWxhck1hcD1lKHIsdC5tYXBTcGVjdWxhclJlcGVhdCx0Lm1hcFNwZWN1bGFyT2Zmc2V0LHQubWFwU3BlY3VsYXJXcmFwLHQubWFwU3BlY3VsYXJBbmlzb3Ryb3B5KTticmVhaztjYXNlIm1hcFNwZWN1bGFyUmVwZWF0IjpjYXNlIm1hcFNwZWN1bGFyT2Zmc2V0IjpjYXNlIm1hcFNwZWN1bGFyV3JhcCI6Y2FzZSJtYXBTcGVjdWxhckFuaXNvdHJvcHkiOmJyZWFrO2Nhc2UibWFwTWV0YWxuZXNzIjpuLm1ldGFsbmVzc01hcD1lKHIsdC5tYXBNZXRhbG5lc3NSZXBlYXQsdC5tYXBNZXRhbG5lc3NPZmZzZXQsdC5tYXBNZXRhbG5lc3NXcmFwLHQubWFwTWV0YWxuZXNzQW5pc290cm9weSk7YnJlYWs7Y2FzZSJtYXBNZXRhbG5lc3NSZXBlYXQiOmNhc2UibWFwTWV0YWxuZXNzT2Zmc2V0IjpjYXNlIm1hcE1ldGFsbmVzc1dyYXAiOmNhc2UibWFwTWV0YWxuZXNzQW5pc290cm9weSI6YnJlYWs7Y2FzZSJtYXBSb3VnaG5lc3MiOm4ucm91Z2huZXNzTWFwPWUocix0Lm1hcFJvdWdobmVzc1JlcGVhdCx0Lm1hcFJvdWdobmVzc09mZnNldCx0Lm1hcFJvdWdobmVzc1dyYXAsdC5tYXBSb3VnaG5lc3NBbmlzb3Ryb3B5KTticmVhaztjYXNlIm1hcFJvdWdobmVzc1JlcGVhdCI6Y2FzZSJtYXBSb3VnaG5lc3NPZmZzZXQiOmNhc2UibWFwUm91Z2huZXNzV3JhcCI6Y2FzZSJtYXBSb3VnaG5lc3NBbmlzb3Ryb3B5IjpicmVhaztjYXNlIm1hcEFscGhhIjpuLmFscGhhTWFwPWUocix0Lm1hcEFscGhhUmVwZWF0LHQubWFwQWxwaGFPZmZzZXQsdC5tYXBBbHBoYVdyYXAsdC5tYXBBbHBoYUFuaXNvdHJvcHkpO2JyZWFrO2Nhc2UibWFwQWxwaGFSZXBlYXQiOmNhc2UibWFwQWxwaGFPZmZzZXQiOmNhc2UibWFwQWxwaGFXcmFwIjpjYXNlIm1hcEFscGhhQW5pc290cm9weSI6YnJlYWs7Y2FzZSJmbGlwU2lkZWQiOm4uc2lkZT0xO2JyZWFrO2Nhc2UiZG91YmxlU2lkZWQiOm4uc2lkZT0yO2JyZWFrO2Nhc2UidHJhbnNwYXJlbmN5Ijpjb25zb2xlLndhcm4oIlRIUkVFLkxvYWRlci5jcmVhdGVNYXRlcmlhbDogdHJhbnNwYXJlbmN5IGhhcyBiZWVuIHJlbmFtZWQgdG8gb3BhY2l0eSIpLG4ub3BhY2l0eT1yO2JyZWFrO2Nhc2UiZGVwdGhUZXN0IjpjYXNlImRlcHRoV3JpdGUiOmNhc2UiY29sb3JXcml0ZSI6Y2FzZSJvcGFjaXR5IjpjYXNlInJlZmxlY3Rpdml0eSI6Y2FzZSJ0cmFuc3BhcmVudCI6Y2FzZSJ2aXNpYmxlIjpjYXNlIndpcmVmcmFtZSI6bltpXT1yO2JyZWFrO2Nhc2UidmVydGV4Q29sb3JzIjohMD09PXImJihuLnZlcnRleENvbG9ycz0yKSwiZmFjZSI9PT1yJiYobi52ZXJ0ZXhDb2xvcnM9MSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKCJUSFJFRS5Mb2FkZXIuY3JlYXRlTWF0ZXJpYWw6IFVuc3VwcG9ydGVkIixpLHIpfX1yZXR1cm4iTWVzaEJhc2ljTWF0ZXJpYWwiPT09bi50eXBlJiZkZWxldGUgbi5lbWlzc2l2ZSwiTWVzaFBob25nTWF0ZXJpYWwiIT09bi50eXBlJiZkZWxldGUgbi5zcGVjdWxhcixuLm9wYWNpdHk8MSYmKG4udHJhbnNwYXJlbnQ9ITApLEFvLnNldFRleHR1cmVzKGMpLEFvLnBhcnNlKG4pfX0sR2kuSGFuZGxlcnM9e2hhbmRsZXJzOltdLGFkZDpmdW5jdGlvbih0LGUpe3RoaXMuaGFuZGxlcnMucHVzaCh0LGUpfSxnZXQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuaGFuZGxlcnMsaT0wLG49ZS5sZW5ndGg7aTxuO2krPTIpe3ZhciByPWVbaSsxXTtpZihlW2ldLnRlc3QodCkpcmV0dXJuIHJ9cmV0dXJuIG51bGx9fSxPYmplY3QuYXNzaWduKEhpLnByb3RvdHlwZSx7bG9hZDpmdW5jdGlvbihpLG4sdCxlKXt2YXIgcj10aGlzLGE9dGhpcy50ZXh0dXJlUGF0aCYmInN0cmluZyI9PXR5cGVvZiB0aGlzLnRleHR1cmVQYXRoP3RoaXMudGV4dHVyZVBhdGg6R2kucHJvdG90eXBlLmV4dHJhY3RVcmxCYXNlKGkpLG89bmV3IGhpKHRoaXMubWFuYWdlcik7by5zZXRXaXRoQ3JlZGVudGlhbHModGhpcy53aXRoQ3JlZGVudGlhbHMpLG8ubG9hZChpLGZ1bmN0aW9uKHQpe3ZhciBlPSh0PUpTT04ucGFyc2UodCkpLm1ldGFkYXRhO2lmKHZvaWQgMCE9PWUmJnZvaWQgMCE9PShlPWUudHlwZSkpe2lmKCJvYmplY3QiPT09ZS50b0xvd2VyQ2FzZSgpKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIlRIUkVFLkpTT05Mb2FkZXI6ICIraSsiIHNob3VsZCBiZSBsb2FkZWQgd2l0aCBUSFJFRS5PYmplY3RMb2FkZXIgaW5zdGVhZC4iKTtpZigic2NlbmUiPT09ZS50b0xvd2VyQ2FzZSgpKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIlRIUkVFLkpTT05Mb2FkZXI6ICIraSsiIHNob3VsZCBiZSBsb2FkZWQgd2l0aCBUSFJFRS5TY2VuZUxvYWRlciBpbnN0ZWFkLiIpfXQ9ci5wYXJzZSh0LGEpLG4odC5nZW9tZXRyeSx0Lm1hdGVyaWFscyl9LHQsZSl9LHNldFRleHR1cmVQYXRoOmZ1bmN0aW9uKHQpe3RoaXMudGV4dHVyZVBhdGg9dH0scGFyc2U6ZnVuY3Rpb24oeSx0KXt2YXIgeD1uZXcgc3QsZT12b2lkIDAhPT15LnNjYWxlPzEveS5zY2FsZToxO3JldHVybiBmdW5jdGlvbih0KXt2YXIgZSxpLG4scixhLG8scyxjLGgsbCx1LGQscCxmPXkuZmFjZXM7bz15LnZlcnRpY2VzO3ZhciBtPXkubm9ybWFscyxnPXkuY29sb3JzLHY9MDtpZih2b2lkIDAhPT15LnV2cyl7Zm9yKGU9MDtlPHkudXZzLmxlbmd0aDtlKyspeS51dnNbZV0ubGVuZ3RoJiZ2Kys7Zm9yKGU9MDtlPHY7ZSsrKXguZmFjZVZlcnRleFV2c1tlXT1bXX1mb3Iocj0wLGE9by5sZW5ndGg7cjxhOykoZT1uZXcgQ3QpLng9b1tyKytdKnQsZS55PW9bcisrXSp0LGUuej1vW3IrK10qdCx4LnZlcnRpY2VzLnB1c2goZSk7Zm9yKHI9MCxhPWYubGVuZ3RoO3I8YTspaWYoaD0xJih0PWZbcisrXSksbj0yJnQsZT04JnQscz0xNiZ0LGw9MzImdCxvPTY0JnQsdCY9MTI4LGgpe2lmKChoPW5ldyBaKS5hPWZbcl0saC5iPWZbcisxXSxoLmM9ZltyKzNdLCh1PW5ldyBaKS5hPWZbcisxXSx1LmI9ZltyKzJdLHUuYz1mW3IrM10scis9NCxuJiYobj1mW3IrK10saC5tYXRlcmlhbEluZGV4PW4sdS5tYXRlcmlhbEluZGV4PW4pLG49eC5mYWNlcy5sZW5ndGgsZSlmb3IoZT0wO2U8djtlKyspZm9yKGQ9eS51dnNbZV0seC5mYWNlVmVydGV4VXZzW2VdW25dPVtdLHguZmFjZVZlcnRleFV2c1tlXVtuKzFdPVtdLGk9MDtpPDQ7aSsrKXA9bmV3IFYocD1kWzIqKGM9ZltyKytdKV0sYz1kWzIqYysxXSksMiE9PWkmJnguZmFjZVZlcnRleFV2c1tlXVtuXS5wdXNoKHApLDAhPT1pJiZ4LmZhY2VWZXJ0ZXhVdnNbZV1bbisxXS5wdXNoKHApO2lmKHMmJihzPTMqZltyKytdLGgubm9ybWFsLnNldChtW3MrK10sbVtzKytdLG1bc10pLHUubm9ybWFsLmNvcHkoaC5ub3JtYWwpKSxsKWZvcihlPTA7ZTw0O2UrKylzPTMqZltyKytdLGw9bmV3IEN0KG1bcysrXSxtW3MrK10sbVtzXSksMiE9PWUmJmgudmVydGV4Tm9ybWFscy5wdXNoKGwpLDAhPT1lJiZ1LnZlcnRleE5vcm1hbHMucHVzaChsKTtpZihvJiYobz1nW289ZltyKytdXSxoLmNvbG9yLnNldEhleChvKSx1LmNvbG9yLnNldEhleChvKSksdClmb3IoZT0wO2U8NDtlKyspbz1nW289ZltyKytdXSwyIT09ZSYmaC52ZXJ0ZXhDb2xvcnMucHVzaChuZXcgTnQobykpLDAhPT1lJiZ1LnZlcnRleENvbG9ycy5wdXNoKG5ldyBOdChvKSk7eC5mYWNlcy5wdXNoKGgpLHguZmFjZXMucHVzaCh1KX1lbHNle2lmKChoPW5ldyBaKS5hPWZbcisrXSxoLmI9ZltyKytdLGguYz1mW3IrK10sbiYmKG49ZltyKytdLGgubWF0ZXJpYWxJbmRleD1uKSxuPXguZmFjZXMubGVuZ3RoLGUpZm9yKGU9MDtlPHY7ZSsrKWZvcihkPXkudXZzW2VdLHguZmFjZVZlcnRleFV2c1tlXVtuXT1bXSxpPTA7aTwzO2krKylwPW5ldyBWKHA9ZFsyKihjPWZbcisrXSldLGM9ZFsyKmMrMV0pLHguZmFjZVZlcnRleFV2c1tlXVtuXS5wdXNoKHApO2lmKHMmJihzPTMqZltyKytdLGgubm9ybWFsLnNldChtW3MrK10sbVtzKytdLG1bc10pKSxsKWZvcihlPTA7ZTwzO2UrKylzPTMqZltyKytdLGw9bmV3IEN0KG1bcysrXSxtW3MrK10sbVtzXSksaC52ZXJ0ZXhOb3JtYWxzLnB1c2gobCk7aWYobyYmKG89ZltyKytdLGguY29sb3Iuc2V0SGV4KGdbb10pKSx0KWZvcihlPTA7ZTwzO2UrKylvPWZbcisrXSxoLnZlcnRleENvbG9ycy5wdXNoKG5ldyBOdChnW29dKSk7eC5mYWNlcy5wdXNoKGgpfX0oZSksZnVuY3Rpb24oKXt2YXIgdD12b2lkIDAhPT15LmluZmx1ZW5jZXNQZXJWZXJ0ZXg/eS5pbmZsdWVuY2VzUGVyVmVydGV4OjI7aWYoeS5za2luV2VpZ2h0cylmb3IodmFyIGU9MCxpPXkuc2tpbldlaWdodHMubGVuZ3RoO2U8aTtlKz10KXguc2tpbldlaWdodHMucHVzaChuZXcgUHQoeS5za2luV2VpZ2h0c1tlXSwxPHQ/eS5za2luV2VpZ2h0c1tlKzFdOjAsMjx0P3kuc2tpbldlaWdodHNbZSsyXTowLDM8dD95LnNraW5XZWlnaHRzW2UrM106MCkpO2lmKHkuc2tpbkluZGljZXMpZm9yKGU9MCxpPXkuc2tpbkluZGljZXMubGVuZ3RoO2U8aTtlKz10KXguc2tpbkluZGljZXMucHVzaChuZXcgUHQoeS5za2luSW5kaWNlc1tlXSwxPHQ/eS5za2luSW5kaWNlc1tlKzFdOjAsMjx0P3kuc2tpbkluZGljZXNbZSsyXTowLDM8dD95LnNraW5JbmRpY2VzW2UrM106MCkpO3guYm9uZXM9eS5ib25lcyx4LmJvbmVzJiYwPHguYm9uZXMubGVuZ3RoJiYoeC5za2luV2VpZ2h0cy5sZW5ndGghPT14LnNraW5JbmRpY2VzLmxlbmd0aHx8eC5za2luSW5kaWNlcy5sZW5ndGghPT14LnZlcnRpY2VzLmxlbmd0aCkmJmNvbnNvbGUud2FybigiV2hlbiBza2lubmluZywgbnVtYmVyIG9mIHZlcnRpY2VzICgiK3gudmVydGljZXMubGVuZ3RoKyIpLCBza2luSW5kaWNlcyAoIit4LnNraW5JbmRpY2VzLmxlbmd0aCsiKSwgYW5kIHNraW5XZWlnaHRzICgiK3guc2tpbldlaWdodHMubGVuZ3RoKyIpIHNob3VsZCBtYXRjaC4iKX0oKSxmdW5jdGlvbih0KXtpZih2b2lkIDAhPT15Lm1vcnBoVGFyZ2V0cylmb3IodmFyIGU9MCxpPXkubW9ycGhUYXJnZXRzLmxlbmd0aDtlPGk7ZSsrKXt4Lm1vcnBoVGFyZ2V0c1tlXT17fSx4Lm1vcnBoVGFyZ2V0c1tlXS5uYW1lPXkubW9ycGhUYXJnZXRzW2VdLm5hbWUseC5tb3JwaFRhcmdldHNbZV0udmVydGljZXM9W107Zm9yKHZhciBuPXgubW9ycGhUYXJnZXRzW2VdLnZlcnRpY2VzLHI9eS5tb3JwaFRhcmdldHNbZV0udmVydGljZXMsYT0wLG89ci5sZW5ndGg7YTxvO2ErPTMpe3ZhciBzPW5ldyBDdDtzLng9clthXSp0LHMueT1yW2ErMV0qdCxzLno9clthKzJdKnQsbi5wdXNoKHMpfX1pZih2b2lkIDAhPT15Lm1vcnBoQ29sb3JzJiYwPHkubW9ycGhDb2xvcnMubGVuZ3RoKWZvcihjb25zb2xlLndhcm4oJ1RIUkVFLkpTT05Mb2FkZXI6ICJtb3JwaENvbG9ycyIgbm8gbG9uZ2VyIHN1cHBvcnRlZC4gVXNpbmcgdGhlbSBhcyBmYWNlIGNvbG9ycy4nKSx0PXguZmFjZXMsbj15Lm1vcnBoQ29sb3JzWzBdLmNvbG9ycyxlPTAsaT10Lmxlbmd0aDtlPGk7ZSsrKXRbZV0uY29sb3IuZnJvbUFycmF5KG4sMyplKX0oZSksZnVuY3Rpb24oKXt2YXIgdD1bXSxlPVtdO3ZvaWQgMCE9PXkuYW5pbWF0aW9uJiZlLnB1c2goeS5hbmltYXRpb24pLHZvaWQgMCE9PXkuYW5pbWF0aW9ucyYmKHkuYW5pbWF0aW9ucy5sZW5ndGg/ZT1lLmNvbmNhdCh5LmFuaW1hdGlvbnMpOmUucHVzaCh5LmFuaW1hdGlvbnMpKTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIG49RmkucGFyc2VBbmltYXRpb24oZVtpXSx4LmJvbmVzKTtuJiZ0LnB1c2gobil9eC5tb3JwaFRhcmdldHMmJihlPUZpLkNyZWF0ZUNsaXBzRnJvbU1vcnBoVGFyZ2V0U2VxdWVuY2VzKHgubW9ycGhUYXJnZXRzLDEwKSx0PXQuY29uY2F0KGUpKSwwPHQubGVuZ3RoJiYoeC5hbmltYXRpb25zPXQpfSgpLHguY29tcHV0ZUZhY2VOb3JtYWxzKCkseC5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSx2b2lkIDA9PT15Lm1hdGVyaWFsc3x8MD09PXkubWF0ZXJpYWxzLmxlbmd0aD97Z2VvbWV0cnk6eH06KGU9R2kucHJvdG90eXBlLmluaXRNYXRlcmlhbHMoeS5tYXRlcmlhbHMsdCx0aGlzLmNyb3NzT3JpZ2luKSx7Z2VvbWV0cnk6eCxtYXRlcmlhbHM6ZX0pfX0pLE9iamVjdC5hc3NpZ24oVmkucHJvdG90eXBlLHtsb2FkOmZ1bmN0aW9uKGksbix0LGUpeyIiPT09dGhpcy50ZXh0dXJlUGF0aCYmKHRoaXMudGV4dHVyZVBhdGg9aS5zdWJzdHJpbmcoMCxpLmxhc3RJbmRleE9mKCIvIikrMSkpO3ZhciByPXRoaXM7bmV3IGhpKHIubWFuYWdlcikubG9hZChpLGZ1bmN0aW9uKHQpe3ZhciBlPW51bGw7dHJ5e2U9SlNPTi5wYXJzZSh0KX1jYXRjaCh0KXtyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKCJUSFJFRTpPYmplY3RMb2FkZXI6IENhbid0IHBhcnNlICIraSsiLiIsdC5tZXNzYWdlKX12b2lkIDA9PT0odD1lLm1ldGFkYXRhKXx8dm9pZCAwPT09dC50eXBlfHwiZ2VvbWV0cnkiPT09dC50eXBlLnRvTG93ZXJDYXNlKCk/Y29uc29sZS5lcnJvcigiVEhSRUUuT2JqZWN0TG9hZGVyOiBDYW4ndCBsb2FkICIraSsiLiBVc2UgVEhSRUUuSlNPTkxvYWRlciBpbnN0ZWFkLiIpOnIucGFyc2UoZSxuKX0sdCxlKX0sc2V0VGV4dHVyZVBhdGg6ZnVuY3Rpb24odCl7dGhpcy50ZXh0dXJlUGF0aD10fSxzZXRDcm9zc09yaWdpbjpmdW5jdGlvbih0KXt0aGlzLmNyb3NzT3JpZ2luPXR9LHBhcnNlOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5wYXJzZUdlb21ldHJpZXModC5nZW9tZXRyaWVzKSxuPXRoaXMucGFyc2VJbWFnZXModC5pbWFnZXMsZnVuY3Rpb24oKXt2b2lkIDAhPT1lJiZlKHIpfSkscj0obj10aGlzLnBhcnNlVGV4dHVyZXModC50ZXh0dXJlcyxuKSxuPXRoaXMucGFyc2VNYXRlcmlhbHModC5tYXRlcmlhbHMsbiksdGhpcy5wYXJzZU9iamVjdCh0Lm9iamVjdCxpLG4pKTtyZXR1cm4gdC5hbmltYXRpb25zJiYoci5hbmltYXRpb25zPXRoaXMucGFyc2VBbmltYXRpb25zKHQuYW5pbWF0aW9ucykpLHZvaWQgMCE9PXQuaW1hZ2VzJiYwIT09dC5pbWFnZXMubGVuZ3RofHx2b2lkIDA9PT1lfHxlKHIpLHJ9LHBhcnNlR2VvbWV0cmllczpmdW5jdGlvbih0KXt2YXIgZT17fTtpZih2b2lkIDAhPT10KWZvcih2YXIgaT1uZXcgSGksbj1uZXcgQmkscj0wLGE9dC5sZW5ndGg7cjxhO3IrKyl7dmFyIG8scz10W3JdO3N3aXRjaChzLnR5cGUpe2Nhc2UiUGxhbmVHZW9tZXRyeSI6Y2FzZSJQbGFuZUJ1ZmZlckdlb21ldHJ5IjpvPW5ldyBfb1tzLnR5cGVdKHMud2lkdGgscy5oZWlnaHQscy53aWR0aFNlZ21lbnRzLHMuaGVpZ2h0U2VnbWVudHMpO2JyZWFrO2Nhc2UiQm94R2VvbWV0cnkiOmNhc2UiQm94QnVmZmVyR2VvbWV0cnkiOmNhc2UiQ3ViZUdlb21ldHJ5IjpvPW5ldyBfb1tzLnR5cGVdKHMud2lkdGgscy5oZWlnaHQscy5kZXB0aCxzLndpZHRoU2VnbWVudHMscy5oZWlnaHRTZWdtZW50cyxzLmRlcHRoU2VnbWVudHMpO2JyZWFrO2Nhc2UiQ2lyY2xlR2VvbWV0cnkiOmNhc2UiQ2lyY2xlQnVmZmVyR2VvbWV0cnkiOm89bmV3IF9vW3MudHlwZV0ocy5yYWRpdXMscy5zZWdtZW50cyxzLnRoZXRhU3RhcnQscy50aGV0YUxlbmd0aCk7YnJlYWs7Y2FzZSJDeWxpbmRlckdlb21ldHJ5IjpjYXNlIkN5bGluZGVyQnVmZmVyR2VvbWV0cnkiOm89bmV3IF9vW3MudHlwZV0ocy5yYWRpdXNUb3Ascy5yYWRpdXNCb3R0b20scy5oZWlnaHQscy5yYWRpYWxTZWdtZW50cyxzLmhlaWdodFNlZ21lbnRzLHMub3BlbkVuZGVkLHMudGhldGFTdGFydCxzLnRoZXRhTGVuZ3RoKTticmVhaztjYXNlIkNvbmVHZW9tZXRyeSI6Y2FzZSJDb25lQnVmZmVyR2VvbWV0cnkiOm89bmV3IF9vW3MudHlwZV0ocy5yYWRpdXMscy5oZWlnaHQscy5yYWRpYWxTZWdtZW50cyxzLmhlaWdodFNlZ21lbnRzLHMub3BlbkVuZGVkLHMudGhldGFTdGFydCxzLnRoZXRhTGVuZ3RoKTticmVhaztjYXNlIlNwaGVyZUdlb21ldHJ5IjpjYXNlIlNwaGVyZUJ1ZmZlckdlb21ldHJ5IjpvPW5ldyBfb1tzLnR5cGVdKHMucmFkaXVzLHMud2lkdGhTZWdtZW50cyxzLmhlaWdodFNlZ21lbnRzLHMucGhpU3RhcnQscy5waGlMZW5ndGgscy50aGV0YVN0YXJ0LHMudGhldGFMZW5ndGgpO2JyZWFrO2Nhc2UiRG9kZWNhaGVkcm9uR2VvbWV0cnkiOmNhc2UiSWNvc2FoZWRyb25HZW9tZXRyeSI6Y2FzZSJPY3RhaGVkcm9uR2VvbWV0cnkiOmNhc2UiVGV0cmFoZWRyb25HZW9tZXRyeSI6bz1uZXcgX29bcy50eXBlXShzLnJhZGl1cyxzLmRldGFpbCk7YnJlYWs7Y2FzZSJSaW5nR2VvbWV0cnkiOmNhc2UiUmluZ0J1ZmZlckdlb21ldHJ5IjpvPW5ldyBfb1tzLnR5cGVdKHMuaW5uZXJSYWRpdXMscy5vdXRlclJhZGl1cyxzLnRoZXRhU2VnbWVudHMscy5waGlTZWdtZW50cyxzLnRoZXRhU3RhcnQscy50aGV0YUxlbmd0aCk7YnJlYWs7Y2FzZSJUb3J1c0dlb21ldHJ5IjpjYXNlIlRvcnVzQnVmZmVyR2VvbWV0cnkiOm89bmV3IF9vW3MudHlwZV0ocy5yYWRpdXMscy50dWJlLHMucmFkaWFsU2VnbWVudHMscy50dWJ1bGFyU2VnbWVudHMscy5hcmMpO2JyZWFrO2Nhc2UiVG9ydXNLbm90R2VvbWV0cnkiOmNhc2UiVG9ydXNLbm90QnVmZmVyR2VvbWV0cnkiOm89bmV3IF9vW3MudHlwZV0ocy5yYWRpdXMscy50dWJlLHMudHVidWxhclNlZ21lbnRzLHMucmFkaWFsU2VnbWVudHMscy5wLHMucSk7YnJlYWs7Y2FzZSJMYXRoZUdlb21ldHJ5IjpjYXNlIkxhdGhlQnVmZmVyR2VvbWV0cnkiOm89bmV3IF9vW3MudHlwZV0ocy5wb2ludHMscy5zZWdtZW50cyxzLnBoaVN0YXJ0LHMucGhpTGVuZ3RoKTticmVhaztjYXNlIkJ1ZmZlckdlb21ldHJ5IjpvPW4ucGFyc2Uocyk7YnJlYWs7Y2FzZSJHZW9tZXRyeSI6bz1pLnBhcnNlKHMuZGF0YSx0aGlzLnRleHR1cmVQYXRoKS5nZW9tZXRyeTticmVhaztkZWZhdWx0OmNvbnNvbGUud2FybignVEhSRUUuT2JqZWN0TG9hZGVyOiBVbnN1cHBvcnRlZCBnZW9tZXRyeSB0eXBlICInK3MudHlwZSsnIicpO2NvbnRpbnVlfW8udXVpZD1zLnV1aWQsdm9pZCAwIT09cy5uYW1lJiYoby5uYW1lPXMubmFtZSksZVtzLnV1aWRdPW99cmV0dXJuIGV9LHBhcnNlTWF0ZXJpYWxzOmZ1bmN0aW9uKHQsZSl7dmFyIGk9e307aWYodm9pZCAwIT09dCl7dmFyIG49bmV3IHppO24uc2V0VGV4dHVyZXMoZSk7Zm9yKHZhciByPTAsYT10Lmxlbmd0aDtyPGE7cisrKXt2YXIgbz1uLnBhcnNlKHRbcl0pO2lbby51dWlkXT1vfX1yZXR1cm4gaX0scGFyc2VBbmltYXRpb25zOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciBuPUZpLnBhcnNlKHRbaV0pO2UucHVzaChuKX1yZXR1cm4gZX0scGFyc2VJbWFnZXM6ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBpKHQpe3JldHVybiBuLm1hbmFnZXIuaXRlbVN0YXJ0KHQpLGEubG9hZCh0LGZ1bmN0aW9uKCl7bi5tYW5hZ2VyLml0ZW1FbmQodCl9LHZvaWQgMCxmdW5jdGlvbigpe24ubWFuYWdlci5pdGVtRXJyb3IodCl9KX12YXIgbj10aGlzLHI9e307aWYodm9pZCAwIT09dCYmMDx0Lmxlbmd0aCl7dmFyIGE9bmV3IGRpKG89bmV3IGNpKGUpKTthLnNldENyb3NzT3JpZ2luKHRoaXMuY3Jvc3NPcmlnaW4pO2Zvcih2YXIgbz0wLHM9dC5sZW5ndGg7bzxzO28rKyl7dmFyIGM9dFtvXSxoPS9eKFwvXC8pfChbYS16XSs6KFwvXC8pPykvaS50ZXN0KGMudXJsKT9jLnVybDpuLnRleHR1cmVQYXRoK2MudXJsO3JbYy51dWlkXT1pKGgpfX1yZXR1cm4gcn0scGFyc2VUZXh0dXJlczpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkodCxlKXtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIHQ/dDooY29uc29sZS53YXJuKCJUSFJFRS5PYmplY3RMb2FkZXIucGFyc2VUZXh0dXJlOiBDb25zdGFudCBzaG91bGQgYmUgaW4gbnVtZXJpYyBmb3JtLiIsdCksZVt0XSl9dmFyIG49e307aWYodm9pZCAwIT09dClmb3IodmFyIHI9MCxhPXQubGVuZ3RoO3I8YTtyKyspe3ZhciBvPXRbcl07dm9pZCAwPT09by5pbWFnZSYmY29uc29sZS53YXJuKCdUSFJFRS5PYmplY3RMb2FkZXI6IE5vICJpbWFnZSIgc3BlY2lmaWVkIGZvcicsby51dWlkKSx2b2lkIDA9PT1lW28uaW1hZ2VdJiZjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdExvYWRlcjogVW5kZWZpbmVkIGltYWdlIixvLmltYWdlKTt2YXIgcz1uZXcgeihlW28uaW1hZ2VdKTtzLm5lZWRzVXBkYXRlPSEwLHMudXVpZD1vLnV1aWQsdm9pZCAwIT09by5uYW1lJiYocy5uYW1lPW8ubmFtZSksdm9pZCAwIT09by5tYXBwaW5nJiYocy5tYXBwaW5nPWkoby5tYXBwaW5nLEtuKSksdm9pZCAwIT09by5vZmZzZXQmJnMub2Zmc2V0LmZyb21BcnJheShvLm9mZnNldCksdm9pZCAwIT09by5yZXBlYXQmJnMucmVwZWF0LmZyb21BcnJheShvLnJlcGVhdCksdm9pZCAwIT09by53cmFwJiYocy53cmFwUz1pKG8ud3JhcFswXSwkbikscy53cmFwVD1pKG8ud3JhcFsxXSwkbikpLHZvaWQgMCE9PW8ubWluRmlsdGVyJiYocy5taW5GaWx0ZXI9aShvLm1pbkZpbHRlcix0cikpLHZvaWQgMCE9PW8ubWFnRmlsdGVyJiYocy5tYWdGaWx0ZXI9aShvLm1hZ0ZpbHRlcix0cikpLHZvaWQgMCE9PW8uYW5pc290cm9weSYmKHMuYW5pc290cm9weT1vLmFuaXNvdHJvcHkpLHZvaWQgMCE9PW8uZmxpcFkmJihzLmZsaXBZPW8uZmxpcFkpLG5bby51dWlkXT1zfXJldHVybiBufSxwYXJzZU9iamVjdDooTG89bmV3IEl0LGZ1bmN0aW9uKHQsZSxpKXtmdW5jdGlvbiBuKHQpe3JldHVybiB2b2lkIDA9PT1lW3RdJiZjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdExvYWRlcjogVW5kZWZpbmVkIGdlb21ldHJ5Iix0KSxlW3RdfWZ1bmN0aW9uIHIodCl7aWYodm9pZCAwIT09dClyZXR1cm4gdm9pZCAwPT09aVt0XSYmY29uc29sZS53YXJuKCJUSFJFRS5PYmplY3RMb2FkZXI6IFVuZGVmaW5lZCBtYXRlcmlhbCIsdCksaVt0XX12YXIgYTtzd2l0Y2godC50eXBlKXtjYXNlIlNjZW5lIjphPW5ldyBidCx2b2lkIDAhPT10LmJhY2tncm91bmQmJk51bWJlci5pc0ludGVnZXIodC5iYWNrZ3JvdW5kKSYmKGEuYmFja2dyb3VuZD1uZXcgTnQodC5iYWNrZ3JvdW5kKSksdm9pZCAwIT09dC5mb2cmJigiRm9nIj09PXQuZm9nLnR5cGU/YS5mb2c9bmV3IF90KHQuZm9nLmNvbG9yLHQuZm9nLm5lYXIsdC5mb2cuZmFyKToiRm9nRXhwMiI9PT10LmZvZy50eXBlJiYoYS5mb2c9bmV3IHh0KHQuZm9nLmNvbG9yLHQuZm9nLmRlbnNpdHkpKSk7YnJlYWs7Y2FzZSJQZXJzcGVjdGl2ZUNhbWVyYSI6YT1uZXcgWHQodC5mb3YsdC5hc3BlY3QsdC5uZWFyLHQuZmFyKSx2b2lkIDAhPT10LmZvY3VzJiYoYS5mb2N1cz10LmZvY3VzKSx2b2lkIDAhPT10Lnpvb20mJihhLnpvb209dC56b29tKSx2b2lkIDAhPT10LmZpbG1HYXVnZSYmKGEuZmlsbUdhdWdlPXQuZmlsbUdhdWdlKSx2b2lkIDAhPT10LmZpbG1PZmZzZXQmJihhLmZpbG1PZmZzZXQ9dC5maWxtT2Zmc2V0KSx2b2lkIDAhPT10LnZpZXcmJihhLnZpZXc9T2JqZWN0LmFzc2lnbih7fSx0LnZpZXcpKTticmVhaztjYXNlIk9ydGhvZ3JhcGhpY0NhbWVyYSI6YT1uZXcgWXQodC5sZWZ0LHQucmlnaHQsdC50b3AsdC5ib3R0b20sdC5uZWFyLHQuZmFyKTticmVhaztjYXNlIkFtYmllbnRMaWdodCI6YT1uZXcgTWkodC5jb2xvcix0LmludGVuc2l0eSk7YnJlYWs7Y2FzZSJEaXJlY3Rpb25hbExpZ2h0IjphPW5ldyB3aSh0LmNvbG9yLHQuaW50ZW5zaXR5KTticmVhaztjYXNlIlBvaW50TGlnaHQiOmE9bmV3IF9pKHQuY29sb3IsdC5pbnRlbnNpdHksdC5kaXN0YW5jZSx0LmRlY2F5KTticmVhaztjYXNlIlNwb3RMaWdodCI6YT1uZXcgeGkodC5jb2xvcix0LmludGVuc2l0eSx0LmRpc3RhbmNlLHQuYW5nbGUsdC5wZW51bWJyYSx0LmRlY2F5KTticmVhaztjYXNlIkhlbWlzcGhlcmVMaWdodCI6YT1uZXcgZ2kodC5jb2xvcix0Lmdyb3VuZENvbG9yLHQuaW50ZW5zaXR5KTticmVhaztjYXNlIk1lc2giOmE9bih0Lmdlb21ldHJ5KTt2YXIgbz1yKHQubWF0ZXJpYWwpO2E9YS5ib25lcyYmMDxhLmJvbmVzLmxlbmd0aD9uZXcgTHQoYSxvKTpuZXcga3QoYSxvKTticmVhaztjYXNlIkxPRCI6YT1uZXcgVHQ7YnJlYWs7Y2FzZSJMaW5lIjphPW5ldyBhZShuKHQuZ2VvbWV0cnkpLHIodC5tYXRlcmlhbCksdC5tb2RlKTticmVhaztjYXNlIkxpbmVTZWdtZW50cyI6YT1uZXcgb2Uobih0Lmdlb21ldHJ5KSxyKHQubWF0ZXJpYWwpKTticmVhaztjYXNlIlBvaW50Q2xvdWQiOmNhc2UiUG9pbnRzIjphPW5ldyBjZShuKHQuZ2VvbWV0cnkpLHIodC5tYXRlcmlhbCkpO2JyZWFrO2Nhc2UiU3ByaXRlIjphPW5ldyBFdChyKHQubWF0ZXJpYWwpKTticmVhaztjYXNlIkdyb3VwIjphPW5ldyBoZTticmVhaztjYXNlIlNraW5uZWRNZXNoIjpjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdExvYWRlci5wYXJzZU9iamVjdCgpIGRvZXMgbm90IHN1cHBvcnQgU2tpbm5lZE1lc2ggdHlwZS4gSW5zdGFudGlhdGVzIE9iamVjdDNEIGluc3RlYWQuIik7ZGVmYXVsdDphPW5ldyBYfWlmKGEudXVpZD10LnV1aWQsdm9pZCAwIT09dC5uYW1lJiYoYS5uYW1lPXQubmFtZSksdm9pZCAwIT09dC5tYXRyaXg/KExvLmZyb21BcnJheSh0Lm1hdHJpeCksTG8uZGVjb21wb3NlKGEucG9zaXRpb24sYS5xdWF0ZXJuaW9uLGEuc2NhbGUpKToodm9pZCAwIT09dC5wb3NpdGlvbiYmYS5wb3NpdGlvbi5mcm9tQXJyYXkodC5wb3NpdGlvbiksdm9pZCAwIT09dC5yb3RhdGlvbiYmYS5yb3RhdGlvbi5mcm9tQXJyYXkodC5yb3RhdGlvbiksdm9pZCAwIT09dC5xdWF0ZXJuaW9uJiZhLnF1YXRlcm5pb24uZnJvbUFycmF5KHQucXVhdGVybmlvbiksdm9pZCAwIT09dC5zY2FsZSYmYS5zY2FsZS5mcm9tQXJyYXkodC5zY2FsZSkpLHZvaWQgMCE9PXQuY2FzdFNoYWRvdyYmKGEuY2FzdFNoYWRvdz10LmNhc3RTaGFkb3cpLHZvaWQgMCE9PXQucmVjZWl2ZVNoYWRvdyYmKGEucmVjZWl2ZVNoYWRvdz10LnJlY2VpdmVTaGFkb3cpLHQuc2hhZG93JiYodm9pZCAwIT09dC5zaGFkb3cuYmlhcyYmKGEuc2hhZG93LmJpYXM9dC5zaGFkb3cuYmlhcyksdm9pZCAwIT09dC5zaGFkb3cucmFkaXVzJiYoYS5zaGFkb3cucmFkaXVzPXQuc2hhZG93LnJhZGl1cyksdm9pZCAwIT09dC5zaGFkb3cubWFwU2l6ZSYmYS5zaGFkb3cubWFwU2l6ZS5mcm9tQXJyYXkodC5zaGFkb3cubWFwU2l6ZSksdm9pZCAwIT09dC5zaGFkb3cuY2FtZXJhJiYoYS5zaGFkb3cuY2FtZXJhPXRoaXMucGFyc2VPYmplY3QodC5zaGFkb3cuY2FtZXJhKSkpLHZvaWQgMCE9PXQudmlzaWJsZSYmKGEudmlzaWJsZT10LnZpc2libGUpLHZvaWQgMCE9PXQudXNlckRhdGEmJihhLnVzZXJEYXRhPXQudXNlckRhdGEpLHZvaWQgMCE9PXQuY2hpbGRyZW4pZm9yKHZhciBzIGluIHQuY2hpbGRyZW4pYS5hZGQodGhpcy5wYXJzZU9iamVjdCh0LmNoaWxkcmVuW3NdLGUsaSkpO2lmKCJMT0QiPT09dC50eXBlKWZvcih0PXQubGV2ZWxzLG89MDtvPHQubGVuZ3RoO28rKyl7dmFyIGM9dFtvXTt2b2lkIDAhPT0ocz1hLmdldE9iamVjdEJ5UHJvcGVydHkoInV1aWQiLGMub2JqZWN0KSkmJmEuYWRkTGV2ZWwocyxjLmRpc3RhbmNlKX1yZXR1cm4gYX0pfSksa2kucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpraSxnZXRQb2ludDpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5DdXJ2ZTogV2FybmluZywgZ2V0UG9pbnQoKSBub3QgaW1wbGVtZW50ZWQhIiksbnVsbH0sZ2V0UG9pbnRBdDpmdW5jdGlvbih0KXtyZXR1cm4gdD10aGlzLmdldFV0b1RtYXBwaW5nKHQpLHRoaXMuZ2V0UG9pbnQodCl9LGdldFBvaW50czpmdW5jdGlvbih0KXt0fHwodD01KTtmb3IodmFyIGU9W10saT0wO2k8PXQ7aSsrKWUucHVzaCh0aGlzLmdldFBvaW50KGkvdCkpO3JldHVybiBlfSxnZXRTcGFjZWRQb2ludHM6ZnVuY3Rpb24odCl7dHx8KHQ9NSk7Zm9yKHZhciBlPVtdLGk9MDtpPD10O2krKyllLnB1c2godGhpcy5nZXRQb2ludEF0KGkvdCkpO3JldHVybiBlfSxnZXRMZW5ndGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldExlbmd0aHMoKTtyZXR1cm4gdFt0Lmxlbmd0aC0xXX0sZ2V0TGVuZ3RoczpmdW5jdGlvbih0KXtpZih0fHwodD10aGlzLl9fYXJjTGVuZ3RoRGl2aXNpb25zP3RoaXMuX19hcmNMZW5ndGhEaXZpc2lvbnM6MjAwKSx0aGlzLmNhY2hlQXJjTGVuZ3RocyYmdGhpcy5jYWNoZUFyY0xlbmd0aHMubGVuZ3RoPT09dCsxJiYhdGhpcy5uZWVkc1VwZGF0ZSlyZXR1cm4gdGhpcy5jYWNoZUFyY0xlbmd0aHM7dGhpcy5uZWVkc1VwZGF0ZT0hMTt2YXIgZSxpLG49W10scj10aGlzLmdldFBvaW50KDApLGE9MDtmb3Iobi5wdXNoKDApLGk9MTtpPD10O2krKylhKz0oZT10aGlzLmdldFBvaW50KGkvdCkpLmRpc3RhbmNlVG8ociksbi5wdXNoKGEpLHI9ZTtyZXR1cm4gdGhpcy5jYWNoZUFyY0xlbmd0aHM9bn0sdXBkYXRlQXJjTGVuZ3RoczpmdW5jdGlvbigpe3RoaXMubmVlZHNVcGRhdGU9ITAsdGhpcy5nZXRMZW5ndGhzKCl9LGdldFV0b1RtYXBwaW5nOmZ1bmN0aW9uKHQsZSl7dmFyIGksbixyPXRoaXMuZ2V0TGVuZ3RocygpLGE9ci5sZW5ndGg7bj1lfHx0KnJbYS0xXTtmb3IodmFyIG8scz0wLGM9YS0xO3M8PWM7KWlmKChvPXJbaT1NYXRoLmZsb29yKHMrKGMtcykvMildLW4pPDApcz1pKzE7ZWxzZXtpZighKDA8bykpe2M9aTticmVha31jPWktMX1yZXR1cm4gcltpPWNdPT09bj9pLyhhLTEpOihpKyhuLShzPXJbaV0pKS8ocltpKzFdLXMpKS8oYS0xKX0sZ2V0VGFuZ2VudDpmdW5jdGlvbih0KXt2YXIgZT10LTFlLTQ7cmV0dXJuIGU8MCYmKGU9MCksMTwodCs9MWUtNCkmJih0PTEpLGU9dGhpcy5nZXRQb2ludChlKSx0aGlzLmdldFBvaW50KHQpLmNsb25lKCkuc3ViKGUpLm5vcm1hbGl6ZSgpfSxnZXRUYW5nZW50QXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dGhpcy5nZXRVdG9UbWFwcGluZyh0KSx0aGlzLmdldFRhbmdlbnQodCl9LGNvbXB1dGVGcmVuZXRGcmFtZXM6ZnVuY3Rpb24odCxlKXt2YXIgaSxuLHI9bmV3IEN0LGE9W10sbz1bXSxzPVtdLGM9bmV3IEN0LGg9bmV3IEl0O2ZvcihpPTA7aTw9dDtpKyspbj1pL3QsYVtpXT10aGlzLmdldFRhbmdlbnRBdChuKSxhW2ldLm5vcm1hbGl6ZSgpO29bMF09bmV3IEN0LHNbMF09bmV3IEN0LGk9TnVtYmVyLk1BWF9WQUxVRSxuPU1hdGguYWJzKGFbMF0ueCk7dmFyIGw9TWF0aC5hYnMoYVswXS55KSx1PU1hdGguYWJzKGFbMF0ueik7Zm9yKG48PWkmJihpPW4sci5zZXQoMSwwLDApKSxsPD1pJiYoaT1sLHIuc2V0KDAsMSwwKSksdTw9aSYmci5zZXQoMCwwLDEpLGMuY3Jvc3NWZWN0b3JzKGFbMF0scikubm9ybWFsaXplKCksb1swXS5jcm9zc1ZlY3RvcnMoYVswXSxjKSxzWzBdLmNyb3NzVmVjdG9ycyhhWzBdLG9bMF0pLGk9MTtpPD10O2krKylvW2ldPW9baS0xXS5jbG9uZSgpLHNbaV09c1tpLTFdLmNsb25lKCksYy5jcm9zc1ZlY3RvcnMoYVtpLTFdLGFbaV0pLGMubGVuZ3RoKCk+TnVtYmVyLkVQU0lMT04mJihjLm5vcm1hbGl6ZSgpLHI9TWF0aC5hY29zKGVyLmNsYW1wKGFbaS0xXS5kb3QoYVtpXSksLTEsMSkpLG9baV0uYXBwbHlNYXRyaXg0KGgubWFrZVJvdGF0aW9uQXhpcyhjLHIpKSksc1tpXS5jcm9zc1ZlY3RvcnMoYVtpXSxvW2ldKTtpZighMD09PWUpZm9yKHI9TWF0aC5hY29zKGVyLmNsYW1wKG9bMF0uZG90KG9bdF0pLC0xLDEpKSxyLz10LDA8YVswXS5kb3QoYy5jcm9zc1ZlY3RvcnMob1swXSxvW3RdKSkmJihyPS1yKSxpPTE7aTw9dDtpKyspb1tpXS5hcHBseU1hdHJpeDQoaC5tYWtlUm90YXRpb25BeGlzKGFbaV0scippKSksc1tpXS5jcm9zc1ZlY3RvcnMoYVtpXSxvW2ldKTtyZXR1cm57dGFuZ2VudHM6YSxub3JtYWxzOm8sYmlub3JtYWxzOnN9fX0sa2kuY3JlYXRlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoa2kucHJvdG90eXBlKSwodC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCkucHJvdG90eXBlLmdldFBvaW50PWUsdH0sKChqaS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShraS5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1qaSkucHJvdG90eXBlLmlzTGluZUN1cnZlPSEwLGppLnByb3RvdHlwZS5nZXRQb2ludD1mdW5jdGlvbih0KXtpZigxPT09dClyZXR1cm4gdGhpcy52Mi5jbG9uZSgpO3ZhciBlPXRoaXMudjIuY2xvbmUoKS5zdWIodGhpcy52MSk7cmV0dXJuIGUubXVsdGlwbHlTY2FsYXIodCkuYWRkKHRoaXMudjEpLGV9LGppLnByb3RvdHlwZS5nZXRQb2ludEF0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmdldFBvaW50KHQpfSxqaS5wcm90b3R5cGUuZ2V0VGFuZ2VudD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy52Mi5jbG9uZSgpLnN1Yih0aGlzLnYxKS5ub3JtYWxpemUoKX0sV2kucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShraS5wcm90b3R5cGUpLHtjb25zdHJ1Y3RvcjpXaSxhZGQ6ZnVuY3Rpb24odCl7dGhpcy5jdXJ2ZXMucHVzaCh0KX0sY2xvc2VQYXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jdXJ2ZXNbMF0uZ2V0UG9pbnQoMCksZT10aGlzLmN1cnZlc1t0aGlzLmN1cnZlcy5sZW5ndGgtMV0uZ2V0UG9pbnQoMSk7dC5lcXVhbHMoZSl8fHRoaXMuY3VydmVzLnB1c2gobmV3IGppKGUsdCkpfSxnZXRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10KnRoaXMuZ2V0TGVuZ3RoKCksaT10aGlzLmdldEN1cnZlTGVuZ3RocygpO2Zvcih0PTA7dDxpLmxlbmd0aDspe2lmKGlbdF0+PWUpcmV0dXJuIGU9aVt0XS1lLGk9KHQ9dGhpcy5jdXJ2ZXNbdF0pLmdldExlbmd0aCgpLHQuZ2V0UG9pbnRBdCgwPT09aT8wOjEtZS9pKTt0Kyt9cmV0dXJuIG51bGx9LGdldExlbmd0aDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Q3VydmVMZW5ndGhzKCk7cmV0dXJuIHRbdC5sZW5ndGgtMV19LHVwZGF0ZUFyY0xlbmd0aHM6ZnVuY3Rpb24oKXt0aGlzLm5lZWRzVXBkYXRlPSEwLHRoaXMuY2FjaGVMZW5ndGhzPW51bGwsdGhpcy5nZXRMZW5ndGhzKCl9LGdldEN1cnZlTGVuZ3RoczpmdW5jdGlvbigpe2lmKHRoaXMuY2FjaGVMZW5ndGhzJiZ0aGlzLmNhY2hlTGVuZ3Rocy5sZW5ndGg9PT10aGlzLmN1cnZlcy5sZW5ndGgpcmV0dXJuIHRoaXMuY2FjaGVMZW5ndGhzO2Zvcih2YXIgdD1bXSxlPTAsaT0wLG49dGhpcy5jdXJ2ZXMubGVuZ3RoO2k8bjtpKyspZSs9dGhpcy5jdXJ2ZXNbaV0uZ2V0TGVuZ3RoKCksdC5wdXNoKGUpO3JldHVybiB0aGlzLmNhY2hlTGVuZ3Rocz10fSxnZXRTcGFjZWRQb2ludHM6ZnVuY3Rpb24odCl7dHx8KHQ9NDApO2Zvcih2YXIgZT1bXSxpPTA7aTw9dDtpKyspZS5wdXNoKHRoaXMuZ2V0UG9pbnQoaS90KSk7cmV0dXJuIHRoaXMuYXV0b0Nsb3NlJiZlLnB1c2goZVswXSksZX0sZ2V0UG9pbnRzOmZ1bmN0aW9uKHQpe3Q9dHx8MTI7Zm9yKHZhciBlLGk9W10sbj0wLHI9dGhpcy5jdXJ2ZXM7bjxyLmxlbmd0aDtuKyspZm9yKHZhciBhPShhPXJbbl0pLmdldFBvaW50cyhhJiZhLmlzRWxsaXBzZUN1cnZlPzIqdDphJiZhLmlzTGluZUN1cnZlPzE6YSYmYS5pc1NwbGluZUN1cnZlP3QqYS5wb2ludHMubGVuZ3RoOnQpLG89MDtvPGEubGVuZ3RoO28rKyl7dmFyIHM9YVtvXTtlJiZlLmVxdWFscyhzKXx8KGkucHVzaChzKSxlPXMpfXJldHVybiB0aGlzLmF1dG9DbG9zZSYmMTxpLmxlbmd0aCYmIWlbaS5sZW5ndGgtMV0uZXF1YWxzKGlbMF0pJiZpLnB1c2goaVswXSksaX0sY3JlYXRlUG9pbnRzR2VvbWV0cnk6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dGhpcy5nZXRQb2ludHModCksdGhpcy5jcmVhdGVHZW9tZXRyeSh0KX0sY3JlYXRlU3BhY2VkUG9pbnRzR2VvbWV0cnk6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dGhpcy5nZXRTcGFjZWRQb2ludHModCksdGhpcy5jcmVhdGVHZW9tZXRyeSh0KX0sY3JlYXRlR2VvbWV0cnk6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBzdCxpPTAsbj10Lmxlbmd0aDtpPG47aSsrKXt2YXIgcj10W2ldO2UudmVydGljZXMucHVzaChuZXcgQ3Qoci54LHIueSxyLnp8fDApKX1yZXR1cm4gZX19KSwoKFhpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGtpLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVhpKS5wcm90b3R5cGUuaXNFbGxpcHNlQ3VydmU9ITAsWGkucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0yKk1hdGguUEksaT10aGlzLmFFbmRBbmdsZS10aGlzLmFTdGFydEFuZ2xlLG49TWF0aC5hYnMoaSk8TnVtYmVyLkVQU0lMT047aTwwOylpKz1lO2Zvcig7ZTxpOylpLT1lO2k8TnVtYmVyLkVQU0lMT04mJihpPW4/MDplKSwhMCE9PXRoaXMuYUNsb2Nrd2lzZXx8bnx8KGk9aT09PWU/LWU6aS1lKSxlPXRoaXMuYVN0YXJ0QW5nbGUrdCppLHQ9dGhpcy5hWCt0aGlzLnhSYWRpdXMqTWF0aC5jb3MoZSk7dmFyIHI9dGhpcy5hWSt0aGlzLnlSYWRpdXMqTWF0aC5zaW4oZSk7cmV0dXJuIDAhPT10aGlzLmFSb3RhdGlvbiYmKGU9TWF0aC5jb3ModGhpcy5hUm90YXRpb24pLGk9TWF0aC5zaW4odGhpcy5hUm90YXRpb24pLHQ9KG49dC10aGlzLmFYKSplLShyLT10aGlzLmFZKSppK3RoaXMuYVgscj1uKmkrciplK3RoaXMuYVkpLG5ldyBWKHQscil9O3ZhciBQbz17dGFuZ2VudFF1YWRyYXRpY0JlemllcjpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gMiooMS10KSooaS1lKSsyKnQqKG4taSl9LHRhbmdlbnRDdWJpY0JlemllcjpmdW5jdGlvbih0LGUsaSxuLHIpe3JldHVybi0zKmUqKDEtdCkqKDEtdCkrMyppKigxLXQpKigxLXQpLTYqdCppKigxLXQpKzYqdCpuKigxLXQpLTMqdCp0Km4rMyp0KnQqcn0sdGFuZ2VudFNwbGluZTpmdW5jdGlvbih0LGUsaSxuLHIpe3JldHVybiA2KnQqdC02KnQrKDMqdCp0LTQqdCsxKSsoLTYqdCp0KzYqdCkrKDMqdCp0LTIqdCl9LGludGVycG9sYXRlOmZ1bmN0aW9uKHQsZSxpLG4scil7dmFyIGE9cipyO3JldHVybigyKmUtMippKyh0PS41KihpLXQpKSsobj0uNSoobi1lKSkpKnIqYSsoLTMqZSszKmktMip0LW4pKmErdCpyK2V9fTsoKFlpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGtpLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVlpKS5wcm90b3R5cGUuaXNTcGxpbmVDdXJ2ZT0hMCxZaS5wcm90b3R5cGUuZ2V0UG9pbnQ9ZnVuY3Rpb24odCl7dCo9KGE9dGhpcy5wb2ludHMpLmxlbmd0aC0xLHQtPWU9TWF0aC5mbG9vcih0KTt2YXIgZSxpPWFbMD09PWU/ZTplLTFdLG49YVtlXSxyPWFbZT5hLmxlbmd0aC0yP2EubGVuZ3RoLTE6ZSsxXSxhPWFbZT5hLmxlbmd0aC0zP2EubGVuZ3RoLTE6ZSsyXTtyZXR1cm4gbmV3IFYoKGU9UG8uaW50ZXJwb2xhdGUpKGkueCxuLngsci54LGEueCx0KSxlKGkueSxuLnksci55LGEueSx0KSl9LCgocWkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoa2kucHJvdG90eXBlKSkuY29uc3RydWN0b3I9cWkpLnByb3RvdHlwZS5nZXRQb2ludD1mdW5jdGlvbih0KXt2YXIgZT14by5iMztyZXR1cm4gbmV3IFYoZSh0LHRoaXMudjAueCx0aGlzLnYxLngsdGhpcy52Mi54LHRoaXMudjMueCksZSh0LHRoaXMudjAueSx0aGlzLnYxLnksdGhpcy52Mi55LHRoaXMudjMueSkpfSxxaS5wcm90b3R5cGUuZ2V0VGFuZ2VudD1mdW5jdGlvbih0KXt2YXIgZT1Qby50YW5nZW50Q3ViaWNCZXppZXI7cmV0dXJuIG5ldyBWKGUodCx0aGlzLnYwLngsdGhpcy52MS54LHRoaXMudjIueCx0aGlzLnYzLngpLGUodCx0aGlzLnYwLnksdGhpcy52MS55LHRoaXMudjIueSx0aGlzLnYzLnkpKS5ub3JtYWxpemUoKX0sKChaaS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShraS5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1aaSkucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKHQpe3ZhciBlPXhvLmIyO3JldHVybiBuZXcgVihlKHQsdGhpcy52MC54LHRoaXMudjEueCx0aGlzLnYyLngpLGUodCx0aGlzLnYwLnksdGhpcy52MS55LHRoaXMudjIueSkpfSxaaS5wcm90b3R5cGUuZ2V0VGFuZ2VudD1mdW5jdGlvbih0KXt2YXIgZT1Qby50YW5nZW50UXVhZHJhdGljQmV6aWVyO3JldHVybiBuZXcgVihlKHQsdGhpcy52MC54LHRoaXMudjEueCx0aGlzLnYyLngpLGUodCx0aGlzLnYwLnksdGhpcy52MS55LHRoaXMudjIueSkpLm5vcm1hbGl6ZSgpfTt2YXIgQ289T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFdpLnByb3RvdHlwZSkse2Zyb21Qb2ludHM6ZnVuY3Rpb24odCl7dGhpcy5tb3ZlVG8odFswXS54LHRbMF0ueSk7Zm9yKHZhciBlPTEsaT10Lmxlbmd0aDtlPGk7ZSsrKXRoaXMubGluZVRvKHRbZV0ueCx0W2VdLnkpfSxtb3ZlVG86ZnVuY3Rpb24odCxlKXt0aGlzLmN1cnJlbnRQb2ludC5zZXQodCxlKX0sbGluZVRvOmZ1bmN0aW9uKHQsZSl7dmFyIGk9bmV3IGppKHRoaXMuY3VycmVudFBvaW50LmNsb25lKCksbmV3IFYodCxlKSk7dGhpcy5jdXJ2ZXMucHVzaChpKSx0aGlzLmN1cnJlbnRQb2ludC5zZXQodCxlKX0scXVhZHJhdGljQ3VydmVUbzpmdW5jdGlvbih0LGUsaSxuKXt0PW5ldyBaaSh0aGlzLmN1cnJlbnRQb2ludC5jbG9uZSgpLG5ldyBWKHQsZSksbmV3IFYoaSxuKSksdGhpcy5jdXJ2ZXMucHVzaCh0KSx0aGlzLmN1cnJlbnRQb2ludC5zZXQoaSxuKX0sYmV6aWVyQ3VydmVUbzpmdW5jdGlvbih0LGUsaSxuLHIsYSl7dD1uZXcgcWkodGhpcy5jdXJyZW50UG9pbnQuY2xvbmUoKSxuZXcgVih0LGUpLG5ldyBWKGksbiksbmV3IFYocixhKSksdGhpcy5jdXJ2ZXMucHVzaCh0KSx0aGlzLmN1cnJlbnRQb2ludC5zZXQocixhKX0sc3BsaW5lVGhydTpmdW5jdGlvbih0KXt2YXIgZT1uZXcgWWkoZT1bdGhpcy5jdXJyZW50UG9pbnQuY2xvbmUoKV0uY29uY2F0KHQpKTt0aGlzLmN1cnZlcy5wdXNoKGUpLHRoaXMuY3VycmVudFBvaW50LmNvcHkodFt0Lmxlbmd0aC0xXSl9LGFyYzpmdW5jdGlvbih0LGUsaSxuLHIsYSl7dGhpcy5hYnNhcmModCt0aGlzLmN1cnJlbnRQb2ludC54LGUrdGhpcy5jdXJyZW50UG9pbnQueSxpLG4scixhKX0sYWJzYXJjOmZ1bmN0aW9uKHQsZSxpLG4scixhKXt0aGlzLmFic2VsbGlwc2UodCxlLGksaSxuLHIsYSl9LGVsbGlwc2U6ZnVuY3Rpb24odCxlLGksbixyLGEsbyxzKXt0aGlzLmFic2VsbGlwc2UodCt0aGlzLmN1cnJlbnRQb2ludC54LGUrdGhpcy5jdXJyZW50UG9pbnQueSxpLG4scixhLG8scyl9LGFic2VsbGlwc2U6ZnVuY3Rpb24odCxlLGksbixyLGEsbyxzKXt0PW5ldyBYaSh0LGUsaSxuLHIsYSxvLHMpLDA8dGhpcy5jdXJ2ZXMubGVuZ3RoJiYoKGU9dC5nZXRQb2ludCgwKSkuZXF1YWxzKHRoaXMuY3VycmVudFBvaW50KXx8dGhpcy5saW5lVG8oZS54LGUueSkpLHRoaXMuY3VydmVzLnB1c2godCksdD10LmdldFBvaW50KDEpLHRoaXMuY3VycmVudFBvaW50LmNvcHkodCl9fSk7SmkucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShDbykse2NvbnN0cnVjdG9yOkppLGdldFBvaW50c0hvbGVzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxpPTAsbj10aGlzLmhvbGVzLmxlbmd0aDtpPG47aSsrKWVbaV09dGhpcy5ob2xlc1tpXS5nZXRQb2ludHModCk7cmV0dXJuIGV9LGV4dHJhY3RBbGxQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJue3NoYXBlOnRoaXMuZ2V0UG9pbnRzKHQpLGhvbGVzOnRoaXMuZ2V0UG9pbnRzSG9sZXModCl9fSxleHRyYWN0UG9pbnRzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmV4dHJhY3RBbGxQb2ludHModCl9fSksKFFpLnByb3RvdHlwZT1DbykuY29uc3RydWN0b3I9UWksS2kucHJvdG90eXBlPXttb3ZlVG86ZnVuY3Rpb24odCxlKXt0aGlzLmN1cnJlbnRQYXRoPW5ldyBRaSx0aGlzLnN1YlBhdGhzLnB1c2godGhpcy5jdXJyZW50UGF0aCksdGhpcy5jdXJyZW50UGF0aC5tb3ZlVG8odCxlKX0sbGluZVRvOmZ1bmN0aW9uKHQsZSl7dGhpcy5jdXJyZW50UGF0aC5saW5lVG8odCxlKX0scXVhZHJhdGljQ3VydmVUbzpmdW5jdGlvbih0LGUsaSxuKXt0aGlzLmN1cnJlbnRQYXRoLnF1YWRyYXRpY0N1cnZlVG8odCxlLGksbil9LGJlemllckN1cnZlVG86ZnVuY3Rpb24odCxlLGksbixyLGEpe3RoaXMuY3VycmVudFBhdGguYmV6aWVyQ3VydmVUbyh0LGUsaSxuLHIsYSl9LHNwbGluZVRocnU6ZnVuY3Rpb24odCl7dGhpcy5jdXJyZW50UGF0aC5zcGxpbmVUaHJ1KHQpfSx0b1NoYXBlczpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkodCl7Zm9yKHZhciBlPVtdLGk9MCxuPXQubGVuZ3RoO2k8bjtpKyspe3ZhciByPXRbaV0sYT1uZXcgSmk7YS5jdXJ2ZXM9ci5jdXJ2ZXMsZS5wdXNoKGEpfXJldHVybiBlfWZ1bmN0aW9uIG4odCxlKXtmb3IodmFyIGk9ZS5sZW5ndGgsbj0hMSxyPWktMSxhPTA7YTxpO3I9YSsrKXt2YXIgbz1lW3JdLHM9ZVthXSxjPXMueC1vLngsaD1zLnktby55O2lmKE1hdGguYWJzKGgpPk51bWJlci5FUFNJTE9OKXtpZihoPDAmJihvPWVbYV0sYz0tYyxzPWVbcl0saD0taCksISh0Lnk8by55fHx0Lnk+cy55KSlpZih0Lnk9PT1vLnkpe2lmKHQueD09PW8ueClyZXR1cm4hMH1lbHNle2lmKDA9PT0ocj1oKih0Lngtby54KS1jKih0Lnktby55KSkpcmV0dXJuITA7cjwwfHwobj0hbil9fWVsc2UgaWYodC55PT09by55JiYocy54PD10LngmJnQueDw9by54fHxvLng8PXQueCYmdC54PD1zLngpKXJldHVybiEwfXJldHVybiBufXZhciByPXhvLmlzQ2xvY2tXaXNlLGE9dGhpcy5zdWJQYXRocztpZigwPT09YS5sZW5ndGgpcmV0dXJuW107aWYoITA9PT1lKXJldHVybiBpKGEpO3ZhciBvLHMsYyxoPVtdO2lmKDE9PT1hLmxlbmd0aClyZXR1cm4gcz1hWzBdLChjPW5ldyBKaSkuY3VydmVzPXMuY3VydmVzLGgucHVzaChjKSxoO3ZhciBsPSFyKGFbMF0uZ2V0UG9pbnRzKCkpO2w9dD8hbDpsO2M9W107dmFyIHUsZD1bXSxwPVtdLGY9MDtkW2ZdPXZvaWQgMCxwW2ZdPVtdO2Zvcih2YXIgbT0wLGc9YS5sZW5ndGg7bTxnO20rKylvPXIodT0ocz1hW21dKS5nZXRQb2ludHMoKSksKG89dD8hbzpvKT8oIWwmJmRbZl0mJmYrKyxkW2ZdPXtzOm5ldyBKaSxwOnV9LGRbZl0ucy5jdXJ2ZXM9cy5jdXJ2ZXMsbCYmZisrLHBbZl09W10pOnBbZl0ucHVzaCh7aDpzLHA6dVswXX0pO2lmKCFkWzBdKXJldHVybiBpKGEpO2lmKDE8ZC5sZW5ndGgpe2ZvcihtPSExLHM9W10scj0wLGE9ZC5sZW5ndGg7cjxhO3IrKyljW3JdPVtdO2ZvcihyPTAsYT1kLmxlbmd0aDtyPGE7cisrKWZvcihvPXBbcl0sbD0wO2w8by5sZW5ndGg7bCsrKXtmb3IoZj1vW2xdLHU9ITAsZz0wO2c8ZC5sZW5ndGg7ZysrKW4oZi5wLGRbZ10ucCkmJihyIT09ZyYmcy5wdXNoKHtmcm9tczpyLHRvczpnLGhvbGU6bH0pLHU/KHU9ITEsY1tnXS5wdXNoKGYpKTptPSEwKTt1JiZjW3JdLnB1c2goZil9MDxzLmxlbmd0aCYmKG18fChwPWMpKX1mb3IobT0wLHI9ZC5sZW5ndGg7bTxyO20rKylmb3IoYz1kW21dLnMsaC5wdXNoKGMpLGE9MCxvPShzPXBbbV0pLmxlbmd0aDthPG87YSsrKWMuaG9sZXMucHVzaChzW2FdLmgpO3JldHVybiBofX0sT2JqZWN0LmFzc2lnbigkaS5wcm90b3R5cGUse2lzRm9udDohMCxnZW5lcmF0ZVNoYXBlczpmdW5jdGlvbih0LGUsaSl7dm9pZCAwPT09ZSYmKGU9MTAwKSx2b2lkIDA9PT1pJiYoaT00KTt2YXIgbj10aGlzLmRhdGE7dD1TdHJpbmcodCkuc3BsaXQoIiIpO3ZhciByPWUvbi5yZXNvbHV0aW9uLGE9MDtlPVtdO2Zvcih2YXIgbz0wO288dC5sZW5ndGg7bysrKXt2YXIgcztzPXI7dmFyIGM9YSxoPW4uZ2x5cGhzW3Rbb11dfHxuLmdseXBoc1siPyJdO2lmKGgpe3ZhciBsLHUsZCxwLGYsbSxnLHYseT1uZXcgS2kseD1bXSxfPXhvLmIyLGI9eG8uYjM7aWYoaC5vKWZvcih2YXIgdz1oLl9jYWNoZWRPdXRsaW5lfHwoaC5fY2FjaGVkT3V0bGluZT1oLm8uc3BsaXQoIiAiKSksTT0wLEU9dy5sZW5ndGg7TTxFOylzd2l0Y2god1tNKytdKXtjYXNlIm0iOmw9d1tNKytdKnMrYyx1PXdbTSsrXSpzLHkubW92ZVRvKGwsdSk7YnJlYWs7Y2FzZSJsIjpsPXdbTSsrXSpzK2MsdT13W00rK10qcyx5LmxpbmVUbyhsLHUpO2JyZWFrO2Nhc2UicSI6aWYobD13W00rK10qcytjLHU9d1tNKytdKnMsZj13W00rK10qcytjLG09d1tNKytdKnMseS5xdWFkcmF0aWNDdXJ2ZVRvKGYsbSxsLHUpLHA9eFt4Lmxlbmd0aC0xXSl7ZD1wLngscD1wLnk7Zm9yKHZhciBUPTE7VDw9aTtUKyspe3ZhciBTPVQvaTtfKFMsZCxmLGwpLF8oUyxwLG0sdSl9fWJyZWFrO2Nhc2UiYiI6aWYobD13W00rK10qcytjLHU9d1tNKytdKnMsZj13W00rK10qcytjLG09d1tNKytdKnMsZz13W00rK10qcytjLHY9d1tNKytdKnMseS5iZXppZXJDdXJ2ZVRvKGYsbSxnLHYsbCx1KSxwPXhbeC5sZW5ndGgtMV0pZm9yKGQ9cC54LHA9cC55LFQ9MTtUPD1pO1QrKyliKFM9VC9pLGQsZixnLGwpLGIoUyxwLG0sdix1KX1zPXtvZmZzZXQ6aC5oYSpzLHBhdGg6eX19ZWxzZSBzPXZvaWQgMDthKz1zLm9mZnNldCxlLnB1c2gocy5wYXRoKX1mb3IoaT1bXSxuPTAsdD1lLmxlbmd0aDtuPHQ7bisrKUFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGksZVtuXS50b1NoYXBlcygpKTtyZXR1cm4gaX19KSxPYmplY3QuYXNzaWduKHRuLnByb3RvdHlwZSx7bG9hZDpmdW5jdGlvbih0LG4sZSxpKXt2YXIgcj10aGlzO25ldyBoaSh0aGlzLm1hbmFnZXIpLmxvYWQodCxmdW5jdGlvbihlKXt2YXIgaTt0cnl7aT1KU09OLnBhcnNlKGUpfWNhdGNoKHQpe2NvbnNvbGUud2FybigiVEhSRUUuRm9udExvYWRlcjogdHlwZWZhY2UuanMgc3VwcG9ydCBpcyBiZWluZyBkZXByZWNhdGVkLiBVc2UgdHlwZWZhY2UuanNvbiBpbnN0ZWFkLiIpLGk9SlNPTi5wYXJzZShlLnN1YnN0cmluZyg2NSxlLmxlbmd0aC0yKSl9ZT1yLnBhcnNlKGkpLG4mJm4oZSl9LGUsaSl9LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgJGkodCl9fSk7dmFyIElvLFVvLE5vLERvLE9vLEZvLHpvLEJvLEdvLEhvLFZvLGtvLGpvLFdvLFhvLFlvLHFvLFpvLEpvLFFvLEtvLCRvLHRzLGVzLGlzLG5zLHJzLGFzLG9zLHNzLGNzLGhzLGxzLHVzLGRzLHBzPXtnZXRDb250ZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMD09PUlvJiYoSW89bmV3KHdpbmRvdy5BdWRpb0NvbnRleHR8fHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQpKSxJb30sc2V0Q29udGV4dDpmdW5jdGlvbih0KXtJbz10fX07T2JqZWN0LmFzc2lnbihlbi5wcm90b3R5cGUse2xvYWQ6ZnVuY3Rpb24odCxlLGksbil7dmFyIHI9bmV3IGhpKHRoaXMubWFuYWdlcik7ci5zZXRSZXNwb25zZVR5cGUoImFycmF5YnVmZmVyIiksci5sb2FkKHQsZnVuY3Rpb24odCl7cHMuZ2V0Q29udGV4dCgpLmRlY29kZUF1ZGlvRGF0YSh0LGZ1bmN0aW9uKHQpe2UodCl9KX0saSxuKX19KSxubi5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKG1pLnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOm5uLGlzUmVjdEFyZWFMaWdodDohMCxjb3B5OmZ1bmN0aW9uKHQpe3JldHVybiBtaS5wcm90b3R5cGUuY29weS5jYWxsKHRoaXMsdCksdGhpcy53aWR0aD10LndpZHRoLHRoaXMuaGVpZ2h0PXQuaGVpZ2h0LHRoaXN9fSksT2JqZWN0LmFzc2lnbihybi5wcm90b3R5cGUse3VwZGF0ZTooR289bmV3IEl0LEhvPW5ldyBJdCxmdW5jdGlvbih0KXtpZihVbyE9PXRoaXN8fE5vIT09dC5mb2N1c3x8RG8hPT10LmZvdnx8T28hPT10LmFzcGVjdCp0aGlzLmFzcGVjdHx8Rm8hPT10Lm5lYXJ8fHpvIT09dC5mYXJ8fEJvIT09dC56b29tKXtVbz10aGlzLE5vPXQuZm9jdXMsRG89dC5mb3YsT289dC5hc3BlY3QqdGhpcy5hc3BlY3QsRm89dC5uZWFyLHpvPXQuZmFyLEJvPXQuem9vbTt2YXIgZSxpPXQucHJvamVjdGlvbk1hdHJpeC5jbG9uZSgpLG49dGhpcy5leWVTZXAvMixyPW4qRm8vTm8sYT1GbypNYXRoLnRhbihlci5ERUcyUkFEKkRvKi41KS9CbztIby5lbGVtZW50c1sxMl09LW4sR28uZWxlbWVudHNbMTJdPW4sbj0tYSpPbytyLGU9YSpPbytyLGkuZWxlbWVudHNbMF09MipGby8oZS1uKSxpLmVsZW1lbnRzWzhdPShlK24pLyhlLW4pLHRoaXMuY2FtZXJhTC5wcm9qZWN0aW9uTWF0cml4LmNvcHkoaSksbj0tYSpPby1yLGU9YSpPby1yLGkuZWxlbWVudHNbMF09MipGby8oZS1uKSxpLmVsZW1lbnRzWzhdPShlK24pLyhlLW4pLHRoaXMuY2FtZXJhUi5wcm9qZWN0aW9uTWF0cml4LmNvcHkoaSl9dGhpcy5jYW1lcmFMLm1hdHJpeFdvcmxkLmNvcHkodC5tYXRyaXhXb3JsZCkubXVsdGlwbHkoSG8pLHRoaXMuY2FtZXJhUi5tYXRyaXhXb3JsZC5jb3B5KHQubWF0cml4V29ybGQpLm11bHRpcGx5KEdvKX0pfSksKGFuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSkuY29uc3RydWN0b3I9YW4sb24ucHJvdG90eXBlPU9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShYLnByb3RvdHlwZSkse2NvbnN0cnVjdG9yOm9uLGdldElucHV0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2Fpbn0scmVtb3ZlRmlsdGVyOmZ1bmN0aW9uKCl7bnVsbCE9PXRoaXMuZmlsdGVyJiYodGhpcy5nYWluLmRpc2Nvbm5lY3QodGhpcy5maWx0ZXIpLHRoaXMuZmlsdGVyLmRpc2Nvbm5lY3QodGhpcy5jb250ZXh0LmRlc3RpbmF0aW9uKSx0aGlzLmdhaW4uY29ubmVjdCh0aGlzLmNvbnRleHQuZGVzdGluYXRpb24pLHRoaXMuZmlsdGVyPW51bGwpfSxnZXRGaWx0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5maWx0ZXJ9LHNldEZpbHRlcjpmdW5jdGlvbih0KXtudWxsIT09dGhpcy5maWx0ZXI/KHRoaXMuZ2Fpbi5kaXNjb25uZWN0KHRoaXMuZmlsdGVyKSx0aGlzLmZpbHRlci5kaXNjb25uZWN0KHRoaXMuY29udGV4dC5kZXN0aW5hdGlvbikpOnRoaXMuZ2Fpbi5kaXNjb25uZWN0KHRoaXMuY29udGV4dC5kZXN0aW5hdGlvbiksdGhpcy5maWx0ZXI9dCx0aGlzLmdhaW4uY29ubmVjdCh0aGlzLmZpbHRlciksdGhpcy5maWx0ZXIuY29ubmVjdCh0aGlzLmNvbnRleHQuZGVzdGluYXRpb24pfSxnZXRNYXN0ZXJWb2x1bWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nYWluLmdhaW4udmFsdWV9LHNldE1hc3RlclZvbHVtZTpmdW5jdGlvbih0KXt0aGlzLmdhaW4uZ2Fpbi52YWx1ZT10fSx1cGRhdGVNYXRyaXhXb3JsZDooVm89bmV3IEN0LGtvPW5ldyBzLGpvPW5ldyBDdCxXbz1uZXcgQ3QsZnVuY3Rpb24odCl7WC5wcm90b3R5cGUudXBkYXRlTWF0cml4V29ybGQuY2FsbCh0aGlzLHQpLHQ9dGhpcy5jb250ZXh0Lmxpc3RlbmVyO3ZhciBlPXRoaXMudXA7dGhpcy5tYXRyaXhXb3JsZC5kZWNvbXBvc2UoVm8sa28sam8pLFdvLnNldCgwLDAsLTEpLmFwcGx5UXVhdGVybmlvbihrbyksdC5wb3NpdGlvblg/KHQucG9zaXRpb25YLnNldFZhbHVlQXRUaW1lKFZvLngsdGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lKSx0LnBvc2l0aW9uWS5zZXRWYWx1ZUF0VGltZShWby55LHRoaXMuY29udGV4dC5jdXJyZW50VGltZSksdC5wb3NpdGlvblouc2V0VmFsdWVBdFRpbWUoVm8ueix0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHQuZm9yd2FyZFguc2V0VmFsdWVBdFRpbWUoV28ueCx0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHQuZm9yd2FyZFkuc2V0VmFsdWVBdFRpbWUoV28ueSx0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHQuZm9yd2FyZFouc2V0VmFsdWVBdFRpbWUoV28ueix0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHQudXBYLnNldFZhbHVlQXRUaW1lKGUueCx0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHQudXBZLnNldFZhbHVlQXRUaW1lKGUueSx0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHQudXBaLnNldFZhbHVlQXRUaW1lKGUueix0aGlzLmNvbnRleHQuY3VycmVudFRpbWUpKToodC5zZXRQb3NpdGlvbihWby54LFZvLnksVm8ueiksdC5zZXRPcmllbnRhdGlvbihXby54LFdvLnksV28ueixlLngsZS55LGUueikpfSl9KSxzbi5wcm90b3R5cGU9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6c24sZ2V0T3V0cHV0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2Fpbn0sc2V0Tm9kZVNvdXJjZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5oYXNQbGF5YmFja0NvbnRyb2w9ITEsdGhpcy5zb3VyY2VUeXBlPSJhdWRpb05vZGUiLHRoaXMuc291cmNlPXQsdGhpcy5jb25uZWN0KCksdGhpc30sc2V0QnVmZmVyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmJ1ZmZlcj10LHRoaXMuc291cmNlVHlwZT0iYnVmZmVyIix0aGlzLmF1dG9wbGF5JiZ0aGlzLnBsYXkoKSx0aGlzfSxwbGF5OmZ1bmN0aW9uKCl7aWYoITA9PT10aGlzLmlzUGxheWluZyljb25zb2xlLndhcm4oIlRIUkVFLkF1ZGlvOiBBdWRpbyBpcyBhbHJlYWR5IHBsYXlpbmcuIik7ZWxzZXtpZighMSE9PXRoaXMuaGFzUGxheWJhY2tDb250cm9sKXt2YXIgdD10aGlzLmNvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7cmV0dXJuIHQuYnVmZmVyPXRoaXMuYnVmZmVyLHQubG9vcD10aGlzLmxvb3AsdC5vbmVuZGVkPXRoaXMub25FbmRlZC5iaW5kKHRoaXMpLHQucGxheWJhY2tSYXRlLnNldFZhbHVlQXRUaW1lKHRoaXMucGxheWJhY2tSYXRlLHRoaXMuc3RhcnRUaW1lKSx0LnN0YXJ0KDAsdGhpcy5zdGFydFRpbWUpLHRoaXMuaXNQbGF5aW5nPSEwLHRoaXMuc291cmNlPXQsdGhpcy5jb25uZWN0KCl9Y29uc29sZS53YXJuKCJUSFJFRS5BdWRpbzogdGhpcyBBdWRpbyBoYXMgbm8gcGxheWJhY2sgY29udHJvbC4iKX19LHBhdXNlOmZ1bmN0aW9uKCl7aWYoITEhPT10aGlzLmhhc1BsYXliYWNrQ29udHJvbClyZXR1cm4gdGhpcy5zb3VyY2Uuc3RvcCgpLHRoaXMuc3RhcnRUaW1lPXRoaXMuY29udGV4dC5jdXJyZW50VGltZSx0aGlzLmlzUGxheWluZz0hMSx0aGlzO2NvbnNvbGUud2FybigiVEhSRUUuQXVkaW86IHRoaXMgQXVkaW8gaGFzIG5vIHBsYXliYWNrIGNvbnRyb2wuIil9LHN0b3A6ZnVuY3Rpb24oKXtpZighMSE9PXRoaXMuaGFzUGxheWJhY2tDb250cm9sKXJldHVybiB0aGlzLnNvdXJjZS5zdG9wKCksdGhpcy5zdGFydFRpbWU9MCx0aGlzLmlzUGxheWluZz0hMSx0aGlzO2NvbnNvbGUud2FybigiVEhSRUUuQXVkaW86IHRoaXMgQXVkaW8gaGFzIG5vIHBsYXliYWNrIGNvbnRyb2wuIil9LGNvbm5lY3Q6ZnVuY3Rpb24oKXtpZigwPHRoaXMuZmlsdGVycy5sZW5ndGgpe3RoaXMuc291cmNlLmNvbm5lY3QodGhpcy5maWx0ZXJzWzBdKTtmb3IodmFyIHQ9MSxlPXRoaXMuZmlsdGVycy5sZW5ndGg7dDxlO3QrKyl0aGlzLmZpbHRlcnNbdC0xXS5jb25uZWN0KHRoaXMuZmlsdGVyc1t0XSk7dGhpcy5maWx0ZXJzW3RoaXMuZmlsdGVycy5sZW5ndGgtMV0uY29ubmVjdCh0aGlzLmdldE91dHB1dCgpKX1lbHNlIHRoaXMuc291cmNlLmNvbm5lY3QodGhpcy5nZXRPdXRwdXQoKSk7cmV0dXJuIHRoaXN9LGRpc2Nvbm5lY3Q6ZnVuY3Rpb24oKXtpZigwPHRoaXMuZmlsdGVycy5sZW5ndGgpe3RoaXMuc291cmNlLmRpc2Nvbm5lY3QodGhpcy5maWx0ZXJzWzBdKTtmb3IodmFyIHQ9MSxlPXRoaXMuZmlsdGVycy5sZW5ndGg7dDxlO3QrKyl0aGlzLmZpbHRlcnNbdC0xXS5kaXNjb25uZWN0KHRoaXMuZmlsdGVyc1t0XSk7dGhpcy5maWx0ZXJzW3RoaXMuZmlsdGVycy5sZW5ndGgtMV0uZGlzY29ubmVjdCh0aGlzLmdldE91dHB1dCgpKX1lbHNlIHRoaXMuc291cmNlLmRpc2Nvbm5lY3QodGhpcy5nZXRPdXRwdXQoKSk7cmV0dXJuIHRoaXN9LGdldEZpbHRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5maWx0ZXJzfSxzZXRGaWx0ZXJzOmZ1bmN0aW9uKHQpe3JldHVybiB0fHwodD1bXSksITA9PT10aGlzLmlzUGxheWluZz8odGhpcy5kaXNjb25uZWN0KCksdGhpcy5maWx0ZXJzPXQsdGhpcy5jb25uZWN0KCkpOnRoaXMuZmlsdGVycz10LHRoaXN9LGdldEZpbHRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEZpbHRlcnMoKVswXX0sc2V0RmlsdGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldEZpbHRlcnModD9bdF06W10pfSxzZXRQbGF5YmFja1JhdGU6ZnVuY3Rpb24odCl7aWYoITEhPT10aGlzLmhhc1BsYXliYWNrQ29udHJvbClyZXR1cm4gdGhpcy5wbGF5YmFja1JhdGU9dCwhMD09PXRoaXMuaXNQbGF5aW5nJiZ0aGlzLnNvdXJjZS5wbGF5YmFja1JhdGUuc2V0VmFsdWVBdFRpbWUodGhpcy5wbGF5YmFja1JhdGUsdGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lKSx0aGlzO2NvbnNvbGUud2FybigiVEhSRUUuQXVkaW86IHRoaXMgQXVkaW8gaGFzIG5vIHBsYXliYWNrIGNvbnRyb2wuIil9LGdldFBsYXliYWNrUmF0ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBsYXliYWNrUmF0ZX0sb25FbmRlZDpmdW5jdGlvbigpe3RoaXMuaXNQbGF5aW5nPSExfSxnZXRMb29wOmZ1bmN0aW9uKCl7cmV0dXJuITE9PT10aGlzLmhhc1BsYXliYWNrQ29udHJvbD8oY29uc29sZS53YXJuKCJUSFJFRS5BdWRpbzogdGhpcyBBdWRpbyBoYXMgbm8gcGxheWJhY2sgY29udHJvbC4iKSwhMSk6dGhpcy5sb29wfSxzZXRMb29wOmZ1bmN0aW9uKHQpe2lmKCExIT09dGhpcy5oYXNQbGF5YmFja0NvbnRyb2wpcmV0dXJuIHRoaXMubG9vcD10LCEwPT09dGhpcy5pc1BsYXlpbmcmJih0aGlzLnNvdXJjZS5sb29wPXRoaXMubG9vcCksdGhpcztjb25zb2xlLndhcm4oIlRIUkVFLkF1ZGlvOiB0aGlzIEF1ZGlvIGhhcyBubyBwbGF5YmFjayBjb250cm9sLiIpfSxnZXRWb2x1bWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nYWluLmdhaW4udmFsdWV9LHNldFZvbHVtZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nYWluLmdhaW4udmFsdWU9dCx0aGlzfX0pLGNuLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoc24ucHJvdG90eXBlKSx7Y29uc3RydWN0b3I6Y24sZ2V0T3V0cHV0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFubmVyfSxnZXRSZWZEaXN0YW5jZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhbm5lci5yZWZEaXN0YW5jZX0sc2V0UmVmRGlzdGFuY2U6ZnVuY3Rpb24odCl7dGhpcy5wYW5uZXIucmVmRGlzdGFuY2U9dH0sZ2V0Um9sbG9mZkZhY3RvcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhbm5lci5yb2xsb2ZmRmFjdG9yfSxzZXRSb2xsb2ZmRmFjdG9yOmZ1bmN0aW9uKHQpe3RoaXMucGFubmVyLnJvbGxvZmZGYWN0b3I9dH0sZ2V0RGlzdGFuY2VNb2RlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhbm5lci5kaXN0YW5jZU1vZGVsfSxzZXREaXN0YW5jZU1vZGVsOmZ1bmN0aW9uKHQpe3RoaXMucGFubmVyLmRpc3RhbmNlTW9kZWw9dH0sZ2V0TWF4RGlzdGFuY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYW5uZXIubWF4RGlzdGFuY2V9LHNldE1heERpc3RhbmNlOmZ1bmN0aW9uKHQpe3RoaXMucGFubmVyLm1heERpc3RhbmNlPXR9LHVwZGF0ZU1hdHJpeFdvcmxkOihYbz1uZXcgQ3QsZnVuY3Rpb24odCl7WC5wcm90b3R5cGUudXBkYXRlTWF0cml4V29ybGQuY2FsbCh0aGlzLHQpLFhvLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLm1hdHJpeFdvcmxkKSx0aGlzLnBhbm5lci5zZXRQb3NpdGlvbihYby54LFhvLnksWG8ueil9KX0pLE9iamVjdC5hc3NpZ24oaG4ucHJvdG90eXBlLHtnZXRGcmVxdWVuY3lEYXRhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYW5hbHlzZXIuZ2V0Qnl0ZUZyZXF1ZW5jeURhdGEodGhpcy5kYXRhKSx0aGlzLmRhdGF9LGdldEF2ZXJhZ2VGcmVxdWVuY3k6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMuZ2V0RnJlcXVlbmN5RGF0YSgpLGk9MDtpPGUubGVuZ3RoO2krKyl0Kz1lW2ldO3JldHVybiB0L2UubGVuZ3RofX0pLGxuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6bG4sYWNjdW11bGF0ZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuYnVmZmVyLG49dGhpcy52YWx1ZVNpemUscj10Km4rbixhPXRoaXMuY3VtdWxhdGl2ZVdlaWdodDtpZigwPT09YSl7Zm9yKGE9MDthIT09bjsrK2EpaVtyK2FdPWlbYV07YT1lfWVsc2UgYSs9ZSx0aGlzLl9taXhCdWZmZXJSZWdpb24oaSxyLDAsZS9hLG4pO3RoaXMuY3VtdWxhdGl2ZVdlaWdodD1hfSxhcHBseTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlU2l6ZSxpPXRoaXMuYnVmZmVyO3Q9dCplK2U7dmFyIG49dGhpcy5jdW11bGF0aXZlV2VpZ2h0LHI9dGhpcy5iaW5kaW5nO3RoaXMuY3VtdWxhdGl2ZVdlaWdodD0wLG48MSYmdGhpcy5fbWl4QnVmZmVyUmVnaW9uKGksdCwzKmUsMS1uLGUpO249ZTtmb3IodmFyIGE9ZStlO24hPT1hOysrbilpZihpW25dIT09aVtuK2VdKXtyLnNldFZhbHVlKGksdCk7YnJlYWt9fSxzYXZlT3JpZ2luYWxTdGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuYnVmZmVyLGU9dGhpcy52YWx1ZVNpemUsaT0zKmU7dGhpcy5iaW5kaW5nLmdldFZhbHVlKHQsaSk7Zm9yKHZhciBuPWU7biE9PWk7KytuKXRbbl09dFtpK24lZV07dGhpcy5jdW11bGF0aXZlV2VpZ2h0PTB9LHJlc3RvcmVPcmlnaW5hbFN0YXRlOmZ1bmN0aW9uKCl7dGhpcy5iaW5kaW5nLnNldFZhbHVlKHRoaXMuYnVmZmVyLDMqdGhpcy52YWx1ZVNpemUpfSxfc2VsZWN0OmZ1bmN0aW9uKHQsZSxpLG4scil7aWYoLjU8PW4pZm9yKG49MDtuIT09cjsrK24pdFtlK25dPXRbaStuXX0sX3NsZXJwOmZ1bmN0aW9uKHQsZSxpLG4scil7cy5zbGVycEZsYXQodCxlLHQsZSx0LGksbil9LF9sZXJwOmZ1bmN0aW9uKHQsZSxpLG4scil7Zm9yKHZhciBhPTEtbixvPTA7byE9PXI7KytvKXt2YXIgcz1lK287dFtzXT10W3NdKmErdFtpK29dKm59fX0sdW4ucHJvdG90eXBlPXtjb25zdHJ1Y3Rvcjp1bixnZXRWYWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuYmluZCgpLHRoaXMuZ2V0VmFsdWUodCxlKX0sc2V0VmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLmJpbmQoKSx0aGlzLnNldFZhbHVlKHQsZSl9LGJpbmQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm5vZGUsZT10aGlzLnBhcnNlZFBhdGgsaT1lLm9iamVjdE5hbWUsbj1lLnByb3BlcnR5TmFtZSxyPWUucHJvcGVydHlJbmRleDtpZih0fHwodGhpcy5ub2RlPXQ9dW4uZmluZE5vZGUodGhpcy5yb290Tm9kZSxlLm5vZGVOYW1lKXx8dGhpcy5yb290Tm9kZSksdGhpcy5nZXRWYWx1ZT10aGlzLl9nZXRWYWx1ZV91bmF2YWlsYWJsZSx0aGlzLnNldFZhbHVlPXRoaXMuX3NldFZhbHVlX3VuYXZhaWxhYmxlLHQpe2lmKGkpe3ZhciBhPWUub2JqZWN0SW5kZXg7c3dpdGNoKGkpe2Nhc2UibWF0ZXJpYWxzIjppZighdC5tYXRlcmlhbClyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKCIgIGNhbiBub3QgYmluZCB0byBtYXRlcmlhbCBhcyBub2RlIGRvZXMgbm90IGhhdmUgYSBtYXRlcmlhbCIsdGhpcyk7aWYoIXQubWF0ZXJpYWwubWF0ZXJpYWxzKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIiAgY2FuIG5vdCBiaW5kIHRvIG1hdGVyaWFsLm1hdGVyaWFscyBhcyBub2RlLm1hdGVyaWFsIGRvZXMgbm90IGhhdmUgYSBtYXRlcmlhbHMgYXJyYXkiLHRoaXMpO3Q9dC5tYXRlcmlhbC5tYXRlcmlhbHM7YnJlYWs7Y2FzZSJib25lcyI6aWYoIXQuc2tlbGV0b24pcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcigiICBjYW4gbm90IGJpbmQgdG8gYm9uZXMgYXMgbm9kZSBkb2VzIG5vdCBoYXZlIGEgc2tlbGV0b24iLHRoaXMpO2Zvcih0PXQuc2tlbGV0b24uYm9uZXMsaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV0ubmFtZT09PWEpe2E9aTticmVha31icmVhaztkZWZhdWx0OmlmKHZvaWQgMD09PXRbaV0pcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcigiICBjYW4gbm90IGJpbmQgdG8gb2JqZWN0TmFtZSBvZiBub2RlLCB1bmRlZmluZWQiLHRoaXMpO3Q9dFtpXX1pZih2b2lkIDAhPT1hKXtpZih2b2lkIDA9PT10W2FdKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIiAgdHJ5aW5nIHRvIGJpbmQgdG8gb2JqZWN0SW5kZXggb2Ygb2JqZWN0TmFtZSwgYnV0IGlzIHVuZGVmaW5lZDoiLHRoaXMsdCk7dD10W2FdfX1pZih2b2lkIDA9PT0oYT10W25dKSljb25zb2xlLmVycm9yKCIgIHRyeWluZyB0byB1cGRhdGUgcHJvcGVydHkgZm9yIHRyYWNrOiAiK2Uubm9kZU5hbWUrIi4iK24rIiBidXQgaXQgd2Fzbid0IGZvdW5kLiIsdCk7ZWxzZXtpZihlPXRoaXMuVmVyc2lvbmluZy5Ob25lLHZvaWQgMCE9PXQubmVlZHNVcGRhdGU/KGU9dGhpcy5WZXJzaW9uaW5nLk5lZWRzVXBkYXRlLHRoaXMudGFyZ2V0T2JqZWN0PXQpOnZvaWQgMCE9PXQubWF0cml4V29ybGROZWVkc1VwZGF0ZSYmKGU9dGhpcy5WZXJzaW9uaW5nLk1hdHJpeFdvcmxkTmVlZHNVcGRhdGUsdGhpcy50YXJnZXRPYmplY3Q9dCksaT10aGlzLkJpbmRpbmdUeXBlLkRpcmVjdCx2b2lkIDAhPT1yKXtpZigibW9ycGhUYXJnZXRJbmZsdWVuY2VzIj09PW4pe2lmKCF0Lmdlb21ldHJ5KXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIiAgY2FuIG5vdCBiaW5kIHRvIG1vcnBoVGFyZ2V0SW5mbHVlbmNlcyBiZWNhc3VzZSBub2RlIGRvZXMgbm90IGhhdmUgYSBnZW9tZXRyeSIsdGhpcyk7aWYoIXQuZ2VvbWV0cnkubW9ycGhUYXJnZXRzKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIiAgY2FuIG5vdCBiaW5kIHRvIG1vcnBoVGFyZ2V0SW5mbHVlbmNlcyBiZWNhc3VzZSBub2RlIGRvZXMgbm90IGhhdmUgYSBnZW9tZXRyeS5tb3JwaFRhcmdldHMiLHRoaXMpO2ZvcihpPTA7aTx0aGlzLm5vZGUuZ2VvbWV0cnkubW9ycGhUYXJnZXRzLmxlbmd0aDtpKyspaWYodC5nZW9tZXRyeS5tb3JwaFRhcmdldHNbaV0ubmFtZT09PXIpe3I9aTticmVha319aT10aGlzLkJpbmRpbmdUeXBlLkFycmF5RWxlbWVudCx0aGlzLnJlc29sdmVkUHJvcGVydHk9YSx0aGlzLnByb3BlcnR5SW5kZXg9cn1lbHNlIHZvaWQgMCE9PWEuZnJvbUFycmF5JiZ2b2lkIDAhPT1hLnRvQXJyYXk/KGk9dGhpcy5CaW5kaW5nVHlwZS5IYXNGcm9tVG9BcnJheSx0aGlzLnJlc29sdmVkUHJvcGVydHk9YSk6dm9pZCAwIT09YS5sZW5ndGg/KGk9dGhpcy5CaW5kaW5nVHlwZS5FbnRpcmVBcnJheSx0aGlzLnJlc29sdmVkUHJvcGVydHk9YSk6dGhpcy5wcm9wZXJ0eU5hbWU9bjt0aGlzLmdldFZhbHVlPXRoaXMuR2V0dGVyQnlCaW5kaW5nVHlwZVtpXSx0aGlzLnNldFZhbHVlPXRoaXMuU2V0dGVyQnlCaW5kaW5nVHlwZUFuZFZlcnNpb25pbmdbaV1bZV19fWVsc2UgY29uc29sZS5lcnJvcigiICB0cnlpbmcgdG8gdXBkYXRlIG5vZGUgZm9yIHRyYWNrOiAiK3RoaXMucGF0aCsiIGJ1dCBpdCB3YXNuJ3QgZm91bmQuIil9LHVuYmluZDpmdW5jdGlvbigpe3RoaXMubm9kZT1udWxsLHRoaXMuZ2V0VmFsdWU9dGhpcy5fZ2V0VmFsdWVfdW5ib3VuZCx0aGlzLnNldFZhbHVlPXRoaXMuX3NldFZhbHVlX3VuYm91bmR9fSxPYmplY3QuYXNzaWduKHVuLnByb3RvdHlwZSx7X2dldFZhbHVlX3VuYXZhaWxhYmxlOmZ1bmN0aW9uKCl7fSxfc2V0VmFsdWVfdW5hdmFpbGFibGU6ZnVuY3Rpb24oKXt9LF9nZXRWYWx1ZV91bmJvdW5kOnVuLnByb3RvdHlwZS5nZXRWYWx1ZSxfc2V0VmFsdWVfdW5ib3VuZDp1bi5wcm90b3R5cGUuc2V0VmFsdWUsQmluZGluZ1R5cGU6e0RpcmVjdDowLEVudGlyZUFycmF5OjEsQXJyYXlFbGVtZW50OjIsSGFzRnJvbVRvQXJyYXk6M30sVmVyc2lvbmluZzp7Tm9uZTowLE5lZWRzVXBkYXRlOjEsTWF0cml4V29ybGROZWVkc1VwZGF0ZToyfSxHZXR0ZXJCeUJpbmRpbmdUeXBlOltmdW5jdGlvbih0LGUpe3RbZV09dGhpcy5ub2RlW3RoaXMucHJvcGVydHlOYW1lXX0sZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9dGhpcy5yZXNvbHZlZFByb3BlcnR5LG49MCxyPWkubGVuZ3RoO24hPT1yOysrbil0W2UrK109aVtuXX0sZnVuY3Rpb24odCxlKXt0W2VdPXRoaXMucmVzb2x2ZWRQcm9wZXJ0eVt0aGlzLnByb3BlcnR5SW5kZXhdfSxmdW5jdGlvbih0LGUpe3RoaXMucmVzb2x2ZWRQcm9wZXJ0eS50b0FycmF5KHQsZSl9XSxTZXR0ZXJCeUJpbmRpbmdUeXBlQW5kVmVyc2lvbmluZzpbW2Z1bmN0aW9uKHQsZSl7dGhpcy5ub2RlW3RoaXMucHJvcGVydHlOYW1lXT10W2VdfSxmdW5jdGlvbih0LGUpe3RoaXMubm9kZVt0aGlzLnByb3BlcnR5TmFtZV09dFtlXSx0aGlzLnRhcmdldE9iamVjdC5uZWVkc1VwZGF0ZT0hMH0sZnVuY3Rpb24odCxlKXt0aGlzLm5vZGVbdGhpcy5wcm9wZXJ0eU5hbWVdPXRbZV0sdGhpcy50YXJnZXRPYmplY3QubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMH1dLFtmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLnJlc29sdmVkUHJvcGVydHksbj0wLHI9aS5sZW5ndGg7biE9PXI7KytuKWlbbl09dFtlKytdfSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLnJlc29sdmVkUHJvcGVydHksbj0wLHI9aS5sZW5ndGg7biE9PXI7KytuKWlbbl09dFtlKytdO3RoaXMudGFyZ2V0T2JqZWN0Lm5lZWRzVXBkYXRlPSEwfSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLnJlc29sdmVkUHJvcGVydHksbj0wLHI9aS5sZW5ndGg7biE9PXI7KytuKWlbbl09dFtlKytdO3RoaXMudGFyZ2V0T2JqZWN0Lm1hdHJpeFdvcmxkTmVlZHNVcGRhdGU9ITB9XSxbZnVuY3Rpb24odCxlKXt0aGlzLnJlc29sdmVkUHJvcGVydHlbdGhpcy5wcm9wZXJ0eUluZGV4XT10W2VdfSxmdW5jdGlvbih0LGUpe3RoaXMucmVzb2x2ZWRQcm9wZXJ0eVt0aGlzLnByb3BlcnR5SW5kZXhdPXRbZV0sdGhpcy50YXJnZXRPYmplY3QubmVlZHNVcGRhdGU9ITB9LGZ1bmN0aW9uKHQsZSl7dGhpcy5yZXNvbHZlZFByb3BlcnR5W3RoaXMucHJvcGVydHlJbmRleF09dFtlXSx0aGlzLnRhcmdldE9iamVjdC5tYXRyaXhXb3JsZE5lZWRzVXBkYXRlPSEwfV0sW2Z1bmN0aW9uKHQsZSl7dGhpcy5yZXNvbHZlZFByb3BlcnR5LmZyb21BcnJheSh0LGUpfSxmdW5jdGlvbih0LGUpe3RoaXMucmVzb2x2ZWRQcm9wZXJ0eS5mcm9tQXJyYXkodCxlKSx0aGlzLnRhcmdldE9iamVjdC5uZWVkc1VwZGF0ZT0hMH0sZnVuY3Rpb24odCxlKXt0aGlzLnJlc29sdmVkUHJvcGVydHkuZnJvbUFycmF5KHQsZSksdGhpcy50YXJnZXRPYmplY3QubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMH1dXX0pLCh1bi5Db21wb3NpdGU9ZnVuY3Rpb24odCxlLGkpe2k9aXx8dW4ucGFyc2VUcmFja05hbWUoZSksdGhpcy5fdGFyZ2V0R3JvdXA9dCx0aGlzLl9iaW5kaW5ncz10LnN1YnNjcmliZV8oZSxpKX0pLnByb3RvdHlwZT17Y29uc3RydWN0b3I6dW4uQ29tcG9zaXRlLGdldFZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy5iaW5kKCk7dmFyIGk9dGhpcy5fYmluZGluZ3NbdGhpcy5fdGFyZ2V0R3JvdXAubkNhY2hlZE9iamVjdHNfXTt2b2lkIDAhPT1pJiZpLmdldFZhbHVlKHQsZSl9LHNldFZhbHVlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXRoaXMuX2JpbmRpbmdzLG49dGhpcy5fdGFyZ2V0R3JvdXAubkNhY2hlZE9iamVjdHNfLHI9aS5sZW5ndGg7biE9PXI7KytuKWlbbl0uc2V0VmFsdWUodCxlKX0sYmluZDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9iaW5kaW5ncyxlPXRoaXMuX3RhcmdldEdyb3VwLm5DYWNoZWRPYmplY3RzXyxpPXQubGVuZ3RoO2UhPT1pOysrZSl0W2VdLmJpbmQoKX0sdW5iaW5kOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2JpbmRpbmdzLGU9dGhpcy5fdGFyZ2V0R3JvdXAubkNhY2hlZE9iamVjdHNfLGk9dC5sZW5ndGg7ZSE9PWk7KytlKXRbZV0udW5iaW5kKCl9fSx1bi5jcmVhdGU9ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0JiZ0LmlzQW5pbWF0aW9uT2JqZWN0R3JvdXA/bmV3IHVuLkNvbXBvc2l0ZSh0LGUsaSk6bmV3IHVuKHQsZSxpKX0sdW4ucGFyc2VUcmFja05hbWU9ZnVuY3Rpb24odCl7dmFyIGU9L14oKD86W1x3LV0rW1wvOl0pKikoW1x3LV0rKT8oPzpcLihbXHctXSspKD86XFsoLispXF0pPyk/XC4oW1x3LV0rKSg/OlxbKC4rKVxdKT8kLy5leGVjKHQpO2lmKCFlKXRocm93IEVycm9yKCJjYW5ub3QgcGFyc2UgdHJhY2tOYW1lIGF0IGFsbDogIit0KTtpZihudWxsPT09KGU9e25vZGVOYW1lOmVbMl0sb2JqZWN0TmFtZTplWzNdLG9iamVjdEluZGV4OmVbNF0scHJvcGVydHlOYW1lOmVbNV0scHJvcGVydHlJbmRleDplWzZdfSkucHJvcGVydHlOYW1lfHwwPT09ZS5wcm9wZXJ0eU5hbWUubGVuZ3RoKXRocm93IEVycm9yKCJjYW4gbm90IHBhcnNlIHByb3BlcnR5TmFtZSBmcm9tIHRyYWNrTmFtZTogIit0KTtyZXR1cm4gZX0sdW4uZmluZE5vZGU9ZnVuY3Rpb24odCxuKXtpZighbnx8IiI9PT1ufHwicm9vdCI9PT1ufHwiLiI9PT1ufHwtMT09PW58fG49PT10Lm5hbWV8fG49PT10LnV1aWQpcmV0dXJuIHQ7aWYodC5za2VsZXRvbil7dmFyIGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0LmJvbmVzLmxlbmd0aDtlKyspe3ZhciBpPXQuYm9uZXNbZV07aWYoaS5uYW1lPT09bilyZXR1cm4gaX1yZXR1cm4gbnVsbH0odC5za2VsZXRvbik7aWYoZSlyZXR1cm4gZX1pZih0LmNoaWxkcmVuKXt2YXIgcj1mdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKyl7dmFyIGk9dFtlXTtpZihpLm5hbWU9PT1ufHxpLnV1aWQ9PT1ufHwoaT1yKGkuY2hpbGRyZW4pKSlyZXR1cm4gaX1yZXR1cm4gbnVsbH07aWYoZT1yKHQuY2hpbGRyZW4pKXJldHVybiBlfXJldHVybiBudWxsfSxkbi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmRuLGlzQW5pbWF0aW9uT2JqZWN0R3JvdXA6ITAsYWRkOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9vYmplY3RzLGk9ZS5sZW5ndGgsbj10aGlzLm5DYWNoZWRPYmplY3RzXyxyPXRoaXMuX2luZGljZXNCeVVVSUQsYT10aGlzLl9wYXRocyxvPXRoaXMuX3BhcnNlZFBhdGhzLHM9dGhpcy5fYmluZGluZ3MsYz1zLmxlbmd0aCxoPTAsbD1hcmd1bWVudHMubGVuZ3RoO2ghPT1sOysraCl7dmFyIHU9YXJndW1lbnRzW2hdLGQ9cltwPXUudXVpZF07aWYodm9pZCAwPT09ZCl7ZD1pKysscltwXT1kLGUucHVzaCh1KTtmb3IodmFyIHA9MCxmPWM7cCE9PWY7KytwKXNbcF0ucHVzaChuZXcgdW4odSxhW3BdLG9bcF0pKX1lbHNlIGlmKGQ8bil7dmFyIG09LS1uO2ZvcihlW3JbKGY9ZVttXSkudXVpZF09ZF09ZixlW3JbcF09bV09dSxwPTAsZj1jO3AhPT1mOysrcCl7dmFyIGc9c1twXSx2PWdbZF07Z1tkXT1nW21dLHZvaWQgMD09PXYmJih2PW5ldyB1bih1LGFbcF0sb1twXSkpLGdbbV09dn19ZWxzZSB2b2lkIDAhPT1lW2RdJiZjb25zb2xlLmVycm9yKCJEaWZmZXJlbnQgb2JqZWN0cyB3aXRoIHRoZSBzYW1lIFVVSUQgZGV0ZWN0ZWQuIENsZWFuIHRoZSBjYWNoZXMgb3IgcmVjcmVhdGUgeW91ciBpbmZyYXN0cnVjdHVyZSB3aGVuIHJlbG9hZGluZyBzY2VuZXMuLi4iKX10aGlzLm5DYWNoZWRPYmplY3RzXz1ufSxyZW1vdmU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX29iamVjdHMsaT10aGlzLm5DYWNoZWRPYmplY3RzXyxuPXRoaXMuX2luZGljZXNCeVVVSUQscj10aGlzLl9iaW5kaW5ncyxhPXIubGVuZ3RoLG89MCxzPWFyZ3VtZW50cy5sZW5ndGg7byE9PXM7KytvKXt2YXIgYz1hcmd1bWVudHNbb10saD1jLnV1aWQsbD1uW2hdO2lmKHZvaWQgMCE9PWwmJmk8PWwpe3ZhciB1PWkrKztmb3IoZVtuWyhkPWVbdV0pLnV1aWRdPWxdPWQsZVtuW2hdPXVdPWMsYz0wLGg9YTtjIT09aDsrK2Mpe3ZhciBkLHA9KGQ9cltjXSlbbF07ZFtsXT1kW3VdLGRbdV09cH19fXRoaXMubkNhY2hlZE9iamVjdHNfPWl9LHVuY2FjaGU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX29iamVjdHMsaT1lLmxlbmd0aCxuPXRoaXMubkNhY2hlZE9iamVjdHNfLHI9dGhpcy5faW5kaWNlc0J5VVVJRCxhPXRoaXMuX2JpbmRpbmdzLG89YS5sZW5ndGgscz0wLGM9YXJndW1lbnRzLmxlbmd0aDtzIT09YzsrK3Mpe3ZhciBoPXJbbD1hcmd1bWVudHNbc10udXVpZF07aWYodm9pZCAwIT09aClpZihkZWxldGUgcltsXSxoPG4pe3ZhciBsLHU9ZVtsPS0tbl0sZD0tLWkscD1lW2RdO2ZvcihlW3JbdS51dWlkXT1oXT11LGVbcltwLnV1aWRdPWxdPXAsZS5wb3AoKSx1PTAscD1vO3UhPT1wOysrdSl7dmFyIGY9YVt1XSxtPWZbZF07ZltoXT1mW2xdLGZbbF09bSxmLnBvcCgpfX1lbHNlIGZvcihlW3JbKHA9ZVtkPS0taV0pLnV1aWRdPWhdPXAsZS5wb3AoKSx1PTAscD1vO3UhPT1wOysrdSkoZj1hW3VdKVtoXT1mW2RdLGYucG9wKCl9dGhpcy5uQ2FjaGVkT2JqZWN0c189bn0sc3Vic2NyaWJlXzpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2JpbmRpbmdzSW5kaWNlc0J5UGF0aCxuPWlbdF0scj10aGlzLl9iaW5kaW5ncztpZih2b2lkIDAhPT1uKXJldHVybiByW25dO3ZhciBhPXRoaXMuX3BhdGhzLG89dGhpcy5fcGFyc2VkUGF0aHMscz10aGlzLl9vYmplY3RzLGM9dGhpcy5uQ2FjaGVkT2JqZWN0c18saD1BcnJheShzLmxlbmd0aCk7bj1yLmxlbmd0aDtmb3IoaVt0XT1uLGEucHVzaCh0KSxvLnB1c2goZSksci5wdXNoKGgpLGk9YyxuPXMubGVuZ3RoO2khPT1uOysraSloW2ldPW5ldyB1bihzW2ldLHQsZSk7cmV0dXJuIGh9LHVuc3Vic2NyaWJlXzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9iaW5kaW5nc0luZGljZXNCeVBhdGgsaT1lW3RdO2lmKHZvaWQgMCE9PWkpe3ZhciBuPXRoaXMuX3BhdGhzLHI9dGhpcy5fcGFyc2VkUGF0aHMsYT10aGlzLl9iaW5kaW5ncyxvPWEubGVuZ3RoLTEscz1hW29dO2FbZVt0W29dXT1pXT1zLGEucG9wKCkscltpXT1yW29dLHIucG9wKCksbltpXT1uW29dLG4ucG9wKCl9fX0scG4ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpwbixwbGF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21peGVyLl9hY3RpdmF0ZUFjdGlvbih0aGlzKSx0aGlzfSxzdG9wOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21peGVyLl9kZWFjdGl2YXRlQWN0aW9uKHRoaXMpLHRoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXVzZWQ9ITEsdGhpcy5lbmFibGVkPSEwLHRoaXMudGltZT0wLHRoaXMuX2xvb3BDb3VudD0tMSx0aGlzLl9zdGFydFRpbWU9bnVsbCx0aGlzLnN0b3BGYWRpbmcoKS5zdG9wV2FycGluZygpfSxpc1J1bm5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmFibGVkJiYhdGhpcy5wYXVzZWQmJjAhPT10aGlzLnRpbWVTY2FsZSYmbnVsbD09PXRoaXMuX3N0YXJ0VGltZSYmdGhpcy5fbWl4ZXIuX2lzQWN0aXZlQWN0aW9uKHRoaXMpfSxpc1NjaGVkdWxlZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9taXhlci5faXNBY3RpdmVBY3Rpb24odGhpcyl9LHN0YXJ0QXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3N0YXJ0VGltZT10LHRoaXN9LHNldExvb3A6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5sb29wPXQsdGhpcy5yZXBldGl0aW9ucz1lLHRoaXN9LHNldEVmZmVjdGl2ZVdlaWdodDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy53ZWlnaHQ9dCx0aGlzLl9lZmZlY3RpdmVXZWlnaHQ9dGhpcy5lbmFibGVkP3Q6MCx0aGlzLnN0b3BGYWRpbmcoKX0sZ2V0RWZmZWN0aXZlV2VpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VmZmVjdGl2ZVdlaWdodH0sZmFkZUluOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9zY2hlZHVsZUZhZGluZyh0LDAsMSl9LGZhZGVPdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3NjaGVkdWxlRmFkaW5nKHQsMSwwKX0sY3Jvc3NGYWRlRnJvbTpmdW5jdGlvbih0LGUsaSl7aWYodC5mYWRlT3V0KGUpLHRoaXMuZmFkZUluKGUpLGkpe2k9dGhpcy5fY2xpcC5kdXJhdGlvbjt2YXIgbj10Ll9jbGlwLmR1cmF0aW9uLHI9aS9uO3Qud2FycCgxLG4vaSxlKSx0aGlzLndhcnAociwxLGUpfXJldHVybiB0aGlzfSxjcm9zc0ZhZGVUbzpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHQuY3Jvc3NGYWRlRnJvbSh0aGlzLGUsaSl9LHN0b3BGYWRpbmc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl93ZWlnaHRJbnRlcnBvbGFudDtyZXR1cm4gbnVsbCE9PXQmJih0aGlzLl93ZWlnaHRJbnRlcnBvbGFudD1udWxsLHRoaXMuX21peGVyLl90YWtlQmFja0NvbnRyb2xJbnRlcnBvbGFudCh0KSksdGhpc30sc2V0RWZmZWN0aXZlVGltZVNjYWxlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRpbWVTY2FsZT10LHRoaXMuX2VmZmVjdGl2ZVRpbWVTY2FsZT10aGlzLnBhdXNlZD8wOnQsdGhpcy5zdG9wV2FycGluZygpfSxnZXRFZmZlY3RpdmVUaW1lU2NhbGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZWZmZWN0aXZlVGltZVNjYWxlfSxzZXREdXJhdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aW1lU2NhbGU9dGhpcy5fY2xpcC5kdXJhdGlvbi90LHRoaXMuc3RvcFdhcnBpbmcoKX0sc3luY1dpdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGltZT10LnRpbWUsdGhpcy50aW1lU2NhbGU9dC50aW1lU2NhbGUsdGhpcy5zdG9wV2FycGluZygpfSxoYWx0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndhcnAodGhpcy5fZWZmZWN0aXZlVGltZVNjYWxlLDAsdCl9LHdhcnA6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX21peGVyLHI9bi50aW1lLGE9dGhpcy5fdGltZVNjYWxlSW50ZXJwb2xhbnQsbz10aGlzLnRpbWVTY2FsZTtyZXR1cm4gbnVsbD09PWEmJih0aGlzLl90aW1lU2NhbGVJbnRlcnBvbGFudD1hPW4uX2xlbmRDb250cm9sSW50ZXJwb2xhbnQoKSksbj1hLnBhcmFtZXRlclBvc2l0aW9ucyxhPWEuc2FtcGxlVmFsdWVzLG5bMF09cixuWzFdPXIraSxhWzBdPXQvbyxhWzFdPWUvbyx0aGlzfSxzdG9wV2FycGluZzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3RpbWVTY2FsZUludGVycG9sYW50O3JldHVybiBudWxsIT09dCYmKHRoaXMuX3RpbWVTY2FsZUludGVycG9sYW50PW51bGwsdGhpcy5fbWl4ZXIuX3Rha2VCYWNrQ29udHJvbEludGVycG9sYW50KHQpKSx0aGlzfSxnZXRNaXhlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9taXhlcn0sZ2V0Q2xpcDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jbGlwfSxnZXRSb290OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvY2FsUm9vdHx8dGhpcy5fbWl4ZXIuX3Jvb3R9LF91cGRhdGU6ZnVuY3Rpb24odCxlLGksbil7aWYobnVsbCE9PShyPXRoaXMuX3N0YXJ0VGltZSkpe2lmKChlPSh0LXIpKmkpPDB8fDA9PT1pKXJldHVybjt0aGlzLl9zdGFydFRpbWU9bnVsbCxlKj1pfWlmKGUqPXRoaXMuX3VwZGF0ZVRpbWVTY2FsZSh0KSxpPXRoaXMuX3VwZGF0ZVRpbWUoZSksMDwodD10aGlzLl91cGRhdGVXZWlnaHQodCkpKXtlPXRoaXMuX2ludGVycG9sYW50cztmb3IodmFyIHI9dGhpcy5fcHJvcGVydHlCaW5kaW5ncyxhPTAsbz1lLmxlbmd0aDthIT09bzsrK2EpZVthXS5ldmFsdWF0ZShpKSxyW2FdLmFjY3VtdWxhdGUobix0KX19LF91cGRhdGVXZWlnaHQ6ZnVuY3Rpb24odCl7dmFyIGU9MDtpZih0aGlzLmVuYWJsZWQpe2U9dGhpcy53ZWlnaHQ7dmFyIGk9dGhpcy5fd2VpZ2h0SW50ZXJwb2xhbnQ7aWYobnVsbCE9PWkpe3ZhciBuPWkuZXZhbHVhdGUodClbMF07ZT1lKm47dD5pLnBhcmFtZXRlclBvc2l0aW9uc1sxXSYmKHRoaXMuc3RvcEZhZGluZygpLDA9PT1uJiYodGhpcy5lbmFibGVkPSExKSl9fXJldHVybiB0aGlzLl9lZmZlY3RpdmVXZWlnaHQ9ZX0sX3VwZGF0ZVRpbWVTY2FsZTpmdW5jdGlvbih0KXt2YXIgZT0wO2lmKCF0aGlzLnBhdXNlZCl7ZT10aGlzLnRpbWVTY2FsZTt2YXIgaT10aGlzLl90aW1lU2NhbGVJbnRlcnBvbGFudDtpZihudWxsIT09aSl7ZT1lKmkuZXZhbHVhdGUodClbMF07dD5pLnBhcmFtZXRlclBvc2l0aW9uc1sxXSYmKHRoaXMuc3RvcFdhcnBpbmcoKSwwPT09ZT90aGlzLnBhdXNlZD0hMDp0aGlzLnRpbWVTY2FsZT1lKX19cmV0dXJuIHRoaXMuX2VmZmVjdGl2ZVRpbWVTY2FsZT1lfSxfdXBkYXRlVGltZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnRpbWUrdDtpZigwPT09dClyZXR1cm4gZTt2YXIgaT10aGlzLl9jbGlwLmR1cmF0aW9uLG49dGhpcy5sb29wLHI9dGhpcy5fbG9vcENvdW50O2lmKDIyMDA9PT1uKXQ6e2lmKC0xPT09ciYmKHRoaXMuX2xvb3BDb3VudD0wLHRoaXMuX3NldEVuZGluZ3MoITAsITAsITEpKSxpPD1lKWU9aTtlbHNle2lmKCEoZTwwKSlicmVhayB0O2U9MH10aGlzLmNsYW1wV2hlbkZpbmlzaGVkP3RoaXMucGF1c2VkPSEwOnRoaXMuZW5hYmxlZD0hMSx0aGlzLl9taXhlci5kaXNwYXRjaEV2ZW50KHt0eXBlOiJmaW5pc2hlZCIsYWN0aW9uOnRoaXMsZGlyZWN0aW9uOnQ8MD8tMToxfSl9ZWxzZXtpZihuPTIyMDI9PT1uLC0xPT09ciYmKDA8PXQ/KHI9MCx0aGlzLl9zZXRFbmRpbmdzKCEwLDA9PT10aGlzLnJlcGV0aXRpb25zLG4pKTp0aGlzLl9zZXRFbmRpbmdzKDA9PT10aGlzLnJlcGV0aXRpb25zLCEwLG4pKSxpPD1lfHxlPDApe3ZhciBhPU1hdGguZmxvb3IoZS9pKSxvPShlPWUtaSphLHI9citNYXRoLmFicyhhKSx0aGlzLnJlcGV0aXRpb25zLXIpO288MD8odGhpcy5jbGFtcFdoZW5GaW5pc2hlZD90aGlzLnBhdXNlZD0hMDp0aGlzLmVuYWJsZWQ9ITEsZT0wPHQ/aTowLHRoaXMuX21peGVyLmRpc3BhdGNoRXZlbnQoe3R5cGU6ImZpbmlzaGVkIixhY3Rpb246dGhpcyxkaXJlY3Rpb246MDx0PzE6LTF9KSk6KDA9PW8/KHQ9dDwwLHRoaXMuX3NldEVuZGluZ3ModCwhdCxuKSk6dGhpcy5fc2V0RW5kaW5ncyghMSwhMSxuKSx0aGlzLl9sb29wQ291bnQ9cix0aGlzLl9taXhlci5kaXNwYXRjaEV2ZW50KHt0eXBlOiJsb29wIixhY3Rpb246dGhpcyxsb29wRGVsdGE6YX0pKX1pZihuJiYxPT0oMSZyKSlyZXR1cm4gaS0odGhpcy50aW1lPWUpfXJldHVybiB0aGlzLnRpbWU9ZX0sX3NldEVuZGluZ3M6ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX2ludGVycG9sYW50U2V0dGluZ3M7aT8obi5lbmRpbmdTdGFydD0yNDAxLG4uZW5kaW5nRW5kPTI0MDEpOihuLmVuZGluZ1N0YXJ0PXQ/dGhpcy56ZXJvU2xvcGVBdFN0YXJ0PzI0MDE6MjQwMDoyNDAyLG4uZW5kaW5nRW5kPWU/dGhpcy56ZXJvU2xvcGVBdEVuZD8yNDAxOjI0MDA6MjQwMil9LF9zY2hlZHVsZUZhZGluZzpmdW5jdGlvbih0LGUsaSl7dmFyIG49dGhpcy5fbWl4ZXIscj1uLnRpbWUsYT10aGlzLl93ZWlnaHRJbnRlcnBvbGFudDtyZXR1cm4gbnVsbD09PWEmJih0aGlzLl93ZWlnaHRJbnRlcnBvbGFudD1hPW4uX2xlbmRDb250cm9sSW50ZXJwb2xhbnQoKSksbj1hLnBhcmFtZXRlclBvc2l0aW9ucyxhPWEuc2FtcGxlVmFsdWVzLG5bMF09cixhWzBdPWUsblsxXT1yK3QsYVsxXT1pLHRoaXN9fSxPYmplY3QuYXNzaWduKGZuLnByb3RvdHlwZSxlLnByb3RvdHlwZSx7Y2xpcEFjdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBpPShyPWV8fHRoaXMuX3Jvb3QpLnV1aWQsbj0ic3RyaW5nIj09dHlwZW9mIHQ/RmkuZmluZEJ5TmFtZShyLHQpOnQscj1udWxsIT09bj9uLnV1aWQ6dCxhPXRoaXMuX2FjdGlvbnNCeUNsaXBbcl0sbz1udWxsO2lmKHZvaWQgMCE9PWEpe2lmKHZvaWQgMCE9PShvPWEuYWN0aW9uQnlSb290W2ldKSlyZXR1cm4gbztvPWEua25vd25BY3Rpb25zWzBdLG51bGw9PT1uJiYobj1vLl9jbGlwKX1yZXR1cm4gbnVsbD09PW4/bnVsbDoobj1uZXcgcG4odGhpcyxuLGUpLHRoaXMuX2JpbmRBY3Rpb24obixvKSx0aGlzLl9hZGRJbmFjdGl2ZUFjdGlvbihuLHIsaSksbil9LGV4aXN0aW5nQWN0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIGk9KG49ZXx8dGhpcy5fcm9vdCkudXVpZCxuPSJzdHJpbmciPT10eXBlb2YgdD9GaS5maW5kQnlOYW1lKG4sdCk6dDtyZXR1cm4gdm9pZCAwIT09KG49dGhpcy5fYWN0aW9uc0J5Q2xpcFtuP24udXVpZDp0XSkmJm4uYWN0aW9uQnlSb290W2ldfHxudWxsfSxzdG9wQWxsQWN0aW9uOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2FjdGlvbnMsZT10aGlzLl9uQWN0aXZlQWN0aW9ucyxpPXRoaXMuX2JpbmRpbmdzLG49dGhpcy5fbkFjdGl2ZUJpbmRpbmdzLHI9dGhpcy5fbkFjdGl2ZUJpbmRpbmdzPXRoaXMuX25BY3RpdmVBY3Rpb25zPTA7ciE9PWU7KytyKXRbcl0ucmVzZXQoKTtmb3Iocj0wO3IhPT1uOysrcilpW3JdLnVzZUNvdW50PTA7cmV0dXJuIHRoaXN9LHVwZGF0ZTpmdW5jdGlvbih0KXt0Kj10aGlzLnRpbWVTY2FsZTtmb3IodmFyIGU9dGhpcy5fYWN0aW9ucyxpPXRoaXMuX25BY3RpdmVBY3Rpb25zLG49dGhpcy50aW1lKz10LHI9TWF0aC5zaWduKHQpLGE9dGhpcy5fYWNjdUluZGV4Xj0xLG89MDtvIT09aTsrK28pe3ZhciBzPWVbb107cy5lbmFibGVkJiZzLl91cGRhdGUobix0LHIsYSl9Zm9yKHQ9dGhpcy5fYmluZGluZ3MsZT10aGlzLl9uQWN0aXZlQmluZGluZ3Msbz0wO28hPT1lOysrbyl0W29dLmFwcGx5KGEpO3JldHVybiB0aGlzfSxnZXRSb290OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Jvb3R9LHVuY2FjaGVDbGlwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2FjdGlvbnM7dD10LnV1aWQ7dmFyIGk9dGhpcy5fYWN0aW9uc0J5Q2xpcDtpZih2b2lkIDAhPT0obj1pW3RdKSl7Zm9yKHZhciBuLHI9MCxhPShuPW4ua25vd25BY3Rpb25zKS5sZW5ndGg7ciE9PWE7KytyKXt2YXIgbz1uW3JdO3RoaXMuX2RlYWN0aXZhdGVBY3Rpb24obyk7dmFyIHM9by5fY2FjaGVJbmRleCxjPWVbZS5sZW5ndGgtMV07by5fY2FjaGVJbmRleD1udWxsLG8uX2J5Q2xpcENhY2hlSW5kZXg9bnVsbCxlW2MuX2NhY2hlSW5kZXg9c109YyxlLnBvcCgpLHRoaXMuX3JlbW92ZUluYWN0aXZlQmluZGluZ3NGb3JBY3Rpb24obyl9ZGVsZXRlIGlbdF19fSx1bmNhY2hlUm9vdDpmdW5jdGlvbih0KXt0PXQudXVpZDt2YXIgZSxpPXRoaXMuX2FjdGlvbnNCeUNsaXA7Zm9yKGUgaW4gaSl7dmFyIG49aVtlXS5hY3Rpb25CeVJvb3RbdF07dm9pZCAwIT09biYmKHRoaXMuX2RlYWN0aXZhdGVBY3Rpb24obiksdGhpcy5fcmVtb3ZlSW5hY3RpdmVBY3Rpb24obikpfWlmKHZvaWQgMCE9PShlPXRoaXMuX2JpbmRpbmdzQnlSb290QW5kTmFtZVt0XSkpZm9yKHZhciByIGluIGUpKHQ9ZVtyXSkucmVzdG9yZU9yaWdpbmFsU3RhdGUoKSx0aGlzLl9yZW1vdmVJbmFjdGl2ZUJpbmRpbmcodCl9LHVuY2FjaGVBY3Rpb246ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmV4aXN0aW5nQWN0aW9uKHQsZSk7bnVsbCE9PWkmJih0aGlzLl9kZWFjdGl2YXRlQWN0aW9uKGkpLHRoaXMuX3JlbW92ZUluYWN0aXZlQWN0aW9uKGkpKX19KSxPYmplY3QuYXNzaWduKGZuLnByb3RvdHlwZSx7X2JpbmRBY3Rpb246ZnVuY3Rpb24odCxlKXt2YXIgaT10Ll9sb2NhbFJvb3R8fHRoaXMuX3Jvb3Qsbj10Ll9jbGlwLnRyYWNrcyxyPW4ubGVuZ3RoLGE9dC5fcHJvcGVydHlCaW5kaW5ncyxvPXQuX2ludGVycG9sYW50cyxzPWkudXVpZCxjPXRoaXMuX2JpbmRpbmdzQnlSb290QW5kTmFtZSxoPWNbc107Zm9yKHZvaWQgMD09PWgmJihoPXt9LGNbc109aCksYz0wO2MhPT1yOysrYyl7dmFyIGw9bltjXSx1PWwubmFtZSxkPWhbdV07aWYodm9pZCAwPT09ZCl7aWYodm9pZCAwIT09KGQ9YVtjXSkpe251bGw9PT1kLl9jYWNoZUluZGV4JiYoKytkLnJlZmVyZW5jZUNvdW50LHRoaXMuX2FkZEluYWN0aXZlQmluZGluZyhkLHMsdSkpO2NvbnRpbnVlfSsrKGQ9bmV3IGxuKHVuLmNyZWF0ZShpLHUsZSYmZS5fcHJvcGVydHlCaW5kaW5nc1tjXS5iaW5kaW5nLnBhcnNlZFBhdGgpLGwuVmFsdWVUeXBlTmFtZSxsLmdldFZhbHVlU2l6ZSgpKSkucmVmZXJlbmNlQ291bnQsdGhpcy5fYWRkSW5hY3RpdmVCaW5kaW5nKGQscyx1KX1hW2NdPWQsb1tjXS5yZXN1bHRCdWZmZXI9ZC5idWZmZXJ9fSxfYWN0aXZhdGVBY3Rpb246ZnVuY3Rpb24odCl7aWYoIXRoaXMuX2lzQWN0aXZlQWN0aW9uKHQpKXtpZihudWxsPT09dC5fY2FjaGVJbmRleCl7dmFyIGU9KHQuX2xvY2FsUm9vdHx8dGhpcy5fcm9vdCkudXVpZCxpPXQuX2NsaXAudXVpZCxuPXRoaXMuX2FjdGlvbnNCeUNsaXBbaV07dGhpcy5fYmluZEFjdGlvbih0LG4mJm4ua25vd25BY3Rpb25zWzBdKSx0aGlzLl9hZGRJbmFjdGl2ZUFjdGlvbih0LGksZSl9Zm9yKGk9MCxuPShlPXQuX3Byb3BlcnR5QmluZGluZ3MpLmxlbmd0aDtpIT09bjsrK2kpe3ZhciByPWVbaV07MD09ci51c2VDb3VudCsrJiYodGhpcy5fbGVuZEJpbmRpbmcociksci5zYXZlT3JpZ2luYWxTdGF0ZSgpKX10aGlzLl9sZW5kQWN0aW9uKHQpfX0sX2RlYWN0aXZhdGVBY3Rpb246ZnVuY3Rpb24odCl7aWYodGhpcy5faXNBY3RpdmVBY3Rpb24odCkpe2Zvcih2YXIgZT10Ll9wcm9wZXJ0eUJpbmRpbmdzLGk9MCxuPWUubGVuZ3RoO2khPT1uOysraSl7dmFyIHI9ZVtpXTswPT0tLXIudXNlQ291bnQmJihyLnJlc3RvcmVPcmlnaW5hbFN0YXRlKCksdGhpcy5fdGFrZUJhY2tCaW5kaW5nKHIpKX10aGlzLl90YWtlQmFja0FjdGlvbih0KX19LF9pbml0TWVtb3J5TWFuYWdlcjpmdW5jdGlvbigpe3RoaXMuX2FjdGlvbnM9W10sdGhpcy5fbkFjdGl2ZUFjdGlvbnM9MCx0aGlzLl9hY3Rpb25zQnlDbGlwPXt9LHRoaXMuX2JpbmRpbmdzPVtdLHRoaXMuX25BY3RpdmVCaW5kaW5ncz0wLHRoaXMuX2JpbmRpbmdzQnlSb290QW5kTmFtZT17fSx0aGlzLl9jb250cm9sSW50ZXJwb2xhbnRzPVtdLHRoaXMuX25BY3RpdmVDb250cm9sSW50ZXJwb2xhbnRzPTA7dmFyIHQ9dGhpczt0aGlzLnN0YXRzPXthY3Rpb25zOntnZXQgdG90YWwoKXtyZXR1cm4gdC5fYWN0aW9ucy5sZW5ndGh9LGdldCBpblVzZSgpe3JldHVybiB0Ll9uQWN0aXZlQWN0aW9uc319LGJpbmRpbmdzOntnZXQgdG90YWwoKXtyZXR1cm4gdC5fYmluZGluZ3MubGVuZ3RofSxnZXQgaW5Vc2UoKXtyZXR1cm4gdC5fbkFjdGl2ZUJpbmRpbmdzfX0sY29udHJvbEludGVycG9sYW50czp7Z2V0IHRvdGFsKCl7cmV0dXJuIHQuX2NvbnRyb2xJbnRlcnBvbGFudHMubGVuZ3RofSxnZXQgaW5Vc2UoKXtyZXR1cm4gdC5fbkFjdGl2ZUNvbnRyb2xJbnRlcnBvbGFudHN9fX19LF9pc0FjdGl2ZUFjdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PSh0PXQuX2NhY2hlSW5kZXgpJiZ0PHRoaXMuX25BY3RpdmVBY3Rpb25zfSxfYWRkSW5hY3RpdmVBY3Rpb246ZnVuY3Rpb24odCxlLGkpe3ZhciBuPXRoaXMuX2FjdGlvbnMscj10aGlzLl9hY3Rpb25zQnlDbGlwLGE9cltlXTt2b2lkIDA9PT1hPyhhPXtrbm93bkFjdGlvbnM6W3RdLGFjdGlvbkJ5Um9vdDp7fX0sdC5fYnlDbGlwQ2FjaGVJbmRleD0wLHJbZV09YSk6KGU9YS5rbm93bkFjdGlvbnMsdC5fYnlDbGlwQ2FjaGVJbmRleD1lLmxlbmd0aCxlLnB1c2godCkpLHQuX2NhY2hlSW5kZXg9bi5sZW5ndGgsbi5wdXNoKHQpLGEuYWN0aW9uQnlSb290W2ldPXR9LF9yZW1vdmVJbmFjdGl2ZUFjdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9hY3Rpb25zLGk9ZVtlLmxlbmd0aC0xXSxuPXQuX2NhY2hlSW5kZXg7ZVtpLl9jYWNoZUluZGV4PW5dPWksZS5wb3AoKSx0Ll9jYWNoZUluZGV4PW51bGw7aT10Ll9jbGlwLnV1aWQ7dmFyIHI9KG49dGhpcy5fYWN0aW9uc0J5Q2xpcClbaV0sYT1yLmtub3duQWN0aW9ucyxvPWFbYS5sZW5ndGgtMV0scz10Ll9ieUNsaXBDYWNoZUluZGV4O2Fbby5fYnlDbGlwQ2FjaGVJbmRleD1zXT1vLGEucG9wKCksdC5fYnlDbGlwQ2FjaGVJbmRleD1udWxsLGRlbGV0ZSByLmFjdGlvbkJ5Um9vdFsoZS5fbG9jYWxSb290fHx0aGlzLl9yb290KS51dWlkXSwwPT09YS5sZW5ndGgmJmRlbGV0ZSBuW2ldLHRoaXMuX3JlbW92ZUluYWN0aXZlQmluZGluZ3NGb3JBY3Rpb24odCl9LF9yZW1vdmVJbmFjdGl2ZUJpbmRpbmdzRm9yQWN0aW9uOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLGk9KHQ9dC5fcHJvcGVydHlCaW5kaW5ncykubGVuZ3RoO2UhPT1pOysrZSl7dmFyIG49dFtlXTswPT0tLW4ucmVmZXJlbmNlQ291bnQmJnRoaXMuX3JlbW92ZUluYWN0aXZlQmluZGluZyhuKX19LF9sZW5kQWN0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2FjdGlvbnMsaT10Ll9jYWNoZUluZGV4LG49dGhpcy5fbkFjdGl2ZUFjdGlvbnMrKyxyPWVbbl07ZVt0Ll9jYWNoZUluZGV4PW5dPXQsZVtyLl9jYWNoZUluZGV4PWldPXJ9LF90YWtlQmFja0FjdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9hY3Rpb25zLGk9dC5fY2FjaGVJbmRleCxuPS0tdGhpcy5fbkFjdGl2ZUFjdGlvbnMscj1lW25dO2VbdC5fY2FjaGVJbmRleD1uXT10LGVbci5fY2FjaGVJbmRleD1pXT1yfSxfYWRkSW5hY3RpdmVCaW5kaW5nOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj10aGlzLl9iaW5kaW5nc0J5Um9vdEFuZE5hbWUscj1uW2VdLGE9dGhpcy5fYmluZGluZ3M7dm9pZCAwPT09ciYmKHI9e30sbltlXT1yKSwocltpXT10KS5fY2FjaGVJbmRleD1hLmxlbmd0aCxhLnB1c2godCl9LF9yZW1vdmVJbmFjdGl2ZUJpbmRpbmc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fYmluZGluZ3MsaT0obj10LmJpbmRpbmcpLnJvb3ROb2RlLnV1aWQsbj1uLnBhdGgscj10aGlzLl9iaW5kaW5nc0J5Um9vdEFuZE5hbWUsYT1yW2ldLG89ZVtlLmxlbmd0aC0xXTt0PXQuX2NhY2hlSW5kZXgsZVtvLl9jYWNoZUluZGV4PXRdPW8sZS5wb3AoKSxkZWxldGUgYVtuXTt0Ontmb3IodmFyIHMgaW4gYSlicmVhayB0O2RlbGV0ZSByW2ldfX0sX2xlbmRCaW5kaW5nOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2JpbmRpbmdzLGk9dC5fY2FjaGVJbmRleCxuPXRoaXMuX25BY3RpdmVCaW5kaW5ncysrLHI9ZVtuXTtlW3QuX2NhY2hlSW5kZXg9bl09dCxlW3IuX2NhY2hlSW5kZXg9aV09cn0sX3Rha2VCYWNrQmluZGluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9iaW5kaW5ncyxpPXQuX2NhY2hlSW5kZXgsbj0tLXRoaXMuX25BY3RpdmVCaW5kaW5ncyxyPWVbbl07ZVt0Ll9jYWNoZUluZGV4PW5dPXQsZVtyLl9jYWNoZUluZGV4PWldPXJ9LF9sZW5kQ29udHJvbEludGVycG9sYW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fY29udHJvbEludGVycG9sYW50cyxlPXRoaXMuX25BY3RpdmVDb250cm9sSW50ZXJwb2xhbnRzKyssaT10W2VdO3JldHVybiB2b2lkIDA9PT1pJiYodFsoaT1uZXcgU2kobmV3IEZsb2F0MzJBcnJheSgyKSxuZXcgRmxvYXQzMkFycmF5KDIpLDEsdGhpcy5fY29udHJvbEludGVycG9sYW50c1Jlc3VsdEJ1ZmZlcikpLl9fY2FjaGVJbmRleD1lXT1pKSxpfSxfdGFrZUJhY2tDb250cm9sSW50ZXJwb2xhbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY29udHJvbEludGVycG9sYW50cyxpPXQuX19jYWNoZUluZGV4LG49LS10aGlzLl9uQWN0aXZlQ29udHJvbEludGVycG9sYW50cyxyPWVbbl07ZVt0Ll9fY2FjaGVJbmRleD1uXT10LGVbci5fX2NhY2hlSW5kZXg9aV09cn0sX2NvbnRyb2xJbnRlcnBvbGFudHNSZXN1bHRCdWZmZXI6bmV3IEZsb2F0MzJBcnJheSgxKX0pLG1uLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgbW4odm9pZCAwPT09dGhpcy52YWx1ZS5jbG9uZT90aGlzLnZhbHVlOnRoaXMudmFsdWUuY2xvbmUoKSl9LCgoZ24ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVnQucHJvdG90eXBlKSkuY29uc3RydWN0b3I9Z24pLnByb3RvdHlwZS5pc0luc3RhbmNlZEJ1ZmZlckdlb21ldHJ5PSEwLGduLnByb3RvdHlwZS5hZGRHcm91cD1mdW5jdGlvbih0LGUsaSl7dGhpcy5ncm91cHMucHVzaCh7c3RhcnQ6dCxjb3VudDplLG1hdGVyaWFsSW5kZXg6aX0pfSxnbi5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtudWxsIT09KGk9dC5pbmRleCkmJnRoaXMuc2V0SW5kZXgoaS5jbG9uZSgpKTt2YXIgZSxpPXQuYXR0cmlidXRlcztmb3IoZSBpbiBpKXRoaXMuYWRkQXR0cmlidXRlKGUsaVtlXS5jbG9uZSgpKTtmb3IoZT0wLGk9KHQ9dC5ncm91cHMpLmxlbmd0aDtlPGk7ZSsrKXt2YXIgbj10W2VdO3RoaXMuYWRkR3JvdXAobi5zdGFydCxuLmNvdW50LG4ubWF0ZXJpYWxJbmRleCl9cmV0dXJuIHRoaXN9LHZuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6dm4saXNJbnRlcmxlYXZlZEJ1ZmZlckF0dHJpYnV0ZTohMCxnZXQgY291bnQoKXtyZXR1cm4gdGhpcy5kYXRhLmNvdW50fSxnZXQgYXJyYXkoKXtyZXR1cm4gdGhpcy5kYXRhLmFycmF5fSxzZXRYOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZGF0YS5hcnJheVt0KnRoaXMuZGF0YS5zdHJpZGUrdGhpcy5vZmZzZXRdPWUsdGhpc30sc2V0WTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRhdGEuYXJyYXlbdCp0aGlzLmRhdGEuc3RyaWRlK3RoaXMub2Zmc2V0KzFdPWUsdGhpc30sc2V0WjpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRhdGEuYXJyYXlbdCp0aGlzLmRhdGEuc3RyaWRlK3RoaXMub2Zmc2V0KzJdPWUsdGhpc30sc2V0VzpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRhdGEuYXJyYXlbdCp0aGlzLmRhdGEuc3RyaWRlK3RoaXMub2Zmc2V0KzNdPWUsdGhpc30sZ2V0WDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kYXRhLmFycmF5W3QqdGhpcy5kYXRhLnN0cmlkZSt0aGlzLm9mZnNldF19LGdldFk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5hcnJheVt0KnRoaXMuZGF0YS5zdHJpZGUrdGhpcy5vZmZzZXQrMV19LGdldFo6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5hcnJheVt0KnRoaXMuZGF0YS5zdHJpZGUrdGhpcy5vZmZzZXQrMl19LGdldFc6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5hcnJheVt0KnRoaXMuZGF0YS5zdHJpZGUrdGhpcy5vZmZzZXQrM119LHNldFhZOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdD10KnRoaXMuZGF0YS5zdHJpZGUrdGhpcy5vZmZzZXQsdGhpcy5kYXRhLmFycmF5W3QrMF09ZSx0aGlzLmRhdGEuYXJyYXlbdCsxXT1pLHRoaXN9LHNldFhZWjpmdW5jdGlvbih0LGUsaSxuKXtyZXR1cm4gdD10KnRoaXMuZGF0YS5zdHJpZGUrdGhpcy5vZmZzZXQsdGhpcy5kYXRhLmFycmF5W3QrMF09ZSx0aGlzLmRhdGEuYXJyYXlbdCsxXT1pLHRoaXMuZGF0YS5hcnJheVt0KzJdPW4sdGhpc30sc2V0WFlaVzpmdW5jdGlvbih0LGUsaSxuLHIpe3JldHVybiB0PXQqdGhpcy5kYXRhLnN0cmlkZSt0aGlzLm9mZnNldCx0aGlzLmRhdGEuYXJyYXlbdCswXT1lLHRoaXMuZGF0YS5hcnJheVt0KzFdPWksdGhpcy5kYXRhLmFycmF5W3QrMl09bix0aGlzLmRhdGEuYXJyYXlbdCszXT1yLHRoaXN9fSx5bi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnluLGlzSW50ZXJsZWF2ZWRCdWZmZXI6ITAsc2V0IG5lZWRzVXBkYXRlKHQpeyEwPT09dCYmdGhpcy52ZXJzaW9uKyt9LHNldEFycmF5OmZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiVEhSRUUuQnVmZmVyQXR0cmlidXRlOiBhcnJheSBzaG91bGQgYmUgYSBUeXBlZCBBcnJheS4iKTt0aGlzLmNvdW50PXZvaWQgMCE9PXQ/dC5sZW5ndGgvdGhpcy5zdHJpZGU6MCx0aGlzLmFycmF5PXR9LHNldER5bmFtaWM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZHluYW1pYz10LHRoaXN9LGNvcHk6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYXJyYXk9bmV3IHQuYXJyYXkuY29uc3RydWN0b3IodC5hcnJheSksdGhpcy5jb3VudD10LmNvdW50LHRoaXMuc3RyaWRlPXQuc3RyaWRlLHRoaXMuZHluYW1pYz10LmR5bmFtaWMsdGhpc30sY29weUF0OmZ1bmN0aW9uKHQsZSxpKXt0Kj10aGlzLnN0cmlkZSxpKj1lLnN0cmlkZTtmb3IodmFyIG49MCxyPXRoaXMuc3RyaWRlO248cjtuKyspdGhpcy5hcnJheVt0K25dPWUuYXJyYXlbaStuXTtyZXR1cm4gdGhpc30sc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLHRoaXMuYXJyYXkuc2V0KHQsZSksdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHRoaXMuY29uc3RydWN0b3IpLmNvcHkodGhpcyl9LG9uVXBsb2FkOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9uVXBsb2FkQ2FsbGJhY2s9dCx0aGlzfX0sKCh4bi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh5bi5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj14bikucHJvdG90eXBlLmlzSW5zdGFuY2VkSW50ZXJsZWF2ZWRCdWZmZXI9ITAseG4ucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24odCl7cmV0dXJuIHluLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLm1lc2hQZXJBdHRyaWJ1dGU9dC5tZXNoUGVyQXR0cmlidXRlLHRoaXN9LCgoX24ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoSi5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1fbikucHJvdG90eXBlLmlzSW5zdGFuY2VkQnVmZmVyQXR0cmlidXRlPSEwLF9uLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBKLnByb3RvdHlwZS5jb3B5LmNhbGwodGhpcyx0KSx0aGlzLm1lc2hQZXJBdHRyaWJ1dGU9dC5tZXNoUGVyQXR0cmlidXRlLHRoaXN9LGJuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Ym4sbGluZVByZWNpc2lvbjoxLHNldDpmdW5jdGlvbih0LGUpe3RoaXMucmF5LnNldCh0LGUpfSxzZXRGcm9tQ2FtZXJhOmZ1bmN0aW9uKHQsZSl7ZSYmZS5pc1BlcnNwZWN0aXZlQ2FtZXJhPyh0aGlzLnJheS5vcmlnaW4uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKGUubWF0cml4V29ybGQpLHRoaXMucmF5LmRpcmVjdGlvbi5zZXQodC54LHQueSwuNSkudW5wcm9qZWN0KGUpLnN1Yih0aGlzLnJheS5vcmlnaW4pLm5vcm1hbGl6ZSgpKTplJiZlLmlzT3J0aG9ncmFwaGljQ2FtZXJhPyh0aGlzLnJheS5vcmlnaW4uc2V0KHQueCx0LnksKGUubmVhcitlLmZhcikvKGUubmVhci1lLmZhcikpLnVucHJvamVjdChlKSx0aGlzLnJheS5kaXJlY3Rpb24uc2V0KDAsMCwtMSkudHJhbnNmb3JtRGlyZWN0aW9uKGUubWF0cml4V29ybGQpKTpjb25zb2xlLmVycm9yKCJUSFJFRS5SYXljYXN0ZXI6IFVuc3VwcG9ydGVkIGNhbWVyYSB0eXBlLiIpfSxpbnRlcnNlY3RPYmplY3Q6ZnVuY3Rpb24odCxlKXt2YXIgaT1bXTtyZXR1cm4gTW4odCx0aGlzLGksZSksaS5zb3J0KHduKSxpfSxpbnRlcnNlY3RPYmplY3RzOmZ1bmN0aW9uKHQsZSl7dmFyIGk9W107aWYoITE9PT1BcnJheS5pc0FycmF5KHQpKXJldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlJheWNhc3Rlci5pbnRlcnNlY3RPYmplY3RzOiBvYmplY3RzIGlzIG5vdCBhbiBBcnJheS4iKSxpO2Zvcih2YXIgbj0wLHI9dC5sZW5ndGg7bjxyO24rKylNbih0W25dLHRoaXMsaSxlKTtyZXR1cm4gaS5zb3J0KHduKSxpfX0sRW4ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpFbixzdGFydDpmdW5jdGlvbigpe3RoaXMub2xkVGltZT10aGlzLnN0YXJ0VGltZT0ocGVyZm9ybWFuY2V8fERhdGUpLm5vdygpLHRoaXMuZWxhcHNlZFRpbWU9MCx0aGlzLnJ1bm5pbmc9ITB9LHN0b3A6ZnVuY3Rpb24oKXt0aGlzLmdldEVsYXBzZWRUaW1lKCksdGhpcy5ydW5uaW5nPSExfSxnZXRFbGFwc2VkVGltZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldERlbHRhKCksdGhpcy5lbGFwc2VkVGltZX0sZ2V0RGVsdGE6ZnVuY3Rpb24oKXt2YXIgdD0wO2lmKHRoaXMuYXV0b1N0YXJ0JiYhdGhpcy5ydW5uaW5nJiZ0aGlzLnN0YXJ0KCksdGhpcy5ydW5uaW5nKXt2YXIgZT0ocGVyZm9ybWFuY2V8fERhdGUpLm5vdygpO3Q9KGUtdGhpcy5vbGRUaW1lKS8xZTM7dGhpcy5vbGRUaW1lPWUsdGhpcy5lbGFwc2VkVGltZSs9dH1yZXR1cm4gdH19LFRuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VG4sc2V0OmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5yYWRpdXM9dCx0aGlzLnBoaT1lLHRoaXMudGhldGE9aSx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yYWRpdXM9dC5yYWRpdXMsdGhpcy5waGk9dC5waGksdGhpcy50aGV0YT10LnRoZXRhLHRoaXN9LG1ha2VTYWZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGhpPU1hdGgubWF4KDFlLTYsTWF0aC5taW4oTWF0aC5QSS0xZS02LHRoaXMucGhpKSksdGhpc30sc2V0RnJvbVZlY3RvcjM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucmFkaXVzPXQubGVuZ3RoKCksMD09PXRoaXMucmFkaXVzP3RoaXMucGhpPXRoaXMudGhldGE9MDoodGhpcy50aGV0YT1NYXRoLmF0YW4yKHQueCx0LnopLHRoaXMucGhpPU1hdGguYWNvcyhlci5jbGFtcCh0LnkvdGhpcy5yYWRpdXMsLTEsMSkpKSx0aGlzfX0sU24ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpTbixzZXQ6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLnJhZGl1cz10LHRoaXMudGhldGE9ZSx0aGlzLnk9aSx0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgdGhpcy5jb25zdHJ1Y3RvcikuY29weSh0aGlzKX0sY29weTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yYWRpdXM9dC5yYWRpdXMsdGhpcy50aGV0YT10LnRoZXRhLHRoaXMueT10LnksdGhpc30sc2V0RnJvbVZlY3RvcjM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucmFkaXVzPU1hdGguc3FydCh0LngqdC54K3Queip0LnopLHRoaXMudGhldGE9TWF0aC5hdGFuMih0LngsdC56KSx0aGlzLnk9dC55LHRoaXN9fSwoKEFuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGt0LnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUFuKS5wcm90b3R5cGUuY3JlYXRlQW5pbWF0aW9uPWZ1bmN0aW9uKHQsZSxpLG4pe2U9e3N0YXJ0OmUsZW5kOmksbGVuZ3RoOmktZSsxLGZwczpuLGR1cmF0aW9uOihpLWUpL24sbGFzdEZyYW1lOjAsY3VycmVudEZyYW1lOjAsYWN0aXZlOiExLHRpbWU6MCxkaXJlY3Rpb246MSx3ZWlnaHQ6MSxkaXJlY3Rpb25CYWNrd2FyZHM6ITEsbWlycm9yZWRMb29wOiExfSx0aGlzLmFuaW1hdGlvbnNNYXBbdF09ZSx0aGlzLmFuaW1hdGlvbnNMaXN0LnB1c2goZSl9LEFuLnByb3RvdHlwZS5hdXRvQ3JlYXRlQW5pbWF0aW9ucz1mdW5jdGlvbih0KXtmb3IodmFyIGUsaT0vKFthLXpdKylfPyhcZCspL2ksbj17fSxyPXRoaXMuZ2VvbWV0cnksYT0wLG89ci5tb3JwaFRhcmdldHMubGVuZ3RoO2E8bzthKyspe3ZhciBzPXIubW9ycGhUYXJnZXRzW2FdLm5hbWUubWF0Y2goaSk7aWYocyYmMTxzLmxlbmd0aCl7dmFyIGM9c1sxXTtuW2NdfHwobltjXT17c3RhcnQ6MS8wLGVuZDotMS8wfSksYTwocz1uW2NdKS5zdGFydCYmKHMuc3RhcnQ9YSksYT5zLmVuZCYmKHMuZW5kPWEpLGV8fChlPWMpfX1mb3IoYyBpbiBuKXM9bltjXSx0aGlzLmNyZWF0ZUFuaW1hdGlvbihjLHMuc3RhcnQscy5lbmQsdCk7dGhpcy5maXJzdEFuaW1hdGlvbj1lfSxBbi5wcm90b3R5cGUuc2V0QW5pbWF0aW9uRGlyZWN0aW9uRm9yd2FyZD1mdW5jdGlvbih0KXsodD10aGlzLmFuaW1hdGlvbnNNYXBbdF0pJiYodC5kaXJlY3Rpb249MSx0LmRpcmVjdGlvbkJhY2t3YXJkcz0hMSl9LEFuLnByb3RvdHlwZS5zZXRBbmltYXRpb25EaXJlY3Rpb25CYWNrd2FyZD1mdW5jdGlvbih0KXsodD10aGlzLmFuaW1hdGlvbnNNYXBbdF0pJiYodC5kaXJlY3Rpb249LTEsdC5kaXJlY3Rpb25CYWNrd2FyZHM9ITApfSxBbi5wcm90b3R5cGUuc2V0QW5pbWF0aW9uRlBTPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5hbmltYXRpb25zTWFwW3RdO2kmJihpLmZwcz1lLGkuZHVyYXRpb249KGkuZW5kLWkuc3RhcnQpL2kuZnBzKX0sQW4ucHJvdG90eXBlLnNldEFuaW1hdGlvbkR1cmF0aW9uPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5hbmltYXRpb25zTWFwW3RdO2kmJihpLmR1cmF0aW9uPWUsaS5mcHM9KGkuZW5kLWkuc3RhcnQpL2kuZHVyYXRpb24pfSxBbi5wcm90b3R5cGUuc2V0QW5pbWF0aW9uV2VpZ2h0PWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5hbmltYXRpb25zTWFwW3RdO2kmJihpLndlaWdodD1lKX0sQW4ucHJvdG90eXBlLnNldEFuaW1hdGlvblRpbWU9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmFuaW1hdGlvbnNNYXBbdF07aSYmKGkudGltZT1lKX0sQW4ucHJvdG90eXBlLmdldEFuaW1hdGlvblRpbWU9ZnVuY3Rpb24odCl7dmFyIGU9MDtyZXR1cm4odD10aGlzLmFuaW1hdGlvbnNNYXBbdF0pJiYoZT10LnRpbWUpLGV9LEFuLnByb3RvdHlwZS5nZXRBbmltYXRpb25EdXJhdGlvbj1mdW5jdGlvbih0KXt2YXIgZT0tMTtyZXR1cm4odD10aGlzLmFuaW1hdGlvbnNNYXBbdF0pJiYoZT10LmR1cmF0aW9uKSxlfSxBbi5wcm90b3R5cGUucGxheUFuaW1hdGlvbj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmFuaW1hdGlvbnNNYXBbdF07ZT8oZS50aW1lPTAsZS5hY3RpdmU9ITApOmNvbnNvbGUud2FybigiVEhSRUUuTW9ycGhCbGVuZE1lc2g6IGFuaW1hdGlvblsiK3QrIl0gdW5kZWZpbmVkIGluIC5wbGF5QW5pbWF0aW9uKCkiKX0sQW4ucHJvdG90eXBlLnN0b3BBbmltYXRpb249ZnVuY3Rpb24odCl7KHQ9dGhpcy5hbmltYXRpb25zTWFwW3RdKSYmKHQuYWN0aXZlPSExKX0sQW4ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxpPXRoaXMuYW5pbWF0aW9uc0xpc3QubGVuZ3RoO2U8aTtlKyspe3ZhciBuPXRoaXMuYW5pbWF0aW9uc0xpc3RbZV07aWYobi5hY3RpdmUpe3ZhciByPW4uZHVyYXRpb24vbi5sZW5ndGg7bi50aW1lKz1uLmRpcmVjdGlvbip0LG4ubWlycm9yZWRMb29wPyhuLnRpbWU+bi5kdXJhdGlvbnx8bi50aW1lPDApJiYobi5kaXJlY3Rpb24qPS0xLG4udGltZT5uLmR1cmF0aW9uJiYobi50aW1lPW4uZHVyYXRpb24sbi5kaXJlY3Rpb25CYWNrd2FyZHM9ITApLG4udGltZTwwJiYobi50aW1lPTAsbi5kaXJlY3Rpb25CYWNrd2FyZHM9ITEpKToobi50aW1lJT1uLmR1cmF0aW9uLG4udGltZTwwJiYobi50aW1lKz1uLmR1cmF0aW9uKSk7dmFyIGE9bi5zdGFydCtlci5jbGFtcChNYXRoLmZsb29yKG4udGltZS9yKSwwLG4ubGVuZ3RoLTEpLG89bi53ZWlnaHQ7YSE9PW4uY3VycmVudEZyYW1lJiYodGhpcy5tb3JwaFRhcmdldEluZmx1ZW5jZXNbbi5sYXN0RnJhbWVdPTAsdGhpcy5tb3JwaFRhcmdldEluZmx1ZW5jZXNbbi5jdXJyZW50RnJhbWVdPTEqbyx0aGlzLm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1thXT0wLG4ubGFzdEZyYW1lPW4uY3VycmVudEZyYW1lLG4uY3VycmVudEZyYW1lPWEpLHI9bi50aW1lJXIvcixuLmRpcmVjdGlvbkJhY2t3YXJkcyYmKHI9MS1yKSxuLmN1cnJlbnRGcmFtZSE9PW4ubGFzdEZyYW1lPyh0aGlzLm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1tuLmN1cnJlbnRGcmFtZV09cipvLHRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW24ubGFzdEZyYW1lXT0oMS1yKSpvKTp0aGlzLm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1tuLmN1cnJlbnRGcmFtZV09b319fSwoKExuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSkuY29uc3RydWN0b3I9TG4pLnByb3RvdHlwZS5pc0ltbWVkaWF0ZVJlbmRlck9iamVjdD0hMCwoKFJuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG9lLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVJuKS5wcm90b3R5cGUudXBkYXRlPShZbz1uZXcgQ3QscW89bmV3IEN0LFpvPW5ldyBGLGZ1bmN0aW9uKCl7dmFyIHQ9WyJhIiwiYiIsImMiXTt0aGlzLm9iamVjdC51cGRhdGVNYXRyaXhXb3JsZCghMCksWm8uZ2V0Tm9ybWFsTWF0cml4KHRoaXMub2JqZWN0Lm1hdHJpeFdvcmxkKTt2YXIgZT10aGlzLm9iamVjdC5tYXRyaXhXb3JsZCxpPXRoaXMuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbixuPXRoaXMub2JqZWN0Lmdlb21ldHJ5O2lmKG4mJm4uaXNHZW9tZXRyeSlmb3IodmFyIHI9bi52ZXJ0aWNlcyxhPW4uZmFjZXMsbz1uPTAscz1hLmxlbmd0aDtvPHM7bysrKWZvcih2YXIgYz1hW29dLGg9MCxsPWMudmVydGV4Tm9ybWFscy5sZW5ndGg7aDxsO2grKyl7dmFyIHU9Yy52ZXJ0ZXhOb3JtYWxzW2hdO1lvLmNvcHkocltjW3RbaF1dXSkuYXBwbHlNYXRyaXg0KGUpLHFvLmNvcHkodSkuYXBwbHlNYXRyaXgzKFpvKS5ub3JtYWxpemUoKS5tdWx0aXBseVNjYWxhcih0aGlzLnNpemUpLmFkZChZbyksaS5zZXRYWVoobixZby54LFlvLnksWW8ueiksbis9MSxpLnNldFhZWihuLHFvLngscW8ueSxxby56KSxuKz0xfWVsc2UgaWYobiYmbi5pc0J1ZmZlckdlb21ldHJ5KWZvcih0PW4uYXR0cmlidXRlcy5wb3NpdGlvbixyPW4uYXR0cmlidXRlcy5ub3JtYWwsaD1uPTAsbD10LmNvdW50O2g8bDtoKyspWW8uc2V0KHQuZ2V0WChoKSx0LmdldFkoaCksdC5nZXRaKGgpKS5hcHBseU1hdHJpeDQoZSkscW8uc2V0KHIuZ2V0WChoKSxyLmdldFkoaCksci5nZXRaKGgpKSxxby5hcHBseU1hdHJpeDMoWm8pLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKHRoaXMuc2l6ZSkuYWRkKFlvKSxpLnNldFhZWihuLFlvLngsWW8ueSxZby56KSxuKz0xLGkuc2V0WFlaKG4scW8ueCxxby55LHFvLnopLG4rPTE7cmV0dXJuIGkubmVlZHNVcGRhdGU9ITAsdGhpc30pLCgoUG4ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoWC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1QbikucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmNvbmUuZ2VvbWV0cnkuZGlzcG9zZSgpLHRoaXMuY29uZS5tYXRlcmlhbC5kaXNwb3NlKCl9LFBuLnByb3RvdHlwZS51cGRhdGU9KEpvPW5ldyBDdCxRbz1uZXcgQ3QsZnVuY3Rpb24oKXt2YXIgdD10aGlzLmxpZ2h0LmRpc3RhbmNlP3RoaXMubGlnaHQuZGlzdGFuY2U6MWUzLGU9dCpNYXRoLnRhbih0aGlzLmxpZ2h0LmFuZ2xlKTt0aGlzLmNvbmUuc2NhbGUuc2V0KGUsZSx0KSxKby5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5saWdodC5tYXRyaXhXb3JsZCksUW8uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRoaXMubGlnaHQudGFyZ2V0Lm1hdHJpeFdvcmxkKSx0aGlzLmNvbmUubG9va0F0KFFvLnN1YihKbykpLHRoaXMuY29uZS5tYXRlcmlhbC5jb2xvci5jb3B5KHRoaXMubGlnaHQuY29sb3IpLm11bHRpcGx5U2NhbGFyKHRoaXMubGlnaHQuaW50ZW5zaXR5KX0pLCgoQ24ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUob2UucHJvdG90eXBlKSkuY29uc3RydWN0b3I9Q24pLnByb3RvdHlwZS5nZXRCb25lTGlzdD1mdW5jdGlvbih0KXt2YXIgZT1bXTt0JiZ0LmlzQm9uZSYmZS5wdXNoKHQpO2Zvcih2YXIgaT0wO2k8dC5jaGlsZHJlbi5sZW5ndGg7aSsrKWUucHVzaC5hcHBseShlLHRoaXMuZ2V0Qm9uZUxpc3QodC5jaGlsZHJlbltpXSkpO3JldHVybiBlfSxDbi5wcm90b3R5cGUudXBkYXRlPShLbz1uZXcgQ3QsJG89bmV3IEl0LHRzPW5ldyBJdCxmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2VvbWV0cnksZT10LmdldEF0dHJpYnV0ZSgicG9zaXRpb24iKTt0cy5nZXRJbnZlcnNlKHRoaXMucm9vdC5tYXRyaXhXb3JsZCk7Zm9yKHZhciBpPTAsbj0wO2k8dGhpcy5ib25lcy5sZW5ndGg7aSsrKXt2YXIgcj10aGlzLmJvbmVzW2ldO3IucGFyZW50JiZyLnBhcmVudC5pc0JvbmUmJigkby5tdWx0aXBseU1hdHJpY2VzKHRzLHIubWF0cml4V29ybGQpLEtvLnNldEZyb21NYXRyaXhQb3NpdGlvbigkbyksZS5zZXRYWVoobixLby54LEtvLnksS28ueiksJG8ubXVsdGlwbHlNYXRyaWNlcyh0cyxyLnBhcmVudC5tYXRyaXhXb3JsZCksS28uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKCRvKSxlLnNldFhZWihuKzEsS28ueCxLby55LEtvLnopLG4rPTIpfXQuZ2V0QXR0cmlidXRlKCJwb3NpdGlvbiIpLm5lZWRzVXBkYXRlPSEwfSksKChJbi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShrdC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1JbikucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmdlb21ldHJ5LmRpc3Bvc2UoKSx0aGlzLm1hdGVyaWFsLmRpc3Bvc2UoKX0sSW4ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMubWF0ZXJpYWwuY29sb3IuY29weSh0aGlzLmxpZ2h0LmNvbG9yKS5tdWx0aXBseVNjYWxhcih0aGlzLmxpZ2h0LmludGVuc2l0eSl9LCgoVW4ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoWC5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1VbikucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmNoaWxkcmVuWzBdLmdlb21ldHJ5LmRpc3Bvc2UoKSx0aGlzLmNoaWxkcmVuWzBdLm1hdGVyaWFsLmRpc3Bvc2UoKSx0aGlzLmNoaWxkcmVuWzFdLmdlb21ldHJ5LmRpc3Bvc2UoKSx0aGlzLmNoaWxkcmVuWzFdLm1hdGVyaWFsLmRpc3Bvc2UoKX0sVW4ucHJvdG90eXBlLnVwZGF0ZT0oZXM9bmV3IEN0LGlzPW5ldyBDdCxmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hpbGRyZW5bMF0sZT10aGlzLmNoaWxkcmVuWzFdO2lmKHRoaXMubGlnaHQudGFyZ2V0KXtlcy5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5saWdodC5tYXRyaXhXb3JsZCksaXMuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRoaXMubGlnaHQudGFyZ2V0Lm1hdHJpeFdvcmxkKTt2YXIgaT1pcy5jbG9uZSgpLnN1Yihlcyk7dC5sb29rQXQoaSksZS5sb29rQXQoaSl9dC5tYXRlcmlhbC5jb2xvci5jb3B5KHRoaXMubGlnaHQuY29sb3IpLm11bHRpcGx5U2NhbGFyKHRoaXMubGlnaHQuaW50ZW5zaXR5KSxlLm1hdGVyaWFsLmNvbG9yLmNvcHkodGhpcy5saWdodC5jb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpLGU9LjUqdGhpcy5saWdodC53aWR0aCxpPS41KnRoaXMubGlnaHQuaGVpZ2h0O3ZhciBuPSh0PXQuZ2VvbWV0cnkuZ2V0QXR0cmlidXRlKCJwb3NpdGlvbiIpKS5hcnJheTtuWzBdPWUsblsxXT0taSxuWzJdPTAsblszXT1lLG5bNF09aSxuWzVdPTAsbls2XT0tZSxuWzddPWksbls4XT0wLG5bOV09LWUsblsxMF09aSxuWzExXT0wLG5bMTJdPS1lLG5bMTNdPS1pLG5bMTRdPTAsblsxNV09ZSxuWzE2XT0taSxuWzE3XT0wLHQubmVlZHNVcGRhdGU9ITB9KSwoKE5uLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFgucHJvdG90eXBlKSkuY29uc3RydWN0b3I9Tm4pLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5jaGlsZHJlblswXS5nZW9tZXRyeS5kaXNwb3NlKCksdGhpcy5jaGlsZHJlblswXS5tYXRlcmlhbC5kaXNwb3NlKCl9LE5uLnByb3RvdHlwZS51cGRhdGU9KG5zPW5ldyBDdCxycz1uZXcgTnQsYXM9bmV3IE50LGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jaGlsZHJlblswXSxlPXQuZ2VvbWV0cnkuZ2V0QXR0cmlidXRlKCJjb2xvciIpO3JzLmNvcHkodGhpcy5saWdodC5jb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpLGFzLmNvcHkodGhpcy5saWdodC5ncm91bmRDb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpO2Zvcih2YXIgaT0wLG49ZS5jb3VudDtpPG47aSsrKXt2YXIgcj1pPG4vMj9yczphcztlLnNldFhZWihpLHIucixyLmcsci5iKX10Lmxvb2tBdChucy5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5saWdodC5tYXRyaXhXb3JsZCkubmVnYXRlKCkpLGUubmVlZHNVcGRhdGU9ITB9KSwoRG4ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUob2UucHJvdG90eXBlKSkuY29uc3RydWN0b3I9RG4sKE9uLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG9lLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPU9uLCgoRm4ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUob2UucHJvdG90eXBlKSkuY29uc3RydWN0b3I9Rm4pLnByb3RvdHlwZS51cGRhdGU9KG9zPW5ldyBDdCxzcz1uZXcgQ3QsY3M9bmV3IEYsZnVuY3Rpb24oKXt0aGlzLm9iamVjdC51cGRhdGVNYXRyaXhXb3JsZCghMCksY3MuZ2V0Tm9ybWFsTWF0cml4KHRoaXMub2JqZWN0Lm1hdHJpeFdvcmxkKTtmb3IodmFyIHQsZT10aGlzLm9iamVjdC5tYXRyaXhXb3JsZCxpPXRoaXMuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbixuPSh0PXRoaXMub2JqZWN0Lmdlb21ldHJ5KS52ZXJ0aWNlcyxyPTAsYT0wLG89KHQ9dC5mYWNlcykubGVuZ3RoO2E8bzthKyspe3ZhciBzPXRbYV0sYz1zLm5vcm1hbDtvcy5jb3B5KG5bcy5hXSkuYWRkKG5bcy5iXSkuYWRkKG5bcy5jXSkuZGl2aWRlU2NhbGFyKDMpLmFwcGx5TWF0cml4NChlKSxzcy5jb3B5KGMpLmFwcGx5TWF0cml4Myhjcykubm9ybWFsaXplKCkubXVsdGlwbHlTY2FsYXIodGhpcy5zaXplKS5hZGQob3MpLGkuc2V0WFlaKHIsb3MueCxvcy55LG9zLnopLHIrPTEsaS5zZXRYWVoocixzcy54LHNzLnksc3Mueikscis9MX1yZXR1cm4gaS5uZWVkc1VwZGF0ZT0hMCx0aGlzfSksKCh6bi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShYLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPXpuKS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hpbGRyZW5bMF0sZT10aGlzLmNoaWxkcmVuWzFdO3QuZ2VvbWV0cnkuZGlzcG9zZSgpLHQubWF0ZXJpYWwuZGlzcG9zZSgpLGUuZ2VvbWV0cnkuZGlzcG9zZSgpLGUubWF0ZXJpYWwuZGlzcG9zZSgpfSx6bi5wcm90b3R5cGUudXBkYXRlPShocz1uZXcgQ3QsbHM9bmV3IEN0LHVzPW5ldyBDdCxmdW5jdGlvbigpe2hzLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLmxpZ2h0Lm1hdHJpeFdvcmxkKSxscy5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5saWdodC50YXJnZXQubWF0cml4V29ybGQpLHVzLnN1YlZlY3RvcnMobHMsaHMpO3ZhciB0PXRoaXMuY2hpbGRyZW5bMF0sZT10aGlzLmNoaWxkcmVuWzFdO3QubG9va0F0KHVzKSx0Lm1hdGVyaWFsLmNvbG9yLmNvcHkodGhpcy5saWdodC5jb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpLGUubG9va0F0KHVzKSxlLnNjYWxlLno9dXMubGVuZ3RoKCl9KSwoKEJuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG9lLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUJuKS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsaSxuKXtpZihvLnNldChlLGksbikudW5wcm9qZWN0KHMpLHZvaWQgMCE9PSh0PWFbdF0pKWZvcihlPXIuZ2V0QXR0cmlidXRlKCJwb3NpdGlvbiIpLGk9MCxuPXQubGVuZ3RoO2k8bjtpKyspZS5zZXRYWVoodFtpXSxvLngsby55LG8ueil9dmFyIHIsYSxvPW5ldyBDdCxzPW5ldyBjdDtyZXR1cm4gZnVuY3Rpb24oKXtyPXRoaXMuZ2VvbWV0cnksYT10aGlzLnBvaW50TWFwLHMucHJvamVjdGlvbk1hdHJpeC5jb3B5KHRoaXMuY2FtZXJhLnByb2plY3Rpb25NYXRyaXgpLHQoImMiLDAsMCwtMSksdCgidCIsMCwwLDEpLHQoIm4xIiwtMSwtMSwtMSksdCgibjIiLDEsLTEsLTEpLHQoIm4zIiwtMSwxLC0xKSx0KCJuNCIsMSwxLC0xKSx0KCJmMSIsLTEsLTEsMSksdCgiZjIiLDEsLTEsMSksdCgiZjMiLC0xLDEsMSksdCgiZjQiLDEsMSwxKSx0KCJ1MSIsLjcsMS4xLC0xKSx0KCJ1MiIsLS43LDEuMSwtMSksdCgidTMiLDAsMiwtMSksdCgiY2YxIiwtMSwwLDEpLHQoImNmMiIsMSwwLDEpLHQoImNmMyIsMCwtMSwxKSx0KCJjZjQiLDAsMSwxKSx0KCJjbjEiLC0xLDAsLTEpLHQoImNuMiIsMSwwLC0xKSx0KCJjbjMiLDAsLTEsLTEpLHQoImNuNCIsMCwxLC0xKSxyLmdldEF0dHJpYnV0ZSgicG9zaXRpb24iKS5uZWVkc1VwZGF0ZT0hMH19KCksKChHbi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShvZS5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1HbikucHJvdG90eXBlLnVwZGF0ZT0oZHM9bmV3IEQsZnVuY3Rpb24odCl7aWYodCYmdC5pc0JveDM/ZHMuY29weSh0KTpkcy5zZXRGcm9tT2JqZWN0KHQpLCFkcy5pc0VtcHR5KCkpe3Q9ZHMubWluO3ZhciBlPWRzLm1heCxpPXRoaXMuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbixuPWkuYXJyYXk7blswXT1lLngsblsxXT1lLnksblsyXT1lLnosblszXT10Lngsbls0XT1lLnksbls1XT1lLnosbls2XT10Lngsbls3XT10Lnksbls4XT1lLnosbls5XT1lLngsblsxMF09dC55LG5bMTFdPWUueixuWzEyXT1lLngsblsxM109ZS55LG5bMTRdPXQueixuWzE1XT10LngsblsxNl09ZS55LG5bMTddPXQueixuWzE4XT10LngsblsxOV09dC55LG5bMjBdPXQueixuWzIxXT1lLngsblsyMl09dC55LG5bMjNdPXQueixpLm5lZWRzVXBkYXRlPSEwLHRoaXMuZ2VvbWV0cnkuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCl9fSk7dmFyIGZzPW5ldyBWdDtmcy5hZGRBdHRyaWJ1dGUoInBvc2l0aW9uIixuZXcgcnQoWzAsMCwwLDAsMSwwXSwzKSk7dmFyIG1zLGdzLHZzPW5ldyBXZSgwLC41LDEsNSwxKTt2cy50cmFuc2xhdGUoMCwtLjUsMCksKChIbi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShYLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPUhuKS5wcm90b3R5cGUuc2V0RGlyZWN0aW9uPShncz1uZXcgQ3QsZnVuY3Rpb24odCl7Ljk5OTk5PHQueT90aGlzLnF1YXRlcm5pb24uc2V0KDAsMCwwLDEpOnQueTwtLjk5OTk5P3RoaXMucXVhdGVybmlvbi5zZXQoMSwwLDAsMCk6KGdzLnNldCh0LnosMCwtdC54KS5ub3JtYWxpemUoKSxtcz1NYXRoLmFjb3ModC55KSx0aGlzLnF1YXRlcm5pb24uc2V0RnJvbUF4aXNBbmdsZShncyxtcykpfSksSG4ucHJvdG90eXBlLnNldExlbmd0aD1mdW5jdGlvbih0LGUsaSl7dm9pZCAwPT09ZSYmKGU9LjIqdCksdm9pZCAwPT09aSYmKGk9LjIqZSksdGhpcy5saW5lLnNjYWxlLnNldCgxLE1hdGgubWF4KDAsdC1lKSwxKSx0aGlzLmxpbmUudXBkYXRlTWF0cml4KCksdGhpcy5jb25lLnNjYWxlLnNldChpLGUsaSksdGhpcy5jb25lLnBvc2l0aW9uLnk9dCx0aGlzLmNvbmUudXBkYXRlTWF0cml4KCl9LEhuLnByb3RvdHlwZS5zZXRDb2xvcj1mdW5jdGlvbih0KXt0aGlzLmxpbmUubWF0ZXJpYWwuY29sb3IuY29weSh0KSx0aGlzLmNvbmUubWF0ZXJpYWwuY29sb3IuY29weSh0KX0sKFZuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG9lLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVZuO3ZhciB5cyx4cz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9dmFyIGM9bmV3IEN0LGg9bmV3IHQsbD1uZXcgdCx1PW5ldyB0O3JldHVybiB0LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMuYzA9dCx0aGlzLmMxPWksdGhpcy5jMj0tMyp0KzMqZS0yKmktbix0aGlzLmMzPTIqdC0yKmUraStufSx0LnByb3RvdHlwZS5pbml0Tm9udW5pZm9ybUNhdG11bGxSb209ZnVuY3Rpb24odCxlLGksbixyLGEsbyl7dGhpcy5pbml0KGUsaSwoKGUtdCkvci0oaS10KS8ocithKSsoaS1lKS9hKSphLCgoaS1lKS9hLShuLWUpLyhhK28pKyhuLWkpL28pKmEpfSx0LnByb3RvdHlwZS5pbml0Q2F0bXVsbFJvbT1mdW5jdGlvbih0LGUsaSxuLHIpe3RoaXMuaW5pdChlLGksciooaS10KSxyKihuLWUpKX0sdC5wcm90b3R5cGUuY2FsYz1mdW5jdGlvbih0KXt2YXIgZT10KnQ7cmV0dXJuIHRoaXMuYzArdGhpcy5jMSp0K3RoaXMuYzIqZSt0aGlzLmMzKmUqdH0sa2kuY3JlYXRlKGZ1bmN0aW9uKHQpe3RoaXMucG9pbnRzPXR8fFtdLHRoaXMuY2xvc2VkPSExfSxmdW5jdGlvbih0KXt2YXIgZSxpLG4scixhLG89dGhpcy5wb2ludHM7aWYoKGk9by5sZW5ndGgpPDImJmNvbnNvbGUubG9nKCJkdWgsIHlvdSBuZWVkIGF0IGxlYXN0IDIgcG9pbnRzIiksdCo9aS0odGhpcy5jbG9zZWQ/MDoxKSx0LT1lPU1hdGguZmxvb3IodCksdGhpcy5jbG9zZWQ/ZSs9MDxlPzA6KE1hdGguZmxvb3IoTWF0aC5hYnMoZSkvby5sZW5ndGgpKzEpKm8ubGVuZ3RoOjA9PT10JiZlPT09aS0xJiYoZT1pLTIsdD0xKSxuPXRoaXMuY2xvc2VkfHwwPGU/b1soZS0xKSVpXTooYy5zdWJWZWN0b3JzKG9bMF0sb1sxXSkuYWRkKG9bMF0pLGMpLHI9b1tlJWldLGE9b1soZSsxKSVpXSxvPXRoaXMuY2xvc2VkfHxlKzI8aT9vWyhlKzIpJWldOihjLnN1YlZlY3RvcnMob1tpLTFdLG9baS0yXSkuYWRkKG9baS0xXSksYyksdm9pZCAwPT09dGhpcy50eXBlfHwiY2VudHJpcGV0YWwiPT09dGhpcy50eXBlfHwiY2hvcmRhbCI9PT10aGlzLnR5cGUpe3ZhciBzPSJjaG9yZGFsIj09PXRoaXMudHlwZT8uNTouMjU7aT1NYXRoLnBvdyhuLmRpc3RhbmNlVG9TcXVhcmVkKHIpLHMpLChlPU1hdGgucG93KHIuZGlzdGFuY2VUb1NxdWFyZWQoYSkscykpPDFlLTQmJihlPTEpLGk8MWUtNCYmKGk9ZSksKHM9TWF0aC5wb3coYS5kaXN0YW5jZVRvU3F1YXJlZChvKSxzKSk8MWUtNCYmKHM9ZSksaC5pbml0Tm9udW5pZm9ybUNhdG11bGxSb20obi54LHIueCxhLngsby54LGksZSxzKSxsLmluaXROb251bmlmb3JtQ2F0bXVsbFJvbShuLnksci55LGEueSxvLnksaSxlLHMpLHUuaW5pdE5vbnVuaWZvcm1DYXRtdWxsUm9tKG4ueixyLnosYS56LG8ueixpLGUscyl9ZWxzZSJjYXRtdWxscm9tIj09PXRoaXMudHlwZSYmKGk9dm9pZCAwIT09dGhpcy50ZW5zaW9uP3RoaXMudGVuc2lvbjouNSxoLmluaXRDYXRtdWxsUm9tKG4ueCxyLngsYS54LG8ueCxpKSxsLmluaXRDYXRtdWxsUm9tKG4ueSxyLnksYS55LG8ueSxpKSx1LmluaXRDYXRtdWxsUm9tKG4ueixyLnosYS56LG8ueixpKSk7cmV0dXJuIG5ldyBDdChoLmNhbGModCksbC5jYWxjKHQpLHUuY2FsYyh0KSl9KX0oKSxfcz1raS5jcmVhdGUoZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5TcGxpbmVDdXJ2ZTMgd2lsbCBiZSBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIFRIUkVFLkNhdG11bGxSb21DdXJ2ZTMiKSx0aGlzLnBvaW50cz12b2lkIDA9PT10P1tdOnR9LGZ1bmN0aW9uKHQpe3QqPShhPXRoaXMucG9pbnRzKS5sZW5ndGgtMSx0LT1lPU1hdGguZmxvb3IodCk7dmFyIGUsaT1hWzA9PWU/ZTplLTFdLG49YVtlXSxyPWFbZT5hLmxlbmd0aC0yP2EubGVuZ3RoLTE6ZSsxXSxhPWFbZT5hLmxlbmd0aC0zP2EubGVuZ3RoLTE6ZSsyXTtyZXR1cm4gbmV3IEN0KChlPVBvLmludGVycG9sYXRlKShpLngsbi54LHIueCxhLngsdCksZShpLnksbi55LHIueSxhLnksdCksZShpLnosbi56LHIueixhLnosdCkpfSksYnM9a2kuY3JlYXRlKGZ1bmN0aW9uKHQsZSxpLG4pe3RoaXMudjA9dCx0aGlzLnYxPWUsdGhpcy52Mj1pLHRoaXMudjM9bn0sZnVuY3Rpb24odCl7dmFyIGU9eG8uYjM7cmV0dXJuIG5ldyBDdChlKHQsdGhpcy52MC54LHRoaXMudjEueCx0aGlzLnYyLngsdGhpcy52My54KSxlKHQsdGhpcy52MC55LHRoaXMudjEueSx0aGlzLnYyLnksdGhpcy52My55KSxlKHQsdGhpcy52MC56LHRoaXMudjEueix0aGlzLnYyLnosdGhpcy52My56KSl9KSx3cz1raS5jcmVhdGUoZnVuY3Rpb24odCxlLGkpe3RoaXMudjA9dCx0aGlzLnYxPWUsdGhpcy52Mj1pfSxmdW5jdGlvbih0KXt2YXIgZT14by5iMjtyZXR1cm4gbmV3IEN0KGUodCx0aGlzLnYwLngsdGhpcy52MS54LHRoaXMudjIueCksZSh0LHRoaXMudjAueSx0aGlzLnYxLnksdGhpcy52Mi55KSxlKHQsdGhpcy52MC56LHRoaXMudjEueix0aGlzLnYyLnopKX0pLE1zPWtpLmNyZWF0ZShmdW5jdGlvbih0LGUpe3RoaXMudjE9dCx0aGlzLnYyPWV9LGZ1bmN0aW9uKHQpe2lmKDE9PT10KXJldHVybiB0aGlzLnYyLmNsb25lKCk7dmFyIGU9bmV3IEN0O3JldHVybiBlLnN1YlZlY3RvcnModGhpcy52Mix0aGlzLnYxKSxlLm11bHRpcGx5U2NhbGFyKHQpLGUuYWRkKHRoaXMudjEpLGV9KTsoa24ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoWGkucHJvdG90eXBlKSkuY29uc3RydWN0b3I9a24sam4ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoeHMucHJvdG90eXBlKSxEbi5wcm90b3R5cGUuc2V0Q29sb3JzPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiVEhSRUUuR3JpZEhlbHBlcjogc2V0Q29sb3JzKCkgaGFzIGJlZW4gZGVwcmVjYXRlZCwgcGFzcyB0aGVtIGluIHRoZSBjb25zdHJ1Y3RvciBpbnN0ZWFkLiIpfSxPYmplY3QuYXNzaWduKE8ucHJvdG90eXBlLHtjZW50ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuQm94MjogLmNlbnRlcigpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmdldENlbnRlcigpLiIpLHRoaXMuZ2V0Q2VudGVyKHQpfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkJveDI6IC5lbXB0eSgpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmlzRW1wdHkoKS4iKSx0aGlzLmlzRW1wdHkoKX0saXNJbnRlcnNlY3Rpb25Cb3g6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuQm94MjogLmlzSW50ZXJzZWN0aW9uQm94KCkgaGFzIGJlZW4gcmVuYW1lZCB0byAuaW50ZXJzZWN0c0JveCgpLiIpLHRoaXMuaW50ZXJzZWN0c0JveCh0KX0sc2l6ZTpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5Cb3gyOiAuc2l6ZSgpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmdldFNpemUoKS4iKSx0aGlzLmdldFNpemUodCl9fSksT2JqZWN0LmFzc2lnbihELnByb3RvdHlwZSx7Y2VudGVyOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkJveDM6IC5jZW50ZXIoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5nZXRDZW50ZXIoKS4iKSx0aGlzLmdldENlbnRlcih0KX0sZW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5Cb3gzOiAuZW1wdHkoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5pc0VtcHR5KCkuIiksdGhpcy5pc0VtcHR5KCl9LGlzSW50ZXJzZWN0aW9uQm94OmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkJveDM6IC5pc0ludGVyc2VjdGlvbkJveCgpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmludGVyc2VjdHNCb3goKS4iKSx0aGlzLmludGVyc2VjdHNCb3godCl9LGlzSW50ZXJzZWN0aW9uU3BoZXJlOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkJveDM6IC5pc0ludGVyc2VjdGlvblNwaGVyZSgpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmludGVyc2VjdHNTcGhlcmUoKS4iKSx0aGlzLmludGVyc2VjdHNTcGhlcmUodCl9LHNpemU6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuQm94MzogLnNpemUoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5nZXRTaXplKCkuIiksdGhpcy5nZXRTaXplKHQpfX0pLFkucHJvdG90eXBlLmNlbnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5MaW5lMzogLmNlbnRlcigpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmdldENlbnRlcigpLiIpLHRoaXMuZ2V0Q2VudGVyKHQpfSxlci5yYW5kb20xNj1mdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdGgucmFuZG9tMTYoKSBoYXMgYmVlbiBkZXByZWNhdGVkLiBVc2UgTWF0aC5yYW5kb20oKSBpbnN0ZWFkLiIpLE1hdGgucmFuZG9tKCl9LE9iamVjdC5hc3NpZ24oRi5wcm90b3R5cGUse2ZsYXR0ZW5Ub0FycmF5T2Zmc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuTWF0cml4MzogLmZsYXR0ZW5Ub0FycmF5T2Zmc2V0KCkgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIC50b0FycmF5KCkgaW5zdGVhZC4iKSx0aGlzLnRvQXJyYXkodCxlKX0sbXVsdGlwbHlWZWN0b3IzOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdHJpeDM6IC5tdWx0aXBseVZlY3RvcjMoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgdmVjdG9yLmFwcGx5TWF0cml4MyggbWF0cml4ICkgaW5zdGVhZC4iKSx0LmFwcGx5TWF0cml4Myh0aGlzKX0sbXVsdGlwbHlWZWN0b3IzQXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuTWF0cml4MzogLm11bHRpcGx5VmVjdG9yM0FycmF5KCkgaGFzIGJlZW4gcmVuYW1lZC4gVXNlIG1hdHJpeC5hcHBseVRvVmVjdG9yM0FycmF5KCBhcnJheSApIGluc3RlYWQuIiksdGhpcy5hcHBseVRvVmVjdG9yM0FycmF5KHQpfSxhcHBseVRvQnVmZmVyOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5NYXRyaXgzOiAuYXBwbHlUb0J1ZmZlcigpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBtYXRyaXguYXBwbHlUb0J1ZmZlckF0dHJpYnV0ZSggYXR0cmlidXRlICkgaW5zdGVhZC4iKSx0aGlzLmFwcGx5VG9CdWZmZXJBdHRyaWJ1dGUodCl9fSksT2JqZWN0LmFzc2lnbihJdC5wcm90b3R5cGUse2V4dHJhY3RQb3NpdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5NYXRyaXg0OiAuZXh0cmFjdFBvc2l0aW9uKCkgaGFzIGJlZW4gcmVuYW1lZCB0byAuY29weVBvc2l0aW9uKCkuIiksdGhpcy5jb3B5UG9zaXRpb24odCl9LGZsYXR0ZW5Ub0FycmF5T2Zmc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuTWF0cml4NDogLmZsYXR0ZW5Ub0FycmF5T2Zmc2V0KCkgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIC50b0FycmF5KCkgaW5zdGVhZC4iKSx0aGlzLnRvQXJyYXkodCxlKX0sZ2V0UG9zaXRpb246ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09eXMmJih5cz1uZXcgQ3QpLGNvbnNvbGUud2FybigiVEhSRUUuTWF0cml4NDogLmdldFBvc2l0aW9uKCkgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFZlY3RvcjMuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKCBtYXRyaXggKSBpbnN0ZWFkLiIpLHlzLnNldEZyb21NYXRyaXhDb2x1bW4odGhpcywzKX0sc2V0Um90YXRpb25Gcm9tUXVhdGVybmlvbjpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5NYXRyaXg0OiAuc2V0Um90YXRpb25Gcm9tUXVhdGVybmlvbigpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLm1ha2VSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKCkuIiksdGhpcy5tYWtlUm90YXRpb25Gcm9tUXVhdGVybmlvbih0KX0sbXVsdGlwbHlWZWN0b3IzOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdHJpeDQ6IC5tdWx0aXBseVZlY3RvcjMoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgdmVjdG9yLmFwcGx5TWF0cml4NCggbWF0cml4ICkgb3IgdmVjdG9yLmFwcGx5UHJvamVjdGlvbiggbWF0cml4ICkgaW5zdGVhZC4iKSx0LmFwcGx5UHJvamVjdGlvbih0aGlzKX0sbXVsdGlwbHlWZWN0b3I0OmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdHJpeDQ6IC5tdWx0aXBseVZlY3RvcjQoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgdmVjdG9yLmFwcGx5TWF0cml4NCggbWF0cml4ICkgaW5zdGVhZC4iKSx0LmFwcGx5TWF0cml4NCh0aGlzKX0sbXVsdGlwbHlWZWN0b3IzQXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuTWF0cml4NDogLm11bHRpcGx5VmVjdG9yM0FycmF5KCkgaGFzIGJlZW4gcmVuYW1lZC4gVXNlIG1hdHJpeC5hcHBseVRvVmVjdG9yM0FycmF5KCBhcnJheSApIGluc3RlYWQuIiksdGhpcy5hcHBseVRvVmVjdG9yM0FycmF5KHQpfSxyb3RhdGVBeGlzOmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuTWF0cml4NDogLnJvdGF0ZUF4aXMoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgVmVjdG9yMy50cmFuc2Zvcm1EaXJlY3Rpb24oIG1hdHJpeCApIGluc3RlYWQuIiksdC50cmFuc2Zvcm1EaXJlY3Rpb24odGhpcyl9LGNyb3NzVmVjdG9yOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdHJpeDQ6IC5jcm9zc1ZlY3RvcigpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSB2ZWN0b3IuYXBwbHlNYXRyaXg0KCBtYXRyaXggKSBpbnN0ZWFkLiIpLHQuYXBwbHlNYXRyaXg0KHRoaXMpfSx0cmFuc2xhdGU6ZnVuY3Rpb24oKXtjb25zb2xlLmVycm9yKCJUSFJFRS5NYXRyaXg0OiAudHJhbnNsYXRlKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX0scm90YXRlWDpmdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRIUkVFLk1hdHJpeDQ6IC5yb3RhdGVYKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX0scm90YXRlWTpmdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRIUkVFLk1hdHJpeDQ6IC5yb3RhdGVZKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX0scm90YXRlWjpmdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRIUkVFLk1hdHJpeDQ6IC5yb3RhdGVaKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX0scm90YXRlQnlBeGlzOmZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiVEhSRUUuTWF0cml4NDogLnJvdGF0ZUJ5QXhpcygpIGhhcyBiZWVuIHJlbW92ZWQuIil9LGFwcGx5VG9CdWZmZXI6ZnVuY3Rpb24odCxlLGkpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk1hdHJpeDQ6IC5hcHBseVRvQnVmZmVyKCkgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIG1hdHJpeC5hcHBseVRvQnVmZmVyQXR0cmlidXRlKCBhdHRyaWJ1dGUgKSBpbnN0ZWFkLiIpLHRoaXMuYXBwbHlUb0J1ZmZlckF0dHJpYnV0ZSh0KX19KSxILnByb3RvdHlwZS5pc0ludGVyc2VjdGlvbkxpbmU9ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuUGxhbmU6IC5pc0ludGVyc2VjdGlvbkxpbmUoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5pbnRlcnNlY3RzTGluZSgpLiIpLHRoaXMuaW50ZXJzZWN0c0xpbmUodCl9LHMucHJvdG90eXBlLm11bHRpcGx5VmVjdG9yMz1mdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5RdWF0ZXJuaW9uOiAubXVsdGlwbHlWZWN0b3IzKCkgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIGlzIG5vdyB2ZWN0b3IuYXBwbHlRdWF0ZXJuaW9uKCBxdWF0ZXJuaW9uICkgaW5zdGVhZC4iKSx0LmFwcGx5UXVhdGVybmlvbih0aGlzKX0sT2JqZWN0LmFzc2lnbihrLnByb3RvdHlwZSx7aXNJbnRlcnNlY3Rpb25Cb3g6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuUmF5OiAuaXNJbnRlcnNlY3Rpb25Cb3goKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5pbnRlcnNlY3RzQm94KCkuIiksdGhpcy5pbnRlcnNlY3RzQm94KHQpfSxpc0ludGVyc2VjdGlvblBsYW5lOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlJheTogLmlzSW50ZXJzZWN0aW9uUGxhbmUoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5pbnRlcnNlY3RzUGxhbmUoKS4iKSx0aGlzLmludGVyc2VjdHNQbGFuZSh0KX0saXNJbnRlcnNlY3Rpb25TcGhlcmU6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuUmF5OiAuaXNJbnRlcnNlY3Rpb25TcGhlcmUoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5pbnRlcnNlY3RzU3BoZXJlKCkuIiksdGhpcy5pbnRlcnNlY3RzU3BoZXJlKHQpfX0pLE9iamVjdC5hc3NpZ24oSmkucHJvdG90eXBlLHtleHRydWRlOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlNoYXBlOiAuZXh0cnVkZSgpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBFeHRydWRlR2VvbWV0cnkoKSBpbnN0ZWFkLiIpLG5ldyBVZSh0aGlzLHQpfSxtYWtlR2VvbWV0cnk6ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuU2hhcGU6IC5tYWtlR2VvbWV0cnkoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgU2hhcGVHZW9tZXRyeSgpIGluc3RlYWQuIiksbmV3IGtlKHRoaXMsdCl9fSksT2JqZWN0LmFzc2lnbihDdC5wcm90b3R5cGUse3NldEV1bGVyRnJvbVJvdGF0aW9uTWF0cml4OmZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiVEhSRUUuVmVjdG9yMzogLnNldEV1bGVyRnJvbVJvdGF0aW9uTWF0cml4KCkgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIEV1bGVyLnNldEZyb21Sb3RhdGlvbk1hdHJpeCgpIGluc3RlYWQuIil9LHNldEV1bGVyRnJvbVF1YXRlcm5pb246ZnVuY3Rpb24oKXtjb25zb2xlLmVycm9yKCJUSFJFRS5WZWN0b3IzOiAuc2V0RXVsZXJGcm9tUXVhdGVybmlvbigpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBFdWxlci5zZXRGcm9tUXVhdGVybmlvbigpIGluc3RlYWQuIil9LGdldFBvc2l0aW9uRnJvbU1hdHJpeDpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5WZWN0b3IzOiAuZ2V0UG9zaXRpb25Gcm9tTWF0cml4KCkgaGFzIGJlZW4gcmVuYW1lZCB0byAuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKCkuIiksdGhpcy5zZXRGcm9tTWF0cml4UG9zaXRpb24odCl9LGdldFNjYWxlRnJvbU1hdHJpeDpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5WZWN0b3IzOiAuZ2V0U2NhbGVGcm9tTWF0cml4KCkgaGFzIGJlZW4gcmVuYW1lZCB0byAuc2V0RnJvbU1hdHJpeFNjYWxlKCkuIiksdGhpcy5zZXRGcm9tTWF0cml4U2NhbGUodCl9LGdldENvbHVtbkZyb21NYXRyaXg6ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5WZWN0b3IzOiAuZ2V0Q29sdW1uRnJvbU1hdHJpeCgpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLnNldEZyb21NYXRyaXhDb2x1bW4oKS4iKSx0aGlzLnNldEZyb21NYXRyaXhDb2x1bW4oZSx0KX19KSxzdC5wcm90b3R5cGUuY29tcHV0ZVRhbmdlbnRzPWZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5HZW9tZXRyeTogLmNvbXB1dGVUYW5nZW50cygpIGhhcyBiZWVuIHJlbW92ZWQuIil9LE9iamVjdC5hc3NpZ24oWC5wcm90b3R5cGUse2dldENoaWxkQnlOYW1lOmZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdDNEOiAuZ2V0Q2hpbGRCeU5hbWUoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5nZXRPYmplY3RCeU5hbWUoKS4iKSx0aGlzLmdldE9iamVjdEJ5TmFtZSh0KX0scmVuZGVyRGVwdGg6ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdDNEOiAucmVuZGVyRGVwdGggaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIC5yZW5kZXJPcmRlciwgaW5zdGVhZC4iKX0sdHJhbnNsYXRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuT2JqZWN0M0Q6IC50cmFuc2xhdGUoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgLnRyYW5zbGF0ZU9uQXhpcyggYXhpcywgZGlzdGFuY2UgKSBpbnN0ZWFkLiIpLHRoaXMudHJhbnNsYXRlT25BeGlzKGUsdCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoWC5wcm90b3R5cGUse2V1bGVyT3JkZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdDNEOiAuZXVsZXJPcmRlciBpcyBub3cgLnJvdGF0aW9uLm9yZGVyLiIpLHRoaXMucm90YXRpb24ub3JkZXJ9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLk9iamVjdDNEOiAuZXVsZXJPcmRlciBpcyBub3cgLnJvdGF0aW9uLm9yZGVyLiIpLHRoaXMucm90YXRpb24ub3JkZXI9dH19LHVzZVF1YXRlcm5pb246e2dldDpmdW5jdGlvbigpe2NvbnNvbGUud2FybigiVEhSRUUuT2JqZWN0M0Q6IC51c2VRdWF0ZXJuaW9uIGhhcyBiZWVuIHJlbW92ZWQuIFRoZSBsaWJyYXJ5IG5vdyB1c2VzIHF1YXRlcm5pb25zIGJ5IGRlZmF1bHQuIil9LHNldDpmdW5jdGlvbigpe2NvbnNvbGUud2FybigiVEhSRUUuT2JqZWN0M0Q6IC51c2VRdWF0ZXJuaW9uIGhhcyBiZWVuIHJlbW92ZWQuIFRoZSBsaWJyYXJ5IG5vdyB1c2VzIHF1YXRlcm5pb25zIGJ5IGRlZmF1bHQuIil9fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFR0LnByb3RvdHlwZSx7b2JqZWN0czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuTE9EOiAub2JqZWN0cyBoYXMgYmVlbiByZW5hbWVkIHRvIC5sZXZlbHMuIiksdGhpcy5sZXZlbHN9fX0pLFh0LnByb3RvdHlwZS5zZXRMZW5zPWZ1bmN0aW9uKHQsZSl7Y29uc29sZS53YXJuKCJUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYS5zZXRMZW5zIGlzIGRlcHJlY2F0ZWQuIFVzZSAuc2V0Rm9jYWxMZW5ndGggYW5kIC5maWxtR2F1Z2UgZm9yIGEgcGhvdG9ncmFwaGljIHNldHVwLiIpLHZvaWQgMCE9PWUmJih0aGlzLmZpbG1HYXVnZT1lKSx0aGlzLnNldEZvY2FsTGVuZ3RoKHQpfSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhtaS5wcm90b3R5cGUse29ubHlTaGFkb3c6e3NldDpmdW5jdGlvbigpe2NvbnNvbGUud2FybigiVEhSRUUuTGlnaHQ6IC5vbmx5U2hhZG93IGhhcyBiZWVuIHJlbW92ZWQuIil9fSxzaGFkb3dDYW1lcmFGb3Y6e3NldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLkxpZ2h0OiAuc2hhZG93Q2FtZXJhRm92IGlzIG5vdyAuc2hhZG93LmNhbWVyYS5mb3YuIiksdGhpcy5zaGFkb3cuY2FtZXJhLmZvdj10fX0sc2hhZG93Q2FtZXJhTGVmdDp7c2V0OmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuTGlnaHQ6IC5zaGFkb3dDYW1lcmFMZWZ0IGlzIG5vdyAuc2hhZG93LmNhbWVyYS5sZWZ0LiIpLHRoaXMuc2hhZG93LmNhbWVyYS5sZWZ0PXR9fSxzaGFkb3dDYW1lcmFSaWdodDp7c2V0OmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuTGlnaHQ6IC5zaGFkb3dDYW1lcmFSaWdodCBpcyBub3cgLnNoYWRvdy5jYW1lcmEucmlnaHQuIiksdGhpcy5zaGFkb3cuY2FtZXJhLnJpZ2h0PXR9fSxzaGFkb3dDYW1lcmFUb3A6e3NldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLkxpZ2h0OiAuc2hhZG93Q2FtZXJhVG9wIGlzIG5vdyAuc2hhZG93LmNhbWVyYS50b3AuIiksdGhpcy5zaGFkb3cuY2FtZXJhLnRvcD10fX0sc2hhZG93Q2FtZXJhQm90dG9tOntzZXQ6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5MaWdodDogLnNoYWRvd0NhbWVyYUJvdHRvbSBpcyBub3cgLnNoYWRvdy5jYW1lcmEuYm90dG9tLiIpLHRoaXMuc2hhZG93LmNhbWVyYS5ib3R0b209dH19LHNoYWRvd0NhbWVyYU5lYXI6e3NldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLkxpZ2h0OiAuc2hhZG93Q2FtZXJhTmVhciBpcyBub3cgLnNoYWRvdy5jYW1lcmEubmVhci4iKSx0aGlzLnNoYWRvdy5jYW1lcmEubmVhcj10fX0sc2hhZG93Q2FtZXJhRmFyOntzZXQ6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5MaWdodDogLnNoYWRvd0NhbWVyYUZhciBpcyBub3cgLnNoYWRvdy5jYW1lcmEuZmFyLiIpLHRoaXMuc2hhZG93LmNhbWVyYS5mYXI9dH19LHNoYWRvd0NhbWVyYVZpc2libGU6e3NldDpmdW5jdGlvbigpe2NvbnNvbGUud2FybigiVEhSRUUuTGlnaHQ6IC5zaGFkb3dDYW1lcmFWaXNpYmxlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBuZXcgVEhSRUUuQ2FtZXJhSGVscGVyKCBsaWdodC5zaGFkb3cuY2FtZXJhICkgaW5zdGVhZC4iKX19LHNoYWRvd0JpYXM6e3NldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLkxpZ2h0OiAuc2hhZG93QmlhcyBpcyBub3cgLnNoYWRvdy5iaWFzLiIpLHRoaXMuc2hhZG93LmJpYXM9dH19LHNoYWRvd0RhcmtuZXNzOntzZXQ6ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlRIUkVFLkxpZ2h0OiAuc2hhZG93RGFya25lc3MgaGFzIGJlZW4gcmVtb3ZlZC4iKX19LHNoYWRvd01hcFdpZHRoOntzZXQ6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5MaWdodDogLnNoYWRvd01hcFdpZHRoIGlzIG5vdyAuc2hhZG93Lm1hcFNpemUud2lkdGguIiksdGhpcy5zaGFkb3cubWFwU2l6ZS53aWR0aD10fX0sc2hhZG93TWFwSGVpZ2h0OntzZXQ6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5MaWdodDogLnNoYWRvd01hcEhlaWdodCBpcyBub3cgLnNoYWRvdy5tYXBTaXplLmhlaWdodC4iKSx0aGlzLnNoYWRvdy5tYXBTaXplLmhlaWdodD10fX19KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhKLnByb3RvdHlwZSx7bGVuZ3RoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJBdHRyaWJ1dGU6IC5sZW5ndGggaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIC5jb3VudCBpbnN0ZWFkLiIpLHRoaXMuYXJyYXkubGVuZ3RofX19KSxPYmplY3QuYXNzaWduKFZ0LnByb3RvdHlwZSx7YWRkSW5kZXg6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeTogLmFkZEluZGV4KCkgaGFzIGJlZW4gcmVuYW1lZCB0byAuc2V0SW5kZXgoKS4iKSx0aGlzLnNldEluZGV4KHQpfSxhZGREcmF3Q2FsbDpmdW5jdGlvbih0LGUsaSl7dm9pZCAwIT09aSYmY29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeTogLmFkZERyYXdDYWxsKCkgbm8gbG9uZ2VyIHN1cHBvcnRzIGluZGV4T2Zmc2V0LiIpLGNvbnNvbGUud2FybigiVEhSRUUuQnVmZmVyR2VvbWV0cnk6IC5hZGREcmF3Q2FsbCgpIGlzIG5vdyAuYWRkR3JvdXAoKS4iKSx0aGlzLmFkZEdyb3VwKHQsZSl9LGNsZWFyRHJhd0NhbGxzOmZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeTogLmNsZWFyRHJhd0NhbGxzKCkgaXMgbm93IC5jbGVhckdyb3VwcygpLiIpLHRoaXMuY2xlYXJHcm91cHMoKX0sY29tcHV0ZVRhbmdlbnRzOmZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeTogLmNvbXB1dGVUYW5nZW50cygpIGhhcyBiZWVuIHJlbW92ZWQuIil9LGNvbXB1dGVPZmZzZXRzOmZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5CdWZmZXJHZW9tZXRyeTogLmNvbXB1dGVPZmZzZXRzKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhWdC5wcm90b3R5cGUse2RyYXdjYWxsczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUuZXJyb3IoIlRIUkVFLkJ1ZmZlckdlb21ldHJ5OiAuZHJhd2NhbGxzIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmdyb3Vwcy4iKSx0aGlzLmdyb3Vwc319LG9mZnNldHM6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkJ1ZmZlckdlb21ldHJ5OiAub2Zmc2V0cyBoYXMgYmVlbiByZW5hbWVkIHRvIC5ncm91cHMuIiksdGhpcy5ncm91cHN9fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKG1uLnByb3RvdHlwZSx7ZHluYW1pYzp7c2V0OmZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5Vbmlmb3JtOiAuZHluYW1pYyBoYXMgYmVlbiByZW1vdmVkLiBVc2Ugb2JqZWN0Lm9uQmVmb3JlUmVuZGVyKCkgaW5zdGVhZC4iKX19LG9uVXBkYXRlOnt2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlVuaWZvcm06IC5vblVwZGF0ZSgpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBvYmplY3Qub25CZWZvcmVSZW5kZXIoKSBpbnN0ZWFkLiIpLHRoaXN9fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE4ucHJvdG90eXBlLHt3cmFwQXJvdW5kOntnZXQ6ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlRIUkVFLiIrdGhpcy50eXBlKyI6IC53cmFwQXJvdW5kIGhhcyBiZWVuIHJlbW92ZWQuIil9LHNldDpmdW5jdGlvbigpe2NvbnNvbGUud2FybigiVEhSRUUuIit0aGlzLnR5cGUrIjogLndyYXBBcm91bmQgaGFzIGJlZW4gcmVtb3ZlZC4iKX19LHdyYXBSR0I6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLiIrdGhpcy50eXBlKyI6IC53cmFwUkdCIGhhcyBiZWVuIHJlbW92ZWQuIiksbmV3IE50fX19KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhuaS5wcm90b3R5cGUse21ldGFsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbDogLm1ldGFsIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCBpbnN0ZWFkLiIpLCExfSxzZXQ6ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsOiAubWV0YWwgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsIGluc3RlYWQiKX19fSksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoRnQucHJvdG90eXBlLHtkZXJpdmF0aXZlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuU2hhZGVyTWF0ZXJpYWw6IC5kZXJpdmF0aXZlcyBoYXMgYmVlbiBtb3ZlZCB0byAuZXh0ZW5zaW9ucy5kZXJpdmF0aXZlcy4iKSx0aGlzLmV4dGVuc2lvbnMuZGVyaXZhdGl2ZXN9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLiBTaGFkZXJNYXRlcmlhbDogLmRlcml2YXRpdmVzIGhhcyBiZWVuIG1vdmVkIHRvIC5leHRlbnNpb25zLmRlcml2YXRpdmVzLiIpLHRoaXMuZXh0ZW5zaW9ucy5kZXJpdmF0aXZlcz10fX19KSxlLnByb3RvdHlwZT1PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoe2NvbnN0cnVjdG9yOmUsYXBwbHk6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5FdmVudERpc3BhdGNoZXI6IC5hcHBseSBpcyBkZXByZWNhdGVkLCBqdXN0IGluaGVyaXQgb3IgT2JqZWN0LmFzc2lnbiB0aGUgcHJvdG90eXBlIHRvIG1peC1pbi4iKSxPYmplY3QuYXNzaWduKHQsdGhpcyl9fSksZS5wcm90b3R5cGUpLE9iamVjdC5hc3NpZ24oeXQucHJvdG90eXBlLHtzdXBwb3J0c0Zsb2F0VGV4dHVyZXM6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuc3VwcG9ydHNGbG9hdFRleHR1cmVzKCkgaXMgbm93IC5leHRlbnNpb25zLmdldCggJ09FU190ZXh0dXJlX2Zsb2F0JyApLiIpLHRoaXMuZXh0ZW5zaW9ucy5nZXQoIk9FU190ZXh0dXJlX2Zsb2F0Iil9LHN1cHBvcnRzSGFsZkZsb2F0VGV4dHVyZXM6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuc3VwcG9ydHNIYWxmRmxvYXRUZXh0dXJlcygpIGlzIG5vdyAuZXh0ZW5zaW9ucy5nZXQoICdPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0JyApLiIpLHRoaXMuZXh0ZW5zaW9ucy5nZXQoIk9FU190ZXh0dXJlX2hhbGZfZmxvYXQiKX0sc3VwcG9ydHNTdGFuZGFyZERlcml2YXRpdmVzOmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogLnN1cHBvcnRzU3RhbmRhcmREZXJpdmF0aXZlcygpIGlzIG5vdyAuZXh0ZW5zaW9ucy5nZXQoICdPRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXMnICkuIiksdGhpcy5leHRlbnNpb25zLmdldCgiT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzIil9LHN1cHBvcnRzQ29tcHJlc3NlZFRleHR1cmVTM1RDOmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogLnN1cHBvcnRzQ29tcHJlc3NlZFRleHR1cmVTM1RDKCkgaXMgbm93IC5leHRlbnNpb25zLmdldCggJ1dFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjJyApLiIpLHRoaXMuZXh0ZW5zaW9ucy5nZXQoIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjIil9LHN1cHBvcnRzQ29tcHJlc3NlZFRleHR1cmVQVlJUQzpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IC5zdXBwb3J0c0NvbXByZXNzZWRUZXh0dXJlUFZSVEMoKSBpcyBub3cgLmV4dGVuc2lvbnMuZ2V0KCAnV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjJyApLiIpLHRoaXMuZXh0ZW5zaW9ucy5nZXQoIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9wdnJ0YyIpfSxzdXBwb3J0c0JsZW5kTWluTWF4OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogLnN1cHBvcnRzQmxlbmRNaW5NYXgoKSBpcyBub3cgLmV4dGVuc2lvbnMuZ2V0KCAnRVhUX2JsZW5kX21pbm1heCcgKS4iKSx0aGlzLmV4dGVuc2lvbnMuZ2V0KCJFWFRfYmxlbmRfbWlubWF4Iil9LHN1cHBvcnRzVmVydGV4VGV4dHVyZXM6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuc3VwcG9ydHNWZXJ0ZXhUZXh0dXJlcygpIGlzIG5vdyAuY2FwYWJpbGl0aWVzLnZlcnRleFRleHR1cmVzLiIpLHRoaXMuY2FwYWJpbGl0aWVzLnZlcnRleFRleHR1cmVzfSxzdXBwb3J0c0luc3RhbmNlZEFycmF5czpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IC5zdXBwb3J0c0luc3RhbmNlZEFycmF5cygpIGlzIG5vdyAuZXh0ZW5zaW9ucy5nZXQoICdBTkdMRV9pbnN0YW5jZWRfYXJyYXlzJyApLiIpLHRoaXMuZXh0ZW5zaW9ucy5nZXQoIkFOR0xFX2luc3RhbmNlZF9hcnJheXMiKX0sZW5hYmxlU2Npc3NvclRlc3Q6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuZW5hYmxlU2Npc3NvclRlc3QoKSBpcyBub3cgLnNldFNjaXNzb3JUZXN0KCkuIiksdGhpcy5zZXRTY2lzc29yVGVzdCh0KX0saW5pdE1hdGVyaWFsOmZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuaW5pdE1hdGVyaWFsKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX0sYWRkUHJlUGx1Z2luOmZ1bmN0aW9uKCl7Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuYWRkUHJlUGx1Z2luKCkgaGFzIGJlZW4gcmVtb3ZlZC4iKX0sYWRkUG9zdFBsdWdpbjpmdW5jdGlvbigpe2NvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogLmFkZFBvc3RQbHVnaW4oKSBoYXMgYmVlbiByZW1vdmVkLiIpfSx1cGRhdGVTaGFkb3dNYXA6ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IC51cGRhdGVTaGFkb3dNYXAoKSBoYXMgYmVlbiByZW1vdmVkLiIpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHl0LnByb3RvdHlwZSx7c2hhZG93TWFwRW5hYmxlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hhZG93TWFwLmVuYWJsZWR9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IC5zaGFkb3dNYXBFbmFibGVkIGlzIG5vdyAuc2hhZG93TWFwLmVuYWJsZWQuIiksdGhpcy5zaGFkb3dNYXAuZW5hYmxlZD10fX0sc2hhZG93TWFwVHlwZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hhZG93TWFwLnR5cGV9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyZXI6IC5zaGFkb3dNYXBUeXBlIGlzIG5vdyAuc2hhZG93TWFwLnR5cGUuIiksdGhpcy5zaGFkb3dNYXAudHlwZT10fX0sc2hhZG93TWFwQ3VsbEZhY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNoYWRvd01hcC5jdWxsRmFjZX0sc2V0OmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJlcjogLnNoYWRvd01hcEN1bGxGYWNlIGlzIG5vdyAuc2hhZG93TWFwLmN1bGxGYWNlLiIpLHRoaXMuc2hhZG93TWFwLmN1bGxGYWNlPXR9fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEd0LnByb3RvdHlwZSx7Y3VsbEZhY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnJlbmRlclJldmVyc2VTaWRlZD8yOjF9LHNldDpmdW5jdGlvbih0KXt0PTEhPT10LGNvbnNvbGUud2FybigiV2ViR0xSZW5kZXJlcjogLnNoYWRvd01hcC5jdWxsRmFjZSBpcyBkZXByZWNhdGVkLiBTZXQgLnNoYWRvd01hcC5yZW5kZXJSZXZlcnNlU2lkZWQgdG8gIit0KyIuIiksdGhpcy5yZW5kZXJSZXZlcnNlU2lkZWQ9dH19fSksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQi5wcm90b3R5cGUse3dyYXBTOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLndyYXBTIGlzIG5vdyAudGV4dHVyZS53cmFwUy4iKSx0aGlzLnRleHR1cmUud3JhcFN9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAud3JhcFMgaXMgbm93IC50ZXh0dXJlLndyYXBTLiIpLHRoaXMudGV4dHVyZS53cmFwUz10fX0sd3JhcFQ6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAud3JhcFQgaXMgbm93IC50ZXh0dXJlLndyYXBULiIpLHRoaXMudGV4dHVyZS53cmFwVH0sc2V0OmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQ6IC53cmFwVCBpcyBub3cgLnRleHR1cmUud3JhcFQuIiksdGhpcy50ZXh0dXJlLndyYXBUPXR9fSxtYWdGaWx0ZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAubWFnRmlsdGVyIGlzIG5vdyAudGV4dHVyZS5tYWdGaWx0ZXIuIiksdGhpcy50ZXh0dXJlLm1hZ0ZpbHRlcn0sc2V0OmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQ6IC5tYWdGaWx0ZXIgaXMgbm93IC50ZXh0dXJlLm1hZ0ZpbHRlci4iKSx0aGlzLnRleHR1cmUubWFnRmlsdGVyPXR9fSxtaW5GaWx0ZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAubWluRmlsdGVyIGlzIG5vdyAudGV4dHVyZS5taW5GaWx0ZXIuIiksdGhpcy50ZXh0dXJlLm1pbkZpbHRlcn0sc2V0OmZ1bmN0aW9uKHQpe2NvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQ6IC5taW5GaWx0ZXIgaXMgbm93IC50ZXh0dXJlLm1pbkZpbHRlci4iKSx0aGlzLnRleHR1cmUubWluRmlsdGVyPXR9fSxhbmlzb3Ryb3B5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLmFuaXNvdHJvcHkgaXMgbm93IC50ZXh0dXJlLmFuaXNvdHJvcHkuIiksdGhpcy50ZXh0dXJlLmFuaXNvdHJvcHl9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAuYW5pc290cm9weSBpcyBub3cgLnRleHR1cmUuYW5pc290cm9weS4iKSx0aGlzLnRleHR1cmUuYW5pc290cm9weT10fX0sb2Zmc2V0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLm9mZnNldCBpcyBub3cgLnRleHR1cmUub2Zmc2V0LiIpLHRoaXMudGV4dHVyZS5vZmZzZXR9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAub2Zmc2V0IGlzIG5vdyAudGV4dHVyZS5vZmZzZXQuIiksdGhpcy50ZXh0dXJlLm9mZnNldD10fX0scmVwZWF0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLnJlcGVhdCBpcyBub3cgLnRleHR1cmUucmVwZWF0LiIpLHRoaXMudGV4dHVyZS5yZXBlYXR9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAucmVwZWF0IGlzIG5vdyAudGV4dHVyZS5yZXBlYXQuIiksdGhpcy50ZXh0dXJlLnJlcGVhdD10fX0sZm9ybWF0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLmZvcm1hdCBpcyBub3cgLnRleHR1cmUuZm9ybWF0LiIpLHRoaXMudGV4dHVyZS5mb3JtYXR9LHNldDpmdW5jdGlvbih0KXtjb25zb2xlLndhcm4oIlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0OiAuZm9ybWF0IGlzIG5vdyAudGV4dHVyZS5mb3JtYXQuIiksdGhpcy50ZXh0dXJlLmZvcm1hdD10fX0sdHlwZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQ6IC50eXBlIGlzIG5vdyAudGV4dHVyZS50eXBlLiIpLHRoaXMudGV4dHVyZS50eXBlfSxzZXQ6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLnR5cGUgaXMgbm93IC50ZXh0dXJlLnR5cGUuIiksdGhpcy50ZXh0dXJlLnR5cGU9dH19LGdlbmVyYXRlTWlwbWFwczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQ6IC5nZW5lcmF0ZU1pcG1hcHMgaXMgbm93IC50ZXh0dXJlLmdlbmVyYXRlTWlwbWFwcy4iKSx0aGlzLnRleHR1cmUuZ2VuZXJhdGVNaXBtYXBzfSxzZXQ6ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5XZWJHTFJlbmRlclRhcmdldDogLmdlbmVyYXRlTWlwbWFwcyBpcyBub3cgLnRleHR1cmUuZ2VuZXJhdGVNaXBtYXBzLiIpLHRoaXMudGV4dHVyZS5nZW5lcmF0ZU1pcG1hcHM9dH19fSksc24ucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24odCl7Y29uc29sZS53YXJuKCJUSFJFRS5BdWRpbzogLmxvYWQgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIFRIUkVFLkF1ZGlvTG9hZGVyIGluc3RlYWQuIik7dmFyIGU9dGhpcztyZXR1cm4obmV3IGVuKS5sb2FkKHQsZnVuY3Rpb24odCl7ZS5zZXRCdWZmZXIodCl9KSx0aGlzfSxobi5wcm90b3R5cGUuZ2V0RGF0YT1mdW5jdGlvbigpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkF1ZGlvQW5hbHlzZXI6IC5nZXREYXRhKCkgaXMgbm93IC5nZXRGcmVxdWVuY3lEYXRhKCkuIiksdGhpcy5nZXRGcmVxdWVuY3lEYXRhKCl9LHQuV2ViR0xSZW5kZXJUYXJnZXRDdWJlPW4sdC5XZWJHTFJlbmRlclRhcmdldD1CLHQuV2ViR0xSZW5kZXJlcj15dCx0LlNoYWRlckxpYj1Ocix0LlVuaWZvcm1zTGliPVVyLHQuVW5pZm9ybXNVdGlscz1Mcix0LlNoYWRlckNodW5rPVJyLHQuRm9nRXhwMj14dCx0LkZvZz1fdCx0LlNjZW5lPWJ0LHQuTGVuc0ZsYXJlPXd0LHQuU3ByaXRlPUV0LHQuTE9EPVR0LHQuU2tpbm5lZE1lc2g9THQsdC5Ta2VsZXRvbj1TdCx0LkJvbmU9QXQsdC5NZXNoPWt0LHQuTGluZVNlZ21lbnRzPW9lLHQuTGluZT1hZSx0LlBvaW50cz1jZSx0Lkdyb3VwPWhlLHQuVmlkZW9UZXh0dXJlPWxlLHQuRGF0YVRleHR1cmU9VSx0LkNvbXByZXNzZWRUZXh0dXJlPXVlLHQuQ3ViZVRleHR1cmU9Yyx0LkNhbnZhc1RleHR1cmU9ZGUsdC5EZXB0aFRleHR1cmU9cGUsdC5UZXh0dXJlPXosdC5Db21wcmVzc2VkVGV4dHVyZUxvYWRlcj1saSx0LkJpbmFyeVRleHR1cmVMb2FkZXI9dWksdC5EYXRhVGV4dHVyZUxvYWRlcj11aSx0LkN1YmVUZXh0dXJlTG9hZGVyPXBpLHQuVGV4dHVyZUxvYWRlcj1maSx0Lk9iamVjdExvYWRlcj1WaSx0Lk1hdGVyaWFsTG9hZGVyPXppLHQuQnVmZmVyR2VvbWV0cnlMb2FkZXI9QmksdC5EZWZhdWx0TG9hZGluZ01hbmFnZXI9TW8sdC5Mb2FkaW5nTWFuYWdlcj1jaSx0LkpTT05Mb2FkZXI9SGksdC5JbWFnZUxvYWRlcj1kaSx0LkZvbnRMb2FkZXI9dG4sdC5GaWxlTG9hZGVyPWhpLHQuTG9hZGVyPUdpLHQuQ2FjaGU9d28sdC5BdWRpb0xvYWRlcj1lbix0LlNwb3RMaWdodFNoYWRvdz15aSx0LlNwb3RMaWdodD14aSx0LlBvaW50TGlnaHQ9X2ksdC5SZWN0QXJlYUxpZ2h0PW5uLHQuSGVtaXNwaGVyZUxpZ2h0PWdpLHQuRGlyZWN0aW9uYWxMaWdodFNoYWRvdz1iaSx0LkRpcmVjdGlvbmFsTGlnaHQ9d2ksdC5BbWJpZW50TGlnaHQ9TWksdC5MaWdodFNoYWRvdz12aSx0LkxpZ2h0PW1pLHQuU3RlcmVvQ2FtZXJhPXJuLHQuUGVyc3BlY3RpdmVDYW1lcmE9WHQsdC5PcnRob2dyYXBoaWNDYW1lcmE9WXQsdC5DdWJlQ2FtZXJhPWFuLHQuQ2FtZXJhPWN0LHQuQXVkaW9MaXN0ZW5lcj1vbix0LlBvc2l0aW9uYWxBdWRpbz1jbix0LkF1ZGlvQ29udGV4dD1wcyx0LkF1ZGlvQW5hbHlzZXI9aG4sdC5BdWRpbz1zbix0LlZlY3RvcktleWZyYW1lVHJhY2s9UmksdC5TdHJpbmdLZXlmcmFtZVRyYWNrPVVpLHQuUXVhdGVybmlvbktleWZyYW1lVHJhY2s9Q2ksdC5OdW1iZXJLZXlmcmFtZVRyYWNrPUlpLHQuQ29sb3JLZXlmcmFtZVRyYWNrPURpLHQuQm9vbGVhbktleWZyYW1lVHJhY2s9TmksdC5Qcm9wZXJ0eU1peGVyPWxuLHQuUHJvcGVydHlCaW5kaW5nPXVuLHQuS2V5ZnJhbWVUcmFjaz1PaSx0LkFuaW1hdGlvblV0aWxzPVJvLHQuQW5pbWF0aW9uT2JqZWN0R3JvdXA9ZG4sdC5BbmltYXRpb25NaXhlcj1mbix0LkFuaW1hdGlvbkNsaXA9RmksdC5Vbmlmb3JtPW1uLHQuSW5zdGFuY2VkQnVmZmVyR2VvbWV0cnk9Z24sdC5CdWZmZXJHZW9tZXRyeT1WdCx0Lkdlb21ldHJ5SWRDb3VudD1mdW5jdGlvbigpe3JldHVybiBhbysrfSx0Lkdlb21ldHJ5PXN0LHQuSW50ZXJsZWF2ZWRCdWZmZXJBdHRyaWJ1dGU9dm4sdC5JbnN0YW5jZWRJbnRlcmxlYXZlZEJ1ZmZlcj14bix0LkludGVybGVhdmVkQnVmZmVyPXluLHQuSW5zdGFuY2VkQnVmZmVyQXR0cmlidXRlPV9uLHQuRmFjZTM9Wix0Lk9iamVjdDNEPVgsdC5SYXljYXN0ZXI9Ym4sdC5MYXllcnM9Vyx0LkV2ZW50RGlzcGF0Y2hlcj1lLHQuQ2xvY2s9RW4sdC5RdWF0ZXJuaW9uTGluZWFySW50ZXJwb2xhbnQ9UGksdC5MaW5lYXJJbnRlcnBvbGFudD1TaSx0LkRpc2NyZXRlSW50ZXJwb2xhbnQ9QWksdC5DdWJpY0ludGVycG9sYW50PVRpLHQuSW50ZXJwb2xhbnQ9RWksdC5UcmlhbmdsZT1xLHQuU3BsaW5lPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCxlLGksbixyLGEsbyl7cmV0dXJuKDIqKGUtaSkrKHQ9LjUqKGktdCkpKyhuPS41KihuLWUpKSkqbysoLTMqKGUtaSktMip0LW4pKmErdCpyK2V9dGhpcy5wb2ludHM9dDt2YXIgaSxuLHIsYSxvLHMsYyxoLGwsdT1bXSxkPXt4OjAseTowLHo6MH07dGhpcy5pbml0RnJvbUFycmF5PWZ1bmN0aW9uKHQpe3RoaXMucG9pbnRzPVtdO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXRoaXMucG9pbnRzW2VdPXt4OnRbZV1bMF0seTp0W2VdWzFdLHo6dFtlXVsyXX19LHRoaXMuZ2V0UG9pbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGk9KHRoaXMucG9pbnRzLmxlbmd0aC0xKSp0LG49TWF0aC5mbG9vcihpKSxyPWktbix1WzBdPTA9PT1uP246bi0xLHVbMV09bix1WzJdPW4+dGhpcy5wb2ludHMubGVuZ3RoLTI/dGhpcy5wb2ludHMubGVuZ3RoLTE6bisxLHVbM109bj50aGlzLnBvaW50cy5sZW5ndGgtMz90aGlzLnBvaW50cy5sZW5ndGgtMTpuKzIscz10aGlzLnBvaW50c1t1WzBdXSxjPXRoaXMucG9pbnRzW3VbMV1dLGg9dGhpcy5wb2ludHNbdVsyXV0sbD10aGlzLnBvaW50c1t1WzNdXSxvPXIqKGE9cipyKSxkLng9ZShzLngsYy54LGgueCxsLngscixhLG8pLGQueT1lKHMueSxjLnksaC55LGwueSxyLGEsbyksZC56PWUocy56LGMueixoLnosbC56LHIsYSxvKSxkfSx0aGlzLmdldENvbnRyb2xQb2ludHNBcnJheT1mdW5jdGlvbigpe3ZhciB0LGUsaT10aGlzLnBvaW50cy5sZW5ndGgsbj1bXTtmb3IodD0wO3Q8aTt0KyspZT10aGlzLnBvaW50c1t0XSxuW3RdPVtlLngsZS55LGUuel07cmV0dXJuIG59LHRoaXMuZ2V0TGVuZ3RoPWZ1bmN0aW9uKHQpe3ZhciBlLGksbixyPTAsYT1uZXcgQ3Qsbz1uZXcgQ3Qscz1bXSxjPTA7Zm9yKHNbMF09MCx0fHwodD0xMDApLGk9dGhpcy5wb2ludHMubGVuZ3RoKnQsYS5jb3B5KHRoaXMucG9pbnRzWzBdKSx0PTE7dDxpO3QrKyllPXQvaSxuPXRoaXMuZ2V0UG9pbnQoZSksby5jb3B5KG4pLGMrPW8uZGlzdGFuY2VUbyhhKSxhLmNvcHkobiksZSo9dGhpcy5wb2ludHMubGVuZ3RoLTEsKGU9TWF0aC5mbG9vcihlKSkhPT1yJiYoc1tlXT1jLHI9ZSk7cmV0dXJuIHNbcy5sZW5ndGhdPWMse2NodW5rczpzLHRvdGFsOmN9fSx0aGlzLnJlcGFyYW1ldHJpemVCeUFyY0xlbmd0aD1mdW5jdGlvbih0KXt2YXIgZSxpLG4scixhLG8scz1bXSxjPW5ldyBDdCxoPXRoaXMuZ2V0TGVuZ3RoKCk7Zm9yKHMucHVzaChjLmNvcHkodGhpcy5wb2ludHNbMF0pLmNsb25lKCkpLGU9MTtlPHRoaXMucG9pbnRzLmxlbmd0aDtlKyspe2ZvcihpPWguY2h1bmtzW2VdLWguY2h1bmtzW2UtMV0sbz1NYXRoLmNlaWwodCppL2gudG90YWwpLHI9KGUtMSkvKHRoaXMucG9pbnRzLmxlbmd0aC0xKSxhPWUvKHRoaXMucG9pbnRzLmxlbmd0aC0xKSxpPTE7aTxvLTE7aSsrKW49cisxL28qaSooYS1yKSxuPXRoaXMuZ2V0UG9pbnQobikscy5wdXNoKGMuY29weShuKS5jbG9uZSgpKTtzLnB1c2goYy5jb3B5KHRoaXMucG9pbnRzW2VdKS5jbG9uZSgpKX10aGlzLnBvaW50cz1zfX0sdC5NYXRoPWVyLHQuU3BoZXJpY2FsPVRuLHQuQ3lsaW5kcmljYWw9U24sdC5QbGFuZT1ILHQuRnJ1c3R1bT1CdCx0LlNwaGVyZT16dCx0LlJheT1rLHQuTWF0cml4ND1JdCx0Lk1hdHJpeDM9Rix0LkJveDM9RCx0LkJveDI9Tyx0LkxpbmUzPVksdC5FdWxlcj1qLHQuVmVjdG9yND1QdCx0LlZlY3RvcjM9Q3QsdC5WZWN0b3IyPVYsdC5RdWF0ZXJuaW9uPXMsdC5Db2xvcj1OdCx0Lk1vcnBoQmxlbmRNZXNoPUFuLHQuSW1tZWRpYXRlUmVuZGVyT2JqZWN0PUxuLHQuVmVydGV4Tm9ybWFsc0hlbHBlcj1Sbix0LlNwb3RMaWdodEhlbHBlcj1Qbix0LlNrZWxldG9uSGVscGVyPUNuLHQuUG9pbnRMaWdodEhlbHBlcj1Jbix0LlJlY3RBcmVhTGlnaHRIZWxwZXI9VW4sdC5IZW1pc3BoZXJlTGlnaHRIZWxwZXI9Tm4sdC5HcmlkSGVscGVyPURuLHQuUG9sYXJHcmlkSGVscGVyPU9uLHQuRmFjZU5vcm1hbHNIZWxwZXI9Rm4sdC5EaXJlY3Rpb25hbExpZ2h0SGVscGVyPXpuLHQuQ2FtZXJhSGVscGVyPUJuLHQuQm94SGVscGVyPUduLHQuQXJyb3dIZWxwZXI9SG4sdC5BeGlzSGVscGVyPVZuLHQuQ2F0bXVsbFJvbUN1cnZlMz14cyx0LlNwbGluZUN1cnZlMz1fcyx0LkN1YmljQmV6aWVyQ3VydmUzPWJzLHQuUXVhZHJhdGljQmV6aWVyQ3VydmUzPXdzLHQuTGluZUN1cnZlMz1Ncyx0LkFyY0N1cnZlPWtuLHQuRWxsaXBzZUN1cnZlPVhpLHQuU3BsaW5lQ3VydmU9WWksdC5DdWJpY0JlemllckN1cnZlPXFpLHQuUXVhZHJhdGljQmV6aWVyQ3VydmU9WmksdC5MaW5lQ3VydmU9amksdC5TaGFwZT1KaSx0LlNoYXBlUGF0aD1LaSx0LlBhdGg9UWksdC5Gb250PSRpLHQuQ3VydmVQYXRoPVdpLHQuQ3VydmU9a2ksdC5TaGFwZVV0aWxzPXhvLHQuU2NlbmVVdGlscz17Y3JlYXRlTXVsdGlNYXRlcmlhbE9iamVjdDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgaT1uZXcgaGUsbj0wLHI9ZS5sZW5ndGg7bjxyO24rKylpLmFkZChuZXcga3QodCxlW25dKSk7cmV0dXJuIGl9LGRldGFjaDpmdW5jdGlvbih0LGUsaSl7dC5hcHBseU1hdHJpeChlLm1hdHJpeFdvcmxkKSxlLnJlbW92ZSh0KSxpLmFkZCh0KX0sYXR0YWNoOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbj1uZXcgSXQ7bi5nZXRJbnZlcnNlKGkubWF0cml4V29ybGQpLHQuYXBwbHlNYXRyaXgobiksZS5yZW1vdmUodCksaS5hZGQodCl9fSx0LkN1cnZlVXRpbHM9UG8sdC5XaXJlZnJhbWVHZW9tZXRyeT1mZSx0LlBhcmFtZXRyaWNHZW9tZXRyeT1nZSx0LlBhcmFtZXRyaWNCdWZmZXJHZW9tZXRyeT1tZSx0LlRldHJhaGVkcm9uR2VvbWV0cnk9eGUsdC5UZXRyYWhlZHJvbkJ1ZmZlckdlb21ldHJ5PXllLHQuT2N0YWhlZHJvbkdlb21ldHJ5PWJlLHQuT2N0YWhlZHJvbkJ1ZmZlckdlb21ldHJ5PV9lLHQuSWNvc2FoZWRyb25HZW9tZXRyeT1NZSx0Lkljb3NhaGVkcm9uQnVmZmVyR2VvbWV0cnk9d2UsdC5Eb2RlY2FoZWRyb25HZW9tZXRyeT1UZSx0LkRvZGVjYWhlZHJvbkJ1ZmZlckdlb21ldHJ5PUVlLHQuUG9seWhlZHJvbkdlb21ldHJ5PVNlLHQuUG9seWhlZHJvbkJ1ZmZlckdlb21ldHJ5PXZlLHQuVHViZUdlb21ldHJ5PUxlLHQuVHViZUJ1ZmZlckdlb21ldHJ5PUFlLHQuVG9ydXNLbm90R2VvbWV0cnk9UGUsdC5Ub3J1c0tub3RCdWZmZXJHZW9tZXRyeT1SZSx0LlRvcnVzR2VvbWV0cnk9SWUsdC5Ub3J1c0J1ZmZlckdlb21ldHJ5PUNlLHQuVGV4dEdlb21ldHJ5PU5lLHQuU3BoZXJlQnVmZmVyR2VvbWV0cnk9RGUsdC5TcGhlcmVHZW9tZXRyeT1PZSx0LlJpbmdHZW9tZXRyeT16ZSx0LlJpbmdCdWZmZXJHZW9tZXRyeT1GZSx0LlBsYW5lQnVmZmVyR2VvbWV0cnk9V3QsdC5QbGFuZUdlb21ldHJ5PUJlLHQuTGF0aGVHZW9tZXRyeT1IZSx0LkxhdGhlQnVmZmVyR2VvbWV0cnk9R2UsdC5TaGFwZUdlb21ldHJ5PWtlLHQuU2hhcGVCdWZmZXJHZW9tZXRyeT1WZSx0LkV4dHJ1ZGVHZW9tZXRyeT1VZSx0LkVkZ2VzR2VvbWV0cnk9amUsdC5Db25lR2VvbWV0cnk9WWUsdC5Db25lQnVmZmVyR2VvbWV0cnk9cWUsdC5DeWxpbmRlckdlb21ldHJ5PVhlLHQuQ3lsaW5kZXJCdWZmZXJHZW9tZXRyeT1XZSx0LkNpcmNsZUJ1ZmZlckdlb21ldHJ5PVplLHQuQ2lyY2xlR2VvbWV0cnk9SmUsdC5Cb3hCdWZmZXJHZW9tZXRyeT1qdCx0LkJveEdlb21ldHJ5PVFlLHQuU2hhZG93TWF0ZXJpYWw9S2UsdC5TcHJpdGVNYXRlcmlhbD1NdCx0LlJhd1NoYWRlck1hdGVyaWFsPSRlLHQuU2hhZGVyTWF0ZXJpYWw9RnQsdC5Qb2ludHNNYXRlcmlhbD1zZSx0Lk11bHRpTWF0ZXJpYWw9dGksdC5NZXNoUGh5c2ljYWxNYXRlcmlhbD1paSx0Lk1lc2hTdGFuZGFyZE1hdGVyaWFsPWVpLHQuTWVzaFBob25nTWF0ZXJpYWw9bmksdC5NZXNoVG9vbk1hdGVyaWFsPXJpLHQuTWVzaE5vcm1hbE1hdGVyaWFsPWFpLHQuTWVzaExhbWJlcnRNYXRlcmlhbD1vaSx0Lk1lc2hEZXB0aE1hdGVyaWFsPUcsdC5NZXNoQmFzaWNNYXRlcmlhbD1IdCx0LkxpbmVEYXNoZWRNYXRlcmlhbD1zaSx0LkxpbmVCYXNpY01hdGVyaWFsPVJ0LHQuTWF0ZXJpYWw9Tix0LkZsb2F0NjRCdWZmZXJBdHRyaWJ1dGU9YXQsdC5GbG9hdDMyQnVmZmVyQXR0cmlidXRlPXJ0LHQuVWludDMyQnVmZmVyQXR0cmlidXRlPW50LHQuSW50MzJCdWZmZXJBdHRyaWJ1dGU9aXQsdC5VaW50MTZCdWZmZXJBdHRyaWJ1dGU9ZXQsdC5JbnQxNkJ1ZmZlckF0dHJpYnV0ZT10dCx0LlVpbnQ4Q2xhbXBlZEJ1ZmZlckF0dHJpYnV0ZT0kLHQuVWludDhCdWZmZXJBdHRyaWJ1dGU9Syx0LkludDhCdWZmZXJBdHRyaWJ1dGU9USx0LkJ1ZmZlckF0dHJpYnV0ZT1KLHQuUkVWSVNJT049IjgzIix0Lk1PVVNFPXtMRUZUOjAsTUlERExFOjEsUklHSFQ6Mn0sdC5DdWxsRmFjZU5vbmU9MCx0LkN1bGxGYWNlQmFjaz0xLHQuQ3VsbEZhY2VGcm9udD0yLHQuQ3VsbEZhY2VGcm9udEJhY2s9Myx0LkZyb250RmFjZURpcmVjdGlvbkNXPTAsdC5Gcm9udEZhY2VEaXJlY3Rpb25DQ1c9MSx0LkJhc2ljU2hhZG93TWFwPTAsdC5QQ0ZTaGFkb3dNYXA9MSx0LlBDRlNvZnRTaGFkb3dNYXA9Mix0LkZyb250U2lkZT0wLHQuQmFja1NpZGU9MSx0LkRvdWJsZVNpZGU9Mix0LkZsYXRTaGFkaW5nPTEsdC5TbW9vdGhTaGFkaW5nPTIsdC5Ob0NvbG9ycz0wLHQuRmFjZUNvbG9ycz0xLHQuVmVydGV4Q29sb3JzPTIsdC5Ob0JsZW5kaW5nPTAsdC5Ob3JtYWxCbGVuZGluZz0xLHQuQWRkaXRpdmVCbGVuZGluZz0yLHQuU3VidHJhY3RpdmVCbGVuZGluZz0zLHQuTXVsdGlwbHlCbGVuZGluZz00LHQuQ3VzdG9tQmxlbmRpbmc9NSx0LkJsZW5kaW5nTW9kZT1Rbix0LkFkZEVxdWF0aW9uPTEwMCx0LlN1YnRyYWN0RXF1YXRpb249MTAxLHQuUmV2ZXJzZVN1YnRyYWN0RXF1YXRpb249MTAyLHQuTWluRXF1YXRpb249MTAzLHQuTWF4RXF1YXRpb249MTA0LHQuWmVyb0ZhY3Rvcj0yMDAsdC5PbmVGYWN0b3I9MjAxLHQuU3JjQ29sb3JGYWN0b3I9MjAyLHQuT25lTWludXNTcmNDb2xvckZhY3Rvcj0yMDMsdC5TcmNBbHBoYUZhY3Rvcj0yMDQsdC5PbmVNaW51c1NyY0FscGhhRmFjdG9yPTIwNSx0LkRzdEFscGhhRmFjdG9yPTIwNix0Lk9uZU1pbnVzRHN0QWxwaGFGYWN0b3I9MjA3LHQuRHN0Q29sb3JGYWN0b3I9MjA4LHQuT25lTWludXNEc3RDb2xvckZhY3Rvcj0yMDksdC5TcmNBbHBoYVNhdHVyYXRlRmFjdG9yPTIxMCx0Lk5ldmVyRGVwdGg9MCx0LkFsd2F5c0RlcHRoPTEsdC5MZXNzRGVwdGg9Mix0Lkxlc3NFcXVhbERlcHRoPTMsdC5FcXVhbERlcHRoPTQsdC5HcmVhdGVyRXF1YWxEZXB0aD01LHQuR3JlYXRlckRlcHRoPTYsdC5Ob3RFcXVhbERlcHRoPTcsdC5NdWx0aXBseU9wZXJhdGlvbj0wLHQuTWl4T3BlcmF0aW9uPTEsdC5BZGRPcGVyYXRpb249Mix0Lk5vVG9uZU1hcHBpbmc9MCx0LkxpbmVhclRvbmVNYXBwaW5nPTEsdC5SZWluaGFyZFRvbmVNYXBwaW5nPTIsdC5VbmNoYXJ0ZWQyVG9uZU1hcHBpbmc9Myx0LkNpbmVvblRvbmVNYXBwaW5nPTQsdC5VVk1hcHBpbmc9MzAwLHQuQ3ViZVJlZmxlY3Rpb25NYXBwaW5nPTMwMSx0LkN1YmVSZWZyYWN0aW9uTWFwcGluZz0zMDIsdC5FcXVpcmVjdGFuZ3VsYXJSZWZsZWN0aW9uTWFwcGluZz0zMDMsdC5FcXVpcmVjdGFuZ3VsYXJSZWZyYWN0aW9uTWFwcGluZz0zMDQsdC5TcGhlcmljYWxSZWZsZWN0aW9uTWFwcGluZz0zMDUsdC5DdWJlVVZSZWZsZWN0aW9uTWFwcGluZz0zMDYsdC5DdWJlVVZSZWZyYWN0aW9uTWFwcGluZz0zMDcsdC5UZXh0dXJlTWFwcGluZz1Lbix0LlJlcGVhdFdyYXBwaW5nPTFlMyx0LkNsYW1wVG9FZGdlV3JhcHBpbmc9MTAwMSx0Lk1pcnJvcmVkUmVwZWF0V3JhcHBpbmc9MTAwMix0LlRleHR1cmVXcmFwcGluZz0kbix0Lk5lYXJlc3RGaWx0ZXI9MTAwMyx0Lk5lYXJlc3RNaXBNYXBOZWFyZXN0RmlsdGVyPTEwMDQsdC5OZWFyZXN0TWlwTWFwTGluZWFyRmlsdGVyPTEwMDUsdC5MaW5lYXJGaWx0ZXI9MTAwNix0LkxpbmVhck1pcE1hcE5lYXJlc3RGaWx0ZXI9MTAwNyx0LkxpbmVhck1pcE1hcExpbmVhckZpbHRlcj0xMDA4LHQuVGV4dHVyZUZpbHRlcj10cix0LlVuc2lnbmVkQnl0ZVR5cGU9MTAwOSx0LkJ5dGVUeXBlPTEwMTAsdC5TaG9ydFR5cGU9MTAxMSx0LlVuc2lnbmVkU2hvcnRUeXBlPTEwMTIsdC5JbnRUeXBlPTEwMTMsdC5VbnNpZ25lZEludFR5cGU9MTAxNCx0LkZsb2F0VHlwZT0xMDE1LHQuSGFsZkZsb2F0VHlwZT0xMDE2LHQuVW5zaWduZWRTaG9ydDQ0NDRUeXBlPTEwMTcsdC5VbnNpZ25lZFNob3J0NTU1MVR5cGU9MTAxOCx0LlVuc2lnbmVkU2hvcnQ1NjVUeXBlPTEwMTksdC5VbnNpZ25lZEludDI0OFR5cGU9MTAyMCx0LkFscGhhRm9ybWF0PTEwMjEsdC5SR0JGb3JtYXQ9MTAyMix0LlJHQkFGb3JtYXQ9MTAyMyx0Lkx1bWluYW5jZUZvcm1hdD0xMDI0LHQuTHVtaW5hbmNlQWxwaGFGb3JtYXQ9MTAyNSx0LlJHQkVGb3JtYXQ9MTAyMyx0LkRlcHRoRm9ybWF0PTEwMjYsdC5EZXB0aFN0ZW5jaWxGb3JtYXQ9MTAyNyx0LlJHQl9TM1RDX0RYVDFfRm9ybWF0PTIwMDEsdC5SR0JBX1MzVENfRFhUMV9Gb3JtYXQ9MjAwMix0LlJHQkFfUzNUQ19EWFQzX0Zvcm1hdD0yMDAzLHQuUkdCQV9TM1RDX0RYVDVfRm9ybWF0PTIwMDQsdC5SR0JfUFZSVENfNEJQUFYxX0Zvcm1hdD0yMTAwLHQuUkdCX1BWUlRDXzJCUFBWMV9Gb3JtYXQ9MjEwMSx0LlJHQkFfUFZSVENfNEJQUFYxX0Zvcm1hdD0yMTAyLHQuUkdCQV9QVlJUQ18yQlBQVjFfRm9ybWF0PTIxMDMsdC5SR0JfRVRDMV9Gb3JtYXQ9MjE1MSx0Lkxvb3BPbmNlPTIyMDAsdC5Mb29wUmVwZWF0PTIyMDEsdC5Mb29wUGluZ1Bvbmc9MjIwMix0LkludGVycG9sYXRlRGlzY3JldGU9MjMwMCx0LkludGVycG9sYXRlTGluZWFyPTIzMDEsdC5JbnRlcnBvbGF0ZVNtb290aD0yMzAyLHQuWmVyb0N1cnZhdHVyZUVuZGluZz0yNDAwLHQuWmVyb1Nsb3BlRW5kaW5nPTI0MDEsdC5XcmFwQXJvdW5kRW5kaW5nPTI0MDIsdC5UcmlhbmdsZXNEcmF3TW9kZT0wLHQuVHJpYW5nbGVTdHJpcERyYXdNb2RlPTEsdC5UcmlhbmdsZUZhbkRyYXdNb2RlPTIsdC5MaW5lYXJFbmNvZGluZz0zZTMsdC5zUkdCRW5jb2Rpbmc9MzAwMSx0LkdhbW1hRW5jb2Rpbmc9MzAwNyx0LlJHQkVFbmNvZGluZz0zMDAyLHQuTG9nTHV2RW5jb2Rpbmc9MzAwMyx0LlJHQk03RW5jb2Rpbmc9MzAwNCx0LlJHQk0xNkVuY29kaW5nPTMwMDUsdC5SR0JERW5jb2Rpbmc9MzAwNix0LkJhc2ljRGVwdGhQYWNraW5nPTMyMDAsdC5SR0JBRGVwdGhQYWNraW5nPTMyMDEsdC5DdWJlR2VvbWV0cnk9UWUsdC5GYWNlND1mdW5jdGlvbih0LGUsaSxuLHIsYSxvKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5GYWNlNCBoYXMgYmVlbiByZW1vdmVkLiBBIFRIUkVFLkZhY2UzIHdpbGwgYmUgY3JlYXRlZCBpbnN0ZWFkLiIpLG5ldyBaKHQsZSxpLHIsYSxvKX0sdC5MaW5lU3RyaXA9MCx0LkxpbmVQaWVjZXM9MSx0Lk1lc2hGYWNlTWF0ZXJpYWw9ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuTWVzaEZhY2VNYXRlcmlhbCBoYXMgYmVlbiByZW5hbWVkIHRvIFRIUkVFLk11bHRpTWF0ZXJpYWwuIiksbmV3IHRpKHQpfSx0LlBvaW50Q2xvdWQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5Qb2ludENsb3VkIGhhcyBiZWVuIHJlbmFtZWQgdG8gVEhSRUUuUG9pbnRzLiIpLG5ldyBjZSh0LGUpfSx0LlBhcnRpY2xlPWZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlBhcnRpY2xlIGhhcyBiZWVuIHJlbmFtZWQgdG8gVEhSRUUuU3ByaXRlLiIpLG5ldyBFdCh0KX0sdC5QYXJ0aWNsZVN5c3RlbT1mdW5jdGlvbih0LGUpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlBhcnRpY2xlU3lzdGVtIGhhcyBiZWVuIHJlbmFtZWQgdG8gVEhSRUUuUG9pbnRzLiIpLG5ldyBjZSh0LGUpfSx0LlBvaW50Q2xvdWRNYXRlcmlhbD1mdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5Qb2ludENsb3VkTWF0ZXJpYWwgaGFzIGJlZW4gcmVuYW1lZCB0byBUSFJFRS5Qb2ludHNNYXRlcmlhbC4iKSxuZXcgc2UodCl9LHQuUGFydGljbGVCYXNpY01hdGVyaWFsPWZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlBhcnRpY2xlQmFzaWNNYXRlcmlhbCBoYXMgYmVlbiByZW5hbWVkIHRvIFRIUkVFLlBvaW50c01hdGVyaWFsLiIpLG5ldyBzZSh0KX0sdC5QYXJ0aWNsZVN5c3RlbU1hdGVyaWFsPWZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlBhcnRpY2xlU3lzdGVtTWF0ZXJpYWwgaGFzIGJlZW4gcmVuYW1lZCB0byBUSFJFRS5Qb2ludHNNYXRlcmlhbC4iKSxuZXcgc2UodCl9LHQuVmVydGV4PWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5WZXJ0ZXggaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFRIUkVFLlZlY3RvcjMgaW5zdGVhZC4iKSxuZXcgQ3QodCxlLGkpfSx0LkR5bmFtaWNCdWZmZXJBdHRyaWJ1dGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5EeW5hbWljQnVmZmVyQXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKCkuc2V0RHluYW1pYyggdHJ1ZSApIGluc3RlYWQuIiksbmV3IEoodCxlKS5zZXREeW5hbWljKCEwKX0sdC5JbnQ4QXR0cmlidXRlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuSW50OEF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgbmV3IFRIUkVFLkludDhCdWZmZXJBdHRyaWJ1dGUoKSBpbnN0ZWFkLiIpLG5ldyBRKHQsZSl9LHQuVWludDhBdHRyaWJ1dGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5VaW50OEF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgbmV3IFRIUkVFLlVpbnQ4QnVmZmVyQXR0cmlidXRlKCkgaW5zdGVhZC4iKSxuZXcgSyh0LGUpfSx0LlVpbnQ4Q2xhbXBlZEF0dHJpYnV0ZT1mdW5jdGlvbih0LGUpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlVpbnQ4Q2xhbXBlZEF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgbmV3IFRIUkVFLlVpbnQ4Q2xhbXBlZEJ1ZmZlckF0dHJpYnV0ZSgpIGluc3RlYWQuIiksbmV3ICQodCxlKX0sdC5JbnQxNkF0dHJpYnV0ZT1mdW5jdGlvbih0LGUpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkludDE2QXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBuZXcgVEhSRUUuSW50MTZCdWZmZXJBdHRyaWJ1dGUoKSBpbnN0ZWFkLiIpLG5ldyB0dCh0LGUpfSx0LlVpbnQxNkF0dHJpYnV0ZT1mdW5jdGlvbih0LGUpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlVpbnQxNkF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgbmV3IFRIUkVFLlVpbnQxNkJ1ZmZlckF0dHJpYnV0ZSgpIGluc3RlYWQuIiksbmV3IGV0KHQsZSl9LHQuSW50MzJBdHRyaWJ1dGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5JbnQzMkF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgbmV3IFRIUkVFLkludDMyQnVmZmVyQXR0cmlidXRlKCkgaW5zdGVhZC4iKSxuZXcgaXQodCxlKX0sdC5VaW50MzJBdHRyaWJ1dGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5VaW50MzJBdHRyaWJ1dGUgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIG5ldyBUSFJFRS5VaW50MzJCdWZmZXJBdHRyaWJ1dGUoKSBpbnN0ZWFkLiIpLG5ldyBudCh0LGUpfSx0LkZsb2F0MzJBdHRyaWJ1dGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5GbG9hdDMyQXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSgpIGluc3RlYWQuIiksbmV3IHJ0KHQsZSl9LHQuRmxvYXQ2NEF0dHJpYnV0ZT1mdW5jdGlvbih0LGUpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkZsb2F0NjRBdHRyaWJ1dGUgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIG5ldyBUSFJFRS5GbG9hdDY0QnVmZmVyQXR0cmlidXRlKCkgaW5zdGVhZC4iKSxuZXcgYXQodCxlKX0sdC5DbG9zZWRTcGxpbmVDdXJ2ZTM9am4sdC5Cb3VuZGluZ0JveEhlbHBlcj1mdW5jdGlvbih0LGUpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLkJvdW5kaW5nQm94SGVscGVyIGhhcyBiZWVuIGRlcHJlY2F0ZWQuIENyZWF0aW5nIGEgVEhSRUUuQm94SGVscGVyIGluc3RlYWQuIiksbmV3IEduKHQsZSl9LHQuRWRnZXNIZWxwZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5FZGdlc0hlbHBlciBoYXMgYmVlbiByZW1vdmVkLiBVc2UgVEhSRUUuRWRnZXNHZW9tZXRyeSBpbnN0ZWFkLiIpLG5ldyBvZShuZXcgamUodC5nZW9tZXRyeSksbmV3IFJ0KHtjb2xvcjp2b2lkIDAhPT1lP2U6MTY3NzcyMTV9KSl9LHQuV2lyZWZyYW1lSGVscGVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGNvbnNvbGUud2FybigiVEhSRUUuV2lyZWZyYW1lSGVscGVyIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5XaXJlZnJhbWVHZW9tZXRyeSBpbnN0ZWFkLiIpLG5ldyBvZShuZXcgZmUodC5nZW9tZXRyeSksbmV3IFJ0KHtjb2xvcjp2b2lkIDAhPT1lP2U6MTY3NzcyMTV9KSl9LHQuWEhSTG9hZGVyPWZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLndhcm4oIlRIUkVFLlhIUkxvYWRlciBoYXMgYmVlbiByZW5hbWVkIHRvIFRIUkVFLkZpbGVMb2FkZXIuIiksbmV3IGhpKHQpfSx0Lkdlb21ldHJ5VXRpbHM9e21lcmdlOmZ1bmN0aW9uKHQsZSxpKXt2YXIgbjtjb25zb2xlLndhcm4oIlRIUkVFLkdlb21ldHJ5VXRpbHM6IC5tZXJnZSgpIGhhcyBiZWVuIG1vdmVkIHRvIEdlb21ldHJ5LiBVc2UgZ2VvbWV0cnkubWVyZ2UoIGdlb21ldHJ5MiwgbWF0cml4LCBtYXRlcmlhbEluZGV4T2Zmc2V0ICkgaW5zdGVhZC4iKSxlLmlzTWVzaCYmKGUubWF0cml4QXV0b1VwZGF0ZSYmZS51cGRhdGVNYXRyaXgoKSxuPWUubWF0cml4LGU9ZS5nZW9tZXRyeSksdC5tZXJnZShlLG4saSl9LGNlbnRlcjpmdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS53YXJuKCJUSFJFRS5HZW9tZXRyeVV0aWxzOiAuY2VudGVyKCkgaGFzIGJlZW4gbW92ZWQgdG8gR2VvbWV0cnkuIFVzZSBnZW9tZXRyeS5jZW50ZXIoKSBpbnN0ZWFkLiIpLHQuY2VudGVyKCl9fSx0LkltYWdlVXRpbHM9e2Nyb3NzT3JpZ2luOnZvaWQgMCxsb2FkVGV4dHVyZTpmdW5jdGlvbih0LGUsaSxuKXtjb25zb2xlLndhcm4oIlRIUkVFLkltYWdlVXRpbHMubG9hZFRleHR1cmUgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIFRIUkVFLlRleHR1cmVMb2FkZXIoKSBpbnN0ZWFkLiIpO3ZhciByPW5ldyBmaTtyZXR1cm4gci5zZXRDcm9zc09yaWdpbih0aGlzLmNyb3NzT3JpZ2luKSx0PXIubG9hZCh0LGksdm9pZCAwLG4pLGUmJih0Lm1hcHBpbmc9ZSksdH0sbG9hZFRleHR1cmVDdWJlOmZ1bmN0aW9uKHQsZSxpLG4pe2NvbnNvbGUud2FybigiVEhSRUUuSW1hZ2VVdGlscy5sb2FkVGV4dHVyZUN1YmUgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVXNlIFRIUkVFLkN1YmVUZXh0dXJlTG9hZGVyKCkgaW5zdGVhZC4iKTt2YXIgcj1uZXcgcGk7cmV0dXJuIHIuc2V0Q3Jvc3NPcmlnaW4odGhpcy5jcm9zc09yaWdpbiksdD1yLmxvYWQodCxpLHZvaWQgMCxuKSxlJiYodC5tYXBwaW5nPWUpLHR9LGxvYWRDb21wcmVzc2VkVGV4dHVyZTpmdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRIUkVFLkltYWdlVXRpbHMubG9hZENvbXByZXNzZWRUZXh0dXJlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5ERFNMb2FkZXIgaW5zdGVhZC4iKX0sbG9hZENvbXByZXNzZWRUZXh0dXJlQ3ViZTpmdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRIUkVFLkltYWdlVXRpbHMubG9hZENvbXByZXNzZWRUZXh0dXJlQ3ViZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgVEhSRUUuRERTTG9hZGVyIGluc3RlYWQuIil9fSx0LlByb2plY3Rvcj1mdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRIUkVFLlByb2plY3RvciBoYXMgYmVlbiBtb3ZlZCB0byAvZXhhbXBsZXMvanMvcmVuZGVyZXJzL1Byb2plY3Rvci5qcy4iKSx0aGlzLnByb2plY3RWZWN0b3I9ZnVuY3Rpb24odCxlKXtjb25zb2xlLndhcm4oIlRIUkVFLlByb2plY3RvcjogLnByb2plY3RWZWN0b3IoKSBpcyBub3cgdmVjdG9yLnByb2plY3QoKS4iKSx0LnByb2plY3QoZSl9LHRoaXMudW5wcm9qZWN0VmVjdG9yPWZ1bmN0aW9uKHQsZSl7Y29uc29sZS53YXJuKCJUSFJFRS5Qcm9qZWN0b3I6IC51bnByb2plY3RWZWN0b3IoKSBpcyBub3cgdmVjdG9yLnVucHJvamVjdCgpLiIpLHQudW5wcm9qZWN0KGUpfSx0aGlzLnBpY2tpbmdSYXk9ZnVuY3Rpb24oKXtjb25zb2xlLmVycm9yKCJUSFJFRS5Qcm9qZWN0b3I6IC5waWNraW5nUmF5KCkgaXMgbm93IHJheWNhc3Rlci5zZXRGcm9tQ2FtZXJhKCkuIil9fSx0LkNhbnZhc1JlbmRlcmVyPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiVEhSRUUuQ2FudmFzUmVuZGVyZXIgaGFzIGJlZW4gbW92ZWQgdG8gL2V4YW1wbGVzL2pzL3JlbmRlcmVycy9DYW52YXNSZW5kZXJlci5qcyIpLHRoaXMuZG9tRWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCJjYW52YXMiKSx0aGlzLmNsZWFyPWZ1bmN0aW9uKCl7fSx0aGlzLnJlbmRlcj1mdW5jdGlvbigpe30sdGhpcy5zZXRDbGVhckNvbG9yPWZ1bmN0aW9uKCl7fSx0aGlzLnNldFNpemU9ZnVuY3Rpb24oKXt9fSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSl9KTwvc2NyaXB0PjxzY3JpcHQ+dmFyIF9nc1Njb3BlPSJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cyYmInVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOnRoaXN8fHdpbmRvdzsoX2dzU2NvcGUuX2dzUXVldWV8fChfZ3NTY29wZS5fZ3NRdWV1ZT1bXSkpLnB1c2goZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQsbCxlLHcseCxiLFAsZyxpLHYsTyx5LFQsZixwLG0scztfZ3NTY29wZS5fZ3NEZWZpbmUoIlR3ZWVuTWF4IixbImNvcmUuQW5pbWF0aW9uIiwiY29yZS5TaW1wbGVUaW1lbGluZSIsIlR3ZWVuTGl0ZSJdLGZ1bmN0aW9uKHMsXyxtKXt2YXIgZz1mdW5jdGlvbih0KXt2YXIgZSxpPVtdLHM9dC5sZW5ndGg7Zm9yKGU9MDtlIT09cztpLnB1c2godFtlKytdKSk7cmV0dXJuIGl9LHY9ZnVuY3Rpb24odCxlLGkpe3ZhciBzLHIsbj10LmN5Y2xlO2ZvcihzIGluIG4pcj1uW3NdLHRbc109ImZ1bmN0aW9uIj09dHlwZW9mIHI/ci5jYWxsKGVbaV0saSk6cltpJXIubGVuZ3RoXTtkZWxldGUgdC5jeWNsZX0seT1mdW5jdGlvbih0LGUsaSl7bS5jYWxsKHRoaXMsdCxlLGkpLHRoaXMuX2N5Y2xlPTAsdGhpcy5feW95bz0hMD09PXRoaXMudmFycy55b3lvLHRoaXMuX3JlcGVhdD10aGlzLnZhcnMucmVwZWF0fHwwLHRoaXMuX3JlcGVhdERlbGF5PXRoaXMudmFycy5yZXBlYXREZWxheXx8MCx0aGlzLl9kaXJ0eT0hMCx0aGlzLnJlbmRlcj15LnByb3RvdHlwZS5yZW5kZXJ9LFQ9MWUtMTAseD1tLl9pbnRlcm5hbHMsYj14LmlzU2VsZWN0b3Isdz14LmlzQXJyYXksdD15LnByb3RvdHlwZT1tLnRvKHt9LC4xLHt9KSxQPVtdO3kudmVyc2lvbj0iMS4xOC4wIix0LmNvbnN0cnVjdG9yPXksdC5raWxsKCkuX2djPSExLHkua2lsbFR3ZWVuc09mPXkua2lsbERlbGF5ZWRDYWxsc1RvPW0ua2lsbFR3ZWVuc09mLHkuZ2V0VHdlZW5zT2Y9bS5nZXRUd2VlbnNPZix5LmxhZ1Ntb290aGluZz1tLmxhZ1Ntb290aGluZyx5LnRpY2tlcj1tLnRpY2tlcix5LnJlbmRlcj1tLnJlbmRlcix0LmludmFsaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5feW95bz0hMD09PXRoaXMudmFycy55b3lvLHRoaXMuX3JlcGVhdD10aGlzLnZhcnMucmVwZWF0fHwwLHRoaXMuX3JlcGVhdERlbGF5PXRoaXMudmFycy5yZXBlYXREZWxheXx8MCx0aGlzLl91bmNhY2hlKCEwKSxtLnByb3RvdHlwZS5pbnZhbGlkYXRlLmNhbGwodGhpcyl9LHQudXBkYXRlVG89ZnVuY3Rpb24odCxlKXt2YXIgaSxzPXRoaXMucmF0aW8scj10aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyfHx0LmltbWVkaWF0ZVJlbmRlcjtmb3IoaSBpbiBlJiZ0aGlzLl9zdGFydFRpbWU8dGhpcy5fdGltZWxpbmUuX3RpbWUmJih0aGlzLl9zdGFydFRpbWU9dGhpcy5fdGltZWxpbmUuX3RpbWUsdGhpcy5fdW5jYWNoZSghMSksdGhpcy5fZ2M/dGhpcy5fZW5hYmxlZCghMCwhMSk6dGhpcy5fdGltZWxpbmUuaW5zZXJ0KHRoaXMsdGhpcy5fc3RhcnRUaW1lLXRoaXMuX2RlbGF5KSksdCl0aGlzLnZhcnNbaV09dFtpXTtpZih0aGlzLl9pbml0dGVkfHxyKWlmKGUpdGhpcy5faW5pdHRlZD0hMSxyJiZ0aGlzLnJlbmRlcigwLCEwLCEwKTtlbHNlIGlmKHRoaXMuX2djJiZ0aGlzLl9lbmFibGVkKCEwLCExKSx0aGlzLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkJiZ0aGlzLl9maXJzdFBUJiZtLl9vblBsdWdpbkV2ZW50KCJfb25EaXNhYmxlIix0aGlzKSwuOTk4PHRoaXMuX3RpbWUvdGhpcy5fZHVyYXRpb24pe3ZhciBuPXRoaXMuX3RpbWU7dGhpcy5yZW5kZXIoMCwhMCwhMSksdGhpcy5faW5pdHRlZD0hMSx0aGlzLnJlbmRlcihuLCEwLCExKX1lbHNlIGlmKDA8dGhpcy5fdGltZXx8cil7dGhpcy5faW5pdHRlZD0hMSx0aGlzLl9pbml0KCk7Zm9yKHZhciBhLG89MS8oMS1zKSxsPXRoaXMuX2ZpcnN0UFQ7bDspYT1sLnMrbC5jLGwuYyo9byxsLnM9YS1sLmMsbD1sLl9uZXh0fXJldHVybiB0aGlzfSx0LnJlbmRlcj1mdW5jdGlvbih0LGUsaSl7dGhpcy5faW5pdHRlZHx8MD09PXRoaXMuX2R1cmF0aW9uJiZ0aGlzLnZhcnMucmVwZWF0JiZ0aGlzLmludmFsaWRhdGUoKTt2YXIgcyxyLG4sYSxvLGwsaCxfLHU9dGhpcy5fZGlydHk/dGhpcy50b3RhbER1cmF0aW9uKCk6dGhpcy5fdG90YWxEdXJhdGlvbixjPXRoaXMuX3RpbWUsZj10aGlzLl90b3RhbFRpbWUscD10aGlzLl9jeWNsZSxkPXRoaXMuX2R1cmF0aW9uLG09dGhpcy5fcmF3UHJldlRpbWU7aWYodTw9dD8odGhpcy5fdG90YWxUaW1lPXUsdGhpcy5fY3ljbGU9dGhpcy5fcmVwZWF0LHRoaXMuX3lveW8mJjAhPSgxJnRoaXMuX2N5Y2xlKT8odGhpcy5fdGltZT0wLHRoaXMucmF0aW89dGhpcy5fZWFzZS5fY2FsY0VuZD90aGlzLl9lYXNlLmdldFJhdGlvKDApOjApOih0aGlzLl90aW1lPWQsdGhpcy5yYXRpbz10aGlzLl9lYXNlLl9jYWxjRW5kP3RoaXMuX2Vhc2UuZ2V0UmF0aW8oMSk6MSksdGhpcy5fcmV2ZXJzZWR8fChzPSEwLHI9Im9uQ29tcGxldGUiLGk9aXx8dGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuKSwwPT09ZCYmKHRoaXMuX2luaXR0ZWR8fCF0aGlzLnZhcnMubGF6eXx8aSkmJih0aGlzLl9zdGFydFRpbWU9PT10aGlzLl90aW1lbGluZS5fZHVyYXRpb24mJih0PTApLCgwPT09dHx8bTwwfHxtPT09VCkmJm0hPT10JiYoaT0hMCxUPG0mJihyPSJvblJldmVyc2VDb21wbGV0ZSIpKSx0aGlzLl9yYXdQcmV2VGltZT1fPSFlfHx0fHxtPT09dD90OlQpKTp0PDFlLTc/KHRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPXRoaXMuX2N5Y2xlPTAsdGhpcy5yYXRpbz10aGlzLl9lYXNlLl9jYWxjRW5kP3RoaXMuX2Vhc2UuZ2V0UmF0aW8oMCk6MCwoMCE9PWZ8fDA9PT1kJiYwPG0pJiYocj0ib25SZXZlcnNlQ29tcGxldGUiLHM9dGhpcy5fcmV2ZXJzZWQpLHQ8MCYmKHRoaXMuX2FjdGl2ZT0hMSwwPT09ZCYmKHRoaXMuX2luaXR0ZWR8fCF0aGlzLnZhcnMubGF6eXx8aSkmJigwPD1tJiYoaT0hMCksdGhpcy5fcmF3UHJldlRpbWU9Xz0hZXx8dHx8bT09PXQ/dDpUKSksdGhpcy5faW5pdHRlZHx8KGk9ITApKToodGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9dCwwIT09dGhpcy5fcmVwZWF0JiYoYT1kK3RoaXMuX3JlcGVhdERlbGF5LHRoaXMuX2N5Y2xlPXRoaXMuX3RvdGFsVGltZS9hPj4wLDAhPT10aGlzLl9jeWNsZSYmdGhpcy5fY3ljbGU9PT10aGlzLl90b3RhbFRpbWUvYSYmdGhpcy5fY3ljbGUtLSx0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZS10aGlzLl9jeWNsZSphLHRoaXMuX3lveW8mJjAhPSgxJnRoaXMuX2N5Y2xlKSYmKHRoaXMuX3RpbWU9ZC10aGlzLl90aW1lKSx0aGlzLl90aW1lPmQ/dGhpcy5fdGltZT1kOnRoaXMuX3RpbWU8MCYmKHRoaXMuX3RpbWU9MCkpLHRoaXMuX2Vhc2VUeXBlPyhvPXRoaXMuX3RpbWUvZCwoMT09PShsPXRoaXMuX2Vhc2VUeXBlKXx8Mz09PWwmJi41PD1vKSYmKG89MS1vKSwzPT09bCYmKG8qPTIpLDE9PT0oaD10aGlzLl9lYXNlUG93ZXIpP28qPW86Mj09PWg/byo9bypvOjM9PT1oP28qPW8qbypvOjQ9PT1oJiYobyo9bypvKm8qbyksdGhpcy5yYXRpbz0xPT09bD8xLW86Mj09PWw/bzp0aGlzLl90aW1lL2Q8LjU/by8yOjEtby8yKTp0aGlzLnJhdGlvPXRoaXMuX2Vhc2UuZ2V0UmF0aW8odGhpcy5fdGltZS9kKSksYyE9PXRoaXMuX3RpbWV8fGl8fHAhPT10aGlzLl9jeWNsZSl7aWYoIXRoaXMuX2luaXR0ZWQpe2lmKHRoaXMuX2luaXQoKSwhdGhpcy5faW5pdHRlZHx8dGhpcy5fZ2MpcmV0dXJuO2lmKCFpJiZ0aGlzLl9maXJzdFBUJiYoITEhPT10aGlzLnZhcnMubGF6eSYmdGhpcy5fZHVyYXRpb258fHRoaXMudmFycy5sYXp5JiYhdGhpcy5fZHVyYXRpb24pKXJldHVybiB0aGlzLl90aW1lPWMsdGhpcy5fdG90YWxUaW1lPWYsdGhpcy5fcmF3UHJldlRpbWU9bSx0aGlzLl9jeWNsZT1wLHgubGF6eVR3ZWVucy5wdXNoKHRoaXMpLHZvaWQodGhpcy5fbGF6eT1bdCxlXSk7dGhpcy5fdGltZSYmIXM/dGhpcy5yYXRpbz10aGlzLl9lYXNlLmdldFJhdGlvKHRoaXMuX3RpbWUvZCk6cyYmdGhpcy5fZWFzZS5fY2FsY0VuZCYmKHRoaXMucmF0aW89dGhpcy5fZWFzZS5nZXRSYXRpbygwPT09dGhpcy5fdGltZT8wOjEpKX1mb3IoITEhPT10aGlzLl9sYXp5JiYodGhpcy5fbGF6eT0hMSksdGhpcy5fYWN0aXZlfHwhdGhpcy5fcGF1c2VkJiZ0aGlzLl90aW1lIT09YyYmMDw9dCYmKHRoaXMuX2FjdGl2ZT0hMCksMD09PWYmJigyPT09dGhpcy5faW5pdHRlZCYmMDx0JiZ0aGlzLl9pbml0KCksdGhpcy5fc3RhcnRBdCYmKDA8PXQ/dGhpcy5fc3RhcnRBdC5yZW5kZXIodCxlLGkpOnJ8fChyPSJfZHVtbXlHUyIpKSx0aGlzLnZhcnMub25TdGFydCYmKDAhPT10aGlzLl90b3RhbFRpbWV8fDA9PT1kKSYmKGV8fHRoaXMuX2NhbGxiYWNrKCJvblN0YXJ0IikpKSxuPXRoaXMuX2ZpcnN0UFQ7bjspbi5mP24udFtuLnBdKG4uYyp0aGlzLnJhdGlvK24ucyk6bi50W24ucF09bi5jKnRoaXMucmF0aW8rbi5zLG49bi5fbmV4dDt0aGlzLl9vblVwZGF0ZSYmKHQ8MCYmdGhpcy5fc3RhcnRBdCYmdGhpcy5fc3RhcnRUaW1lJiZ0aGlzLl9zdGFydEF0LnJlbmRlcih0LGUsaSksZXx8KHRoaXMuX3RvdGFsVGltZSE9PWZ8fHMpJiZ0aGlzLl9jYWxsYmFjaygib25VcGRhdGUiKSksdGhpcy5fY3ljbGUhPT1wJiYoZXx8dGhpcy5fZ2N8fHRoaXMudmFycy5vblJlcGVhdCYmdGhpcy5fY2FsbGJhY2soIm9uUmVwZWF0IikpLHImJighdGhpcy5fZ2N8fGkpJiYodDwwJiZ0aGlzLl9zdGFydEF0JiYhdGhpcy5fb25VcGRhdGUmJnRoaXMuX3N0YXJ0VGltZSYmdGhpcy5fc3RhcnRBdC5yZW5kZXIodCxlLGkpLHMmJih0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX2VuYWJsZWQoITEsITEpLHRoaXMuX2FjdGl2ZT0hMSksIWUmJnRoaXMudmFyc1tyXSYmdGhpcy5fY2FsbGJhY2sociksMD09PWQmJnRoaXMuX3Jhd1ByZXZUaW1lPT09VCYmXyE9PVQmJih0aGlzLl9yYXdQcmV2VGltZT0wKSl9ZWxzZSBmIT09dGhpcy5fdG90YWxUaW1lJiZ0aGlzLl9vblVwZGF0ZSYmKGV8fHRoaXMuX2NhbGxiYWNrKCJvblVwZGF0ZSIpKX0seS50bz1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIG5ldyB5KHQsZSxpKX0seS5mcm9tPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gaS5ydW5CYWNrd2FyZHM9ITAsaS5pbW1lZGlhdGVSZW5kZXI9MCE9aS5pbW1lZGlhdGVSZW5kZXIsbmV3IHkodCxlLGkpfSx5LmZyb21Ubz1mdW5jdGlvbih0LGUsaSxzKXtyZXR1cm4gcy5zdGFydEF0PWkscy5pbW1lZGlhdGVSZW5kZXI9MCE9cy5pbW1lZGlhdGVSZW5kZXImJjAhPWkuaW1tZWRpYXRlUmVuZGVyLG5ldyB5KHQsZSxzKX0seS5zdGFnZ2VyVG89eS5hbGxUbz1mdW5jdGlvbih0LGUsaSxzLHIsbixhKXtzPXN8fDA7dmFyIG8sbCxoLF8sdT1pLmRlbGF5fHwwLGM9W10sZj1mdW5jdGlvbigpe2kub25Db21wbGV0ZSYmaS5vbkNvbXBsZXRlLmFwcGx5KGkub25Db21wbGV0ZVNjb3BlfHx0aGlzLGFyZ3VtZW50cyksci5hcHBseShhfHxpLmNhbGxiYWNrU2NvcGV8fHRoaXMsbnx8UCl9LHA9aS5jeWNsZSxkPWkuc3RhcnRBdCYmaS5zdGFydEF0LmN5Y2xlO2Zvcih3KHQpfHwoInN0cmluZyI9PXR5cGVvZiB0JiYodD1tLnNlbGVjdG9yKHQpfHx0KSxiKHQpJiYodD1nKHQpKSksdD10fHxbXSxzPDAmJigodD1nKHQpKS5yZXZlcnNlKCkscyo9LTEpLG89dC5sZW5ndGgtMSxoPTA7aDw9bztoKyspe2ZvcihfIGluIGw9e30saSlsW19dPWlbX107aWYocCYmdihsLHQsaCksZCl7Zm9yKF8gaW4gZD1sLnN0YXJ0QXQ9e30saS5zdGFydEF0KWRbX109aS5zdGFydEF0W19dO3YobC5zdGFydEF0LHQsaCl9bC5kZWxheT11LGg9PT1vJiZyJiYobC5vbkNvbXBsZXRlPWYpLGNbaF09bmV3IHkodFtoXSxlLGwpLHUrPXN9cmV0dXJuIGN9LHkuc3RhZ2dlckZyb209eS5hbGxGcm9tPWZ1bmN0aW9uKHQsZSxpLHMscixuLGEpe3JldHVybiBpLnJ1bkJhY2t3YXJkcz0hMCxpLmltbWVkaWF0ZVJlbmRlcj0wIT1pLmltbWVkaWF0ZVJlbmRlcix5LnN0YWdnZXJUbyh0LGUsaSxzLHIsbixhKX0seS5zdGFnZ2VyRnJvbVRvPXkuYWxsRnJvbVRvPWZ1bmN0aW9uKHQsZSxpLHMscixuLGEsbyl7cmV0dXJuIHMuc3RhcnRBdD1pLHMuaW1tZWRpYXRlUmVuZGVyPTAhPXMuaW1tZWRpYXRlUmVuZGVyJiYwIT1pLmltbWVkaWF0ZVJlbmRlcix5LnN0YWdnZXJUbyh0LGUscyxyLG4sYSxvKX0seS5kZWxheWVkQ2FsbD1mdW5jdGlvbih0LGUsaSxzLHIpe3JldHVybiBuZXcgeShlLDAse2RlbGF5OnQsb25Db21wbGV0ZTplLG9uQ29tcGxldGVQYXJhbXM6aSxjYWxsYmFja1Njb3BlOnMsb25SZXZlcnNlQ29tcGxldGU6ZSxvblJldmVyc2VDb21wbGV0ZVBhcmFtczppLGltbWVkaWF0ZVJlbmRlcjohMSx1c2VGcmFtZXM6cixvdmVyd3JpdGU6MH0pfSx5LnNldD1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgeSh0LDAsZSl9LHkuaXNUd2VlbmluZz1mdW5jdGlvbih0KXtyZXR1cm4gMDxtLmdldFR3ZWVuc09mKHQsITApLmxlbmd0aH07dmFyIG49ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9W10scz0wLHI9dC5fZmlyc3Q7cjspciBpbnN0YW5jZW9mIG0/aVtzKytdPXI6KGUmJihpW3MrK109cikscz0oaT1pLmNvbmNhdChuKHIsZSkpKS5sZW5ndGgpLHI9ci5fbmV4dDtyZXR1cm4gaX0sdT15LmdldEFsbFR3ZWVucz1mdW5jdGlvbih0KXtyZXR1cm4gbihzLl9yb290VGltZWxpbmUsdCkuY29uY2F0KG4ocy5fcm9vdEZyYW1lc1RpbWVsaW5lLHQpKX07eS5raWxsQWxsPWZ1bmN0aW9uKHQsZSxpLHMpe251bGw9PWUmJihlPSEwKSxudWxsPT1pJiYoaT0hMCk7dmFyIHIsbixhLG89dSgwIT1zKSxsPW8ubGVuZ3RoLGg9ZSYmaSYmcztmb3IoYT0wO2E8bDthKyspbj1vW2FdLChofHxuIGluc3RhbmNlb2YgX3x8KHI9bi50YXJnZXQ9PT1uLnZhcnMub25Db21wbGV0ZSkmJml8fGUmJiFyKSYmKHQ/bi50b3RhbFRpbWUobi5fcmV2ZXJzZWQ/MDpuLnRvdGFsRHVyYXRpb24oKSk6bi5fZW5hYmxlZCghMSwhMSkpfSx5LmtpbGxDaGlsZFR3ZWVuc09mPWZ1bmN0aW9uKHQsZSl7aWYobnVsbCE9dCl7dmFyIGkscyxyLG4sYSxvPXgudHdlZW5Mb29rdXA7aWYoInN0cmluZyI9PXR5cGVvZiB0JiYodD1tLnNlbGVjdG9yKHQpfHx0KSxiKHQpJiYodD1nKHQpKSx3KHQpKWZvcihuPXQubGVuZ3RoOy0xPC0tbjspeS5raWxsQ2hpbGRUd2VlbnNPZih0W25dLGUpO2Vsc2V7Zm9yKHIgaW4gaT1bXSxvKWZvcihzPW9bcl0udGFyZ2V0LnBhcmVudE5vZGU7czspcz09PXQmJihpPWkuY29uY2F0KG9bcl0udHdlZW5zKSkscz1zLnBhcmVudE5vZGU7Zm9yKGE9aS5sZW5ndGgsbj0wO248YTtuKyspZSYmaVtuXS50b3RhbFRpbWUoaVtuXS50b3RhbER1cmF0aW9uKCkpLGlbbl0uX2VuYWJsZWQoITEsITEpfX19O3ZhciByPWZ1bmN0aW9uKHQsZSxpLHMpe2U9ITEhPT1lLGk9ITEhPT1pO2Zvcih2YXIgcixuLGE9dShzPSExIT09cyksbz1lJiZpJiZzLGw9YS5sZW5ndGg7LTE8LS1sOyluPWFbbF0sKG98fG4gaW5zdGFuY2VvZiBffHwocj1uLnRhcmdldD09PW4udmFycy5vbkNvbXBsZXRlKSYmaXx8ZSYmIXIpJiZuLnBhdXNlZCh0KX07cmV0dXJuIHkucGF1c2VBbGw9ZnVuY3Rpb24odCxlLGkpe3IoITAsdCxlLGkpfSx5LnJlc3VtZUFsbD1mdW5jdGlvbih0LGUsaSl7cighMSx0LGUsaSl9LHkuZ2xvYmFsVGltZVNjYWxlPWZ1bmN0aW9uKHQpe3ZhciBlPXMuX3Jvb3RUaW1lbGluZSxpPW0udGlja2VyLnRpbWU7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQ9dHx8VCxlLl9zdGFydFRpbWU9aS0oaS1lLl9zdGFydFRpbWUpKmUuX3RpbWVTY2FsZS90LGU9cy5fcm9vdEZyYW1lc1RpbWVsaW5lLGk9bS50aWNrZXIuZnJhbWUsZS5fc3RhcnRUaW1lPWktKGktZS5fc3RhcnRUaW1lKSplLl90aW1lU2NhbGUvdCxlLl90aW1lU2NhbGU9cy5fcm9vdFRpbWVsaW5lLl90aW1lU2NhbGU9dCx0KTplLl90aW1lU2NhbGV9LHQucHJvZ3Jlc3M9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy50b3RhbFRpbWUodGhpcy5kdXJhdGlvbigpKih0aGlzLl95b3lvJiYwIT0oMSZ0aGlzLl9jeWNsZSk/MS10OnQpK3RoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSksITEpOnRoaXMuX3RpbWUvdGhpcy5kdXJhdGlvbigpfSx0LnRvdGFsUHJvZ3Jlc3M9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy50b3RhbFRpbWUodGhpcy50b3RhbER1cmF0aW9uKCkqdCwhMSk6dGhpcy5fdG90YWxUaW1lL3RoaXMudG90YWxEdXJhdGlvbigpfSx0LnRpbWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fZGlydHkmJnRoaXMudG90YWxEdXJhdGlvbigpLHQ+dGhpcy5fZHVyYXRpb24mJih0PXRoaXMuX2R1cmF0aW9uKSx0aGlzLl95b3lvJiYwIT0oMSZ0aGlzLl9jeWNsZSk/dD10aGlzLl9kdXJhdGlvbi10K3RoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSk6MCE9PXRoaXMuX3JlcGVhdCYmKHQrPXRoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSkpLHRoaXMudG90YWxUaW1lKHQsZSkpOnRoaXMuX3RpbWV9LHQuZHVyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/cy5wcm90b3R5cGUuZHVyYXRpb24uY2FsbCh0aGlzLHQpOnRoaXMuX2R1cmF0aW9ufSx0LnRvdGFsRHVyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/LTE9PT10aGlzLl9yZXBlYXQ/dGhpczp0aGlzLmR1cmF0aW9uKCh0LXRoaXMuX3JlcGVhdCp0aGlzLl9yZXBlYXREZWxheSkvKHRoaXMuX3JlcGVhdCsxKSk6KHRoaXMuX2RpcnR5JiYodGhpcy5fdG90YWxEdXJhdGlvbj0tMT09PXRoaXMuX3JlcGVhdD85OTk5OTk5OTk5OTk6dGhpcy5fZHVyYXRpb24qKHRoaXMuX3JlcGVhdCsxKSt0aGlzLl9yZXBlYXREZWxheSp0aGlzLl9yZXBlYXQsdGhpcy5fZGlydHk9ITEpLHRoaXMuX3RvdGFsRHVyYXRpb24pfSx0LnJlcGVhdD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fcmVwZWF0PXQsdGhpcy5fdW5jYWNoZSghMCkpOnRoaXMuX3JlcGVhdH0sdC5yZXBlYXREZWxheT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fcmVwZWF0RGVsYXk9dCx0aGlzLl91bmNhY2hlKCEwKSk6dGhpcy5fcmVwZWF0RGVsYXl9LHQueW95bz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5feW95bz10LHRoaXMpOnRoaXMuX3lveW99LHl9LCEwKSxfZ3NTY29wZS5fZ3NEZWZpbmUoIlRpbWVsaW5lTGl0ZSIsWyJjb3JlLkFuaW1hdGlvbiIsImNvcmUuU2ltcGxlVGltZWxpbmUiLCJUd2VlbkxpdGUiXSxmdW5jdGlvbihfLHUsYyl7dmFyIGY9ZnVuY3Rpb24odCl7dS5jYWxsKHRoaXMsdCksdGhpcy5fbGFiZWxzPXt9LHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuPSEwPT09dGhpcy52YXJzLmF1dG9SZW1vdmVDaGlsZHJlbix0aGlzLnNtb290aENoaWxkVGltaW5nPSEwPT09dGhpcy52YXJzLnNtb290aENoaWxkVGltaW5nLHRoaXMuX3NvcnRDaGlsZHJlbj0hMCx0aGlzLl9vblVwZGF0ZT10aGlzLnZhcnMub25VcGRhdGU7dmFyIGUsaSxzPXRoaXMudmFycztmb3IoaSBpbiBzKWU9c1tpXSxtKGUpJiYtMSE9PWUuam9pbigiIikuaW5kZXhPZigie3NlbGZ9IikmJihzW2ldPXRoaXMuX3N3YXBTZWxmSW5QYXJhbXMoZSkpO20ocy50d2VlbnMpJiZ0aGlzLmFkZChzLnR3ZWVucywwLHMuYWxpZ24scy5zdGFnZ2VyKX0scD0xZS0xMCx0PWMuX2ludGVybmFscyxlPWYuX2ludGVybmFscz17fSxkPXQuaXNTZWxlY3RvcixtPXQuaXNBcnJheSxnPXQubGF6eVR3ZWVucyx2PXQubGF6eVJlbmRlcixhPV9nc1Njb3BlLl9nc0RlZmluZS5nbG9iYWxzLHk9ZnVuY3Rpb24odCl7dmFyIGUsaT17fTtmb3IoZSBpbiB0KWlbZV09dFtlXTtyZXR1cm4gaX0sVD1mdW5jdGlvbih0LGUsaSl7dmFyIHMscixuPXQuY3ljbGU7Zm9yKHMgaW4gbilyPW5bc10sdFtzXT0iZnVuY3Rpb24iPT10eXBlb2Ygcj9yLmNhbGwoZVtpXSxpKTpyW2klci5sZW5ndGhdO2RlbGV0ZSB0LmN5Y2xlfSxuPWUucGF1c2VDYWxsYmFjaz1mdW5jdGlvbigpe30seD1mdW5jdGlvbih0KXt2YXIgZSxpPVtdLHM9dC5sZW5ndGg7Zm9yKGU9MDtlIT09cztpLnB1c2godFtlKytdKSk7cmV0dXJuIGl9LGk9Zi5wcm90b3R5cGU9bmV3IHU7cmV0dXJuIGYudmVyc2lvbj0iMS4xOC4wIixpLmNvbnN0cnVjdG9yPWYsaS5raWxsKCkuX2djPWkuX2ZvcmNpbmdQbGF5aGVhZD1pLl9oYXNQYXVzZT0hMSxpLnRvPWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByPWkucmVwZWF0JiZhLlR3ZWVuTWF4fHxjO3JldHVybiBlP3RoaXMuYWRkKG5ldyByKHQsZSxpKSxzKTp0aGlzLnNldCh0LGkscyl9LGkuZnJvbT1mdW5jdGlvbih0LGUsaSxzKXtyZXR1cm4gdGhpcy5hZGQoKGkucmVwZWF0JiZhLlR3ZWVuTWF4fHxjKS5mcm9tKHQsZSxpKSxzKX0saS5mcm9tVG89ZnVuY3Rpb24odCxlLGkscyxyKXt2YXIgbj1zLnJlcGVhdCYmYS5Ud2Vlbk1heHx8YztyZXR1cm4gZT90aGlzLmFkZChuLmZyb21Ubyh0LGUsaSxzKSxyKTp0aGlzLnNldCh0LHMscil9LGkuc3RhZ2dlclRvPWZ1bmN0aW9uKHQsZSxpLHMscixuLGEsbyl7dmFyIGwsaCxfPW5ldyBmKHtvbkNvbXBsZXRlOm4sb25Db21wbGV0ZVBhcmFtczphLGNhbGxiYWNrU2NvcGU6byxzbW9vdGhDaGlsZFRpbWluZzp0aGlzLnNtb290aENoaWxkVGltaW5nfSksdT1pLmN5Y2xlO2Zvcigic3RyaW5nIj09dHlwZW9mIHQmJih0PWMuc2VsZWN0b3IodCl8fHQpLGQodD10fHxbXSkmJih0PXgodCkpLChzPXN8fDApPDAmJigodD14KHQpKS5yZXZlcnNlKCkscyo9LTEpLGg9MDt0Lmxlbmd0aD5oO2grKykobD15KGkpKS5zdGFydEF0JiYobC5zdGFydEF0PXkobC5zdGFydEF0KSxsLnN0YXJ0QXQuY3ljbGUmJlQobC5zdGFydEF0LHQsaCkpLHUmJlQobCx0LGgpLF8udG8odFtoXSxlLGwsaCpzKTtyZXR1cm4gdGhpcy5hZGQoXyxyKX0saS5zdGFnZ2VyRnJvbT1mdW5jdGlvbih0LGUsaSxzLHIsbixhLG8pe3JldHVybiBpLmltbWVkaWF0ZVJlbmRlcj0wIT1pLmltbWVkaWF0ZVJlbmRlcixpLnJ1bkJhY2t3YXJkcz0hMCx0aGlzLnN0YWdnZXJUbyh0LGUsaSxzLHIsbixhLG8pfSxpLnN0YWdnZXJGcm9tVG89ZnVuY3Rpb24odCxlLGkscyxyLG4sYSxvLGwpe3JldHVybiBzLnN0YXJ0QXQ9aSxzLmltbWVkaWF0ZVJlbmRlcj0wIT1zLmltbWVkaWF0ZVJlbmRlciYmMCE9aS5pbW1lZGlhdGVSZW5kZXIsdGhpcy5zdGFnZ2VyVG8odCxlLHMscixuLGEsbyxsKX0saS5jYWxsPWZ1bmN0aW9uKHQsZSxpLHMpe3JldHVybiB0aGlzLmFkZChjLmRlbGF5ZWRDYWxsKDAsdCxlLGkpLHMpfSxpLnNldD1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIGk9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChpLDAsITApLG51bGw9PWUuaW1tZWRpYXRlUmVuZGVyJiYoZS5pbW1lZGlhdGVSZW5kZXI9aT09PXRoaXMuX3RpbWUmJiF0aGlzLl9wYXVzZWQpLHRoaXMuYWRkKG5ldyBjKHQsMCxlKSxpKX0sZi5leHBvcnRSb290PWZ1bmN0aW9uKHQsZSl7bnVsbD09KHQ9dHx8e30pLnNtb290aENoaWxkVGltaW5nJiYodC5zbW9vdGhDaGlsZFRpbWluZz0hMCk7dmFyIGkscyxyPW5ldyBmKHQpLG49ci5fdGltZWxpbmU7Zm9yKG51bGw9PWUmJihlPSEwKSxuLl9yZW1vdmUociwhMCksci5fc3RhcnRUaW1lPTAsci5fcmF3UHJldlRpbWU9ci5fdGltZT1yLl90b3RhbFRpbWU9bi5fdGltZSxpPW4uX2ZpcnN0O2k7KXM9aS5fbmV4dCxlJiZpIGluc3RhbmNlb2YgYyYmaS50YXJnZXQ9PT1pLnZhcnMub25Db21wbGV0ZXx8ci5hZGQoaSxpLl9zdGFydFRpbWUtaS5fZGVsYXkpLGk9cztyZXR1cm4gbi5hZGQociwwKSxyfSxpLmFkZD1mdW5jdGlvbih0LGUsaSxzKXt2YXIgcixuLGEsbyxsLGg7aWYoIm51bWJlciIhPXR5cGVvZiBlJiYoZT10aGlzLl9wYXJzZVRpbWVPckxhYmVsKGUsMCwhMCx0KSksISh0IGluc3RhbmNlb2YgXykpe2lmKHQgaW5zdGFuY2VvZiBBcnJheXx8dCYmdC5wdXNoJiZtKHQpKXtmb3IoaT1pfHwibm9ybWFsIixzPXN8fDAscj1lLG49dC5sZW5ndGgsYT0wO2E8bjthKyspbShvPXRbYV0pJiYobz1uZXcgZih7dHdlZW5zOm99KSksdGhpcy5hZGQobyxyKSwic3RyaW5nIiE9dHlwZW9mIG8mJiJmdW5jdGlvbiIhPXR5cGVvZiBvJiYoInNlcXVlbmNlIj09PWk/cj1vLl9zdGFydFRpbWUrby50b3RhbER1cmF0aW9uKCkvby5fdGltZVNjYWxlOiJzdGFydCI9PT1pJiYoby5fc3RhcnRUaW1lLT1vLmRlbGF5KCkpKSxyKz1zO3JldHVybiB0aGlzLl91bmNhY2hlKCEwKX1pZigic3RyaW5nIj09dHlwZW9mIHQpcmV0dXJuIHRoaXMuYWRkTGFiZWwodCxlKTtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyJDYW5ub3QgYWRkICIrdCsiIGludG8gdGhlIHRpbWVsaW5lOyBpdCBpcyBub3QgYSB0d2VlbiwgdGltZWxpbmUsIGZ1bmN0aW9uLCBvciBzdHJpbmcuIjt0PWMuZGVsYXllZENhbGwoMCx0KX1pZih1LnByb3RvdHlwZS5hZGQuY2FsbCh0aGlzLHQsZSksKHRoaXMuX2djfHx0aGlzLl90aW1lPT09dGhpcy5fZHVyYXRpb24pJiYhdGhpcy5fcGF1c2VkJiZ0aGlzLl9kdXJhdGlvbjx0aGlzLmR1cmF0aW9uKCkpZm9yKGg9KGw9dGhpcykucmF3VGltZSgpPnQuX3N0YXJ0VGltZTtsLl90aW1lbGluZTspaCYmbC5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmc/bC50b3RhbFRpbWUobC5fdG90YWxUaW1lLCEwKTpsLl9nYyYmbC5fZW5hYmxlZCghMCwhMSksbD1sLl90aW1lbGluZTtyZXR1cm4gdGhpc30saS5yZW1vdmU9ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIF8pe3RoaXMuX3JlbW92ZSh0LCExKTt2YXIgZT10Ll90aW1lbGluZT10LnZhcnMudXNlRnJhbWVzP18uX3Jvb3RGcmFtZXNUaW1lbGluZTpfLl9yb290VGltZWxpbmU7cmV0dXJuIHQuX3N0YXJ0VGltZT0odC5fcGF1c2VkP3QuX3BhdXNlVGltZTplLl90aW1lKS0odC5fcmV2ZXJzZWQ/dC50b3RhbER1cmF0aW9uKCktdC5fdG90YWxUaW1lOnQuX3RvdGFsVGltZSkvdC5fdGltZVNjYWxlLHRoaXN9aWYodCBpbnN0YW5jZW9mIEFycmF5fHx0JiZ0LnB1c2gmJm0odCkpe2Zvcih2YXIgaT10Lmxlbmd0aDstMTwtLWk7KXRoaXMucmVtb3ZlKHRbaV0pO3JldHVybiB0aGlzfXJldHVybiJzdHJpbmciPT10eXBlb2YgdD90aGlzLnJlbW92ZUxhYmVsKHQpOnRoaXMua2lsbChudWxsLHQpfSxpLl9yZW1vdmU9ZnVuY3Rpb24odCxlKXt1LnByb3RvdHlwZS5fcmVtb3ZlLmNhbGwodGhpcyx0LGUpO3ZhciBpPXRoaXMuX2xhc3Q7cmV0dXJuIGk/dGhpcy5fdGltZT5pLl9zdGFydFRpbWUraS5fdG90YWxEdXJhdGlvbi9pLl90aW1lU2NhbGUmJih0aGlzLl90aW1lPXRoaXMuZHVyYXRpb24oKSx0aGlzLl90b3RhbFRpbWU9dGhpcy5fdG90YWxEdXJhdGlvbik6dGhpcy5fdGltZT10aGlzLl90b3RhbFRpbWU9dGhpcy5fZHVyYXRpb249dGhpcy5fdG90YWxEdXJhdGlvbj0wLHRoaXN9LGkuYXBwZW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYWRkKHQsdGhpcy5fcGFyc2VUaW1lT3JMYWJlbChudWxsLGUsITAsdCkpfSxpLmluc2VydD1pLmluc2VydE11bHRpcGxlPWZ1bmN0aW9uKHQsZSxpLHMpe3JldHVybiB0aGlzLmFkZCh0LGV8fDAsaSxzKX0saS5hcHBlbmRNdWx0aXBsZT1mdW5jdGlvbih0LGUsaSxzKXtyZXR1cm4gdGhpcy5hZGQodCx0aGlzLl9wYXJzZVRpbWVPckxhYmVsKG51bGwsZSwhMCx0KSxpLHMpfSxpLmFkZExhYmVsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2xhYmVsc1t0XT10aGlzLl9wYXJzZVRpbWVPckxhYmVsKGUpLHRoaXN9LGkuYWRkUGF1c2U9ZnVuY3Rpb24odCxlLGkscyl7dmFyIHI9Yy5kZWxheWVkQ2FsbCgwLG4saSxzfHx0aGlzKTtyZXR1cm4gci52YXJzLm9uQ29tcGxldGU9ci52YXJzLm9uUmV2ZXJzZUNvbXBsZXRlPWUsci5kYXRhPSJpc1BhdXNlIix0aGlzLl9oYXNQYXVzZT0hMCx0aGlzLmFkZChyLHQpfSxpLnJlbW92ZUxhYmVsPWZ1bmN0aW9uKHQpe3JldHVybiBkZWxldGUgdGhpcy5fbGFiZWxzW3RdLHRoaXN9LGkuZ2V0TGFiZWxUaW1lPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10aGlzLl9sYWJlbHNbdF0/dGhpcy5fbGFiZWxzW3RdOi0xfSxpLl9wYXJzZVRpbWVPckxhYmVsPWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByO2lmKHMgaW5zdGFuY2VvZiBfJiZzLnRpbWVsaW5lPT09dGhpcyl0aGlzLnJlbW92ZShzKTtlbHNlIGlmKHMmJihzIGluc3RhbmNlb2YgQXJyYXl8fHMucHVzaCYmbShzKSkpZm9yKHI9cy5sZW5ndGg7LTE8LS1yOylzW3JdaW5zdGFuY2VvZiBfJiZzW3JdLnRpbWVsaW5lPT09dGhpcyYmdGhpcy5yZW1vdmUoc1tyXSk7aWYoInN0cmluZyI9PXR5cGVvZiBlKXJldHVybiB0aGlzLl9wYXJzZVRpbWVPckxhYmVsKGUsaSYmIm51bWJlciI9PXR5cGVvZiB0JiZudWxsPT10aGlzLl9sYWJlbHNbZV0/dC10aGlzLmR1cmF0aW9uKCk6MCxpKTtpZihlPWV8fDAsInN0cmluZyIhPXR5cGVvZiB0fHwhaXNOYU4odCkmJm51bGw9PXRoaXMuX2xhYmVsc1t0XSludWxsPT10JiYodD10aGlzLmR1cmF0aW9uKCkpO2Vsc2V7aWYoLTE9PT0ocj10LmluZGV4T2YoIj0iKSkpcmV0dXJuIG51bGw9PXRoaXMuX2xhYmVsc1t0XT9pP3RoaXMuX2xhYmVsc1t0XT10aGlzLmR1cmF0aW9uKCkrZTplOnRoaXMuX2xhYmVsc1t0XStlO2U9cGFyc2VJbnQodC5jaGFyQXQoci0xKSsiMSIsMTApKk51bWJlcih0LnN1YnN0cihyKzEpKSx0PTE8cj90aGlzLl9wYXJzZVRpbWVPckxhYmVsKHQuc3Vic3RyKDAsci0xKSwwLGkpOnRoaXMuZHVyYXRpb24oKX1yZXR1cm4gTnVtYmVyKHQpK2V9LGkuc2Vlaz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRvdGFsVGltZSgibnVtYmVyIj09dHlwZW9mIHQ/dDp0aGlzLl9wYXJzZVRpbWVPckxhYmVsKHQpLCExIT09ZSl9LGkuc3RvcD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhdXNlZCghMCl9LGkuZ290b0FuZFBsYXk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5wbGF5KHQsZSl9LGkuZ290b0FuZFN0b3A9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5wYXVzZSh0LGUpfSxpLnJlbmRlcj1mdW5jdGlvbih0LGUsaSl7dGhpcy5fZ2MmJnRoaXMuX2VuYWJsZWQoITAsITEpO3ZhciBzLHIsbixhLG8sbCxoPXRoaXMuX2RpcnR5P3RoaXMudG90YWxEdXJhdGlvbigpOnRoaXMuX3RvdGFsRHVyYXRpb24sXz10aGlzLl90aW1lLHU9dGhpcy5fc3RhcnRUaW1lLGM9dGhpcy5fdGltZVNjYWxlLGY9dGhpcy5fcGF1c2VkO2lmKGg8PXQpdGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9aCx0aGlzLl9yZXZlcnNlZHx8dGhpcy5faGFzUGF1c2VkQ2hpbGQoKXx8KHI9ITAsYT0ib25Db21wbGV0ZSIsbz0hIXRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiwwPT09dGhpcy5fZHVyYXRpb24mJigwPT09dHx8dGhpcy5fcmF3UHJldlRpbWU8MHx8dGhpcy5fcmF3UHJldlRpbWU9PT1wKSYmdGhpcy5fcmF3UHJldlRpbWUhPT10JiZ0aGlzLl9maXJzdCYmKG89ITAsdGhpcy5fcmF3UHJldlRpbWU+cCYmKGE9Im9uUmV2ZXJzZUNvbXBsZXRlIikpKSx0aGlzLl9yYXdQcmV2VGltZT10aGlzLl9kdXJhdGlvbnx8IWV8fHR8fHRoaXMuX3Jhd1ByZXZUaW1lPT09dD90OnAsdD1oKzFlLTQ7ZWxzZSBpZih0PDFlLTcpaWYodGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9MCwoMCE9PV98fDA9PT10aGlzLl9kdXJhdGlvbiYmdGhpcy5fcmF3UHJldlRpbWUhPT1wJiYoMDx0aGlzLl9yYXdQcmV2VGltZXx8dDwwJiYwPD10aGlzLl9yYXdQcmV2VGltZSkpJiYoYT0ib25SZXZlcnNlQ29tcGxldGUiLHI9dGhpcy5fcmV2ZXJzZWQpLHQ8MCl0aGlzLl9hY3RpdmU9ITEsdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuJiZ0aGlzLl9yZXZlcnNlZD8obz1yPSEwLGE9Im9uUmV2ZXJzZUNvbXBsZXRlIik6MDw9dGhpcy5fcmF3UHJldlRpbWUmJnRoaXMuX2ZpcnN0JiYobz0hMCksdGhpcy5fcmF3UHJldlRpbWU9dDtlbHNle2lmKHRoaXMuX3Jhd1ByZXZUaW1lPXRoaXMuX2R1cmF0aW9ufHwhZXx8dHx8dGhpcy5fcmF3UHJldlRpbWU9PT10P3Q6cCwwPT09dCYmcilmb3Iocz10aGlzLl9maXJzdDtzJiYwPT09cy5fc3RhcnRUaW1lOylzLl9kdXJhdGlvbnx8KHI9ITEpLHM9cy5fbmV4dDt0PTAsdGhpcy5faW5pdHRlZHx8KG89ITApfWVsc2V7aWYodGhpcy5faGFzUGF1c2UmJiF0aGlzLl9mb3JjaW5nUGxheWhlYWQmJiFlKXtpZihfPD10KWZvcihzPXRoaXMuX2ZpcnN0O3MmJnQ+PXMuX3N0YXJ0VGltZSYmIWw7KXMuX2R1cmF0aW9ufHwiaXNQYXVzZSIhPT1zLmRhdGF8fHMucmF0aW98fDA9PT1zLl9zdGFydFRpbWUmJjA9PT10aGlzLl9yYXdQcmV2VGltZXx8KGw9cykscz1zLl9uZXh0O2Vsc2UgZm9yKHM9dGhpcy5fbGFzdDtzJiZzLl9zdGFydFRpbWU+PXQmJiFsOylzLl9kdXJhdGlvbnx8ImlzUGF1c2UiPT09cy5kYXRhJiYwPHMuX3Jhd1ByZXZUaW1lJiYobD1zKSxzPXMuX3ByZXY7bCYmKHRoaXMuX3RpbWU9dD1sLl9zdGFydFRpbWUsdGhpcy5fdG90YWxUaW1lPXQrdGhpcy5fY3ljbGUqKHRoaXMuX3RvdGFsRHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpKX10aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT10aGlzLl9yYXdQcmV2VGltZT10fWlmKHRoaXMuX3RpbWUhPT1fJiZ0aGlzLl9maXJzdHx8aXx8b3x8bCl7aWYodGhpcy5faW5pdHRlZHx8KHRoaXMuX2luaXR0ZWQ9ITApLHRoaXMuX2FjdGl2ZXx8IXRoaXMuX3BhdXNlZCYmdGhpcy5fdGltZSE9PV8mJjA8dCYmKHRoaXMuX2FjdGl2ZT0hMCksMD09PV8mJnRoaXMudmFycy5vblN0YXJ0JiYwIT09dGhpcy5fdGltZSYmKGV8fHRoaXMuX2NhbGxiYWNrKCJvblN0YXJ0IikpLHRoaXMuX3RpbWU+PV8pZm9yKHM9dGhpcy5fZmlyc3Q7cyYmKG49cy5fbmV4dCwhdGhpcy5fcGF1c2VkfHxmKTspKHMuX2FjdGl2ZXx8cy5fc3RhcnRUaW1lPD10aGlzLl90aW1lJiYhcy5fcGF1c2VkJiYhcy5fZ2MpJiYobD09PXMmJnRoaXMucGF1c2UoKSxzLl9yZXZlcnNlZD9zLnJlbmRlcigocy5fZGlydHk/cy50b3RhbER1cmF0aW9uKCk6cy5fdG90YWxEdXJhdGlvbiktKHQtcy5fc3RhcnRUaW1lKSpzLl90aW1lU2NhbGUsZSxpKTpzLnJlbmRlcigodC1zLl9zdGFydFRpbWUpKnMuX3RpbWVTY2FsZSxlLGkpKSxzPW47ZWxzZSBmb3Iocz10aGlzLl9sYXN0O3MmJihuPXMuX3ByZXYsIXRoaXMuX3BhdXNlZHx8Zik7KXtpZihzLl9hY3RpdmV8fF8+PXMuX3N0YXJ0VGltZSYmIXMuX3BhdXNlZCYmIXMuX2djKXtpZihsPT09cyl7Zm9yKGw9cy5fcHJldjtsJiZsLmVuZFRpbWUoKT50aGlzLl90aW1lOylsLnJlbmRlcihsLl9yZXZlcnNlZD9sLnRvdGFsRHVyYXRpb24oKS0odC1sLl9zdGFydFRpbWUpKmwuX3RpbWVTY2FsZToodC1sLl9zdGFydFRpbWUpKmwuX3RpbWVTY2FsZSxlLGkpLGw9bC5fcHJldjtsPW51bGwsdGhpcy5wYXVzZSgpfXMuX3JldmVyc2VkP3MucmVuZGVyKChzLl9kaXJ0eT9zLnRvdGFsRHVyYXRpb24oKTpzLl90b3RhbER1cmF0aW9uKS0odC1zLl9zdGFydFRpbWUpKnMuX3RpbWVTY2FsZSxlLGkpOnMucmVuZGVyKCh0LXMuX3N0YXJ0VGltZSkqcy5fdGltZVNjYWxlLGUsaSl9cz1ufXRoaXMuX29uVXBkYXRlJiYoZXx8KGcubGVuZ3RoJiZ2KCksdGhpcy5fY2FsbGJhY2soIm9uVXBkYXRlIikpKSxhJiYodGhpcy5fZ2N8fCh1PT09dGhpcy5fc3RhcnRUaW1lfHxjIT09dGhpcy5fdGltZVNjYWxlKSYmKDA9PT10aGlzLl90aW1lfHxoPj10aGlzLnRvdGFsRHVyYXRpb24oKSkmJihyJiYoZy5sZW5ndGgmJnYoKSx0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX2VuYWJsZWQoITEsITEpLHRoaXMuX2FjdGl2ZT0hMSksIWUmJnRoaXMudmFyc1thXSYmdGhpcy5fY2FsbGJhY2soYSkpKX19LGkuX2hhc1BhdXNlZENoaWxkPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2ZpcnN0O3Q7KXtpZih0Ll9wYXVzZWR8fHQgaW5zdGFuY2VvZiBmJiZ0Ll9oYXNQYXVzZWRDaGlsZCgpKXJldHVybiEwO3Q9dC5fbmV4dH1yZXR1cm4hMX0saS5nZXRDaGlsZHJlbj1mdW5jdGlvbih0LGUsaSxzKXtzPXN8fC05OTk5OTk5OTk5O2Zvcih2YXIgcj1bXSxuPXRoaXMuX2ZpcnN0LGE9MDtuOylzPm4uX3N0YXJ0VGltZXx8KG4gaW5zdGFuY2VvZiBjPyExIT09ZSYmKHJbYSsrXT1uKTooITEhPT1pJiYoclthKytdPW4pLCExIT09dCYmKGE9KHI9ci5jb25jYXQobi5nZXRDaGlsZHJlbighMCxlLGkpKSkubGVuZ3RoKSkpLG49bi5fbmV4dDtyZXR1cm4gcn0saS5nZXRUd2VlbnNPZj1mdW5jdGlvbih0LGUpe3ZhciBpLHMscj10aGlzLl9nYyxuPVtdLGE9MDtmb3IociYmdGhpcy5fZW5hYmxlZCghMCwhMCkscz0oaT1jLmdldFR3ZWVuc09mKHQpKS5sZW5ndGg7LTE8LS1zOykoaVtzXS50aW1lbGluZT09PXRoaXN8fGUmJnRoaXMuX2NvbnRhaW5zKGlbc10pKSYmKG5bYSsrXT1pW3NdKTtyZXR1cm4gciYmdGhpcy5fZW5hYmxlZCghMSwhMCksbn0saS5yZWNlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjZW50fSxpLl9jb250YWlucz1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC50aW1lbGluZTtlOyl7aWYoZT09PXRoaXMpcmV0dXJuITA7ZT1lLnRpbWVsaW5lfXJldHVybiExfSxpLnNoaWZ0Q2hpbGRyZW49ZnVuY3Rpb24odCxlLGkpe2k9aXx8MDtmb3IodmFyIHMscj10aGlzLl9maXJzdCxuPXRoaXMuX2xhYmVscztyOylyLl9zdGFydFRpbWU+PWkmJihyLl9zdGFydFRpbWUrPXQpLHI9ci5fbmV4dDtpZihlKWZvcihzIGluIG4pbltzXT49aSYmKG5bc10rPXQpO3JldHVybiB0aGlzLl91bmNhY2hlKCEwKX0saS5fa2lsbD1mdW5jdGlvbih0LGUpe2lmKCF0JiYhZSlyZXR1cm4gdGhpcy5fZW5hYmxlZCghMSwhMSk7Zm9yKHZhciBpPWU/dGhpcy5nZXRUd2VlbnNPZihlKTp0aGlzLmdldENoaWxkcmVuKCEwLCEwLCExKSxzPWkubGVuZ3RoLHI9ITE7LTE8LS1zOylpW3NdLl9raWxsKHQsZSkmJihyPSEwKTtyZXR1cm4gcn0saS5jbGVhcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldENoaWxkcmVuKCExLCEwLCEwKSxpPWUubGVuZ3RoO2Zvcih0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZT0wOy0xPC0taTspZVtpXS5fZW5hYmxlZCghMSwhMSk7cmV0dXJuITEhPT10JiYodGhpcy5fbGFiZWxzPXt9KSx0aGlzLl91bmNhY2hlKCEwKX0saS5pbnZhbGlkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2ZpcnN0O3Q7KXQuaW52YWxpZGF0ZSgpLHQ9dC5fbmV4dDtyZXR1cm4gXy5wcm90b3R5cGUuaW52YWxpZGF0ZS5jYWxsKHRoaXMpfSxpLl9lbmFibGVkPWZ1bmN0aW9uKHQsZSl7aWYodD09PXRoaXMuX2djKWZvcih2YXIgaT10aGlzLl9maXJzdDtpOylpLl9lbmFibGVkKHQsITApLGk9aS5fbmV4dDtyZXR1cm4gdS5wcm90b3R5cGUuX2VuYWJsZWQuY2FsbCh0aGlzLHQsZSl9LGkudG90YWxUaW1lPWZ1bmN0aW9uKCl7dGhpcy5fZm9yY2luZ1BsYXloZWFkPSEwO3ZhciB0PV8ucHJvdG90eXBlLnRvdGFsVGltZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX2ZvcmNpbmdQbGF5aGVhZD0hMSx0fSxpLmR1cmF0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPygwIT09dGhpcy5kdXJhdGlvbigpJiYwIT09dCYmdGhpcy50aW1lU2NhbGUodGhpcy5fZHVyYXRpb24vdCksdGhpcyk6KHRoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKSx0aGlzLl9kdXJhdGlvbil9LGkudG90YWxEdXJhdGlvbj1mdW5jdGlvbih0KXtpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiAwIT09dGhpcy50b3RhbER1cmF0aW9uKCkmJjAhPT10JiZ0aGlzLnRpbWVTY2FsZSh0aGlzLl90b3RhbER1cmF0aW9uL3QpLHRoaXM7aWYodGhpcy5fZGlydHkpe2Zvcih2YXIgZSxpLHM9MCxyPXRoaXMuX2xhc3Qsbj05OTk5OTk5OTk5OTk7cjspZT1yLl9wcmV2LHIuX2RpcnR5JiZyLnRvdGFsRHVyYXRpb24oKSxyLl9zdGFydFRpbWU+biYmdGhpcy5fc29ydENoaWxkcmVuJiYhci5fcGF1c2VkP3RoaXMuYWRkKHIsci5fc3RhcnRUaW1lLXIuX2RlbGF5KTpuPXIuX3N0YXJ0VGltZSxyLl9zdGFydFRpbWU8MCYmIXIuX3BhdXNlZCYmKHMtPXIuX3N0YXJ0VGltZSx0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyYmKHRoaXMuX3N0YXJ0VGltZSs9ci5fc3RhcnRUaW1lL3RoaXMuX3RpbWVTY2FsZSksdGhpcy5zaGlmdENoaWxkcmVuKC1yLl9zdGFydFRpbWUsITEsLTk5OTk5OTk5OTkpLG49MCksczwoaT1yLl9zdGFydFRpbWUrci5fdG90YWxEdXJhdGlvbi9yLl90aW1lU2NhbGUpJiYocz1pKSxyPWU7dGhpcy5fZHVyYXRpb249dGhpcy5fdG90YWxEdXJhdGlvbj1zLHRoaXMuX2RpcnR5PSExfXJldHVybiB0aGlzLl90b3RhbER1cmF0aW9ufSxpLnBhdXNlZD1mdW5jdGlvbih0KXtpZighdClmb3IodmFyIGU9dGhpcy5fZmlyc3QsaT10aGlzLl90aW1lO2U7KWUuX3N0YXJ0VGltZT09PWkmJiJpc1BhdXNlIj09PWUuZGF0YSYmKGUuX3Jhd1ByZXZUaW1lPTApLGU9ZS5fbmV4dDtyZXR1cm4gXy5wcm90b3R5cGUucGF1c2VkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0saS51c2VzRnJhbWVzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX3RpbWVsaW5lO3QuX3RpbWVsaW5lOyl0PXQuX3RpbWVsaW5lO3JldHVybiB0PT09Xy5fcm9vdEZyYW1lc1RpbWVsaW5lfSxpLnJhd1RpbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGF1c2VkP3RoaXMuX3RvdGFsVGltZToodGhpcy5fdGltZWxpbmUucmF3VGltZSgpLXRoaXMuX3N0YXJ0VGltZSkqdGhpcy5fdGltZVNjYWxlfSxmfSwhMCksX2dzU2NvcGUuX2dzRGVmaW5lKCJUaW1lbGluZU1heCIsWyJUaW1lbGluZUxpdGUiLCJUd2VlbkxpdGUiLCJlYXNpbmcuRWFzZSJdLGZ1bmN0aW9uKGUsYSx0KXt2YXIgaT1mdW5jdGlvbih0KXtlLmNhbGwodGhpcyx0KSx0aGlzLl9yZXBlYXQ9dGhpcy52YXJzLnJlcGVhdHx8MCx0aGlzLl9yZXBlYXREZWxheT10aGlzLnZhcnMucmVwZWF0RGVsYXl8fDAsdGhpcy5fY3ljbGU9MCx0aGlzLl95b3lvPSEwPT09dGhpcy52YXJzLnlveW8sdGhpcy5fZGlydHk9ITB9LE89MWUtMTAscz1hLl9pbnRlcm5hbHMsUz1zLmxhenlUd2VlbnMsaz1zLmxhenlSZW5kZXIsbz1uZXcgdChudWxsLG51bGwsMSwwKSxyPWkucHJvdG90eXBlPW5ldyBlO3JldHVybiByLmNvbnN0cnVjdG9yPWksci5raWxsKCkuX2djPSExLGkudmVyc2lvbj0iMS4xOC4wIixyLmludmFsaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5feW95bz0hMD09PXRoaXMudmFycy55b3lvLHRoaXMuX3JlcGVhdD10aGlzLnZhcnMucmVwZWF0fHwwLHRoaXMuX3JlcGVhdERlbGF5PXRoaXMudmFycy5yZXBlYXREZWxheXx8MCx0aGlzLl91bmNhY2hlKCEwKSxlLnByb3RvdHlwZS5pbnZhbGlkYXRlLmNhbGwodGhpcyl9LHIuYWRkQ2FsbGJhY2s9ZnVuY3Rpb24odCxlLGkscyl7cmV0dXJuIHRoaXMuYWRkKGEuZGVsYXllZENhbGwoMCx0LGkscyksZSl9LHIucmVtb3ZlQ2FsbGJhY2s9ZnVuY3Rpb24odCxlKXtpZih0KWlmKG51bGw9PWUpdGhpcy5fa2lsbChudWxsLHQpO2Vsc2UgZm9yKHZhciBpPXRoaXMuZ2V0VHdlZW5zT2YodCwhMSkscz1pLmxlbmd0aCxyPXRoaXMuX3BhcnNlVGltZU9yTGFiZWwoZSk7LTE8LS1zOylpW3NdLl9zdGFydFRpbWU9PT1yJiZpW3NdLl9lbmFibGVkKCExLCExKTtyZXR1cm4gdGhpc30sci5yZW1vdmVQYXVzZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yZW1vdmVDYWxsYmFjayhlLl9pbnRlcm5hbHMucGF1c2VDYWxsYmFjayx0KX0sci50d2VlblRvPWZ1bmN0aW9uKHQsZSl7ZT1lfHx7fTt2YXIgaSxzLHIsbj17ZWFzZTpvLHVzZUZyYW1lczp0aGlzLnVzZXNGcmFtZXMoKSxpbW1lZGlhdGVSZW5kZXI6ITF9O2ZvcihzIGluIGUpbltzXT1lW3NdO3JldHVybiBuLnRpbWU9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbCh0KSxpPU1hdGguYWJzKE51bWJlcihuLnRpbWUpLXRoaXMuX3RpbWUpL3RoaXMuX3RpbWVTY2FsZXx8LjAwMSxyPW5ldyBhKHRoaXMsaSxuKSxuLm9uU3RhcnQ9ZnVuY3Rpb24oKXtyLnRhcmdldC5wYXVzZWQoITApLHIudmFycy50aW1lIT09ci50YXJnZXQudGltZSgpJiZpPT09ci5kdXJhdGlvbigpJiZyLmR1cmF0aW9uKE1hdGguYWJzKHIudmFycy50aW1lLXIudGFyZ2V0LnRpbWUoKSkvci50YXJnZXQuX3RpbWVTY2FsZSksZS5vblN0YXJ0JiZyLl9jYWxsYmFjaygib25TdGFydCIpfSxyfSxyLnR3ZWVuRnJvbVRvPWZ1bmN0aW9uKHQsZSxpKXtpPWl8fHt9LHQ9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbCh0KSxpLnN0YXJ0QXQ9e29uQ29tcGxldGU6dGhpcy5zZWVrLG9uQ29tcGxldGVQYXJhbXM6W3RdLGNhbGxiYWNrU2NvcGU6dGhpc30saS5pbW1lZGlhdGVSZW5kZXI9ITEhPT1pLmltbWVkaWF0ZVJlbmRlcjt2YXIgcz10aGlzLnR3ZWVuVG8oZSxpKTtyZXR1cm4gcy5kdXJhdGlvbihNYXRoLmFicyhzLnZhcnMudGltZS10KS90aGlzLl90aW1lU2NhbGV8fC4wMDEpfSxyLnJlbmRlcj1mdW5jdGlvbih0LGUsaSl7dGhpcy5fZ2MmJnRoaXMuX2VuYWJsZWQoITAsITEpO3ZhciBzLHIsbixhLG8sbCxoLF89dGhpcy5fZGlydHk/dGhpcy50b3RhbER1cmF0aW9uKCk6dGhpcy5fdG90YWxEdXJhdGlvbix1PXRoaXMuX2R1cmF0aW9uLGM9dGhpcy5fdGltZSxmPXRoaXMuX3RvdGFsVGltZSxwPXRoaXMuX3N0YXJ0VGltZSxkPXRoaXMuX3RpbWVTY2FsZSxtPXRoaXMuX3Jhd1ByZXZUaW1lLGc9dGhpcy5fcGF1c2VkLHY9dGhpcy5fY3ljbGU7aWYoXzw9dCl0aGlzLl9sb2NrZWR8fCh0aGlzLl90b3RhbFRpbWU9Xyx0aGlzLl9jeWNsZT10aGlzLl9yZXBlYXQpLHRoaXMuX3JldmVyc2VkfHx0aGlzLl9oYXNQYXVzZWRDaGlsZCgpfHwocj0hMCxhPSJvbkNvbXBsZXRlIixvPSEhdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuLDA9PT10aGlzLl9kdXJhdGlvbiYmKDA9PT10fHxtPDB8fG09PT1PKSYmbSE9PXQmJnRoaXMuX2ZpcnN0JiYobz0hMCxPPG0mJihhPSJvblJldmVyc2VDb21wbGV0ZSIpKSksdGhpcy5fcmF3UHJldlRpbWU9dGhpcy5fZHVyYXRpb258fCFlfHx0fHx0aGlzLl9yYXdQcmV2VGltZT09PXQ/dDpPLHRoaXMuX3lveW8mJjAhPSgxJnRoaXMuX2N5Y2xlKT90aGlzLl90aW1lPXQ9MDp0PSh0aGlzLl90aW1lPXUpKzFlLTQ7ZWxzZSBpZih0PDFlLTcpaWYodGhpcy5fbG9ja2VkfHwodGhpcy5fdG90YWxUaW1lPXRoaXMuX2N5Y2xlPTApLCgodGhpcy5fdGltZT0wKSE9PWN8fDA9PT11JiZtIT09TyYmKDA8bXx8dDwwJiYwPD1tKSYmIXRoaXMuX2xvY2tlZCkmJihhPSJvblJldmVyc2VDb21wbGV0ZSIscj10aGlzLl9yZXZlcnNlZCksdDwwKXRoaXMuX2FjdGl2ZT0hMSx0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX3JldmVyc2VkPyhvPXI9ITAsYT0ib25SZXZlcnNlQ29tcGxldGUiKTowPD1tJiZ0aGlzLl9maXJzdCYmKG89ITApLHRoaXMuX3Jhd1ByZXZUaW1lPXQ7ZWxzZXtpZih0aGlzLl9yYXdQcmV2VGltZT11fHwhZXx8dHx8dGhpcy5fcmF3UHJldlRpbWU9PT10P3Q6TywwPT09dCYmcilmb3Iocz10aGlzLl9maXJzdDtzJiYwPT09cy5fc3RhcnRUaW1lOylzLl9kdXJhdGlvbnx8KHI9ITEpLHM9cy5fbmV4dDt0PTAsdGhpcy5faW5pdHRlZHx8KG89ITApfWVsc2UgaWYoMD09PXUmJm08MCYmKG89ITApLHRoaXMuX3RpbWU9dGhpcy5fcmF3UHJldlRpbWU9dCx0aGlzLl9sb2NrZWR8fCh0aGlzLl90b3RhbFRpbWU9dCwwIT09dGhpcy5fcmVwZWF0JiYobD11K3RoaXMuX3JlcGVhdERlbGF5LHRoaXMuX2N5Y2xlPXRoaXMuX3RvdGFsVGltZS9sPj4wLDAhPT10aGlzLl9jeWNsZSYmdGhpcy5fY3ljbGU9PT10aGlzLl90b3RhbFRpbWUvbCYmdGhpcy5fY3ljbGUtLSx0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZS10aGlzLl9jeWNsZSpsLHRoaXMuX3lveW8mJjAhPSgxJnRoaXMuX2N5Y2xlKSYmKHRoaXMuX3RpbWU9dS10aGlzLl90aW1lKSx0aGlzLl90aW1lPnU/dD0odGhpcy5fdGltZT11KSsxZS00OnRoaXMuX3RpbWU8MD90aGlzLl90aW1lPXQ9MDp0PXRoaXMuX3RpbWUpKSx0aGlzLl9oYXNQYXVzZSYmIXRoaXMuX2ZvcmNpbmdQbGF5aGVhZCYmIWUpe2lmKGM8PSh0PXRoaXMuX3RpbWUpKWZvcihzPXRoaXMuX2ZpcnN0O3MmJnQ+PXMuX3N0YXJ0VGltZSYmIWg7KXMuX2R1cmF0aW9ufHwiaXNQYXVzZSIhPT1zLmRhdGF8fHMucmF0aW98fDA9PT1zLl9zdGFydFRpbWUmJjA9PT10aGlzLl9yYXdQcmV2VGltZXx8KGg9cykscz1zLl9uZXh0O2Vsc2UgZm9yKHM9dGhpcy5fbGFzdDtzJiZzLl9zdGFydFRpbWU+PXQmJiFoOylzLl9kdXJhdGlvbnx8ImlzUGF1c2UiPT09cy5kYXRhJiYwPHMuX3Jhd1ByZXZUaW1lJiYoaD1zKSxzPXMuX3ByZXY7aCYmKHRoaXMuX3RpbWU9dD1oLl9zdGFydFRpbWUsdGhpcy5fdG90YWxUaW1lPXQrdGhpcy5fY3ljbGUqKHRoaXMuX3RvdGFsRHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpKX1pZih0aGlzLl9jeWNsZSE9PXYmJiF0aGlzLl9sb2NrZWQpe3ZhciB5PXRoaXMuX3lveW8mJjAhPSgxJnYpLFQ9eT09PSh0aGlzLl95b3lvJiYwIT0oMSZ0aGlzLl9jeWNsZSkpLHg9dGhpcy5fdG90YWxUaW1lLGI9dGhpcy5fY3ljbGUsdz10aGlzLl9yYXdQcmV2VGltZSxQPXRoaXMuX3RpbWU7aWYodGhpcy5fdG90YWxUaW1lPXYqdSx2PnRoaXMuX2N5Y2xlP3k9IXk6dGhpcy5fdG90YWxUaW1lKz11LHRoaXMuX3RpbWU9Yyx0aGlzLl9yYXdQcmV2VGltZT0wPT09dT9tLTFlLTQ6bSx0aGlzLl9jeWNsZT12LHRoaXMuX2xvY2tlZD0hMCxjPXk/MDp1LHRoaXMucmVuZGVyKGMsZSwwPT09dSksZXx8dGhpcy5fZ2N8fHRoaXMudmFycy5vblJlcGVhdCYmdGhpcy5fY2FsbGJhY2soIm9uUmVwZWF0IiksVCYmKGM9eT91KzFlLTQ6LTFlLTQsdGhpcy5yZW5kZXIoYywhMCwhMSkpLHRoaXMuX2xvY2tlZD0hMSx0aGlzLl9wYXVzZWQmJiFnKXJldHVybjt0aGlzLl90aW1lPVAsdGhpcy5fdG90YWxUaW1lPXgsdGhpcy5fY3ljbGU9Yix0aGlzLl9yYXdQcmV2VGltZT13fWlmKHRoaXMuX3RpbWUhPT1jJiZ0aGlzLl9maXJzdHx8aXx8b3x8aCl7aWYodGhpcy5faW5pdHRlZHx8KHRoaXMuX2luaXR0ZWQ9ITApLHRoaXMuX2FjdGl2ZXx8IXRoaXMuX3BhdXNlZCYmdGhpcy5fdG90YWxUaW1lIT09ZiYmMDx0JiYodGhpcy5fYWN0aXZlPSEwKSwwPT09ZiYmdGhpcy52YXJzLm9uU3RhcnQmJjAhPT10aGlzLl90b3RhbFRpbWUmJihlfHx0aGlzLl9jYWxsYmFjaygib25TdGFydCIpKSx0aGlzLl90aW1lPj1jKWZvcihzPXRoaXMuX2ZpcnN0O3MmJihuPXMuX25leHQsIXRoaXMuX3BhdXNlZHx8Zyk7KShzLl9hY3RpdmV8fHMuX3N0YXJ0VGltZTw9dGhpcy5fdGltZSYmIXMuX3BhdXNlZCYmIXMuX2djKSYmKGg9PT1zJiZ0aGlzLnBhdXNlKCkscy5fcmV2ZXJzZWQ/cy5yZW5kZXIoKHMuX2RpcnR5P3MudG90YWxEdXJhdGlvbigpOnMuX3RvdGFsRHVyYXRpb24pLSh0LXMuX3N0YXJ0VGltZSkqcy5fdGltZVNjYWxlLGUsaSk6cy5yZW5kZXIoKHQtcy5fc3RhcnRUaW1lKSpzLl90aW1lU2NhbGUsZSxpKSkscz1uO2Vsc2UgZm9yKHM9dGhpcy5fbGFzdDtzJiYobj1zLl9wcmV2LCF0aGlzLl9wYXVzZWR8fGcpOyl7aWYocy5fYWN0aXZlfHxjPj1zLl9zdGFydFRpbWUmJiFzLl9wYXVzZWQmJiFzLl9nYyl7aWYoaD09PXMpe2ZvcihoPXMuX3ByZXY7aCYmaC5lbmRUaW1lKCk+dGhpcy5fdGltZTspaC5yZW5kZXIoaC5fcmV2ZXJzZWQ/aC50b3RhbER1cmF0aW9uKCktKHQtaC5fc3RhcnRUaW1lKSpoLl90aW1lU2NhbGU6KHQtaC5fc3RhcnRUaW1lKSpoLl90aW1lU2NhbGUsZSxpKSxoPWguX3ByZXY7aD1udWxsLHRoaXMucGF1c2UoKX1zLl9yZXZlcnNlZD9zLnJlbmRlcigocy5fZGlydHk/cy50b3RhbER1cmF0aW9uKCk6cy5fdG90YWxEdXJhdGlvbiktKHQtcy5fc3RhcnRUaW1lKSpzLl90aW1lU2NhbGUsZSxpKTpzLnJlbmRlcigodC1zLl9zdGFydFRpbWUpKnMuX3RpbWVTY2FsZSxlLGkpfXM9bn10aGlzLl9vblVwZGF0ZSYmKGV8fChTLmxlbmd0aCYmaygpLHRoaXMuX2NhbGxiYWNrKCJvblVwZGF0ZSIpKSksYSYmKHRoaXMuX2xvY2tlZHx8dGhpcy5fZ2N8fChwPT09dGhpcy5fc3RhcnRUaW1lfHxkIT09dGhpcy5fdGltZVNjYWxlKSYmKDA9PT10aGlzLl90aW1lfHxfPj10aGlzLnRvdGFsRHVyYXRpb24oKSkmJihyJiYoUy5sZW5ndGgmJmsoKSx0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX2VuYWJsZWQoITEsITEpLHRoaXMuX2FjdGl2ZT0hMSksIWUmJnRoaXMudmFyc1thXSYmdGhpcy5fY2FsbGJhY2soYSkpKX1lbHNlIGYhPT10aGlzLl90b3RhbFRpbWUmJnRoaXMuX29uVXBkYXRlJiYoZXx8dGhpcy5fY2FsbGJhY2soIm9uVXBkYXRlIikpfSxyLmdldEFjdGl2ZT1mdW5jdGlvbih0LGUsaSl7bnVsbD09dCYmKHQ9ITApLG51bGw9PWUmJihlPSEwKSxudWxsPT1pJiYoaT0hMSk7dmFyIHMscixuPVtdLGE9dGhpcy5nZXRDaGlsZHJlbih0LGUsaSksbz0wLGw9YS5sZW5ndGg7Zm9yKHM9MDtzPGw7cysrKShyPWFbc10pLmlzQWN0aXZlKCkmJihuW28rK109cik7cmV0dXJuIG59LHIuZ2V0TGFiZWxBZnRlcj1mdW5jdGlvbih0KXt0fHwwIT09dCYmKHQ9dGhpcy5fdGltZSk7dmFyIGUsaT10aGlzLmdldExhYmVsc0FycmF5KCkscz1pLmxlbmd0aDtmb3IoZT0wO2U8cztlKyspaWYoaVtlXS50aW1lPnQpcmV0dXJuIGlbZV0ubmFtZTtyZXR1cm4gbnVsbH0sci5nZXRMYWJlbEJlZm9yZT1mdW5jdGlvbih0KXtudWxsPT10JiYodD10aGlzLl90aW1lKTtmb3IodmFyIGU9dGhpcy5nZXRMYWJlbHNBcnJheSgpLGk9ZS5sZW5ndGg7LTE8LS1pOylpZih0PmVbaV0udGltZSlyZXR1cm4gZVtpXS5uYW1lO3JldHVybiBudWxsfSxyLmdldExhYmVsc0FycmF5PWZ1bmN0aW9uKCl7dmFyIHQsZT1bXSxpPTA7Zm9yKHQgaW4gdGhpcy5fbGFiZWxzKWVbaSsrXT17dGltZTp0aGlzLl9sYWJlbHNbdF0sbmFtZTp0fTtyZXR1cm4gZS5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQudGltZS1lLnRpbWV9KSxlfSxyLnByb2dyZXNzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy50b3RhbFRpbWUodGhpcy5kdXJhdGlvbigpKih0aGlzLl95b3lvJiYwIT0oMSZ0aGlzLl9jeWNsZSk/MS10OnQpK3RoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSksZSk6dGhpcy5fdGltZS90aGlzLmR1cmF0aW9uKCl9LHIudG90YWxQcm9ncmVzcz1mdW5jdGlvbih0LGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMudG90YWxUaW1lKHRoaXMudG90YWxEdXJhdGlvbigpKnQsZSk6dGhpcy5fdG90YWxUaW1lL3RoaXMudG90YWxEdXJhdGlvbigpfSxyLnRvdGFsRHVyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/LTE9PT10aGlzLl9yZXBlYXQ/dGhpczp0aGlzLmR1cmF0aW9uKCh0LXRoaXMuX3JlcGVhdCp0aGlzLl9yZXBlYXREZWxheSkvKHRoaXMuX3JlcGVhdCsxKSk6KHRoaXMuX2RpcnR5JiYoZS5wcm90b3R5cGUudG90YWxEdXJhdGlvbi5jYWxsKHRoaXMpLHRoaXMuX3RvdGFsRHVyYXRpb249LTE9PT10aGlzLl9yZXBlYXQ/OTk5OTk5OTk5OTk5OnRoaXMuX2R1cmF0aW9uKih0aGlzLl9yZXBlYXQrMSkrdGhpcy5fcmVwZWF0RGVsYXkqdGhpcy5fcmVwZWF0KSx0aGlzLl90b3RhbER1cmF0aW9uKX0sci50aW1lPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKSx0PnRoaXMuX2R1cmF0aW9uJiYodD10aGlzLl9kdXJhdGlvbiksdGhpcy5feW95byYmMCE9KDEmdGhpcy5fY3ljbGUpP3Q9dGhpcy5fZHVyYXRpb24tdCt0aGlzLl9jeWNsZSoodGhpcy5fZHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpOjAhPT10aGlzLl9yZXBlYXQmJih0Kz10aGlzLl9jeWNsZSoodGhpcy5fZHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpKSx0aGlzLnRvdGFsVGltZSh0LGUpKTp0aGlzLl90aW1lfSxyLnJlcGVhdD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fcmVwZWF0PXQsdGhpcy5fdW5jYWNoZSghMCkpOnRoaXMuX3JlcGVhdH0sci5yZXBlYXREZWxheT1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fcmVwZWF0RGVsYXk9dCx0aGlzLl91bmNhY2hlKCEwKSk6dGhpcy5fcmVwZWF0RGVsYXl9LHIueW95bz1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5feW95bz10LHRoaXMpOnRoaXMuX3lveW99LHIuY3VycmVudExhYmVsPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMuc2Vlayh0LCEwKTp0aGlzLmdldExhYmVsQmVmb3JlKHRoaXMuX3RpbWUrMWUtOCl9LGl9LCEwKSx3PTE4MC9NYXRoLlBJLHg9W10sYj1bXSxQPVtdLGc9e30saT1fZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyx2PWZ1bmN0aW9uKHQsZSxpLHMpe3RoaXMuYT10LHRoaXMuYj1lLHRoaXMuYz1pLHRoaXMuZD1zLHRoaXMuZGE9cy10LHRoaXMuY2E9aS10LHRoaXMuYmE9ZS10fSxPPWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByPXthOnR9LG49e30sYT17fSxvPXtjOnN9LGw9KHQrZSkvMixoPShlK2kpLzIsXz0oaStzKS8yLHU9KGwraCkvMixjPShoK18pLzIsZj0oYy11KS84O3JldHVybiByLmI9bCsodC1sKS80LG4uYj11K2Ysci5jPW4uYT0oci5iK24uYikvMixuLmM9YS5hPSh1K2MpLzIsYS5iPWMtZixvLmI9Xysocy1fKS80LGEuYz1vLmE9KGEuYitvLmIpLzIsW3IsbixhLG9dfSx5PWZ1bmN0aW9uKHQsZSxpLHMscil7dmFyIG4sYSxvLGwsaCxfLHUsYyxmLHAsZCxtLGcsdj10Lmxlbmd0aC0xLHk9MCxUPXRbMF0uYTtmb3Iobj0wO248djtuKyspYT0oaD10W3ldKS5hLG89aC5kLGw9dFt5KzFdLmQsYz1yPyhkPXhbbl0sZz0uMjUqKChtPWJbbl0pK2QpKmUvKHM/LjU6UFtuXXx8LjUpLG8tKChfPW8tKG8tYSkqKHM/LjUqZTowIT09ZD9nL2Q6MCkpKygoKHU9bysobC1vKSoocz8uNSplOjAhPT1tP2cvbTowKSktXykqKDMqZC8oZCttKSsuNSkvNHx8MCkpKTpvLSgoXz1vLS41KihvLWEpKmUpKyh1PW8rLjUqKGwtbykqZSkpLzIsXys9Yyx1Kz1jLGguYz1mPV8saC5iPTAhPT1uP1Q6VD1oLmErLjYqKGguYy1oLmEpLGguZGE9by1hLGguY2E9Zi1hLGguYmE9VC1hLGk/KHA9TyhhLFQsZixvKSx0LnNwbGljZSh5LDEscFswXSxwWzFdLHBbMl0scFszXSkseSs9NCk6eSsrLFQ9dTsoaD10W3ldKS5iPVQsaC5jPVQrLjQqKGguZC1UKSxoLmRhPWguZC1oLmEsaC5jYT1oLmMtaC5hLGguYmE9VC1oLmEsaSYmKHA9TyhoLmEsVCxoLmMsaC5kKSx0LnNwbGljZSh5LDEscFswXSxwWzFdLHBbMl0scFszXSkpfSxUPWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByLG4sYSxvLGwsaCxfPVtdO2lmKHMpZm9yKG49KHQ9W3NdLmNvbmNhdCh0KSkubGVuZ3RoOy0xPC0tbjspInN0cmluZyI9PXR5cGVvZihoPXRbbl1bZV0pJiYiPSI9PT1oLmNoYXJBdCgxKSYmKHRbbl1bZV09c1tlXStOdW1iZXIoaC5jaGFyQXQoMCkraC5zdWJzdHIoMikpKTtpZigocj10Lmxlbmd0aC0yKTwwKXJldHVybiBfWzBdPW5ldyB2KHRbMF1bZV0sMCwwLHRbcjwtMT8wOjFdW2VdKSxfO2ZvcihuPTA7bjxyO24rKylhPXRbbl1bZV0sbz10W24rMV1bZV0sX1tuXT1uZXcgdihhLDAsMCxvKSxpJiYobD10W24rMl1bZV0seFtuXT0oeFtuXXx8MCkrKG8tYSkqKG8tYSksYltuXT0oYltuXXx8MCkrKGwtbykqKGwtbykpO3JldHVybiBfW25dPW5ldyB2KHRbbl1bZV0sMCwwLHRbbisxXVtlXSksX30sZj1mdW5jdGlvbih0LGUsaSxzLHIsbil7dmFyIGEsbyxsLGgsXyx1LGMsZixwPXt9LGQ9W10sbT1ufHx0WzBdO2ZvcihvIGluIHI9InN0cmluZyI9PXR5cGVvZiByPyIsIityKyIsIjoiLHgseSx6LGxlZnQsdG9wLHJpZ2h0LGJvdHRvbSxtYXJnaW5Ub3AsbWFyZ2luTGVmdCxtYXJnaW5SaWdodCxtYXJnaW5Cb3R0b20scGFkZGluZ0xlZnQscGFkZGluZ1RvcCxwYWRkaW5nUmlnaHQscGFkZGluZ0JvdHRvbSxiYWNrZ3JvdW5kUG9zaXRpb24sYmFja2dyb3VuZFBvc2l0aW9uX3ksIixudWxsPT1lJiYoZT0xKSx0WzBdKWQucHVzaChvKTtpZigxPHQubGVuZ3RoKXtmb3IoZj10W3QubGVuZ3RoLTFdLGM9ITAsYT1kLmxlbmd0aDstMTwtLWE7KWlmKG89ZFthXSwuMDU8TWF0aC5hYnMobVtvXS1mW29dKSl7Yz0hMTticmVha31jJiYodD10LmNvbmNhdCgpLG4mJnQudW5zaGlmdChuKSx0LnB1c2godFsxXSksbj10W3QubGVuZ3RoLTNdKX1mb3IoeC5sZW5ndGg9Yi5sZW5ndGg9UC5sZW5ndGg9MCxhPWQubGVuZ3RoOy0xPC0tYTspbz1kW2FdLGdbb109LTEhPT1yLmluZGV4T2YoIiwiK28rIiwiKSxwW29dPVQodCxvLGdbb10sbik7Zm9yKGE9eC5sZW5ndGg7LTE8LS1hOyl4W2FdPU1hdGguc3FydCh4W2FdKSxiW2FdPU1hdGguc3FydChiW2FdKTtpZighcyl7Zm9yKGE9ZC5sZW5ndGg7LTE8LS1hOylpZihnW29dKWZvcih1PShsPXBbZFthXV0pLmxlbmd0aC0xLGg9MDtoPHU7aCsrKV89bFtoKzFdLmRhL2JbaF0rbFtoXS5kYS94W2hdLFBbaF09KFBbaF18fDApK18qXztmb3IoYT1QLmxlbmd0aDstMTwtLWE7KVBbYV09TWF0aC5zcXJ0KFBbYV0pfWZvcihhPWQubGVuZ3RoLGg9aT80OjE7LTE8LS1hOylsPXBbbz1kW2FdXSx5KGwsZSxpLHMsZ1tvXSksYyYmKGwuc3BsaWNlKDAsaCksbC5zcGxpY2UobC5sZW5ndGgtaCxoKSk7cmV0dXJuIHB9LHA9ZnVuY3Rpb24odCxlLGkpe2Zvcih2YXIgcyxyLG4sYSxvLGwsaCxfLHUsYyxmLHA9MS9pLGQ9dC5sZW5ndGg7LTE8LS1kOylmb3Iobj0oYz10W2RdKS5hLGE9Yy5kLW4sbz1jLmMtbixsPWMuYi1uLHM9cj0wLF89MTtfPD1pO18rKylzPXItKHI9KChoPXAqXykqaCphKzMqKHU9MS1oKSooaCpvK3UqbCkpKmgpLGVbZj1kKmkrXy0xXT0oZVtmXXx8MCkrcypzfSxtPV9nc1Njb3BlLl9nc0RlZmluZS5wbHVnaW4oe3Byb3BOYW1lOiJiZXppZXIiLHByaW9yaXR5Oi0xLHZlcnNpb246IjEuMy40IixBUEk6MixnbG9iYWw6ITAsaW5pdDpmdW5jdGlvbih0LGUsaSl7dGhpcy5fdGFyZ2V0PXQsZSBpbnN0YW5jZW9mIEFycmF5JiYoZT17dmFsdWVzOmV9KSx0aGlzLl9mdW5jPXt9LHRoaXMuX3JvdW5kPXt9LHRoaXMuX3Byb3BzPVtdLHRoaXMuX3RpbWVSZXM9bnVsbD09ZS50aW1lUmVzb2x1dGlvbj82OnBhcnNlSW50KGUudGltZVJlc29sdXRpb24sMTApO3ZhciBzLHIsbixhLG8sbD1lLnZhbHVlc3x8W10saD17fSxfPWxbMF0sdT1lLmF1dG9Sb3RhdGV8fGkudmFycy5vcmllbnRUb0Jlemllcjtmb3IocyBpbiB0aGlzLl9hdXRvUm90YXRlPXU/dSBpbnN0YW5jZW9mIEFycmF5P3U6W1sieCIsInkiLCJyb3RhdGlvbiIsITA9PT11PzA6TnVtYmVyKHUpfHwwXV06bnVsbCxfKXRoaXMuX3Byb3BzLnB1c2gocyk7Zm9yKG49dGhpcy5fcHJvcHMubGVuZ3RoOy0xPC0tbjspcz10aGlzLl9wcm9wc1tuXSx0aGlzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKHMpLHI9dGhpcy5fZnVuY1tzXT0iZnVuY3Rpb24iPT10eXBlb2YgdFtzXSxoW3NdPXI/dFtzLmluZGV4T2YoInNldCIpfHwiZnVuY3Rpb24iIT10eXBlb2YgdFsiZ2V0IitzLnN1YnN0cigzKV0/czoiZ2V0IitzLnN1YnN0cigzKV0oKTpwYXJzZUZsb2F0KHRbc10pLG98fGhbc10hPT1sWzBdW3NdJiYobz1oKTtpZih0aGlzLl9iZXppZXJzPSJjdWJpYyIhPT1lLnR5cGUmJiJxdWFkcmF0aWMiIT09ZS50eXBlJiYic29mdCIhPT1lLnR5cGU/ZihsLGlzTmFOKGUuY3VydmluZXNzKT8xOmUuY3VydmluZXNzLCExLCJ0aHJ1QmFzaWMiPT09ZS50eXBlLGUuY29ycmVsYXRlLG8pOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcyxyLG4sYSxvLGwsaCxfLHUsYyxmLHA9e30sZD0iY3ViaWMiPT09KGU9ZXx8InNvZnQiKT8zOjIsbT0ic29mdCI9PT1lLGc9W107aWYobSYmaSYmKHQ9W2ldLmNvbmNhdCh0KSksbnVsbD09dHx8MStkPnQubGVuZ3RoKXRocm93ImludmFsaWQgQmV6aWVyIGRhdGEiO2Zvcih1IGluIHRbMF0pZy5wdXNoKHUpO2ZvcihsPWcubGVuZ3RoOy0xPC0tbDspe2ZvcihwW3U9Z1tsXV09bz1bXSxjPTAsXz10Lmxlbmd0aCxoPTA7aDxfO2grKylzPW51bGw9PWk/dFtoXVt1XToic3RyaW5nIj09dHlwZW9mKGY9dFtoXVt1XSkmJiI9Ij09PWYuY2hhckF0KDEpP2lbdV0rTnVtYmVyKGYuY2hhckF0KDApK2Yuc3Vic3RyKDIpKTpOdW1iZXIoZiksbSYmMTxoJiZoPF8tMSYmKG9bYysrXT0ocytvW2MtMl0pLzIpLG9bYysrXT1zO2ZvcihfPWMtZCsxLGg9Yz0wO2g8XztoKz1kKXM9b1toXSxyPW9baCsxXSxuPW9baCsyXSxhPTI9PWQ/MDpvW2grM10sb1tjKytdPWY9Mz09ZD9uZXcgdihzLHIsbixhKTpuZXcgdihzLCgyKnIrcykvMywoMipyK24pLzMsbik7by5sZW5ndGg9Y31yZXR1cm4gcH0obCxlLnR5cGUsaCksdGhpcy5fc2VnQ291bnQ9dGhpcy5fYmV6aWVyc1tzXS5sZW5ndGgsdGhpcy5fdGltZVJlcyl7dmFyIGM9ZnVuY3Rpb24odCxlKXt2YXIgaSxzLHIsbixhPVtdLG89W10sbD0wLGg9MCxfPShlPWU+PjB8fDYpLTEsdT1bXSxjPVtdO2ZvcihpIGluIHQpcCh0W2ldLGEsZSk7Zm9yKHI9YS5sZW5ndGgscz0wO3M8cjtzKyspbCs9TWF0aC5zcXJ0KGFbc10pLGNbbj1zJWVdPWwsbj09PV8mJihoKz1sLHVbbj1zL2U+PjBdPWMsb1tuXT1oLGw9MCxjPVtdKTtyZXR1cm57bGVuZ3RoOmgsbGVuZ3RoczpvLHNlZ21lbnRzOnV9fSh0aGlzLl9iZXppZXJzLHRoaXMuX3RpbWVSZXMpO3RoaXMuX2xlbmd0aD1jLmxlbmd0aCx0aGlzLl9sZW5ndGhzPWMubGVuZ3Rocyx0aGlzLl9zZWdtZW50cz1jLnNlZ21lbnRzLHRoaXMuX2wxPXRoaXMuX2xpPXRoaXMuX3MxPXRoaXMuX3NpPTAsdGhpcy5fbDI9dGhpcy5fbGVuZ3Roc1swXSx0aGlzLl9jdXJTZWc9dGhpcy5fc2VnbWVudHNbMF0sdGhpcy5fczI9dGhpcy5fY3VyU2VnWzBdLHRoaXMuX3ByZWM9MS90aGlzLl9jdXJTZWcubGVuZ3RofWlmKHU9dGhpcy5fYXV0b1JvdGF0ZSlmb3IodGhpcy5faW5pdGlhbFJvdGF0aW9ucz1bXSx1WzBdaW5zdGFuY2VvZiBBcnJheXx8KHRoaXMuX2F1dG9Sb3RhdGU9dT1bdV0pLG49dS5sZW5ndGg7LTE8LS1uOyl7Zm9yKGE9MDthPDM7YSsrKXM9dVtuXVthXSx0aGlzLl9mdW5jW3NdPSJmdW5jdGlvbiI9PXR5cGVvZiB0W3NdJiZ0W3MuaW5kZXhPZigic2V0Iil8fCJmdW5jdGlvbiIhPXR5cGVvZiB0WyJnZXQiK3Muc3Vic3RyKDMpXT9zOiJnZXQiK3Muc3Vic3RyKDMpXTtzPXVbbl1bMl0sdGhpcy5faW5pdGlhbFJvdGF0aW9uc1tuXT10aGlzLl9mdW5jW3NdP3RoaXMuX2Z1bmNbc10uY2FsbCh0aGlzLl90YXJnZXQpOnRoaXMuX3RhcmdldFtzXX1yZXR1cm4gdGhpcy5fc3RhcnRSYXRpbz1pLnZhcnMucnVuQmFja3dhcmRzPzE6MCwhMH0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBlLGkscyxyLG4sYSxvLGwsaCxfLHU9dGhpcy5fc2VnQ291bnQsYz10aGlzLl9mdW5jLGY9dGhpcy5fdGFyZ2V0LHA9dCE9PXRoaXMuX3N0YXJ0UmF0aW87aWYodGhpcy5fdGltZVJlcyl7aWYoaD10aGlzLl9sZW5ndGhzLF89dGhpcy5fY3VyU2VnLHQqPXRoaXMuX2xlbmd0aCxzPXRoaXMuX2xpLHQ+dGhpcy5fbDImJnM8dS0xKXtmb3IobD11LTE7czxsJiZ0Pj0odGhpcy5fbDI9aFsrK3NdKTspO3RoaXMuX2wxPWhbcy0xXSx0aGlzLl9saT1zLHRoaXMuX2N1clNlZz1fPXRoaXMuX3NlZ21lbnRzW3NdLHRoaXMuX3MyPV9bdGhpcy5fczE9dGhpcy5fc2k9MF19ZWxzZSBpZih0aGlzLl9sMT50JiYwPHMpe2Zvcig7MDxzJiYodGhpcy5fbDE9aFstLXNdKT49dDspOzA9PT1zJiZ0aGlzLl9sMT50P3RoaXMuX2wxPTA6cysrLHRoaXMuX2wyPWhbc10sdGhpcy5fbGk9cyx0aGlzLl9jdXJTZWc9Xz10aGlzLl9zZWdtZW50c1tzXSx0aGlzLl9zMT1fWyh0aGlzLl9zaT1fLmxlbmd0aC0xKS0xXXx8MCx0aGlzLl9zMj1fW3RoaXMuX3NpXX1pZihlPXMsdC09dGhpcy5fbDEscz10aGlzLl9zaSx0PnRoaXMuX3MyJiZfLmxlbmd0aC0xPnMpe2ZvcihsPV8ubGVuZ3RoLTE7czxsJiZ0Pj0odGhpcy5fczI9X1srK3NdKTspO3RoaXMuX3MxPV9bcy0xXSx0aGlzLl9zaT1zfWVsc2UgaWYodGhpcy5fczE+dCYmMDxzKXtmb3IoOzA8cyYmKHRoaXMuX3MxPV9bLS1zXSk+PXQ7KTswPT09cyYmdGhpcy5fczE+dD90aGlzLl9zMT0wOnMrKyx0aGlzLl9zMj1fW3NdLHRoaXMuX3NpPXN9YT0ocysodC10aGlzLl9zMSkvKHRoaXMuX3MyLXRoaXMuX3MxKSkqdGhpcy5fcHJlY31lbHNlIGE9KHQtKGU9dDwwPzA6MTw9dD91LTE6dSp0Pj4wKSooMS91KSkqdTtmb3IoaT0xLWEscz10aGlzLl9wcm9wcy5sZW5ndGg7LTE8LS1zOylyPXRoaXMuX3Byb3BzW3NdLG89KGEqYSoobj10aGlzLl9iZXppZXJzW3JdW2VdKS5kYSszKmkqKGEqbi5jYStpKm4uYmEpKSphK24uYSx0aGlzLl9yb3VuZFtyXSYmKG89TWF0aC5yb3VuZChvKSksY1tyXT9mW3JdKG8pOmZbcl09bztpZih0aGlzLl9hdXRvUm90YXRlKXt2YXIgZCxtLGcsdix5LFQseCxiPXRoaXMuX2F1dG9Sb3RhdGU7Zm9yKHM9Yi5sZW5ndGg7LTE8LS1zOylyPWJbc11bMl0sVD1iW3NdWzNdfHwwLHg9ITA9PT1iW3NdWzRdPzE6dyxuPXRoaXMuX2JlemllcnNbYltzXVswXV0sZD10aGlzLl9iZXppZXJzW2Jbc11bMV1dLG4mJmQmJihuPW5bZV0sZD1kW2VdLG09bi5hKyhuLmItbi5hKSphLG0rPSgodj1uLmIrKG4uYy1uLmIpKmEpLW0pKmEsdis9KG4uYysobi5kLW4uYykqYS12KSphLGc9ZC5hKyhkLmItZC5hKSphLGcrPSgoeT1kLmIrKGQuYy1kLmIpKmEpLWcpKmEseSs9KGQuYysoZC5kLWQuYykqYS15KSphLG89cD9NYXRoLmF0YW4yKHktZyx2LW0pKngrVDp0aGlzLl9pbml0aWFsUm90YXRpb25zW3NdLGNbcl0/ZltyXShvKTpmW3JdPW8pfX19KSxzPW0ucHJvdG90eXBlLG0uYmV6aWVyVGhyb3VnaD1mLG0uY3ViaWNUb1F1YWRyYXRpYz1PLG0uX2F1dG9DU1M9ITAsbS5xdWFkcmF0aWNUb0N1YmljPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gbmV3IHYodCwoMiplK3QpLzMsKDIqZStpKS8zLGkpfSxtLl9jc3NSZWdpc3Rlcj1mdW5jdGlvbigpe3ZhciB0PWkuQ1NTUGx1Z2luO2lmKHQpe3ZhciBlPXQuX2ludGVybmFscyxmPWUuX3BhcnNlVG9Qcm94eSxwPWUuX3NldFBsdWdpblJhdGlvLGQ9ZS5DU1NQcm9wVHdlZW47ZS5fcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoImJlemllciIse3BhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIsbil7ZSBpbnN0YW5jZW9mIEFycmF5JiYoZT17dmFsdWVzOmV9KSxuPW5ldyBtO3ZhciBhLG8sbCxoPWUudmFsdWVzLF89aC5sZW5ndGgtMSx1PVtdLGM9e307aWYoXzwwKXJldHVybiByO2ZvcihhPTA7YTw9XzthKyspbD1mKHQsaFthXSxzLHIsbixfIT09YSksdVthXT1sLmVuZDtmb3IobyBpbiBlKWNbb109ZVtvXTtyZXR1cm4gYy52YWx1ZXM9dSwocj1uZXcgZCh0LCJiZXppZXIiLDAsMCxsLnB0LDIpKS5kYXRhPWwsci5wbHVnaW49bixyLnNldFJhdGlvPXAsMD09PWMuYXV0b1JvdGF0ZSYmKGMuYXV0b1JvdGF0ZT0hMCksIWMuYXV0b1JvdGF0ZXx8Yy5hdXRvUm90YXRlIGluc3RhbmNlb2YgQXJyYXl8fChhPSEwPT09Yy5hdXRvUm90YXRlPzA6TnVtYmVyKGMuYXV0b1JvdGF0ZSksYy5hdXRvUm90YXRlPW51bGwhPWwuZW5kLmxlZnQ/W1sibGVmdCIsInRvcCIsInJvdGF0aW9uIixhLCExXV06bnVsbCE9bC5lbmQueCYmW1sieCIsInkiLCJyb3RhdGlvbiIsYSwhMV1dKSxjLmF1dG9Sb3RhdGUmJihzLl90cmFuc2Zvcm18fHMuX2VuYWJsZVRyYW5zZm9ybXMoITEpLGwuYXV0b1JvdGF0ZT1zLl90YXJnZXQuX2dzVHJhbnNmb3JtKSxuLl9vbkluaXRUd2VlbihsLnByb3h5LGMscy5fdHdlZW4pLHJ9fSl9fSxzLl9yb3VuZFByb3BzPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPXRoaXMuX292ZXJ3cml0ZVByb3BzLHM9aS5sZW5ndGg7LTE8LS1zOykodFtpW3NdXXx8dC5iZXppZXJ8fHQuYmV6aWVyVGhyb3VnaCkmJih0aGlzLl9yb3VuZFtpW3NdXT1lKX0scy5fa2lsbD1mdW5jdGlvbih0KXt2YXIgZSxpLHM9dGhpcy5fcHJvcHM7Zm9yKGUgaW4gdGhpcy5fYmV6aWVycylpZihlIGluIHQpZm9yKGRlbGV0ZSB0aGlzLl9iZXppZXJzW2VdLGRlbGV0ZSB0aGlzLl9mdW5jW2VdLGk9cy5sZW5ndGg7LTE8LS1pOylzW2ldPT09ZSYmcy5zcGxpY2UoaSwxKTtyZXR1cm4gdGhpcy5fc3VwZXIuX2tpbGwuY2FsbCh0aGlzLHQpfSxfZ3NTY29wZS5fZ3NEZWZpbmUoInBsdWdpbnMuQ1NTUGx1Z2luIixbInBsdWdpbnMuVHdlZW5QbHVnaW4iLCJUd2VlbkxpdGUiXSxmdW5jdGlvbihuLFkpe3ZhciBwLHcsQixmLGo9ZnVuY3Rpb24oKXtuLmNhbGwodGhpcywiY3NzIiksdGhpcy5fb3ZlcndyaXRlUHJvcHMubGVuZ3RoPTAsdGhpcy5zZXRSYXRpbz1qLnByb3RvdHlwZS5zZXRSYXRpb30saD1fZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxkPXt9LHQ9ai5wcm90b3R5cGU9bmV3IG4oImNzcyIpOyh0LmNvbnN0cnVjdG9yPWopLnZlcnNpb249IjEuMTguMCIsai5BUEk9MixqLmRlZmF1bHRUcmFuc2Zvcm1QZXJzcGVjdGl2ZT0wLGouZGVmYXVsdFNrZXdUeXBlPSJjb21wZW5zYXRlZCIsai5kZWZhdWx0U21vb3RoT3JpZ2luPSEwLHQ9InB4IixqLnN1ZmZpeE1hcD17dG9wOnQscmlnaHQ6dCxib3R0b206dCxsZWZ0OnQsd2lkdGg6dCxoZWlnaHQ6dCxmb250U2l6ZTp0LHBhZGRpbmc6dCxtYXJnaW46dCxwZXJzcGVjdGl2ZTp0LGxpbmVIZWlnaHQ6IiJ9O3ZhciBrLG0sZyxMLHYsTyxlLGksUj0vKD86XGR8XC1cZHxcLlxkfFwtXC5cZCkrL2csQT0vKD86XGR8XC1cZHxcLlxkfFwtXC5cZHxcKz1cZHxcLT1cZHxcKz0uXGR8XC09XC5cZCkrL2cseT0vKD86XCs9fFwtPXxcLXxcYilbXGRcLVwuXStbYS16QS1aMC05XSooPzolfFxiKS9naSxfPS8oPyFbKy1dP1xkKlwuP1xkK3xbKy1dfGVbKy1dXGQrKVteMC05XS9nLFM9Lyg/OlxkfFwtfFwrfD18I3xcLikqL2csQz0vb3BhY2l0eSAqPSAqKFteKV0qKS9pLFQ9L29wYWNpdHk6KFteO10qKS9pLGE9L2FscGhhXChvcGFjaXR5ICo9Lis/XCkvaSx4PS9eKHJnYnxoc2wpLyxvPS8oW0EtWl0pL2csbD0vLShbYS16XSkvZ2ksYj0vKF4oPzp1cmxcKFwifHVybFwoKSl8KD86KFwiXCkpJHxcKSQpL2dpLHU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSxjPS8oPzpMZWZ0fFJpZ2h0fFdpZHRoKS9pLFA9LyhNMTF8TTEyfE0yMXxNMjIpPVtcZFwtXC5lXSsvZ2ksRD0vcHJvZ2lkXDpEWEltYWdlVHJhbnNmb3JtXC5NaWNyb3NvZnRcLk1hdHJpeFwoLis/XCkvaSxNPS8sKD89W15cKV0qKD86XCh8JCkpL2dpLEU9TWF0aC5QSS8xODAsVT0xODAvTWF0aC5QSSx6PXt9LEY9ZG9jdW1lbnQscz1mdW5jdGlvbih0KXtyZXR1cm4gRi5jcmVhdGVFbGVtZW50TlM/Ri5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLHQpOkYuY3JlYXRlRWxlbWVudCh0KX0sST1zKCJkaXYiKSxYPXMoImltZyIpLHI9ai5faW50ZXJuYWxzPXtfc3BlY2lhbFByb3BzOmR9LE49bmF2aWdhdG9yLnVzZXJBZ2VudCxWPShlPU4uaW5kZXhPZigiQW5kcm9pZCIpLGk9cygiYSIpLGc9LTEhPT1OLmluZGV4T2YoIlNhZmFyaSIpJiYtMT09PU4uaW5kZXhPZigiQ2hyb21lIikmJigtMT09PWV8fDM8TnVtYmVyKE4uc3Vic3RyKGUrOCwxKSkpLHY9ZyYmTnVtYmVyKE4uc3Vic3RyKE4uaW5kZXhPZigiVmVyc2lvbi8iKSs4LDEpKTw2LEw9LTEhPT1OLmluZGV4T2YoIkZpcmVmb3giKSwoL01TSUUgKFswLTldezEsfVtcLjAtOV17MCx9KS8uZXhlYyhOKXx8L1RyaWRlbnRcLy4qcnY6KFswLTldezEsfVtcLjAtOV17MCx9KS8uZXhlYyhOKSkmJihPPXBhcnNlRmxvYXQoUmVnRXhwLiQxKSksISFpJiYoaS5zdHlsZS5jc3NUZXh0PSJ0b3A6MXB4O29wYWNpdHk6LjU1OyIsL14wLjU1Ly50ZXN0KGkuc3R5bGUub3BhY2l0eSkpKSxxPWZ1bmN0aW9uKHQpe3JldHVybiBDLnRlc3QoInN0cmluZyI9PXR5cGVvZiB0P3Q6KHQuY3VycmVudFN0eWxlP3QuY3VycmVudFN0eWxlLmZpbHRlcjp0LnN0eWxlLmZpbHRlcil8fCIiKT9wYXJzZUZsb2F0KFJlZ0V4cC4kMSkvMTAwOjF9LFc9ZnVuY3Rpb24odCl7d2luZG93LmNvbnNvbGUmJmNvbnNvbGUubG9nKHQpfSxaPSIiLEc9IiIsJD1mdW5jdGlvbih0LGUpe3ZhciBpLHMscj0oZT1lfHxJKS5zdHlsZTtpZih2b2lkIDAhPT1yW3RdKXJldHVybiB0O2Zvcih0PXQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrdC5zdWJzdHIoMSksaT1bIk8iLCJNb3oiLCJtcyIsIk1zIiwiV2Via2l0Il0scz01Oy0xPC0tcyYmdm9pZCAwPT09cltpW3NdK3RdOyk7cmV0dXJuIDA8PXM/KFo9Ii0iKyhHPTM9PT1zPyJtcyI6aVtzXSkudG9Mb3dlckNhc2UoKSsiLSIsRyt0KTpudWxsfSxRPUYuZGVmYXVsdFZpZXc/Ri5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlOmZ1bmN0aW9uKCl7fSxIPWouZ2V0U3R5bGU9ZnVuY3Rpb24odCxlLGkscyxyKXt2YXIgbjtyZXR1cm4gVnx8Im9wYWNpdHkiIT09ZT8oIXMmJnQuc3R5bGVbZV0/bj10LnN0eWxlW2VdOihpPWl8fFEodCkpP249aVtlXXx8aS5nZXRQcm9wZXJ0eVZhbHVlKGUpfHxpLmdldFByb3BlcnR5VmFsdWUoZS5yZXBsYWNlKG8sIi0kMSIpLnRvTG93ZXJDYXNlKCkpOnQuY3VycmVudFN0eWxlJiYobj10LmN1cnJlbnRTdHlsZVtlXSksbnVsbD09cnx8biYmIm5vbmUiIT09biYmImF1dG8iIT09biYmImF1dG8gYXV0byIhPT1uP246cik6cSh0KX0sSz1yLmNvbnZlcnRUb1BpeGVscz1mdW5jdGlvbih0LGUsaSxzLHIpe2lmKCJweCI9PT1zfHwhcylyZXR1cm4gaTtpZigiYXV0byI9PT1zfHwhaSlyZXR1cm4gMDt2YXIgbixhLG8sbD1jLnRlc3QoZSksaD10LF89SS5zdHlsZSx1PWk8MDtpZih1JiYoaT0taSksIiUiPT09cyYmLTEhPT1lLmluZGV4T2YoImJvcmRlciIpKW49aS8xMDAqKGw/dC5jbGllbnRXaWR0aDp0LmNsaWVudEhlaWdodCk7ZWxzZXtpZihfLmNzc1RleHQ9ImJvcmRlcjowIHNvbGlkIHJlZDtwb3NpdGlvbjoiK0godCwicG9zaXRpb24iKSsiO2xpbmUtaGVpZ2h0OjA7IiwiJSIhPT1zJiZoLmFwcGVuZENoaWxkJiYidiIhPT1zLmNoYXJBdCgwKSYmInJlbSIhPT1zKV9bbD8iYm9yZGVyTGVmdFdpZHRoIjoiYm9yZGVyVG9wV2lkdGgiXT1pK3M7ZWxzZXtpZihhPShoPXQucGFyZW50Tm9kZXx8Ri5ib2R5KS5fZ3NDYWNoZSxvPVkudGlja2VyLmZyYW1lLGEmJmwmJmEudGltZT09PW8pcmV0dXJuIGEud2lkdGgqaS8xMDA7X1tsPyJ3aWR0aCI6ImhlaWdodCJdPWkrc31oLmFwcGVuZENoaWxkKEkpLG49cGFyc2VGbG9hdChJW2w/Im9mZnNldFdpZHRoIjoib2Zmc2V0SGVpZ2h0Il0pLGgucmVtb3ZlQ2hpbGQoSSksbCYmIiUiPT09cyYmITEhPT1qLmNhY2hlV2lkdGhzJiYoKGE9aC5fZ3NDYWNoZT1oLl9nc0NhY2hlfHx7fSkudGltZT1vLGEud2lkdGg9bi9pKjEwMCksMCE9PW58fHJ8fChuPUsodCxlLGkscywhMCkpfXJldHVybiB1Py1uOm59LEo9ci5jYWxjdWxhdGVPZmZzZXQ9ZnVuY3Rpb24odCxlLGkpe2lmKCJhYnNvbHV0ZSIhPT1IKHQsInBvc2l0aW9uIixpKSlyZXR1cm4gMDt2YXIgcz0ibGVmdCI9PT1lPyJMZWZ0IjoiVG9wIixyPUgodCwibWFyZ2luIitzLGkpO3JldHVybiB0WyJvZmZzZXQiK3NdLShLKHQsZSxwYXJzZUZsb2F0KHIpLHIucmVwbGFjZShTLCIiKSl8fDApfSx0dD1mdW5jdGlvbih0LGUpe3ZhciBpLHMscixuPXt9O2lmKGU9ZXx8USh0LG51bGwpKWlmKGk9ZS5sZW5ndGgpZm9yKDstMTwtLWk7KSgtMT09PShyPWVbaV0pLmluZGV4T2YoIi10cmFuc2Zvcm0iKXx8RHQ9PT1yKSYmKG5bci5yZXBsYWNlKGwsdSldPWUuZ2V0UHJvcGVydHlWYWx1ZShyKSk7ZWxzZSBmb3IoaSBpbiBlKSgtMT09PWkuaW5kZXhPZigiVHJhbnNmb3JtIil8fEN0PT09aSkmJihuW2ldPWVbaV0pO2Vsc2UgaWYoZT10LmN1cnJlbnRTdHlsZXx8dC5zdHlsZSlmb3IoaSBpbiBlKSJzdHJpbmciPT10eXBlb2YgaSYmdm9pZCAwPT09bltpXSYmKG5baS5yZXBsYWNlKGwsdSldPWVbaV0pO3JldHVybiBWfHwobi5vcGFjaXR5PXEodCkpLHM9VXQodCxlLCExKSxuLnJvdGF0aW9uPXMucm90YXRpb24sbi5za2V3WD1zLnNrZXdYLG4uc2NhbGVYPXMuc2NhbGVYLG4uc2NhbGVZPXMuc2NhbGVZLG4ueD1zLngsbi55PXMueSx6dCYmKG4uej1zLnosbi5yb3RhdGlvblg9cy5yb3RhdGlvblgsbi5yb3RhdGlvblk9cy5yb3RhdGlvblksbi5zY2FsZVo9cy5zY2FsZVopLG4uZmlsdGVycyYmZGVsZXRlIG4uZmlsdGVycyxufSxldD1mdW5jdGlvbih0LGUsaSxzLHIpe3ZhciBuLGEsbyxsPXt9LGg9dC5zdHlsZTtmb3IoYSBpbiBpKSJjc3NUZXh0IiE9PWEmJiJsZW5ndGgiIT09YSYmaXNOYU4oYSkmJihlW2FdIT09KG49aVthXSl8fHImJnJbYV0pJiYtMT09PWEuaW5kZXhPZigiT3JpZ2luIikmJigibnVtYmVyIj09dHlwZW9mIG58fCJzdHJpbmciPT10eXBlb2YgbikmJihsW2FdPSJhdXRvIiE9PW58fCJsZWZ0IiE9PWEmJiJ0b3AiIT09YT8iIiE9PW4mJiJhdXRvIiE9PW4mJiJub25lIiE9PW58fCJzdHJpbmciIT10eXBlb2YgZVthXXx8IiI9PT1lW2FdLnJlcGxhY2UoXywiIik/bjowOkoodCxhKSx2b2lkIDAhPT1oW2FdJiYobz1uZXcgbXQoaCxhLGhbYV0sbykpKTtpZihzKWZvcihhIGluIHMpImNsYXNzTmFtZSIhPT1hJiYobFthXT1zW2FdKTtyZXR1cm57ZGlmczpsLGZpcnN0TVBUOm99fSxpdD17d2lkdGg6WyJMZWZ0IiwiUmlnaHQiXSxoZWlnaHQ6WyJUb3AiLCJCb3R0b20iXX0sc3Q9WyJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Cb3R0b20iXSxydD1mdW5jdGlvbih0LGUsaSl7dmFyIHM9cGFyc2VGbG9hdCgid2lkdGgiPT09ZT90Lm9mZnNldFdpZHRoOnQub2Zmc2V0SGVpZ2h0KSxyPWl0W2VdLG49ci5sZW5ndGg7Zm9yKGk9aXx8USh0LG51bGwpOy0xPC0tbjspcy09cGFyc2VGbG9hdChIKHQsInBhZGRpbmciK3Jbbl0saSwhMCkpfHwwLHMtPXBhcnNlRmxvYXQoSCh0LCJib3JkZXIiK3Jbbl0rIldpZHRoIixpLCEwKSl8fDA7cmV0dXJuIHN9LG50PWZ1bmN0aW9uKHQsZSl7aWYoImNvbnRhaW4iPT09dHx8ImF1dG8iPT09dHx8ImF1dG8gYXV0byI9PT10KXJldHVybiB0KyIgIjsobnVsbD09dHx8IiI9PT10KSYmKHQ9IjAgMCIpO3ZhciBpPXQuc3BsaXQoIiAiKSxzPS0xIT09dC5pbmRleE9mKCJsZWZ0Iik/IjAlIjotMSE9PXQuaW5kZXhPZigicmlnaHQiKT8iMTAwJSI6aVswXSxyPS0xIT09dC5pbmRleE9mKCJ0b3AiKT8iMCUiOi0xIT09dC5pbmRleE9mKCJib3R0b20iKT8iMTAwJSI6aVsxXTtyZXR1cm4gbnVsbD09cj9yPSJjZW50ZXIiPT09cz8iNTAlIjoiMCI6ImNlbnRlciI9PT1yJiYocj0iNTAlIiksKCJjZW50ZXIiPT09c3x8aXNOYU4ocGFyc2VGbG9hdChzKSkmJi0xPT09KHMrIiIpLmluZGV4T2YoIj0iKSkmJihzPSI1MCUiKSx0PXMrIiAiK3IrKDI8aS5sZW5ndGg/IiAiK2lbMl06IiIpLGUmJihlLm94cD0tMSE9PXMuaW5kZXhPZigiJSIpLGUub3lwPS0xIT09ci5pbmRleE9mKCIlIiksZS5veHI9Ij0iPT09cy5jaGFyQXQoMSksZS5veXI9Ij0iPT09ci5jaGFyQXQoMSksZS5veD1wYXJzZUZsb2F0KHMucmVwbGFjZShfLCIiKSksZS5veT1wYXJzZUZsb2F0KHIucmVwbGFjZShfLCIiKSksZS52PXQpLGV8fHR9LGF0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0JiYiPSI9PT10LmNoYXJBdCgxKT9wYXJzZUludCh0LmNoYXJBdCgwKSsiMSIsMTApKnBhcnNlRmxvYXQodC5zdWJzdHIoMikpOnBhcnNlRmxvYXQodCktcGFyc2VGbG9hdChlKX0sb3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbD09dD9lOiJzdHJpbmciPT10eXBlb2YgdCYmIj0iPT09dC5jaGFyQXQoMSk/cGFyc2VJbnQodC5jaGFyQXQoMCkrIjEiLDEwKSpwYXJzZUZsb2F0KHQuc3Vic3RyKDIpKStlOnBhcnNlRmxvYXQodCl9LGx0PWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByLG4sYSxvLGw7cmV0dXJuKG89bnVsbD09dD9lOiJudW1iZXIiPT10eXBlb2YgdD90OihyPTM2MCxuPXQuc3BsaXQoIl8iKSxhPSgobD0iPSI9PT10LmNoYXJBdCgxKSk/cGFyc2VJbnQodC5jaGFyQXQoMCkrIjEiLDEwKSpwYXJzZUZsb2F0KG5bMF0uc3Vic3RyKDIpKTpwYXJzZUZsb2F0KG5bMF0pKSooLTE9PT10LmluZGV4T2YoInJhZCIpPzE6VSktKGw/MDplKSxuLmxlbmd0aCYmKHMmJihzW2ldPWUrYSksLTEhPT10LmluZGV4T2YoInNob3J0IikmJigoYSU9cikhPT1hJTE4MCYmKGE9YTwwP2ErcjphLXIpKSwtMSE9PXQuaW5kZXhPZigiX2N3IikmJmE8MD9hPShhKzM1OTk5OTk5OTk2NDApJXItKDB8YS9yKSpyOi0xIT09dC5pbmRleE9mKCJjY3ciKSYmMDxhJiYoYT0oYS0zNTk5OTk5OTk5NjQwKSVyLSgwfGEvcikqcikpLGUrYSkpPDFlLTYmJi0xZS02PG8mJihvPTApLG99LGh0PXthcXVhOlswLDI1NSwyNTVdLGxpbWU6WzAsMjU1LDBdLHNpbHZlcjpbMTkyLDE5MiwxOTJdLGJsYWNrOlswLDAsMF0sbWFyb29uOlsxMjgsMCwwXSx0ZWFsOlswLDEyOCwxMjhdLGJsdWU6WzAsMCwyNTVdLG5hdnk6WzAsMCwxMjhdLHdoaXRlOlsyNTUsMjU1LDI1NV0sZnVjaHNpYTpbMjU1LDAsMjU1XSxvbGl2ZTpbMTI4LDEyOCwwXSx5ZWxsb3c6WzI1NSwyNTUsMF0sb3JhbmdlOlsyNTUsMTY1LDBdLGdyYXk6WzEyOCwxMjgsMTI4XSxwdXJwbGU6WzEyOCwwLDEyOF0sZ3JlZW46WzAsMTI4LDBdLHJlZDpbMjU1LDAsMF0scGluazpbMjU1LDE5MiwyMDNdLGN5YW46WzAsMjU1LDI1NV0sdHJhbnNwYXJlbnQ6WzI1NSwyNTUsMjU1LDBdfSxfdD1mdW5jdGlvbih0LGUsaSl7cmV0dXJuIDB8MjU1Kig2Kih0PXQ8MD90KzE6MTx0P3QtMTp0KTwxP2UrNiooaS1lKSp0OnQ8LjU/aTozKnQ8Mj9lKzYqKGktZSkqKDIvMy10KTplKSsuNX0sdXQ9ai5wYXJzZUNvbG9yPWZ1bmN0aW9uKHQsZSl7dmFyIGkscyxyLG4sYSxvLGwsaCxfLHUsYztpZih0KWlmKCJudW1iZXIiPT10eXBlb2YgdClpPVt0Pj4xNiwyNTUmdD4+OCwyNTUmdF07ZWxzZXtpZigiLCI9PT10LmNoYXJBdCh0Lmxlbmd0aC0xKSYmKHQ9dC5zdWJzdHIoMCx0Lmxlbmd0aC0xKSksaHRbdF0paT1odFt0XTtlbHNlIGlmKCIjIj09PXQuY2hhckF0KDApKTQ9PT10Lmxlbmd0aCYmKHQ9IiMiKyhzPXQuY2hhckF0KDEpKStzKyhyPXQuY2hhckF0KDIpKStyKyhuPXQuY2hhckF0KDMpKStuKSxpPVsodD1wYXJzZUludCh0LnN1YnN0cigxKSwxNikpPj4xNiwyNTUmdD4+OCwyNTUmdF07ZWxzZSBpZigiaHNsIj09PXQuc3Vic3RyKDAsMykpaWYoaT1jPXQubWF0Y2goUiksZSl7aWYoLTEhPT10LmluZGV4T2YoIj0iKSlyZXR1cm4gdC5tYXRjaChBKX1lbHNlIGE9TnVtYmVyKGlbMF0pJTM2MC8zNjAsbz1OdW1iZXIoaVsxXSkvMTAwLHM9MioobD1OdW1iZXIoaVsyXSkvMTAwKS0ocj1sPD0uNT9sKihvKzEpOmwrby1sKm8pLDM8aS5sZW5ndGgmJihpWzNdPU51bWJlcih0WzNdKSksaVswXT1fdChhKzEvMyxzLHIpLGlbMV09X3QoYSxzLHIpLGlbMl09X3QoYS0xLzMscyxyKTtlbHNlIGk9dC5tYXRjaChSKXx8aHQudHJhbnNwYXJlbnQ7aVswXT1OdW1iZXIoaVswXSksaVsxXT1OdW1iZXIoaVsxXSksaVsyXT1OdW1iZXIoaVsyXSksMzxpLmxlbmd0aCYmKGlbM109TnVtYmVyKGlbM10pKX1lbHNlIGk9aHQuYmxhY2s7cmV0dXJuIGUmJiFjJiYocz1pWzBdLzI1NSxyPWlbMV0vMjU1LG49aVsyXS8yNTUsbD0oKGg9TWF0aC5tYXgocyxyLG4pKSsoXz1NYXRoLm1pbihzLHIsbikpKS8yLGg9PT1fP2E9bz0wOih1PWgtXyxvPS41PGw/dS8oMi1oLV8pOnUvKGgrXyksYT1oPT09cz8oci1uKS91KyhyPG4/NjowKTpoPT09cj8obi1zKS91KzI6KHMtcikvdSs0LGEqPTYwKSxpWzBdPTB8YSsuNSxpWzFdPTB8MTAwKm8rLjUsaVsyXT0wfDEwMCpsKy41KSxpfSxjdD1mdW5jdGlvbih0LGUpe3ZhciBpLHMscixuPXQubWF0Y2goZnQpfHxbXSxhPTAsbz1uLmxlbmd0aD8iIjp0O2ZvcihpPTA7bi5sZW5ndGg+aTtpKyspcz1uW2ldLGErPShyPXQuc3Vic3RyKGEsdC5pbmRleE9mKHMsYSktYSkpLmxlbmd0aCtzLmxlbmd0aCwzPT09KHM9dXQocyxlKSkubGVuZ3RoJiZzLnB1c2goMSksbys9cisoZT8iaHNsYSgiK3NbMF0rIiwiK3NbMV0rIiUsIitzWzJdKyIlLCIrc1szXToicmdiYSgiK3Muam9pbigiLCIpKSsiKSI7cmV0dXJuIG99LGZ0PSIoPzpcXGIoPzooPzpyZ2J8cmdiYXxoc2x8aHNsYSlcXCguKz9cXCkpfFxcQiMuKz9cXGIiO2Zvcih0IGluIGh0KWZ0Kz0ifCIrdCsiXFxiIjtmdD1SZWdFeHAoZnQrIikiLCJnaSIpLGouY29sb3JTdHJpbmdGaWx0ZXI9ZnVuY3Rpb24odCl7dmFyIGUsaT10WzBdK3RbMV07ZnQubGFzdEluZGV4PTAsZnQudGVzdChpKSYmKGU9LTEhPT1pLmluZGV4T2YoImhzbCgiKXx8LTEhPT1pLmluZGV4T2YoImhzbGEoIiksdFswXT1jdCh0WzBdLGUpLHRbMV09Y3QodFsxXSxlKSl9LFkuZGVmYXVsdFN0cmluZ0ZpbHRlcnx8KFkuZGVmYXVsdFN0cmluZ0ZpbHRlcj1qLmNvbG9yU3RyaW5nRmlsdGVyKTt2YXIgcHQ9ZnVuY3Rpb24odCxlLG4sYSl7aWYobnVsbD09dClyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHR9O3ZhciBvLGw9ZT8odC5tYXRjaChmdCl8fFsiIl0pWzBdOiIiLGg9dC5zcGxpdChsKS5qb2luKCIiKS5tYXRjaCh5KXx8W10sXz10LnN1YnN0cigwLHQuaW5kZXhPZihoWzBdKSksdT0iKSI9PT10LmNoYXJBdCh0Lmxlbmd0aC0xKT8iKSI6IiIsYz0tMSE9PXQuaW5kZXhPZigiICIpPyIgIjoiLCIsZj1oLmxlbmd0aCxwPTA8Zj9oWzBdLnJlcGxhY2UoUiwiIik6IiI7cmV0dXJuIGY/bz1lP2Z1bmN0aW9uKHQpe3ZhciBlLGkscyxyO2lmKCJudW1iZXIiPT10eXBlb2YgdCl0Kz1wO2Vsc2UgaWYoYSYmTS50ZXN0KHQpKXtmb3Iocj10LnJlcGxhY2UoTSwifCIpLnNwbGl0KCJ8Iikscz0wO3IubGVuZ3RoPnM7cysrKXJbc109byhyW3NdKTtyZXR1cm4gci5qb2luKCIsIil9aWYoZT0odC5tYXRjaChmdCl8fFtsXSlbMF0scz0oaT10LnNwbGl0KGUpLmpvaW4oIiIpLm1hdGNoKHkpfHxbXSkubGVuZ3RoLGY+cy0tKWZvcig7Zj4rK3M7KWlbc109bj9pWzB8KHMtMSkvMl06aFtzXTtyZXR1cm4gXytpLmpvaW4oYykrYytlK3UrKC0xIT09dC5pbmRleE9mKCJpbnNldCIpPyIgaW5zZXQiOiIiKX06ZnVuY3Rpb24odCl7dmFyIGUsaSxzO2lmKCJudW1iZXIiPT10eXBlb2YgdCl0Kz1wO2Vsc2UgaWYoYSYmTS50ZXN0KHQpKXtmb3IoaT10LnJlcGxhY2UoTSwifCIpLnNwbGl0KCJ8Iikscz0wO2kubGVuZ3RoPnM7cysrKWlbc109byhpW3NdKTtyZXR1cm4gaS5qb2luKCIsIil9aWYocz0oZT10Lm1hdGNoKHkpfHxbXSkubGVuZ3RoLGY+cy0tKWZvcig7Zj4rK3M7KWVbc109bj9lWzB8KHMtMSkvMl06aFtzXTtyZXR1cm4gXytlLmpvaW4oYykrdX06ZnVuY3Rpb24odCl7cmV0dXJuIHR9fSxkdD1mdW5jdGlvbihoKXtyZXR1cm4gaD1oLnNwbGl0KCIsIiksZnVuY3Rpb24odCxlLGkscyxyLG4sYSl7dmFyIG8sbD0oZSsiIikuc3BsaXQoIiAiKTtmb3IoYT17fSxvPTA7bzw0O28rKylhW2hbb11dPWxbb109bFtvXXx8bFsoby0xKS8yPj4wXTtyZXR1cm4gcy5wYXJzZSh0LGEscixuKX19LG10PShyLl9zZXRQbHVnaW5SYXRpbz1mdW5jdGlvbih0KXt0aGlzLnBsdWdpbi5zZXRSYXRpbyh0KTtmb3IodmFyIGUsaSxzLHIsbj10aGlzLmRhdGEsYT1uLnByb3h5LG89bi5maXJzdE1QVDtvOyllPWFbby52XSxvLnI/ZT1NYXRoLnJvdW5kKGUpOmU8MWUtNiYmLTFlLTY8ZSYmKGU9MCksby50W28ucF09ZSxvPW8uX25leHQ7aWYobi5hdXRvUm90YXRlJiYobi5hdXRvUm90YXRlLnJvdGF0aW9uPWEucm90YXRpb24pLDE9PT10KWZvcihvPW4uZmlyc3RNUFQ7bzspe2lmKChpPW8udCkudHlwZSl7aWYoMT09PWkudHlwZSl7Zm9yKHI9aS54czAraS5zK2kueHMxLHM9MTtpLmw+cztzKyspcis9aVsieG4iK3NdK2lbInhzIisocysxKV07aS5lPXJ9fWVsc2UgaS5lPWkucytpLnhzMDtvPW8uX25leHR9fSxmdW5jdGlvbih0LGUsaSxzLHIpe3RoaXMudD10LHRoaXMucD1lLHRoaXMudj1pLHRoaXMucj1yLHMmJigocy5fcHJldj10aGlzKS5fbmV4dD1zKX0pLGd0PShyLl9wYXJzZVRvUHJveHk9ZnVuY3Rpb24odCxlLGkscyxyLG4pe3ZhciBhLG8sbCxoLF8sdT1zLGM9e30sZj17fSxwPWkuX3RyYW5zZm9ybSxkPXo7Zm9yKGkuX3RyYW5zZm9ybT1udWxsLHo9ZSxzPV89aS5wYXJzZSh0LGUscyxyKSx6PWQsbiYmKGkuX3RyYW5zZm9ybT1wLHUmJih1Ll9wcmV2PW51bGwsdS5fcHJldiYmKHUuX3ByZXYuX25leHQ9bnVsbCkpKTtzJiZzIT09dTspe2lmKHMudHlwZTw9MSYmKGZbbz1zLnBdPXMucytzLmMsY1tvXT1zLnMsbnx8KGg9bmV3IG10KHMsInMiLG8saCxzLnIpLHMuYz0wKSwxPT09cy50eXBlKSlmb3IoYT1zLmw7MDwtLWE7KWw9InhuIithLGZbbz1zLnArIl8iK2xdPXMuZGF0YVtsXSxjW29dPXNbbF0sbnx8KGg9bmV3IG10KHMsbCxvLGgscy5yeHBbbF0pKTtzPXMuX25leHR9cmV0dXJue3Byb3h5OmMsZW5kOmYsZmlyc3RNUFQ6aCxwdDpffX0sci5DU1NQcm9wVHdlZW49ZnVuY3Rpb24odCxlLGkscyxyLG4sYSxvLGwsaCxfKXt0aGlzLnQ9dCx0aGlzLnA9ZSx0aGlzLnM9aSx0aGlzLmM9cyx0aGlzLm49YXx8ZSx0IGluc3RhbmNlb2YgZ3R8fGYucHVzaCh0aGlzLm4pLHRoaXMucj1vLHRoaXMudHlwZT1ufHwwLGwmJih0aGlzLnByPWwscD0hMCksdGhpcy5iPXZvaWQgMD09PWg/aTpoLHRoaXMuZT12b2lkIDA9PT1fP2krczpfLHImJigodGhpcy5fbmV4dD1yKS5fcHJldj10aGlzKX0pLHZ0PWZ1bmN0aW9uKHQsZSxpLHMscixuKXt2YXIgYT1uZXcgZ3QodCxlLGkscy1pLHIsLTEsbik7cmV0dXJuIGEuYj1pLGEuZT1hLnhzMD1zLGF9LHl0PWoucGFyc2VDb21wbGV4PWZ1bmN0aW9uKHQsZSxpLHMscixuLGEsbyxsLGgpe2E9bmV3IGd0KHQsZSwwLDAsYSxoPzI6MSxudWxsLCExLG8saT1pfHxufHwiIixzKSxzKz0iIjt2YXIgXyx1LGMsZixwLGQsbSxnLHYseSxULHgsYix3PWkuc3BsaXQoIiwgIikuam9pbigiLCIpLnNwbGl0KCIgIiksUD1zLnNwbGl0KCIsICIpLmpvaW4oIiwiKS5zcGxpdCgiICIpLE89dy5sZW5ndGgsUz0hMSE9PWs7Zm9yKCgtMSE9PXMuaW5kZXhPZigiLCIpfHwtMSE9PWkuaW5kZXhPZigiLCIpKSYmKHc9dy5qb2luKCIgIikucmVwbGFjZShNLCIsICIpLnNwbGl0KCIgIiksUD1QLmpvaW4oIiAiKS5yZXBsYWNlKE0sIiwgIikuc3BsaXQoIiAiKSxPPXcubGVuZ3RoKSxPIT09UC5sZW5ndGgmJihPPSh3PShufHwiIikuc3BsaXQoIiAiKSkubGVuZ3RoKSxhLnBsdWdpbj1sLGEuc2V0UmF0aW89aCxfPWZ0Lmxhc3RJbmRleD0wO188TztfKyspaWYoZj13W19dLHA9UFtfXSwoZz1wYXJzZUZsb2F0KGYpKXx8MD09PWcpYS5hcHBlbmRYdHJhKCIiLGcsYXQocCxnKSxwLnJlcGxhY2UoQSwiIiksUyYmLTEhPT1wLmluZGV4T2YoInB4IiksITApO2Vsc2UgaWYociYmZnQudGVzdChmKSl4PSIsIj09PXAuY2hhckF0KHAubGVuZ3RoLTEpPyIpLCI6IikiLGI9LTEhPT1wLmluZGV4T2YoImhzbCIpJiZWLGY9dXQoZixiKSxwPXV0KHAsYiksKHY9NjxmLmxlbmd0aCtwLmxlbmd0aCkmJiFWJiYwPT09cFszXT8oYVsieHMiK2EubF0rPWEubD8iIHRyYW5zcGFyZW50IjoidHJhbnNwYXJlbnQiLGEuZT1hLmUuc3BsaXQoUFtfXSkuam9pbigidHJhbnNwYXJlbnQiKSk6KFZ8fCh2PSExKSxiP2EuYXBwZW5kWHRyYSh2PyJoc2xhKCI6ImhzbCgiLGZbMF0sYXQocFswXSxmWzBdKSwiLCIsITEsITApLmFwcGVuZFh0cmEoIiIsZlsxXSxhdChwWzFdLGZbMV0pLCIlLCIsITEpLmFwcGVuZFh0cmEoIiIsZlsyXSxhdChwWzJdLGZbMl0pLHY/IiUsIjoiJSIreCwhMSk6YS5hcHBlbmRYdHJhKHY/InJnYmEoIjoicmdiKCIsZlswXSxwWzBdLWZbMF0sIiwiLCEwLCEwKS5hcHBlbmRYdHJhKCIiLGZbMV0scFsxXS1mWzFdLCIsIiwhMCkuYXBwZW5kWHRyYSgiIixmWzJdLHBbMl0tZlsyXSx2PyIsIjp4LCEwKSx2JiYoZj1mLmxlbmd0aDw0PzE6ZlszXSxhLmFwcGVuZFh0cmEoIiIsZiwocC5sZW5ndGg8ND8xOnBbM10pLWYseCwhMSkpKSxmdC5sYXN0SW5kZXg9MDtlbHNlIGlmKGQ9Zi5tYXRjaChSKSl7aWYoIShtPXAubWF0Y2goQSkpfHxtLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiBhO2Zvcih1PWM9MDtkLmxlbmd0aD51O3UrKylUPWRbdV0seT1mLmluZGV4T2YoVCxjKSxhLmFwcGVuZFh0cmEoZi5zdWJzdHIoYyx5LWMpLE51bWJlcihUKSxhdChtW3VdLFQpLCIiLFMmJiJweCI9PT1mLnN1YnN0cih5K1QubGVuZ3RoLDIpLDA9PT11KSxjPXkrVC5sZW5ndGg7YVsieHMiK2EubF0rPWYuc3Vic3RyKGMpfWVsc2UgYVsieHMiK2EubF0rPWEubD8iICIrZjpmO2lmKC0xIT09cy5pbmRleE9mKCI9IikmJmEuZGF0YSl7Zm9yKHg9YS54czArYS5kYXRhLnMsXz0xO2EubD5fO18rKyl4Kz1hWyJ4cyIrX10rYS5kYXRhWyJ4biIrX107YS5lPXgrYVsieHMiK19dfXJldHVybiBhLmx8fChhLnR5cGU9LTEsYS54czA9YS5lKSxhLnhmaXJzdHx8YX0sVHQ9OTtmb3IoKHQ9Z3QucHJvdG90eXBlKS5sPXQucHI9MDswPC0tVHQ7KXRbInhuIitUdF09MCx0WyJ4cyIrVHRdPSIiO3QueHMwPSIiLHQuX25leHQ9dC5fcHJldj10LnhmaXJzdD10LmRhdGE9dC5wbHVnaW49dC5zZXRSYXRpbz10LnJ4cD1udWxsLHQuYXBwZW5kWHRyYT1mdW5jdGlvbih0LGUsaSxzLHIsbil7dmFyIGE9dGhpcyxvPWEubDtyZXR1cm4gYVsieHMiK29dKz1uJiZvPyIgIit0OnR8fCIiLGl8fDA9PT1vfHxhLnBsdWdpbj8oYS5sKyssYS50eXBlPWEuc2V0UmF0aW8/MjoxLGFbInhzIithLmxdPXN8fCIiLDA8bz8oYS5kYXRhWyJ4biIrb109ZStpLGEucnhwWyJ4biIrb109cixhWyJ4biIrb109ZSxhLnBsdWdpbnx8KGEueGZpcnN0PW5ldyBndChhLCJ4biIrbyxlLGksYS54Zmlyc3R8fGEsMCxhLm4scixhLnByKSxhLnhmaXJzdC54czA9MCkpOihhLmRhdGE9e3M6ZStpfSxhLnJ4cD17fSxhLnM9ZSxhLmM9aSxhLnI9cikpOmFbInhzIitvXSs9ZSsoc3x8IiIpLGF9O3ZhciB4dD1mdW5jdGlvbih0LGUpe2U9ZXx8e30sdGhpcy5wPWUucHJlZml4JiYkKHQpfHx0LGRbdF09ZFt0aGlzLnBdPXRoaXMsdGhpcy5mb3JtYXQ9ZS5mb3JtYXR0ZXJ8fHB0KGUuZGVmYXVsdFZhbHVlLGUuY29sb3IsZS5jb2xsYXBzaWJsZSxlLm11bHRpKSxlLnBhcnNlciYmKHRoaXMucGFyc2U9ZS5wYXJzZXIpLHRoaXMuY2xycz1lLmNvbG9yLHRoaXMubXVsdGk9ZS5tdWx0aSx0aGlzLmtleXdvcmQ9ZS5rZXl3b3JkLHRoaXMuZGZsdD1lLmRlZmF1bHRWYWx1ZSx0aGlzLnByPWUucHJpb3JpdHl8fDB9LGJ0PXIuX3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wPWZ1bmN0aW9uKHQsZSxpKXsib2JqZWN0IiE9dHlwZW9mIGUmJihlPXtwYXJzZXI6aX0pO3ZhciBzLHI9dC5zcGxpdCgiLCIpLG49ZS5kZWZhdWx0VmFsdWU7Zm9yKGk9aXx8W25dLHM9MDtyLmxlbmd0aD5zO3MrKyllLnByZWZpeD0wPT09cyYmZS5wcmVmaXgsZS5kZWZhdWx0VmFsdWU9aVtzXXx8bixuZXcgeHQocltzXSxlKX0sd3Q9ZnVuY3Rpb24odCl7aWYoIWRbdF0pe3ZhciBsPXQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrdC5zdWJzdHIoMSkrIlBsdWdpbiI7YnQodCx7cGFyc2VyOmZ1bmN0aW9uKHQsZSxpLHMscixuLGEpe3ZhciBvPWguY29tLmdyZWVuc29jay5wbHVnaW5zW2xdO3JldHVybiBvPyhvLl9jc3NSZWdpc3RlcigpLGRbaV0ucGFyc2UodCxlLGkscyxyLG4sYSkpOihXKCJFcnJvcjogIitsKyIganMgZmlsZSBub3QgbG9hZGVkLiIpLHIpfX0pfX07KHQ9eHQucHJvdG90eXBlKS5wYXJzZUNvbXBsZXg9ZnVuY3Rpb24odCxlLGkscyxyLG4pe3ZhciBhLG8sbCxoLF8sdSxjPXRoaXMua2V5d29yZDtpZih0aGlzLm11bHRpJiYoTS50ZXN0KGkpfHxNLnRlc3QoZSk/KG89ZS5yZXBsYWNlKE0sInwiKS5zcGxpdCgifCIpLGw9aS5yZXBsYWNlKE0sInwiKS5zcGxpdCgifCIpKTpjJiYobz1bZV0sbD1baV0pKSxsKXtmb3IoaD1sLmxlbmd0aD5vLmxlbmd0aD9sLmxlbmd0aDpvLmxlbmd0aCxhPTA7YTxoO2ErKyllPW9bYV09b1thXXx8dGhpcy5kZmx0LGk9bFthXT1sW2FdfHx0aGlzLmRmbHQsYyYmKChfPWUuaW5kZXhPZihjKSkhPT0odT1pLmluZGV4T2YoYykpJiYoLTE9PT11P29bYV09b1thXS5zcGxpdChjKS5qb2luKCIiKTotMT09PV8mJihvW2FdKz0iICIrYykpKTtlPW8uam9pbigiLCAiKSxpPWwuam9pbigiLCAiKX1yZXR1cm4geXQodCx0aGlzLnAsZSxpLHRoaXMuY2xycyx0aGlzLmRmbHQscyx0aGlzLnByLHIsbil9LHQucGFyc2U9ZnVuY3Rpb24odCxlLGkscyxyLG4pe3JldHVybiB0aGlzLnBhcnNlQ29tcGxleCh0LnN0eWxlLHRoaXMuZm9ybWF0KEgodCx0aGlzLnAsQiwhMSx0aGlzLmRmbHQpKSx0aGlzLmZvcm1hdChlKSxyLG4pfSxqLnJlZ2lzdGVyU3BlY2lhbFByb3A9ZnVuY3Rpb24odCxvLGwpe2J0KHQse3BhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIsbil7dmFyIGE9bmV3IGd0KHQsaSwwLDAsciwyLGksITEsbCk7cmV0dXJuIGEucGx1Z2luPW4sYS5zZXRSYXRpbz1vKHQsZSxzLl90d2VlbixpKSxhfSxwcmlvcml0eTpsfSl9LGoudXNlU1ZHVHJhbnNmb3JtQXR0cj1nfHxMO3ZhciBQdCxPdCxTdCxrdCxSdCxBdD0ic2NhbGVYLHNjYWxlWSxzY2FsZVoseCx5LHosc2tld1gsc2tld1kscm90YXRpb24scm90YXRpb25YLHJvdGF0aW9uWSxwZXJzcGVjdGl2ZSx4UGVyY2VudCx5UGVyY2VudCIuc3BsaXQoIiwiKSxDdD0kKCJ0cmFuc2Zvcm0iKSxEdD1aKyJ0cmFuc2Zvcm0iLE10PSQoInRyYW5zZm9ybU9yaWdpbiIpLHp0PW51bGwhPT0kKCJwZXJzcGVjdGl2ZSIpLEZ0PXIuVHJhbnNmb3JtPWZ1bmN0aW9uKCl7dGhpcy5wZXJzcGVjdGl2ZT1wYXJzZUZsb2F0KGouZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlKXx8MCx0aGlzLmZvcmNlM0Q9ISghMT09PWouZGVmYXVsdEZvcmNlM0R8fCF6dCkmJihqLmRlZmF1bHRGb3JjZTNEfHwiYXV0byIpfSxJdD13aW5kb3cuU1ZHRWxlbWVudCxYdD1mdW5jdGlvbih0LGUsaSl7dmFyIHMscj1GLmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLHQpLG49LyhbYS16XSkoW0EtWl0pL2c7Zm9yKHMgaW4gaSlyLnNldEF0dHJpYnV0ZU5TKG51bGwscy5yZXBsYWNlKG4sIiQxLSQyIikudG9Mb3dlckNhc2UoKSxpW3NdKTtyZXR1cm4gZS5hcHBlbmRDaGlsZChyKSxyfSxOdD1GLmRvY3VtZW50RWxlbWVudCxMdD0oUnQ9T3x8L0FuZHJvaWQvaS50ZXN0KE4pJiYhd2luZG93LmNocm9tZSxGLmNyZWF0ZUVsZW1lbnROUyYmIVJ0JiYoT3Q9WHQoInN2ZyIsTnQpLGt0PShTdD1YdCgicmVjdCIsT3Qse3dpZHRoOjEwMCxoZWlnaHQ6NTAseDoxMDB9KSkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgsU3Quc3R5bGVbTXRdPSI1MCUgNTAlIixTdC5zdHlsZVtDdF09InNjYWxlWCgwLjUpIixSdD1rdD09PVN0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoJiYhKEwmJnp0KSxOdC5yZW1vdmVDaGlsZChPdCkpLFJ0KSxFdD1mdW5jdGlvbih0LGUsaSxzLHIpe3ZhciBuLGEsbyxsLGgsXyx1LGMsZixwLGQsbSxnLHYseT10Ll9nc1RyYW5zZm9ybSxUPWp0KHQsITApO3kmJihnPXkueE9yaWdpbix2PXkueU9yaWdpbiksKCFzfHwobj1zLnNwbGl0KCIgIikpLmxlbmd0aDwyKSYmKHU9dC5nZXRCQm94KCksbj1bKC0xIT09KGU9bnQoZSkuc3BsaXQoIiAiKSlbMF0uaW5kZXhPZigiJSIpP3BhcnNlRmxvYXQoZVswXSkvMTAwKnUud2lkdGg6cGFyc2VGbG9hdChlWzBdKSkrdS54LCgtMSE9PWVbMV0uaW5kZXhPZigiJSIpP3BhcnNlRmxvYXQoZVsxXSkvMTAwKnUuaGVpZ2h0OnBhcnNlRmxvYXQoZVsxXSkpK3UueV0pLGkueE9yaWdpbj1sPXBhcnNlRmxvYXQoblswXSksaS55T3JpZ2luPWg9cGFyc2VGbG9hdChuWzFdKSxzJiZUIT09QnQmJihfPVRbMF0sdT1UWzFdLGM9VFsyXSxmPVRbM10scD1UWzRdLGE9bCooZi8obT1fKmYtdSpjKSkraCooLWMvbSkrKGMqKGQ9VFs1XSktZipwKS9tLG89bCooLXUvbSkraCooXy9tKS0oXypkLXUqcCkvbSxsPWkueE9yaWdpbj1uWzBdPWEsaD1pLnlPcmlnaW49blsxXT1vKSx5JiYocnx8ITEhPT1yJiYhMSE9PWouZGVmYXVsdFNtb290aE9yaWdpbj8oYT1sLWcsbz1oLXYseS54T2Zmc2V0Kz1hKlRbMF0rbypUWzJdLWEseS55T2Zmc2V0Kz1hKlRbMV0rbypUWzNdLW8pOnkueE9mZnNldD15LnlPZmZzZXQ9MCksdC5zZXRBdHRyaWJ1dGUoImRhdGEtc3ZnLW9yaWdpbiIsbi5qb2luKCIgIikpfSxZdD1mdW5jdGlvbih0KXtyZXR1cm4hIShJdCYmImZ1bmN0aW9uIj09dHlwZW9mIHQuZ2V0QkJveCYmdC5nZXRDVE0mJighdC5wYXJlbnROb2RlfHx0LnBhcmVudE5vZGUuZ2V0QkJveCYmdC5wYXJlbnROb2RlLmdldENUTSkpfSxCdD1bMSwwLDAsMSwwLDBdLGp0PWZ1bmN0aW9uKHQsZSl7dmFyIGkscyxyLG4sYSxvPXQuX2dzVHJhbnNmb3JtfHxuZXcgRnQ7aWYoQ3Q/cz1IKHQsRHQsbnVsbCwhMCk6dC5jdXJyZW50U3R5bGUmJihzPShzPXQuY3VycmVudFN0eWxlLmZpbHRlci5tYXRjaChQKSkmJjQ9PT1zLmxlbmd0aD9bc1swXS5zdWJzdHIoNCksTnVtYmVyKHNbMl0uc3Vic3RyKDQpKSxOdW1iZXIoc1sxXS5zdWJzdHIoNCkpLHNbM10uc3Vic3RyKDQpLG8ueHx8MCxvLnl8fDBdLmpvaW4oIiwiKToiIiksaT0hc3x8Im5vbmUiPT09c3x8Im1hdHJpeCgxLCAwLCAwLCAxLCAwLCAwKSI9PT1zLChvLnN2Z3x8dC5nZXRCQm94JiZZdCh0KSkmJihpJiYtMSE9PSh0LnN0eWxlW0N0XSsiIikuaW5kZXhPZigibWF0cml4IikmJihzPXQuc3R5bGVbQ3RdLGk9MCkscj10LmdldEF0dHJpYnV0ZSgidHJhbnNmb3JtIiksaSYmciYmKC0xIT09ci5pbmRleE9mKCJtYXRyaXgiKT8ocz1yLGk9MCk6LTEhPT1yLmluZGV4T2YoInRyYW5zbGF0ZSIpJiYocz0ibWF0cml4KDEsMCwwLDEsIityLm1hdGNoKC8oPzpcLXxcYilbXGRcLVwuZV0rXGIvZ2kpLmpvaW4oIiwiKSsiKSIsaT0wKSkpLGkpcmV0dXJuIEJ0O2ZvcihyPShzfHwiIikubWF0Y2goLyg/OlwtfFxiKVtcZFwtXC5lXStcYi9naSl8fFtdLFR0PXIubGVuZ3RoOy0xPC0tVHQ7KW49TnVtYmVyKHJbVHRdKSxyW1R0XT0oYT1uLShufD0wKSk/KDB8MWU1KmErKGE8MD8tLjU6LjUpKS8xZTUrbjpuO3JldHVybiBlJiY2PHIubGVuZ3RoP1tyWzBdLHJbMV0scls0XSxyWzVdLHJbMTJdLHJbMTNdXTpyfSxVdD1yLmdldFRyYW5zZm9ybT1mdW5jdGlvbih0LGUsaSxzKXtpZih0Ll9nc1RyYW5zZm9ybSYmaSYmIXMpcmV0dXJuIHQuX2dzVHJhbnNmb3JtO3ZhciByLG4sYSxvLGwsaCxfPWkmJnQuX2dzVHJhbnNmb3JtfHxuZXcgRnQsdT1fLnNjYWxlWDwwLGM9enQmJihwYXJzZUZsb2F0KEgodCxNdCxlLCExLCIwIDAgMCIpLnNwbGl0KCIgIilbMl0pfHxfLnpPcmlnaW4pfHwwLGY9cGFyc2VGbG9hdChqLmRlZmF1bHRUcmFuc2Zvcm1QZXJzcGVjdGl2ZSl8fDA7aWYoXy5zdmc9ISghdC5nZXRCQm94fHwhWXQodCkpLF8uc3ZnJiYoRXQodCxIKHQsTXQsQiwhMSwiNTAlIDUwJSIpKyIiLF8sdC5nZXRBdHRyaWJ1dGUoImRhdGEtc3ZnLW9yaWdpbiIpKSxQdD1qLnVzZVNWR1RyYW5zZm9ybUF0dHJ8fEx0KSwocj1qdCh0KSkhPT1CdCl7aWYoMTY9PT1yLmxlbmd0aCl7dmFyIHAsZCxtLGcsdix5PXJbMF0sVD1yWzFdLHg9clsyXSxiPXJbM10sdz1yWzRdLFA9cls1XSxPPXJbNl0sUz1yWzddLGs9cls4XSxSPXJbOV0sQT1yWzEwXSxDPXJbMTJdLEQ9clsxM10sTT1yWzE0XSx6PXJbMTFdLEY9TWF0aC5hdGFuMihPLEEpO18uek9yaWdpbiYmKEM9ayooTT0tXy56T3JpZ2luKS1yWzEyXSxEPVIqTS1yWzEzXSxNPUEqTStfLnpPcmlnaW4tclsxNF0pLF8ucm90YXRpb25YPUYqVSxGJiYocD13KihnPU1hdGguY29zKC1GKSkrayoodj1NYXRoLnNpbigtRikpLGQ9UCpnK1IqdixtPU8qZytBKnYsaz13Ki12K2sqZyxSPVAqLXYrUipnLEE9TyotditBKmcsej1TKi12K3oqZyx3PXAsUD1kLE89bSksRj1NYXRoLmF0YW4yKGssQSksXy5yb3RhdGlvblk9RipVLEYmJihkPVQqKGc9TWF0aC5jb3MoLUYpKS1SKih2PU1hdGguc2luKC1GKSksbT14KmctQSp2LFI9VCp2K1IqZyxBPXgqditBKmcsej1iKnYreipnLHk9cD15Kmctayp2LFQ9ZCx4PW0pLEY9TWF0aC5hdGFuMihULHkpLF8ucm90YXRpb249RipVLEYmJih5PXkqKGc9TWF0aC5jb3MoLUYpKSt3Kih2PU1hdGguc2luKC1GKSksZD1UKmcrUCp2LFA9VCotditQKmcsTz14Ki12K08qZyxUPWQpLF8ucm90YXRpb25YJiYzNTkuOTxNYXRoLmFicyhfLnJvdGF0aW9uWCkrTWF0aC5hYnMoXy5yb3RhdGlvbikmJihfLnJvdGF0aW9uWD1fLnJvdGF0aW9uPTAsXy5yb3RhdGlvblkrPTE4MCksXy5zY2FsZVg9KDB8MWU1Kk1hdGguc3FydCh5KnkrVCpUKSsuNSkvMWU1LF8uc2NhbGVZPSgwfDFlNSpNYXRoLnNxcnQoUCpQK1IqUikrLjUpLzFlNSxfLnNjYWxlWj0oMHwxZTUqTWF0aC5zcXJ0KE8qTytBKkEpKy41KS8xZTUsXy5za2V3WD0wLF8ucGVyc3BlY3RpdmU9ej8xLyh6PDA/LXo6eik6MCxfLng9QyxfLnk9RCxfLno9TSxfLnN2ZyYmKF8ueC09Xy54T3JpZ2luLShfLnhPcmlnaW4qeS1fLnlPcmlnaW4qdyksXy55LT1fLnlPcmlnaW4tKF8ueU9yaWdpbipULV8ueE9yaWdpbipQKSl9ZWxzZSBpZighKHp0JiYhcyYmci5sZW5ndGgmJl8ueD09PXJbNF0mJl8ueT09PXJbNV0mJihfLnJvdGF0aW9uWHx8Xy5yb3RhdGlvblkpfHx2b2lkIDAhPT1fLngmJiJub25lIj09PUgodCwiZGlzcGxheSIsZSkpKXt2YXIgST02PD1yLmxlbmd0aCxYPUk/clswXToxLE49clsxXXx8MCxMPXJbMl18fDAsRT1JP3JbM106MTtfLng9cls0XXx8MCxfLnk9cls1XXx8MCxhPU1hdGguc3FydChYKlgrTipOKSxvPU1hdGguc3FydChFKkUrTCpMKSxsPVh8fE4/TWF0aC5hdGFuMihOLFgpKlU6Xy5yb3RhdGlvbnx8MCxoPUx8fEU/TWF0aC5hdGFuMihMLEUpKlUrbDpfLnNrZXdYfHwwLDkwPE1hdGguYWJzKGgpJiZNYXRoLmFicyhoKTwyNzAmJih1PyhhKj0tMSxoKz1sPD0wPzE4MDotMTgwLGwrPWw8PTA/MTgwOi0xODApOihvKj0tMSxoKz1oPD0wPzE4MDotMTgwKSksXy5zY2FsZVg9YSxfLnNjYWxlWT1vLF8ucm90YXRpb249bCxfLnNrZXdYPWgsenQmJihfLnJvdGF0aW9uWD1fLnJvdGF0aW9uWT1fLno9MCxfLnBlcnNwZWN0aXZlPWYsXy5zY2FsZVo9MSksXy5zdmcmJihfLngtPV8ueE9yaWdpbi0oXy54T3JpZ2luKlgrXy55T3JpZ2luKkwpLF8ueS09Xy55T3JpZ2luLShfLnhPcmlnaW4qTitfLnlPcmlnaW4qRSkpfWZvcihuIGluIF8uek9yaWdpbj1jLF8pX1tuXTwyZS01JiYtMmUtNTxfW25dJiYoX1tuXT0wKX1yZXR1cm4gaSYmKCh0Ll9nc1RyYW5zZm9ybT1fKS5zdmcmJihQdCYmdC5zdHlsZVtDdF0/WS5kZWxheWVkQ2FsbCguMDAxLGZ1bmN0aW9uKCl7WnQodC5zdHlsZSxDdCl9KTohUHQmJnQuZ2V0QXR0cmlidXRlKCJ0cmFuc2Zvcm0iKSYmWS5kZWxheWVkQ2FsbCguMDAxLGZ1bmN0aW9uKCl7dC5yZW1vdmVBdHRyaWJ1dGUoInRyYW5zZm9ybSIpfSkpKSxffSxWdD1mdW5jdGlvbih0KXt2YXIgZSxpLHM9dGhpcy5kYXRhLHI9LXMucm90YXRpb24qRSxuPXIrcy5za2V3WCpFLGE9MWU1LG89KDB8TWF0aC5jb3Mocikqcy5zY2FsZVgqYSkvYSxsPSgwfE1hdGguc2luKHIpKnMuc2NhbGVYKmEpL2EsaD0oMHxNYXRoLnNpbihuKSotcy5zY2FsZVkqYSkvYSxfPSgwfE1hdGguY29zKG4pKnMuc2NhbGVZKmEpL2EsdT10aGlzLnQuc3R5bGUsYz10aGlzLnQuY3VycmVudFN0eWxlO2lmKGMpe2k9bCxsPS1oLGg9LWksZT1jLmZpbHRlcix1LmZpbHRlcj0iIjt2YXIgZixwLGQ9dGhpcy50Lm9mZnNldFdpZHRoLG09dGhpcy50Lm9mZnNldEhlaWdodCxnPSJhYnNvbHV0ZSIhPT1jLnBvc2l0aW9uLHY9InByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5NYXRyaXgoTTExPSIrbysiLCBNMTI9IitsKyIsIE0yMT0iK2grIiwgTTIyPSIrXyx5PXMueCtkKnMueFBlcmNlbnQvMTAwLFQ9cy55K20qcy55UGVyY2VudC8xMDA7aWYobnVsbCE9cy5veCYmKHkrPShmPShzLm94cD8uMDEqZCpzLm94OnMub3gpLWQvMiktKGYqbysocD0ocy5veXA/LjAxKm0qcy5veTpzLm95KS1tLzIpKmwpLFQrPXAtKGYqaCtwKl8pKSxnP3YrPSIsIER4PSIrKChmPWQvMiktKGYqbysocD1tLzIpKmwpK3kpKyIsIER5PSIrKHAtKGYqaCtwKl8pK1QpKyIpIjp2Kz0iLCBzaXppbmdNZXRob2Q9J2F1dG8gZXhwYW5kJykiLHUuZmlsdGVyPS0xIT09ZS5pbmRleE9mKCJEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5NYXRyaXgoIik/ZS5yZXBsYWNlKEQsdik6disiICIrZSwoMD09PXR8fDE9PT10KSYmMT09byYmMD09PWwmJjA9PT1oJiYxPT1fJiYoZyYmLTE9PT12LmluZGV4T2YoIkR4PTAsIER5PTAiKXx8Qy50ZXN0KGUpJiYxMDAhPT1wYXJzZUZsb2F0KFJlZ0V4cC4kMSl8fC0xPT09ZS5pbmRleE9mKGUuaW5kZXhPZigiQWxwaGEiKSkmJnUucmVtb3ZlQXR0cmlidXRlKCJmaWx0ZXIiKSksIWcpe3ZhciB4LGIsdyxQPU88OD8xOi0xO2ZvcihmPXMuaWVPZmZzZXRYfHwwLHA9cy5pZU9mZnNldFl8fDAscy5pZU9mZnNldFg9TWF0aC5yb3VuZCgoZC0oKG88MD8tbzpvKSpkKyhsPDA/LWw6bCkqbSkpLzIreSkscy5pZU9mZnNldFk9TWF0aC5yb3VuZCgobS0oKF88MD8tXzpfKSptKyhoPDA/LWg6aCkqZCkpLzIrVCksVHQ9MDtUdDw0O1R0Kyspdz0oaT0tMSE9PSh4PWNbYj1zdFtUdF1dKS5pbmRleE9mKCJweCIpP3BhcnNlRmxvYXQoeCk6Syh0aGlzLnQsYixwYXJzZUZsb2F0KHgpLHgucmVwbGFjZShTLCIiKSl8fDApIT09c1tiXT9UdDwyPy1zLmllT2Zmc2V0WDotcy5pZU9mZnNldFk6VHQ8Mj9mLXMuaWVPZmZzZXRYOnAtcy5pZU9mZnNldFksdVtiXT0oc1tiXT1NYXRoLnJvdW5kKGktdyooMD09PVR0fHwyPT09VHQ/MTpQKSkpKyJweCJ9fX0scXQ9ci5zZXQzRFRyYW5zZm9ybVJhdGlvPXIuc2V0VHJhbnNmb3JtUmF0aW89ZnVuY3Rpb24odCl7dmFyIGUsaSxzLHIsbixhLG8sbCxoLF8sdSxjLGYscCxkLG0sZyx2LHksVCx4LGIsdyxQPXRoaXMuZGF0YSxPPXRoaXMudC5zdHlsZSxTPVAucm90YXRpb24saz1QLnJvdGF0aW9uWCxSPVAucm90YXRpb25ZLEE9UC5zY2FsZVgsQz1QLnNjYWxlWSxEPVAuc2NhbGVaLE09UC54LHo9UC55LEY9UC56LEk9UC5zdmcsWD1QLnBlcnNwZWN0aXZlLE49UC5mb3JjZTNEO2lmKCEoKDEhPT10JiYwIT09dHx8ImF1dG8iIT09Tnx8dGhpcy50d2Vlbi5fdG90YWxUaW1lIT09dGhpcy50d2Vlbi5fdG90YWxEdXJhdGlvbiYmdGhpcy50d2Vlbi5fdG90YWxUaW1lKSYmTnx8Rnx8WHx8Unx8ayl8fFB0JiZJfHwhenQpU3x8UC5za2V3WHx8ST8oUyo9RSxiPVAuc2tld1gqRSx3PTFlNSxlPU1hdGguY29zKFMpKkEscj1NYXRoLnNpbihTKSpBLGk9TWF0aC5zaW4oUy1iKSotQyxuPU1hdGguY29zKFMtYikqQyxiJiYic2ltcGxlIj09PVAuc2tld1R5cGUmJihnPU1hdGgudGFuKGIpLGkqPWc9TWF0aC5zcXJ0KDErZypnKSxuKj1nLFAuc2tld1kmJihlKj1nLHIqPWcpKSxJJiYoTSs9UC54T3JpZ2luLShQLnhPcmlnaW4qZStQLnlPcmlnaW4qaSkrUC54T2Zmc2V0LHorPVAueU9yaWdpbi0oUC54T3JpZ2luKnIrUC55T3JpZ2luKm4pK1AueU9mZnNldCxQdCYmKFAueFBlcmNlbnR8fFAueVBlcmNlbnQpJiYocD10aGlzLnQuZ2V0QkJveCgpLE0rPS4wMSpQLnhQZXJjZW50KnAud2lkdGgseis9LjAxKlAueVBlcmNlbnQqcC5oZWlnaHQpLE08KHA9MWUtNikmJi1wPE0mJihNPTApLHo8cCYmLXA8eiYmKHo9MCkpLHk9KDB8ZSp3KS93KyIsIisoMHxyKncpL3crIiwiKygwfGkqdykvdysiLCIrKDB8bip3KS93KyIsIitNKyIsIit6KyIpIixJJiZQdD90aGlzLnQuc2V0QXR0cmlidXRlKCJ0cmFuc2Zvcm0iLCJtYXRyaXgoIit5KTpPW0N0XT0oUC54UGVyY2VudHx8UC55UGVyY2VudD8idHJhbnNsYXRlKCIrUC54UGVyY2VudCsiJSwiK1AueVBlcmNlbnQrIiUpIG1hdHJpeCgiOiJtYXRyaXgoIikreSk6T1tDdF09KFAueFBlcmNlbnR8fFAueVBlcmNlbnQ/InRyYW5zbGF0ZSgiK1AueFBlcmNlbnQrIiUsIitQLnlQZXJjZW50KyIlKSBtYXRyaXgoIjoibWF0cml4KCIpK0ErIiwwLDAsIitDKyIsIitNKyIsIit6KyIpIjtlbHNle2lmKEwmJihBPChwPTFlLTQpJiYtcDxBJiYoQT1EPTJlLTUpLEM8cCYmLXA8QyYmKEM9RD0yZS01KSwhWHx8UC56fHxQLnJvdGF0aW9uWHx8UC5yb3RhdGlvbll8fChYPTApKSxTfHxQLnNrZXdYKVMqPUUsZD1lPU1hdGguY29zKFMpLG09cj1NYXRoLnNpbihTKSxQLnNrZXdYJiYoUy09UC5za2V3WCpFLGQ9TWF0aC5jb3MoUyksbT1NYXRoLnNpbihTKSwic2ltcGxlIj09PVAuc2tld1R5cGUmJihnPU1hdGgudGFuKFAuc2tld1gqRSksZCo9Zz1NYXRoLnNxcnQoMStnKmcpLG0qPWcsUC5za2V3WSYmKGUqPWcscio9ZykpKSxpPS1tLG49ZDtlbHNle2lmKCEoUnx8a3x8MSE9PUR8fFh8fEkpKXJldHVybiB2b2lkKE9bQ3RdPShQLnhQZXJjZW50fHxQLnlQZXJjZW50PyJ0cmFuc2xhdGUoIitQLnhQZXJjZW50KyIlLCIrUC55UGVyY2VudCsiJSkgdHJhbnNsYXRlM2QoIjoidHJhbnNsYXRlM2QoIikrTSsicHgsIit6KyJweCwiK0YrInB4KSIrKDEhPT1BfHwxIT09Qz8iIHNjYWxlKCIrQSsiLCIrQysiKSI6IiIpKTtlPW49MSxpPXI9MH1oPTEscz1hPW89bD1fPXU9MCxjPVg/LTEvWDowLGY9UC56T3JpZ2luLHA9MWUtNixUPSIsIix4PSIwIiwoUz1SKkUpJiYoZD1NYXRoLmNvcyhTKSxfPWMqKG89LShtPU1hdGguc2luKFMpKSkscz1lKm0sYT1yKm0sYyo9aD1kLGUqPWQscio9ZCksKFM9aypFKSYmKGc9aSooZD1NYXRoLmNvcyhTKSkrcyoobT1NYXRoLnNpbihTKSksdj1uKmQrYSptLGw9aCptLHU9YyptLHM9aSotbStzKmQsYT1uKi1tK2EqZCxoKj1kLGMqPWQsaT1nLG49diksMSE9PUQmJihzKj1ELGEqPUQsaCo9RCxjKj1EKSwxIT09QyYmKGkqPUMsbio9QyxsKj1DLHUqPUMpLDEhPT1BJiYoZSo9QSxyKj1BLG8qPUEsXyo9QSksKGZ8fEkpJiYoZiYmKE0rPXMqLWYseis9YSotZixGKz1oKi1mK2YpLEkmJihNKz1QLnhPcmlnaW4tKFAueE9yaWdpbiplK1AueU9yaWdpbippKStQLnhPZmZzZXQseis9UC55T3JpZ2luLShQLnhPcmlnaW4qcitQLnlPcmlnaW4qbikrUC55T2Zmc2V0KSxNPHAmJi1wPE0mJihNPXgpLHo8cCYmLXA8eiYmKHo9eCksRjxwJiYtcDxGJiYoRj0wKSkseT1QLnhQZXJjZW50fHxQLnlQZXJjZW50PyJ0cmFuc2xhdGUoIitQLnhQZXJjZW50KyIlLCIrUC55UGVyY2VudCsiJSkgbWF0cml4M2QoIjoibWF0cml4M2QoIix5Kz0oZTxwJiYtcDxlP3g6ZSkrVCsocjxwJiYtcDxyP3g6cikrVCsobzxwJiYtcDxvP3g6bykseSs9VCsoXzxwJiYtcDxfP3g6XykrVCsoaTxwJiYtcDxpP3g6aSkrVCsobjxwJiYtcDxuP3g6biksa3x8Uj8oeSs9VCsobDxwJiYtcDxsP3g6bCkrVCsodTxwJiYtcDx1P3g6dSkrVCsoczxwJiYtcDxzP3g6cykseSs9VCsoYTxwJiYtcDxhP3g6YSkrVCsoaDxwJiYtcDxoP3g6aCkrVCsoYzxwJiYtcDxjP3g6YykrVCk6eSs9IiwwLDAsMCwwLDEsMCwiLHkrPU0rVCt6K1QrRitUKyhYPzErLUYvWDoxKSsiKSIsT1tDdF09eX19Oyh0PUZ0LnByb3RvdHlwZSkueD10Lnk9dC56PXQuc2tld1g9dC5za2V3WT10LnJvdGF0aW9uPXQucm90YXRpb25YPXQucm90YXRpb25ZPXQuek9yaWdpbj10LnhQZXJjZW50PXQueVBlcmNlbnQ9dC54T2Zmc2V0PXQueU9mZnNldD0wLHQuc2NhbGVYPXQuc2NhbGVZPXQuc2NhbGVaPTEsYnQoInRyYW5zZm9ybSxzY2FsZSxzY2FsZVgsc2NhbGVZLHNjYWxlWix4LHkseixyb3RhdGlvbixyb3RhdGlvblgscm90YXRpb25ZLHJvdGF0aW9uWixza2V3WCxza2V3WSxzaG9ydFJvdGF0aW9uLHNob3J0Um90YXRpb25YLHNob3J0Um90YXRpb25ZLHNob3J0Um90YXRpb25aLHRyYW5zZm9ybU9yaWdpbixzdmdPcmlnaW4sdHJhbnNmb3JtUGVyc3BlY3RpdmUsZGlyZWN0aW9uYWxSb3RhdGlvbixwYXJzZVRyYW5zZm9ybSxmb3JjZTNELHNrZXdUeXBlLHhQZXJjZW50LHlQZXJjZW50LHNtb290aE9yaWdpbiIse3BhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIsbixhKXtpZihzLl9sYXN0UGFyc2VkVHJhbnNmb3JtPT09YSlyZXR1cm4gcjtzLl9sYXN0UGFyc2VkVHJhbnNmb3JtPWE7dmFyIG8sbCxoLF8sdSxjLGYscCxkLG0sZz10Ll9nc1RyYW5zZm9ybSx2PXQuc3R5bGUseT1BdC5sZW5ndGgsVD1hLHg9e30sYj0idHJhbnNmb3JtT3JpZ2luIjtpZihhLmRpc3BsYXk/KF89SCh0LCJkaXNwbGF5Iiksdi5kaXNwbGF5PSJibG9jayIsbz1VdCh0LEIsITAsYS5wYXJzZVRyYW5zZm9ybSksdi5kaXNwbGF5PV8pOm89VXQodCxCLCEwLGEucGFyc2VUcmFuc2Zvcm0pLHMuX3RyYW5zZm9ybT1vLCJzdHJpbmciPT10eXBlb2YgVC50cmFuc2Zvcm0mJkN0KShfPUkuc3R5bGUpW0N0XT1ULnRyYW5zZm9ybSxfLmRpc3BsYXk9ImJsb2NrIixfLnBvc2l0aW9uPSJhYnNvbHV0ZSIsRi5ib2R5LmFwcGVuZENoaWxkKEkpLGw9VXQoSSxudWxsLCExKSxGLmJvZHkucmVtb3ZlQ2hpbGQoSSksbC5wZXJzcGVjdGl2ZXx8KGwucGVyc3BlY3RpdmU9by5wZXJzcGVjdGl2ZSksbnVsbCE9VC54UGVyY2VudCYmKGwueFBlcmNlbnQ9b3QoVC54UGVyY2VudCxvLnhQZXJjZW50KSksbnVsbCE9VC55UGVyY2VudCYmKGwueVBlcmNlbnQ9b3QoVC55UGVyY2VudCxvLnlQZXJjZW50KSk7ZWxzZSBpZigib2JqZWN0Ij09dHlwZW9mIFQpe2lmKGw9e3NjYWxlWDpvdChudWxsIT1ULnNjYWxlWD9ULnNjYWxlWDpULnNjYWxlLG8uc2NhbGVYKSxzY2FsZVk6b3QobnVsbCE9VC5zY2FsZVk/VC5zY2FsZVk6VC5zY2FsZSxvLnNjYWxlWSksc2NhbGVaOm90KFQuc2NhbGVaLG8uc2NhbGVaKSx4Om90KFQueCxvLngpLHk6b3QoVC55LG8ueSksejpvdChULnosby56KSx4UGVyY2VudDpvdChULnhQZXJjZW50LG8ueFBlcmNlbnQpLHlQZXJjZW50Om90KFQueVBlcmNlbnQsby55UGVyY2VudCkscGVyc3BlY3RpdmU6b3QoVC50cmFuc2Zvcm1QZXJzcGVjdGl2ZSxvLnBlcnNwZWN0aXZlKX0sbnVsbCE9KHA9VC5kaXJlY3Rpb25hbFJvdGF0aW9uKSlpZigib2JqZWN0Ij09dHlwZW9mIHApZm9yKF8gaW4gcClUW19dPXBbX107ZWxzZSBULnJvdGF0aW9uPXA7InN0cmluZyI9PXR5cGVvZiBULngmJi0xIT09VC54LmluZGV4T2YoIiUiKSYmKGwueD0wLGwueFBlcmNlbnQ9b3QoVC54LG8ueFBlcmNlbnQpKSwic3RyaW5nIj09dHlwZW9mIFQueSYmLTEhPT1ULnkuaW5kZXhPZigiJSIpJiYobC55PTAsbC55UGVyY2VudD1vdChULnksby55UGVyY2VudCkpLGwucm90YXRpb249bHQoInJvdGF0aW9uImluIFQ/VC5yb3RhdGlvbjoic2hvcnRSb3RhdGlvbiJpbiBUP1Quc2hvcnRSb3RhdGlvbisiX3Nob3J0Ijoicm90YXRpb25aImluIFQ/VC5yb3RhdGlvblo6by5yb3RhdGlvbixvLnJvdGF0aW9uLCJyb3RhdGlvbiIseCksenQmJihsLnJvdGF0aW9uWD1sdCgicm90YXRpb25YImluIFQ/VC5yb3RhdGlvblg6InNob3J0Um90YXRpb25YImluIFQ/VC5zaG9ydFJvdGF0aW9uWCsiX3Nob3J0IjpvLnJvdGF0aW9uWHx8MCxvLnJvdGF0aW9uWCwicm90YXRpb25YIix4KSxsLnJvdGF0aW9uWT1sdCgicm90YXRpb25ZImluIFQ/VC5yb3RhdGlvblk6InNob3J0Um90YXRpb25ZImluIFQ/VC5zaG9ydFJvdGF0aW9uWSsiX3Nob3J0IjpvLnJvdGF0aW9uWXx8MCxvLnJvdGF0aW9uWSwicm90YXRpb25ZIix4KSksbC5za2V3WD1udWxsPT1ULnNrZXdYP28uc2tld1g6bHQoVC5za2V3WCxvLnNrZXdYKSxsLnNrZXdZPW51bGw9PVQuc2tld1k/by5za2V3WTpsdChULnNrZXdZLG8uc2tld1kpLChoPWwuc2tld1ktby5za2V3WSkmJihsLnNrZXdYKz1oLGwucm90YXRpb24rPWgpfWZvcih6dCYmbnVsbCE9VC5mb3JjZTNEJiYoby5mb3JjZTNEPVQuZm9yY2UzRCxmPSEwKSxvLnNrZXdUeXBlPVQuc2tld1R5cGV8fG8uc2tld1R5cGV8fGouZGVmYXVsdFNrZXdUeXBlLChjPW8uZm9yY2UzRHx8by56fHxvLnJvdGF0aW9uWHx8by5yb3RhdGlvbll8fGwuenx8bC5yb3RhdGlvblh8fGwucm90YXRpb25ZfHxsLnBlcnNwZWN0aXZlKXx8bnVsbD09VC5zY2FsZXx8KGwuc2NhbGVaPTEpOy0xPC0teTspKDFlLTY8KHU9bFtpPUF0W3ldXS1vW2ldKXx8dTwtMWUtNnx8bnVsbCE9VFtpXXx8bnVsbCE9eltpXSkmJihmPSEwLHI9bmV3IGd0KG8saSxvW2ldLHUsciksaSBpbiB4JiYoci5lPXhbaV0pLHIueHMwPTAsci5wbHVnaW49bixzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKHIubikpO3JldHVybiB1PVQudHJhbnNmb3JtT3JpZ2luLG8uc3ZnJiYodXx8VC5zdmdPcmlnaW4pJiYoZD1vLnhPZmZzZXQsbT1vLnlPZmZzZXQsRXQodCxudCh1KSxsLFQuc3ZnT3JpZ2luLFQuc21vb3RoT3JpZ2luKSxyPXZ0KG8sInhPcmlnaW4iLChnP286bCkueE9yaWdpbixsLnhPcmlnaW4scixiKSxyPXZ0KG8sInlPcmlnaW4iLChnP286bCkueU9yaWdpbixsLnlPcmlnaW4scixiKSwoZCE9PW8ueE9mZnNldHx8bSE9PW8ueU9mZnNldCkmJihyPXZ0KG8sInhPZmZzZXQiLGc/ZDpvLnhPZmZzZXQsby54T2Zmc2V0LHIsYikscj12dChvLCJ5T2Zmc2V0IixnP206by55T2Zmc2V0LG8ueU9mZnNldCxyLGIpKSx1PVB0P251bGw6IjBweCAwcHgiKSwodXx8enQmJmMmJm8uek9yaWdpbikmJihDdD8oZj0hMCxpPU10LHU9KHV8fEgodCxpLEIsITEsIjUwJSA1MCUiKSkrIiIsKHI9bmV3IGd0KHYsaSwwLDAsciwtMSxiKSkuYj12W2ldLHIucGx1Z2luPW4senQ/KF89by56T3JpZ2luLHU9dS5zcGxpdCgiICIpLG8uek9yaWdpbj0oMjx1Lmxlbmd0aCYmKDA9PT1ffHwiMHB4IiE9PXVbMl0pP3BhcnNlRmxvYXQodVsyXSk6Xyl8fDAsci54czA9ci5lPXVbMF0rIiAiKyh1WzFdfHwiNTAlIikrIiAwcHgiLChyPW5ldyBndChvLCJ6T3JpZ2luIiwwLDAsciwtMSxyLm4pKS5iPV8sci54czA9ci5lPW8uek9yaWdpbik6ci54czA9ci5lPXUpOm50KHUrIiIsbykpLGYmJihzLl90cmFuc2Zvcm1UeXBlPW8uc3ZnJiZQdHx8IWMmJjMhPT10aGlzLl90cmFuc2Zvcm1UeXBlPzI6Mykscn0scHJlZml4OiEwfSksYnQoImJveFNoYWRvdyIse2RlZmF1bHRWYWx1ZToiMHB4IDBweCAwcHggMHB4ICM5OTkiLHByZWZpeDohMCxjb2xvcjohMCxtdWx0aTohMCxrZXl3b3JkOiJpbnNldCJ9KSxidCgiYm9yZGVyUmFkaXVzIix7ZGVmYXVsdFZhbHVlOiIwcHgiLHBhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIpe2U9dGhpcy5mb3JtYXQoZSk7dmFyIG4sYSxvLGwsaCxfLHUsYyxmLHAsZCxtLGcsdix5LFQseD1bImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJUb3BSaWdodFJhZGl1cyIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyJdLGI9dC5zdHlsZTtmb3IoZj1wYXJzZUZsb2F0KHQub2Zmc2V0V2lkdGgpLHA9cGFyc2VGbG9hdCh0Lm9mZnNldEhlaWdodCksbj1lLnNwbGl0KCIgIiksYT0wO3gubGVuZ3RoPmE7YSsrKXRoaXMucC5pbmRleE9mKCJib3JkZXIiKSYmKHhbYV09JCh4W2FdKSksLTEhPT0oaD1sPUgodCx4W2FdLEIsITEsIjBweCIpKS5pbmRleE9mKCIgIikmJihoPShsPWguc3BsaXQoIiAiKSlbMF0sbD1sWzFdKSxfPW89blthXSx1PXBhcnNlRmxvYXQoaCksbT1oLnN1YnN0cigodSsiIikubGVuZ3RoKSwiIj09PShkPShnPSI9Ij09PV8uY2hhckF0KDEpKT8oYz1wYXJzZUludChfLmNoYXJBdCgwKSsiMSIsMTApLF89Xy5zdWJzdHIoMiksYyo9cGFyc2VGbG9hdChfKSxfLnN1YnN0cigoYysiIikubGVuZ3RoLShjPDA/MTowKSl8fCIiKTooYz1wYXJzZUZsb2F0KF8pLF8uc3Vic3RyKChjKyIiKS5sZW5ndGgpKSkmJihkPXdbaV18fG0pLGQhPT1tJiYodj1LKHQsImJvcmRlckxlZnQiLHUsbSkseT1LKHQsImJvcmRlclRvcCIsdSxtKSxsPSIlIj09PWQ/KGg9di9mKjEwMCsiJSIseS9wKjEwMCsiJSIpOiJlbSI9PT1kPyhoPXYvKFQ9Syh0LCJib3JkZXJMZWZ0IiwxLCJlbSIpKSsiZW0iLHkvVCsiZW0iKTooaD12KyJweCIseSsicHgiKSxnJiYoXz1wYXJzZUZsb2F0KGgpK2MrZCxvPXBhcnNlRmxvYXQobCkrYytkKSkscj15dChiLHhbYV0saCsiICIrbCxfKyIgIitvLCExLCIwcHgiLHIpO3JldHVybiByfSxwcmVmaXg6ITAsZm9ybWF0dGVyOnB0KCIwcHggMHB4IDBweCAwcHgiLCExLCEwKX0pLGJ0KCJiYWNrZ3JvdW5kUG9zaXRpb24iLHtkZWZhdWx0VmFsdWU6IjAgMCIscGFyc2VyOmZ1bmN0aW9uKHQsZSxpLHMscixuKXt2YXIgYSxvLGwsaCxfLHUsYz0iYmFja2dyb3VuZC1wb3NpdGlvbiIsZj1CfHxRKHQsbnVsbCkscD10aGlzLmZvcm1hdCgoZj9PP2YuZ2V0UHJvcGVydHlWYWx1ZShjKyIteCIpKyIgIitmLmdldFByb3BlcnR5VmFsdWUoYysiLXkiKTpmLmdldFByb3BlcnR5VmFsdWUoYyk6dC5jdXJyZW50U3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uWCsiICIrdC5jdXJyZW50U3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uWSl8fCIwIDAiKSxkPXRoaXMuZm9ybWF0KGUpO2lmKC0xIT09cC5pbmRleE9mKCIlIikhPSgtMSE9PWQuaW5kZXhPZigiJSIpKSYmKCh1PUgodCwiYmFja2dyb3VuZEltYWdlIikucmVwbGFjZShiLCIiKSkmJiJub25lIiE9PXUpKXtmb3IoYT1wLnNwbGl0KCIgIiksbz1kLnNwbGl0KCIgIiksWC5zZXRBdHRyaWJ1dGUoInNyYyIsdSksbD0yOy0xPC0tbDspKGg9LTEhPT0ocD1hW2xdKS5pbmRleE9mKCIlIikpIT0oLTEhPT1vW2xdLmluZGV4T2YoIiUiKSkmJihfPTA9PT1sP3Qub2Zmc2V0V2lkdGgtWC53aWR0aDp0Lm9mZnNldEhlaWdodC1YLmhlaWdodCxhW2xdPWg/cGFyc2VGbG9hdChwKS8xMDAqXysicHgiOnBhcnNlRmxvYXQocCkvXyoxMDArIiUiKTtwPWEuam9pbigiICIpfXJldHVybiB0aGlzLnBhcnNlQ29tcGxleCh0LnN0eWxlLHAsZCxyLG4pfSxmb3JtYXR0ZXI6bnR9KSxidCgiYmFja2dyb3VuZFNpemUiLHtkZWZhdWx0VmFsdWU6IjAgMCIsZm9ybWF0dGVyOm50fSksYnQoInBlcnNwZWN0aXZlIix7ZGVmYXVsdFZhbHVlOiIwcHgiLHByZWZpeDohMH0pLGJ0KCJwZXJzcGVjdGl2ZU9yaWdpbiIse2RlZmF1bHRWYWx1ZToiNTAlIDUwJSIscHJlZml4OiEwfSksYnQoInRyYW5zZm9ybVN0eWxlIix7cHJlZml4OiEwfSksYnQoImJhY2tmYWNlVmlzaWJpbGl0eSIse3ByZWZpeDohMH0pLGJ0KCJ1c2VyU2VsZWN0Iix7cHJlZml4OiEwfSksYnQoIm1hcmdpbiIse3BhcnNlcjpkdCgibWFyZ2luVG9wLG1hcmdpblJpZ2h0LG1hcmdpbkJvdHRvbSxtYXJnaW5MZWZ0Iil9KSxidCgicGFkZGluZyIse3BhcnNlcjpkdCgicGFkZGluZ1RvcCxwYWRkaW5nUmlnaHQscGFkZGluZ0JvdHRvbSxwYWRkaW5nTGVmdCIpfSksYnQoImNsaXAiLHtkZWZhdWx0VmFsdWU6InJlY3QoMHB4LDBweCwwcHgsMHB4KSIscGFyc2VyOmZ1bmN0aW9uKHQsZSxpLHMscixuKXt2YXIgYSxvLGw7cmV0dXJuIGU9Tzw5PyhvPXQuY3VycmVudFN0eWxlLGw9Tzw4PyIgIjoiLCIsYT0icmVjdCgiK28uY2xpcFRvcCtsK28uY2xpcFJpZ2h0K2wrby5jbGlwQm90dG9tK2wrby5jbGlwTGVmdCsiKSIsdGhpcy5mb3JtYXQoZSkuc3BsaXQoIiwiKS5qb2luKGwpKTooYT10aGlzLmZvcm1hdChIKHQsdGhpcy5wLEIsITEsdGhpcy5kZmx0KSksdGhpcy5mb3JtYXQoZSkpLHRoaXMucGFyc2VDb21wbGV4KHQuc3R5bGUsYSxlLHIsbil9fSksYnQoInRleHRTaGFkb3ciLHtkZWZhdWx0VmFsdWU6IjBweCAwcHggMHB4ICM5OTkiLGNvbG9yOiEwLG11bHRpOiEwfSksYnQoImF1dG9Sb3VuZCxzdHJpY3RVbml0cyIse3BhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIpe3JldHVybiByfX0pLGJ0KCJib3JkZXIiLHtkZWZhdWx0VmFsdWU6IjBweCBzb2xpZCAjMDAwIixwYXJzZXI6ZnVuY3Rpb24odCxlLGkscyxyLG4pe3JldHVybiB0aGlzLnBhcnNlQ29tcGxleCh0LnN0eWxlLHRoaXMuZm9ybWF0KEgodCwiYm9yZGVyVG9wV2lkdGgiLEIsITEsIjBweCIpKyIgIitIKHQsImJvcmRlclRvcFN0eWxlIixCLCExLCJzb2xpZCIpKyIgIitIKHQsImJvcmRlclRvcENvbG9yIixCLCExLCIjMDAwIikpLHRoaXMuZm9ybWF0KGUpLHIsbil9LGNvbG9yOiEwLGZvcm1hdHRlcjpmdW5jdGlvbih0KXt2YXIgZT10LnNwbGl0KCIgIik7cmV0dXJuIGVbMF0rIiAiKyhlWzFdfHwic29saWQiKSsiICIrKHQubWF0Y2goZnQpfHxbIiMwMDAiXSlbMF19fSksYnQoImJvcmRlcldpZHRoIix7cGFyc2VyOmR0KCJib3JkZXJUb3BXaWR0aCxib3JkZXJSaWdodFdpZHRoLGJvcmRlckJvdHRvbVdpZHRoLGJvcmRlckxlZnRXaWR0aCIpfSksYnQoImZsb2F0LGNzc0Zsb2F0LHN0eWxlRmxvYXQiLHtwYXJzZXI6ZnVuY3Rpb24odCxlLGkscyxyKXt2YXIgbj10LnN0eWxlLGE9ImNzc0Zsb2F0ImluIG4/ImNzc0Zsb2F0Ijoic3R5bGVGbG9hdCI7cmV0dXJuIG5ldyBndChuLGEsMCwwLHIsLTEsaSwhMSwwLG5bYV0sZSl9fSk7dmFyIFd0PWZ1bmN0aW9uKHQpe3ZhciBlLGk9dGhpcy50LHM9aS5maWx0ZXJ8fEgodGhpcy5kYXRhLCJmaWx0ZXIiKXx8IiIscj0wfHRoaXMucyt0aGlzLmMqdDsxMDA9PXImJihlPS0xPT09cy5pbmRleE9mKCJhdHJpeCgiKSYmLTE9PT1zLmluZGV4T2YoInJhZGllbnQoIikmJi0xPT09cy5pbmRleE9mKCJvYWRlcigiKT8oaS5yZW1vdmVBdHRyaWJ1dGUoImZpbHRlciIpLCFIKHRoaXMuZGF0YSwiZmlsdGVyIikpOihpLmZpbHRlcj1zLnJlcGxhY2UoYSwiIiksITApKSxlfHwodGhpcy54bjEmJihpLmZpbHRlcj1zPXN8fCJhbHBoYShvcGFjaXR5PSIrcisiKSIpLC0xPT09cy5pbmRleE9mKCJwYWNpdHkiKT8wPT1yJiZ0aGlzLnhuMXx8KGkuZmlsdGVyPXMrIiBhbHBoYShvcGFjaXR5PSIrcisiKSIpOmkuZmlsdGVyPXMucmVwbGFjZShDLCJvcGFjaXR5PSIrcikpfTtidCgib3BhY2l0eSxhbHBoYSxhdXRvQWxwaGEiLHtkZWZhdWx0VmFsdWU6IjEiLHBhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIsbil7dmFyIGE9cGFyc2VGbG9hdChIKHQsIm9wYWNpdHkiLEIsITEsIjEiKSksbz10LnN0eWxlLGw9ImF1dG9BbHBoYSI9PT1pO3JldHVybiJzdHJpbmciPT10eXBlb2YgZSYmIj0iPT09ZS5jaGFyQXQoMSkmJihlPSgiLSI9PT1lLmNoYXJBdCgwKT8tMToxKSpwYXJzZUZsb2F0KGUuc3Vic3RyKDIpKSthKSxsJiYxPT09YSYmImhpZGRlbiI9PT1IKHQsInZpc2liaWxpdHkiLEIpJiYwIT09ZSYmKGE9MCksVj9yPW5ldyBndChvLCJvcGFjaXR5IixhLGUtYSxyKTooKHI9bmV3IGd0KG8sIm9wYWNpdHkiLDEwMCphLDEwMCooZS1hKSxyKSkueG4xPWw/MTowLG8uem9vbT0xLHIudHlwZT0yLHIuYj0iYWxwaGEob3BhY2l0eT0iK3IucysiKSIsci5lPSJhbHBoYShvcGFjaXR5PSIrKHIucytyLmMpKyIpIixyLmRhdGE9dCxyLnBsdWdpbj1uLHIuc2V0UmF0aW89V3QpLGwmJigocj1uZXcgZ3QobywidmlzaWJpbGl0eSIsMCwwLHIsLTEsbnVsbCwhMSwwLDAhPT1hPyJpbmhlcml0IjoiaGlkZGVuIiwwPT09ZT8iaGlkZGVuIjoiaW5oZXJpdCIpKS54czA9ImluaGVyaXQiLHMuX292ZXJ3cml0ZVByb3BzLnB1c2goci5uKSxzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKGkpKSxyfX0pO3ZhciBadD1mdW5jdGlvbih0LGUpe2UmJih0LnJlbW92ZVByb3BlcnR5PygoIm1zIj09PWUuc3Vic3RyKDAsMil8fCJ3ZWJraXQiPT09ZS5zdWJzdHIoMCw2KSkmJihlPSItIitlKSx0LnJlbW92ZVByb3BlcnR5KGUucmVwbGFjZShvLCItJDEiKS50b0xvd2VyQ2FzZSgpKSk6dC5yZW1vdmVBdHRyaWJ1dGUoZSkpfSxHdD1mdW5jdGlvbih0KXtpZih0aGlzLnQuX2dzQ2xhc3NQVD10aGlzLDE9PT10fHwwPT09dCl7dGhpcy50LnNldEF0dHJpYnV0ZSgiY2xhc3MiLDA9PT10P3RoaXMuYjp0aGlzLmUpO2Zvcih2YXIgZT10aGlzLmRhdGEsaT10aGlzLnQuc3R5bGU7ZTspZS52P2lbZS5wXT1lLnY6WnQoaSxlLnApLGU9ZS5fbmV4dDsxPT09dCYmdGhpcy50Ll9nc0NsYXNzUFQ9PT10aGlzJiYodGhpcy50Ll9nc0NsYXNzUFQ9bnVsbCl9ZWxzZSB0aGlzLnQuZ2V0QXR0cmlidXRlKCJjbGFzcyIpIT09dGhpcy5lJiZ0aGlzLnQuc2V0QXR0cmlidXRlKCJjbGFzcyIsdGhpcy5lKX07YnQoImNsYXNzTmFtZSIse3BhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIsbixhKXt2YXIgbyxsLGgsXyx1LGM9dC5nZXRBdHRyaWJ1dGUoImNsYXNzIil8fCIiLGY9dC5zdHlsZS5jc3NUZXh0O2lmKChyPXMuX2NsYXNzTmFtZVBUPW5ldyBndCh0LGksMCwwLHIsMikpLnNldFJhdGlvPUd0LHIucHI9LTExLHA9ITAsci5iPWMsbD10dCh0LEIpLGg9dC5fZ3NDbGFzc1BUKXtmb3IoXz17fSx1PWguZGF0YTt1OylfW3UucF09MSx1PXUuX25leHQ7aC5zZXRSYXRpbygxKX1yZXR1cm4odC5fZ3NDbGFzc1BUPXIpLmU9Ij0iIT09ZS5jaGFyQXQoMSk/ZTpjLnJlcGxhY2UoUmVnRXhwKCJcXHMqXFxiIitlLnN1YnN0cigyKSsiXFxiIiksIiIpKygiKyI9PT1lLmNoYXJBdCgwKT8iICIrZS5zdWJzdHIoMik6IiIpLHQuc2V0QXR0cmlidXRlKCJjbGFzcyIsci5lKSxvPWV0KHQsbCx0dCh0KSxhLF8pLHQuc2V0QXR0cmlidXRlKCJjbGFzcyIsYyksci5kYXRhPW8uZmlyc3RNUFQsdC5zdHlsZS5jc3NUZXh0PWYsci54Zmlyc3Q9cy5wYXJzZSh0LG8uZGlmcyxyLG4pfX0pO3ZhciAkdD1mdW5jdGlvbih0KXtpZigoMT09PXR8fDA9PT10KSYmdGhpcy5kYXRhLl90b3RhbFRpbWU9PT10aGlzLmRhdGEuX3RvdGFsRHVyYXRpb24mJiJpc0Zyb21TdGFydCIhPT10aGlzLmRhdGEuZGF0YSl7dmFyIGUsaSxzLHIsbixhPXRoaXMudC5zdHlsZSxvPWQudHJhbnNmb3JtLnBhcnNlO2lmKCJhbGwiPT09dGhpcy5lKXI9IShhLmNzc1RleHQ9IiIpO2Vsc2UgZm9yKHM9KGU9dGhpcy5lLnNwbGl0KCIgIikuam9pbigiIikuc3BsaXQoIiwiKSkubGVuZ3RoOy0xPC0tczspaT1lW3NdLGRbaV0mJihkW2ldLnBhcnNlPT09bz9yPSEwOmk9InRyYW5zZm9ybU9yaWdpbiI9PT1pP010OmRbaV0ucCksWnQoYSxpKTtyJiYoWnQoYSxDdCksKG49dGhpcy50Ll9nc1RyYW5zZm9ybSkmJihuLnN2ZyYmdGhpcy50LnJlbW92ZUF0dHJpYnV0ZSgiZGF0YS1zdmctb3JpZ2luIiksZGVsZXRlIHRoaXMudC5fZ3NUcmFuc2Zvcm0pKX19O2ZvcihidCgiY2xlYXJQcm9wcyIse3BhcnNlcjpmdW5jdGlvbih0LGUsaSxzLHIpe3JldHVybihyPW5ldyBndCh0LGksMCwwLHIsMikpLnNldFJhdGlvPSR0LHIuZT1lLHIucHI9LTEwLHIuZGF0YT1zLl90d2VlbixwPSEwLHJ9fSksdD0iYmV6aWVyLHRocm93UHJvcHMscGh5c2ljc1Byb3BzLHBoeXNpY3MyRCIuc3BsaXQoIiwiKSxUdD10Lmxlbmd0aDtUdC0tOyl3dCh0W1R0XSk7KHQ9ai5wcm90b3R5cGUpLl9maXJzdFBUPXQuX2xhc3RQYXJzZWRUcmFuc2Zvcm09dC5fdHJhbnNmb3JtPW51bGwsdC5fb25Jbml0VHdlZW49ZnVuY3Rpb24odCxlLGkpe2lmKCF0Lm5vZGVUeXBlKXJldHVybiExO3RoaXMuX3RhcmdldD10LHRoaXMuX3R3ZWVuPWksdGhpcy5fdmFycz1lLGs9ZS5hdXRvUm91bmQscD0hMSx3PWUuc3VmZml4TWFwfHxqLnN1ZmZpeE1hcCxCPVEodCwiIiksZj10aGlzLl9vdmVyd3JpdGVQcm9wczt2YXIgcyxyLG4sYSxvLGwsaCxfLHUsYz10LnN0eWxlO2lmKG0mJiIiPT09Yy56SW5kZXgmJigoImF1dG8iPT09KHM9SCh0LCJ6SW5kZXgiLEIpKXx8IiI9PT1zKSYmdGhpcy5fYWRkTGF6eVNldChjLCJ6SW5kZXgiLDApKSwic3RyaW5nIj09dHlwZW9mIGUmJihhPWMuY3NzVGV4dCxzPXR0KHQsQiksYy5jc3NUZXh0PWErIjsiK2Uscz1ldCh0LHMsdHQodCkpLmRpZnMsIVYmJlQudGVzdChlKSYmKHMub3BhY2l0eT1wYXJzZUZsb2F0KFJlZ0V4cC4kMSkpLGU9cyxjLmNzc1RleHQ9YSksdGhpcy5fZmlyc3RQVD1yPWUuY2xhc3NOYW1lP2QuY2xhc3NOYW1lLnBhcnNlKHQsZS5jbGFzc05hbWUsImNsYXNzTmFtZSIsdGhpcyxudWxsLG51bGwsZSk6dGhpcy5wYXJzZSh0LGUsbnVsbCksdGhpcy5fdHJhbnNmb3JtVHlwZSl7Zm9yKHU9Mz09PXRoaXMuX3RyYW5zZm9ybVR5cGUsQ3Q/ZyYmKG09ITAsIiI9PT1jLnpJbmRleCYmKCgiYXV0byI9PT0oaD1IKHQsInpJbmRleCIsQikpfHwiIj09PWgpJiZ0aGlzLl9hZGRMYXp5U2V0KGMsInpJbmRleCIsMCkpLHYmJnRoaXMuX2FkZExhenlTZXQoYywiV2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5Iix0aGlzLl92YXJzLldlYmtpdEJhY2tmYWNlVmlzaWJpbGl0eXx8KHU/InZpc2libGUiOiJoaWRkZW4iKSkpOmMuem9vbT0xLG49cjtuJiZuLl9uZXh0OyluPW4uX25leHQ7Xz1uZXcgZ3QodCwidHJhbnNmb3JtIiwwLDAsbnVsbCwyKSx0aGlzLl9saW5rQ1NTUChfLG51bGwsbiksXy5zZXRSYXRpbz1DdD9xdDpWdCxfLmRhdGE9dGhpcy5fdHJhbnNmb3JtfHxVdCh0LEIsITApLF8udHdlZW49aSxfLnByPS0xLGYucG9wKCl9aWYocCl7Zm9yKDtyOyl7Zm9yKGw9ci5fbmV4dCxuPWE7biYmbi5wcj5yLnByOyluPW4uX25leHQ7KHIuX3ByZXY9bj9uLl9wcmV2Om8pP3IuX3ByZXYuX25leHQ9cjphPXIsKHIuX25leHQ9bik/bi5fcHJldj1yOm89cixyPWx9dGhpcy5fZmlyc3RQVD1hfXJldHVybiEwfSx0LnBhcnNlPWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByLG4sYSxvLGwsaCxfLHUsYyxmLHA9dC5zdHlsZTtmb3IociBpbiBlKWg9ZVtyXSwobj1kW3JdKT9pPW4ucGFyc2UodCxoLHIsdGhpcyxpLHMsZSk6KGw9SCh0LHIsQikrIiIsYz0ic3RyaW5nIj09dHlwZW9mIGgsImNvbG9yIj09PXJ8fCJmaWxsIj09PXJ8fCJzdHJva2UiPT09cnx8LTEhPT1yLmluZGV4T2YoIkNvbG9yIil8fGMmJngudGVzdChoKT8oY3x8KGg9KDM8KGg9dXQoaCkpLmxlbmd0aD8icmdiYSgiOiJyZ2IoIikraC5qb2luKCIsIikrIikiKSxpPXl0KHAscixsLGgsITAsInRyYW5zcGFyZW50IixpLDAscykpOiFjfHwtMT09PWguaW5kZXhPZigiICIpJiYtMT09PWguaW5kZXhPZigiLCIpPyhfPShhPXBhcnNlRmxvYXQobCkpfHwwPT09YT9sLnN1YnN0cigoYSsiIikubGVuZ3RoKToiIiwoIiI9PT1sfHwiYXV0byI9PT1sKSYmKF89IndpZHRoIj09PXJ8fCJoZWlnaHQiPT09cj8oYT1ydCh0LHIsQiksInB4Iik6ImxlZnQiPT09cnx8InRvcCI9PT1yPyhhPUoodCxyLEIpLCJweCIpOihhPSJvcGFjaXR5IiE9PXI/MDoxLCIiKSksIiI9PT0odT0oZj1jJiYiPSI9PT1oLmNoYXJBdCgxKSk/KG89cGFyc2VJbnQoaC5jaGFyQXQoMCkrIjEiLDEwKSxoPWguc3Vic3RyKDIpLG8qPXBhcnNlRmxvYXQoaCksaC5yZXBsYWNlKFMsIiIpKToobz1wYXJzZUZsb2F0KGgpLGM/aC5yZXBsYWNlKFMsIiIpOiIiKSkmJih1PXIgaW4gdz93W3JdOl8pLGg9b3x8MD09PW8/KGY/bythOm8pK3U6ZVtyXSxfIT09dSYmIiIhPT11JiYob3x8MD09PW8pJiZhJiYoYT1LKHQscixhLF8pLCIlIj09PXU/KGEvPUsodCxyLDEwMCwiJSIpLzEwMCwhMCE9PWUuc3RyaWN0VW5pdHMmJihsPWErIiUiKSk6ImVtIj09PXV8fCJyZW0iPT09dT9hLz1LKHQsciwxLHUpOiJweCIhPT11JiYobz1LKHQscixvLHUpLHU9InB4IiksZiYmKG98fDA9PT1vKSYmKGg9bythK3UpKSxmJiYobys9YSksIWEmJjAhPT1hfHwhbyYmMCE9PW8/dm9pZCAwIT09cFtyXSYmKGh8fCJOYU4iIT1oKyIiJiZudWxsIT1oKT8oaT1uZXcgZ3QocCxyLG98fGF8fDAsMCxpLC0xLHIsITEsMCxsLGgpKS54czA9Im5vbmUiIT09aHx8ImRpc3BsYXkiIT09ciYmLTE9PT1yLmluZGV4T2YoIlN0eWxlIik/aDpsOlcoImludmFsaWQgIityKyIgdHdlZW4gdmFsdWU6ICIrZVtyXSk6KGk9bmV3IGd0KHAscixhLG8tYSxpLDAsciwhMSE9PWsmJigicHgiPT09dXx8InpJbmRleCI9PT1yKSwwLGwsaCkpLnhzMD11KTppPXl0KHAscixsLGgsITAsbnVsbCxpLDAscykpLHMmJmkmJiFpLnBsdWdpbiYmKGkucGx1Z2luPXMpO3JldHVybiBpfSx0LnNldFJhdGlvPWZ1bmN0aW9uKHQpe3ZhciBlLGkscyxyPXRoaXMuX2ZpcnN0UFQ7aWYoMSE9PXR8fHRoaXMuX3R3ZWVuLl90aW1lIT09dGhpcy5fdHdlZW4uX2R1cmF0aW9uJiYwIT09dGhpcy5fdHdlZW4uX3RpbWUpaWYodHx8dGhpcy5fdHdlZW4uX3RpbWUhPT10aGlzLl90d2Vlbi5fZHVyYXRpb24mJjAhPT10aGlzLl90d2Vlbi5fdGltZXx8LTFlLTY9PT10aGlzLl90d2Vlbi5fcmF3UHJldlRpbWUpZm9yKDtyOyl7aWYoZT1yLmMqdCtyLnMsci5yP2U9TWF0aC5yb3VuZChlKTplPDFlLTYmJi0xZS02PGUmJihlPTApLHIudHlwZSlpZigxPT09ci50eXBlKWlmKDI9PT0ocz1yLmwpKXIudFtyLnBdPXIueHMwK2Urci54czErci54bjErci54czI7ZWxzZSBpZigzPT09cylyLnRbci5wXT1yLnhzMCtlK3IueHMxK3IueG4xK3IueHMyK3IueG4yK3IueHMzO2Vsc2UgaWYoND09PXMpci50W3IucF09ci54czArZStyLnhzMStyLnhuMStyLnhzMityLnhuMityLnhzMytyLnhuMytyLnhzNDtlbHNlIGlmKDU9PT1zKXIudFtyLnBdPXIueHMwK2Urci54czErci54bjErci54czIrci54bjIrci54czMrci54bjMrci54czQrci54bjQrci54czU7ZWxzZXtmb3IoaT1yLnhzMCtlK3IueHMxLHM9MTtyLmw+cztzKyspaSs9clsieG4iK3NdK3JbInhzIisocysxKV07ci50W3IucF09aX1lbHNlLTE9PT1yLnR5cGU/ci50W3IucF09ci54czA6ci5zZXRSYXRpbyYmci5zZXRSYXRpbyh0KTtlbHNlIHIudFtyLnBdPWUrci54czA7cj1yLl9uZXh0fWVsc2UgZm9yKDtyOykyIT09ci50eXBlP3IudFtyLnBdPXIuYjpyLnNldFJhdGlvKHQpLHI9ci5fbmV4dDtlbHNlIGZvcig7cjspe2lmKDIhPT1yLnR5cGUpaWYoci5yJiYtMSE9PXIudHlwZSlpZihlPU1hdGgucm91bmQoci5zK3IuYyksci50eXBlKXtpZigxPT09ci50eXBlKXtmb3Iocz1yLmwsaT1yLnhzMCtlK3IueHMxLHM9MTtyLmw+cztzKyspaSs9clsieG4iK3NdK3JbInhzIisocysxKV07ci50W3IucF09aX19ZWxzZSByLnRbci5wXT1lK3IueHMwO2Vsc2Ugci50W3IucF09ci5lO2Vsc2Ugci5zZXRSYXRpbyh0KTtyPXIuX25leHR9fSx0Ll9lbmFibGVUcmFuc2Zvcm1zPWZ1bmN0aW9uKHQpe3RoaXMuX3RyYW5zZm9ybT10aGlzLl90cmFuc2Zvcm18fFV0KHRoaXMuX3RhcmdldCxCLCEwKSx0aGlzLl90cmFuc2Zvcm1UeXBlPXRoaXMuX3RyYW5zZm9ybS5zdmcmJlB0fHwhdCYmMyE9PXRoaXMuX3RyYW5zZm9ybVR5cGU/MjozfTt2YXIgUXQ9ZnVuY3Rpb24oKXt0aGlzLnRbdGhpcy5wXT10aGlzLmUsdGhpcy5kYXRhLl9saW5rQ1NTUCh0aGlzLHRoaXMuX25leHQsbnVsbCwhMCl9O3QuX2FkZExhenlTZXQ9ZnVuY3Rpb24odCxlLGkpe3ZhciBzPXRoaXMuX2ZpcnN0UFQ9bmV3IGd0KHQsZSwwLDAsdGhpcy5fZmlyc3RQVCwyKTtzLmU9aSxzLnNldFJhdGlvPVF0LHMuZGF0YT10aGlzfSx0Ll9saW5rQ1NTUD1mdW5jdGlvbih0LGUsaSxzKXtyZXR1cm4gdCYmKGUmJihlLl9wcmV2PXQpLHQuX25leHQmJih0Ll9uZXh0Ll9wcmV2PXQuX3ByZXYpLHQuX3ByZXY/dC5fcHJldi5fbmV4dD10Ll9uZXh0OnRoaXMuX2ZpcnN0UFQ9PT10JiYodGhpcy5fZmlyc3RQVD10Ll9uZXh0LHM9ITApLGk/aS5fbmV4dD10OnN8fG51bGwhPT10aGlzLl9maXJzdFBUfHwodGhpcy5fZmlyc3RQVD10KSx0Ll9uZXh0PWUsdC5fcHJldj1pKSx0fSx0Ll9raWxsPWZ1bmN0aW9uKHQpe3ZhciBlLGkscyxyPXQ7aWYodC5hdXRvQWxwaGF8fHQuYWxwaGEpe2ZvcihpIGluIHI9e30sdClyW2ldPXRbaV07ci5vcGFjaXR5PTEsci5hdXRvQWxwaGEmJihyLnZpc2liaWxpdHk9MSl9cmV0dXJuIHQuY2xhc3NOYW1lJiYoZT10aGlzLl9jbGFzc05hbWVQVCkmJigocz1lLnhmaXJzdCkmJnMuX3ByZXY/dGhpcy5fbGlua0NTU1Aocy5fcHJldixlLl9uZXh0LHMuX3ByZXYuX3ByZXYpOnM9PT10aGlzLl9maXJzdFBUJiYodGhpcy5fZmlyc3RQVD1lLl9uZXh0KSxlLl9uZXh0JiZ0aGlzLl9saW5rQ1NTUChlLl9uZXh0LGUuX25leHQuX25leHQscy5fcHJldiksdGhpcy5fY2xhc3NOYW1lUFQ9bnVsbCksbi5wcm90b3R5cGUuX2tpbGwuY2FsbCh0aGlzLHIpfTt2YXIgSHQ9ZnVuY3Rpb24odCxlLGkpe3ZhciBzLHIsbixhO2lmKHQuc2xpY2UpZm9yKHI9dC5sZW5ndGg7LTE8LS1yOylIdCh0W3JdLGUsaSk7ZWxzZSBmb3Iocj0ocz10LmNoaWxkTm9kZXMpLmxlbmd0aDstMTwtLXI7KWE9KG49c1tyXSkudHlwZSxuLnN0eWxlJiYoZS5wdXNoKHR0KG4pKSxpJiZpLnB1c2gobikpLDEhPT1hJiY5IT09YSYmMTEhPT1hfHwhbi5jaGlsZE5vZGVzLmxlbmd0aHx8SHQobixlLGkpfTtyZXR1cm4gai5jYXNjYWRlVG89ZnVuY3Rpb24odCxlLGkpe3ZhciBzLHIsbixhLG89WS50byh0LGUsaSksbD1bb10saD1bXSxfPVtdLHU9W10sYz1ZLl9pbnRlcm5hbHMucmVzZXJ2ZWRQcm9wcztmb3IodD1vLl90YXJnZXRzfHxvLnRhcmdldCxIdCh0LGgsdSksby5yZW5kZXIoZSwhMCwhMCksSHQodCxfKSxvLnJlbmRlcigwLCEwLCEwKSxvLl9lbmFibGVkKCEwKSxzPXUubGVuZ3RoOy0xPC0tczspaWYoKHI9ZXQodVtzXSxoW3NdLF9bc10pKS5maXJzdE1QVCl7Zm9yKG4gaW4gcj1yLmRpZnMsaSljW25dJiYocltuXT1pW25dKTtmb3IobiBpbiBhPXt9LHIpYVtuXT1oW3NdW25dO2wucHVzaChZLmZyb21Ubyh1W3NdLGUsYSxyKSl9cmV0dXJuIGx9LG4uYWN0aXZhdGUoW2pdKSxqfSwhMCksdD1fZ3NTY29wZS5fZ3NEZWZpbmUucGx1Z2luKHtwcm9wTmFtZToicm91bmRQcm9wcyIsdmVyc2lvbjoiMS41Iixwcmlvcml0eTotMSxBUEk6Mixpbml0OmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5fdHdlZW49aSwhMH19KSxsPWZ1bmN0aW9uKHQpe2Zvcig7dDspdC5mfHx0LmJsb2J8fCh0LnI9MSksdD10Ll9uZXh0fSwoZT10LnByb3RvdHlwZSkuX29uSW5pdEFsbFByb3BzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0LGUsaSxzPXRoaXMuX3R3ZWVuLHI9cy52YXJzLnJvdW5kUHJvcHMuam9pbj9zLnZhcnMucm91bmRQcm9wczpzLnZhcnMucm91bmRQcm9wcy5zcGxpdCgiLCIpLG49ci5sZW5ndGgsYT17fSxvPXMuX3Byb3BMb29rdXAucm91bmRQcm9wczstMTwtLW47KWFbcltuXV09MTtmb3Iobj1yLmxlbmd0aDstMTwtLW47KWZvcih0PXJbbl0sZT1zLl9maXJzdFBUO2U7KWk9ZS5fbmV4dCxlLnBnP2UudC5fcm91bmRQcm9wcyhhLCEwKTplLm49PT10JiYoMj09PWUuZiYmZS50P2woZS50Ll9maXJzdFBUKToodGhpcy5fYWRkKGUudCx0LGUucyxlLmMpLGkmJihpLl9wcmV2PWUuX3ByZXYpLGUuX3ByZXY/ZS5fcHJldi5fbmV4dD1pOnMuX2ZpcnN0UFQ9PT1lJiYocy5fZmlyc3RQVD1pKSxlLl9uZXh0PWUuX3ByZXY9bnVsbCxzLl9wcm9wTG9va3VwW3RdPW8pKSxlPWk7cmV0dXJuITF9LGUuX2FkZD1mdW5jdGlvbih0LGUsaSxzKXt0aGlzLl9hZGRUd2Vlbih0LGUsaSxpK3MsZSwhMCksdGhpcy5fb3ZlcndyaXRlUHJvcHMucHVzaChlKX0sX2dzU2NvcGUuX2dzRGVmaW5lLnBsdWdpbih7cHJvcE5hbWU6ImF0dHIiLEFQSToyLHZlcnNpb246IjAuNS4wIixpbml0OmZ1bmN0aW9uKHQsZSl7dmFyIGk7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQuc2V0QXR0cmlidXRlKXJldHVybiExO2ZvcihpIGluIGUpdGhpcy5fYWRkVHdlZW4odCwic2V0QXR0cmlidXRlIix0LmdldEF0dHJpYnV0ZShpKSsiIixlW2ldKyIiLGksITEsaSksdGhpcy5fb3ZlcndyaXRlUHJvcHMucHVzaChpKTtyZXR1cm4hMH19KSxfZ3NTY29wZS5fZ3NEZWZpbmUucGx1Z2luKHtwcm9wTmFtZToiZGlyZWN0aW9uYWxSb3RhdGlvbiIsdmVyc2lvbjoiMC4yLjEiLEFQSToyLGluaXQ6ZnVuY3Rpb24odCxlKXsib2JqZWN0IiE9dHlwZW9mIGUmJihlPXtyb3RhdGlvbjplfSksdGhpcy5maW5hbHM9e307dmFyIGkscyxyLG4sYSxvPSEwPT09ZS51c2VSYWRpYW5zPzIqTWF0aC5QSTozNjA7Zm9yKGkgaW4gZSkidXNlUmFkaWFucyIhPT1pJiYocz0oYT0oZVtpXSsiIikuc3BsaXQoIl8iKSlbMF0scj1wYXJzZUZsb2F0KCJmdW5jdGlvbiIhPXR5cGVvZiB0W2ldP3RbaV06dFtpLmluZGV4T2YoInNldCIpfHwiZnVuY3Rpb24iIT10eXBlb2YgdFsiZ2V0IitpLnN1YnN0cigzKV0/aToiZ2V0IitpLnN1YnN0cigzKV0oKSksbj0odGhpcy5maW5hbHNbaV09InN0cmluZyI9PXR5cGVvZiBzJiYiPSI9PT1zLmNoYXJBdCgxKT9yK3BhcnNlSW50KHMuY2hhckF0KDApKyIxIiwxMCkqTnVtYmVyKHMuc3Vic3RyKDIpKTpOdW1iZXIocyl8fDApLXIsYS5sZW5ndGgmJigtMSE9PShzPWEuam9pbigiXyIpKS5pbmRleE9mKCJzaG9ydCIpJiYoKG4lPW8pIT09biUoby8yKSYmKG49bjwwP24rbzpuLW8pKSwtMSE9PXMuaW5kZXhPZigiX2N3IikmJm48MD9uPShuKzk5OTk5OTk5OTkqbyklby0oMHxuL28pKm86LTEhPT1zLmluZGV4T2YoImNjdyIpJiYwPG4mJihuPShuLTk5OTk5OTk5OTkqbyklby0oMHxuL28pKm8pKSwoMWUtNjxufHxuPC0xZS02KSYmKHRoaXMuX2FkZFR3ZWVuKHQsaSxyLHIrbixpKSx0aGlzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKGkpKSk7cmV0dXJuITB9LHNldDpmdW5jdGlvbih0KXt2YXIgZTtpZigxIT09dCl0aGlzLl9zdXBlci5zZXRSYXRpby5jYWxsKHRoaXMsdCk7ZWxzZSBmb3IoZT10aGlzLl9maXJzdFBUO2U7KWUuZj9lLnRbZS5wXSh0aGlzLmZpbmFsc1tlLnBdKTplLnRbZS5wXT10aGlzLmZpbmFsc1tlLnBdLGU9ZS5fbmV4dH19KS5fYXV0b0NTUz0hMCxfZ3NTY29wZS5fZ3NEZWZpbmUoImVhc2luZy5CYWNrIixbImVhc2luZy5FYXNlIl0sZnVuY3Rpb24obSl7dmFyIGUsaSx0LHM9X2dzU2NvcGUuR3JlZW5Tb2NrR2xvYmFsc3x8X2dzU2NvcGUscj1zLmNvbS5ncmVlbnNvY2ssbj0yKk1hdGguUEksYT1NYXRoLlBJLzIsbz1yLl9jbGFzcyxsPWZ1bmN0aW9uKHQsZSl7dmFyIGk9bygiZWFzaW5nLiIrdCxmdW5jdGlvbigpe30sITApLHM9aS5wcm90b3R5cGU9bmV3IG07cmV0dXJuIHMuY29uc3RydWN0b3I9aSxzLmdldFJhdGlvPWUsaX0saD1tLnJlZ2lzdGVyfHxmdW5jdGlvbigpe30sXz1mdW5jdGlvbih0LGUsaSxzKXt2YXIgcj1vKCJlYXNpbmcuIit0LHtlYXNlT3V0Om5ldyBlLGVhc2VJbjpuZXcgaSxlYXNlSW5PdXQ6bmV3IHN9LCEwKTtyZXR1cm4gaChyLHQpLHJ9LGc9ZnVuY3Rpb24odCxlLGkpe3RoaXMudD10LHRoaXMudj1lLGkmJigoKHRoaXMubmV4dD1pKS5wcmV2PXRoaXMpLmM9aS52LWUsdGhpcy5nYXA9aS50LXQpfSx1PWZ1bmN0aW9uKHQsZSl7dmFyIGk9bygiZWFzaW5nLiIrdCxmdW5jdGlvbih0KXt0aGlzLl9wMT10fHwwPT09dD90OjEuNzAxNTgsdGhpcy5fcDI9MS41MjUqdGhpcy5fcDF9LCEwKSxzPWkucHJvdG90eXBlPW5ldyBtO3JldHVybiBzLmNvbnN0cnVjdG9yPWkscy5nZXRSYXRpbz1lLHMuY29uZmlnPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaSh0KX0saX0sYz1fKCJCYWNrIix1KCJCYWNrT3V0IixmdW5jdGlvbih0KXtyZXR1cm4odC09MSkqdCooKHRoaXMuX3AxKzEpKnQrdGhpcy5fcDEpKzF9KSx1KCJCYWNrSW4iLGZ1bmN0aW9uKHQpe3JldHVybiB0KnQqKCh0aGlzLl9wMSsxKSp0LXRoaXMuX3AxKX0pLHUoIkJhY2tJbk91dCIsZnVuY3Rpb24odCl7cmV0dXJuKHQqPTIpPDE/LjUqdCp0KigodGhpcy5fcDIrMSkqdC10aGlzLl9wMik6LjUqKCh0LT0yKSp0KigodGhpcy5fcDIrMSkqdCt0aGlzLl9wMikrMil9KSksZj1vKCJlYXNpbmcuU2xvd01vIixmdW5jdGlvbih0LGUsaSl7ZT1lfHwwPT09ZT9lOi43LG51bGw9PXQ/dD0uNzoxPHQmJih0PTEpLHRoaXMuX3A9MSE9PXQ/ZTowLHRoaXMuX3AxPSgxLXQpLzIsdGhpcy5fcDI9dCx0aGlzLl9wMz10aGlzLl9wMSt0aGlzLl9wMix0aGlzLl9jYWxjRW5kPSEwPT09aX0sITApLHA9Zi5wcm90b3R5cGU9bmV3IG07cmV0dXJuIHAuY29uc3RydWN0b3I9ZixwLmdldFJhdGlvPWZ1bmN0aW9uKHQpe3ZhciBlPXQrKC41LXQpKnRoaXMuX3A7cmV0dXJuIHRoaXMuX3AxPnQ/dGhpcy5fY2FsY0VuZD8xLSh0PTEtdC90aGlzLl9wMSkqdDplLSh0PTEtdC90aGlzLl9wMSkqdCp0KnQqZTp0PnRoaXMuX3AzP3RoaXMuX2NhbGNFbmQ/MS0odD0odC10aGlzLl9wMykvdGhpcy5fcDEpKnQ6ZSsodC1lKSoodD0odC10aGlzLl9wMykvdGhpcy5fcDEpKnQqdCp0OnRoaXMuX2NhbGNFbmQ/MTplfSxmLmVhc2U9bmV3IGYoLjcsLjcpLHAuY29uZmlnPWYuY29uZmlnPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gbmV3IGYodCxlLGkpfSwocD0oZT1vKCJlYXNpbmcuU3RlcHBlZEVhc2UiLGZ1bmN0aW9uKHQpe3Q9dHx8MSx0aGlzLl9wMT0xL3QsdGhpcy5fcDI9dCsxfSwhMCkpLnByb3RvdHlwZT1uZXcgbSkuY29uc3RydWN0b3I9ZSxwLmdldFJhdGlvPWZ1bmN0aW9uKHQpe3JldHVybiB0PDA/dD0wOjE8PXQmJih0PS45OTk5OTk5OTkpLCh0aGlzLl9wMip0Pj4wKSp0aGlzLl9wMX0scC5jb25maWc9ZS5jb25maWc9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBlKHQpfSwocD0oaT1vKCJlYXNpbmcuUm91Z2hFYXNlIixmdW5jdGlvbih0KXtmb3IodmFyIGUsaSxzLHIsbixhLG89KHQ9dHx8e30pLnRhcGVyfHwibm9uZSIsbD1bXSxoPTAsXz0wfCh0LnBvaW50c3x8MjApLHU9XyxjPSExIT09dC5yYW5kb21pemUsZj0hMD09PXQuY2xhbXAscD10LnRlbXBsYXRlIGluc3RhbmNlb2YgbT90LnRlbXBsYXRlOm51bGwsZD0ibnVtYmVyIj09dHlwZW9mIHQuc3RyZW5ndGg/LjQqdC5zdHJlbmd0aDouNDstMTwtLXU7KWU9Yz9NYXRoLnJhbmRvbSgpOjEvXyp1LGk9cD9wLmdldFJhdGlvKGUpOmUscz0ibm9uZSI9PT1vP2Q6Im91dCI9PT1vPyhyPTEtZSkqcipkOiJpbiI9PT1vP2UqZSpkOi41KihyPWU8LjU/MiplOjIqKDEtZSkpKnIqZCxjP2krPU1hdGgucmFuZG9tKCkqcy0uNSpzOnUlMj9pKz0uNSpzOmktPS41KnMsZiYmKDE8aT9pPTE6aTwwJiYoaT0wKSksbFtoKytdPXt4OmUseTppfTtmb3IobC5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQueC1lLnh9KSxhPW5ldyBnKDEsMSxudWxsKSx1PV87LTE8LS11OyluPWxbdV0sYT1uZXcgZyhuLngsbi55LGEpO3RoaXMuX3ByZXY9bmV3IGcoMCwwLDAhPT1hLnQ/YTphLm5leHQpfSwhMCkpLnByb3RvdHlwZT1uZXcgbSkuY29uc3RydWN0b3I9aSxwLmdldFJhdGlvPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3ByZXY7aWYodD5lLnQpe2Zvcig7ZS5uZXh0JiZ0Pj1lLnQ7KWU9ZS5uZXh0O2U9ZS5wcmV2fWVsc2UgZm9yKDtlLnByZXYmJmUudD49dDspZT1lLnByZXY7cmV0dXJuKHRoaXMuX3ByZXY9ZSkudisodC1lLnQpL2UuZ2FwKmUuY30scC5jb25maWc9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpKHQpfSxpLmVhc2U9bmV3IGksXygiQm91bmNlIixsKCJCb3VuY2VPdXQiLGZ1bmN0aW9uKHQpe3JldHVybiB0PDEvMi43NT83LjU2MjUqdCp0OnQ8Mi8yLjc1PzcuNTYyNSoodC09MS41LzIuNzUpKnQrLjc1OnQ8Mi41LzIuNzU/Ny41NjI1Kih0LT0yLjI1LzIuNzUpKnQrLjkzNzU6Ny41NjI1Kih0LT0yLjYyNS8yLjc1KSp0Ky45ODQzNzV9KSxsKCJCb3VuY2VJbiIsZnVuY3Rpb24odCl7cmV0dXJuIDEvMi43NT4odD0xLXQpPzEtNy41NjI1KnQqdDp0PDIvMi43NT8xLSg3LjU2MjUqKHQtPTEuNS8yLjc1KSp0Ky43NSk6dDwyLjUvMi43NT8xLSg3LjU2MjUqKHQtPTIuMjUvMi43NSkqdCsuOTM3NSk6MS0oNy41NjI1Kih0LT0yLjYyNS8yLjc1KSp0Ky45ODQzNzUpfSksbCgiQm91bmNlSW5PdXQiLGZ1bmN0aW9uKHQpe3ZhciBlPXQ8LjU7cmV0dXJuIHQ9KHQ9ZT8xLTIqdDoyKnQtMSk8MS8yLjc1PzcuNTYyNSp0KnQ6dDwyLzIuNzU/Ny41NjI1Kih0LT0xLjUvMi43NSkqdCsuNzU6dDwyLjUvMi43NT83LjU2MjUqKHQtPTIuMjUvMi43NSkqdCsuOTM3NTo3LjU2MjUqKHQtPTIuNjI1LzIuNzUpKnQrLjk4NDM3NSxlPy41KigxLXQpOi41KnQrLjV9KSksXygiQ2lyYyIsbCgiQ2lyY091dCIsZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguc3FydCgxLSh0LT0xKSp0KX0pLGwoIkNpcmNJbiIsZnVuY3Rpb24odCl7cmV0dXJuLShNYXRoLnNxcnQoMS10KnQpLTEpfSksbCgiQ2lyY0luT3V0IixmdW5jdGlvbih0KXtyZXR1cm4odCo9Mik8MT8tLjUqKE1hdGguc3FydCgxLXQqdCktMSk6LjUqKE1hdGguc3FydCgxLSh0LT0yKSp0KSsxKX0pKSxfKCJFbGFzdGljIiwodD1mdW5jdGlvbih0LGUsaSl7dmFyIHM9bygiZWFzaW5nLiIrdCxmdW5jdGlvbih0LGUpe3RoaXMuX3AxPTE8PXQ/dDoxLHRoaXMuX3AyPShlfHxpKS8odDwxP3Q6MSksdGhpcy5fcDM9dGhpcy5fcDIvbiooTWF0aC5hc2luKDEvdGhpcy5fcDEpfHwwKSx0aGlzLl9wMj1uL3RoaXMuX3AyfSwhMCkscj1zLnByb3RvdHlwZT1uZXcgbTtyZXR1cm4gci5jb25zdHJ1Y3Rvcj1zLHIuZ2V0UmF0aW89ZSxyLmNvbmZpZz1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgcyh0LGUpfSxzfSkoIkVsYXN0aWNPdXQiLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wMSpNYXRoLnBvdygyLC0xMCp0KSpNYXRoLnNpbigodC10aGlzLl9wMykqdGhpcy5fcDIpKzF9LC4zKSx0KCJFbGFzdGljSW4iLGZ1bmN0aW9uKHQpe3JldHVybi10aGlzLl9wMSpNYXRoLnBvdygyLDEwKih0LT0xKSkqTWF0aC5zaW4oKHQtdGhpcy5fcDMpKnRoaXMuX3AyKX0sLjMpLHQoIkVsYXN0aWNJbk91dCIsZnVuY3Rpb24odCl7cmV0dXJuKHQqPTIpPDE/LS41KnRoaXMuX3AxKk1hdGgucG93KDIsMTAqKHQtPTEpKSpNYXRoLnNpbigodC10aGlzLl9wMykqdGhpcy5fcDIpOi41KnRoaXMuX3AxKk1hdGgucG93KDIsLTEwKih0LT0xKSkqTWF0aC5zaW4oKHQtdGhpcy5fcDMpKnRoaXMuX3AyKSsxfSwuNDUpKSxfKCJFeHBvIixsKCJFeHBvT3V0IixmdW5jdGlvbih0KXtyZXR1cm4gMS1NYXRoLnBvdygyLC0xMCp0KX0pLGwoIkV4cG9JbiIsZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucG93KDIsMTAqKHQtMSkpLS4wMDF9KSxsKCJFeHBvSW5PdXQiLGZ1bmN0aW9uKHQpe3JldHVybih0Kj0yKTwxPy41Kk1hdGgucG93KDIsMTAqKHQtMSkpOi41KigyLU1hdGgucG93KDIsLTEwKih0LTEpKSl9KSksXygiU2luZSIsbCgiU2luZU91dCIsZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguc2luKHQqYSl9KSxsKCJTaW5lSW4iLGZ1bmN0aW9uKHQpe3JldHVybiAxLU1hdGguY29zKHQqYSl9KSxsKCJTaW5lSW5PdXQiLGZ1bmN0aW9uKHQpe3JldHVybi0uNSooTWF0aC5jb3MoTWF0aC5QSSp0KS0xKX0pKSxvKCJlYXNpbmcuRWFzZUxvb2t1cCIse2ZpbmQ6ZnVuY3Rpb24odCl7cmV0dXJuIG0ubWFwW3RdfX0sITApLGgocy5TbG93TW8sIlNsb3dNbyIsImVhc2UsIiksaChpLCJSb3VnaEVhc2UiLCJlYXNlLCIpLGgoZSwiU3RlcHBlZEVhc2UiLCJlYXNlLCIpLGN9LCEwKX0pLF9nc1Njb3BlLl9nc0RlZmluZSYmX2dzU2NvcGUuX2dzUXVldWUucG9wKCkoKSxmdW5jdGlvbihmLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZSxpLHA9Zi5HcmVlblNvY2tHbG9iYWxzPWYuR3JlZW5Tb2NrR2xvYmFsc3x8ZjtpZighcC5Ud2VlbkxpdGUpe3ZhciBzLHIsbixkLG0sZz1mdW5jdGlvbih0KXt2YXIgZSxpPXQuc3BsaXQoIi4iKSxzPXA7Zm9yKGU9MDtpLmxlbmd0aD5lO2UrKylzW2lbZV1dPXM9c1tpW2VdXXx8e307cmV0dXJuIHN9LHU9ZygiY29tLmdyZWVuc29jayIpLHY9MWUtMTAsbD1mdW5jdGlvbih0KXt2YXIgZSxpPVtdLHM9dC5sZW5ndGg7Zm9yKGU9MDtlIT09cztpLnB1c2godFtlKytdKSk7cmV0dXJuIGl9LHk9ZnVuY3Rpb24oKXt9LFQ9KGU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxpPWUuY2FsbChbXSksZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXQmJih0IGluc3RhbmNlb2YgQXJyYXl8fCJvYmplY3QiPT10eXBlb2YgdCYmISF0LnB1c2gmJmUuY2FsbCh0KT09PWkpfSkseD17fSxiPWZ1bmN0aW9uKGwsaCxfLHUpe3RoaXMuc2M9eFtsXT94W2xdLnNjOltdLCh4W2xdPXRoaXMpLmdzQ2xhc3M9bnVsbCx0aGlzLmZ1bmM9Xzt2YXIgYz1bXTt0aGlzLmNoZWNrPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxpLHMscixuLGE9aC5sZW5ndGgsbz1hOy0xPC0tYTspKGU9eFtoW2FdXXx8bmV3IGIoaFthXSxbXSkpLmdzQ2xhc3M/KGNbYV09ZS5nc0NsYXNzLG8tLSk6dCYmZS5zYy5wdXNoKHRoaXMpO2lmKDA9PT1vJiZfKWZvcihzPShpPSgiY29tLmdyZWVuc29jay4iK2wpLnNwbGl0KCIuIikpLnBvcCgpLHI9ZyhpLmpvaW4oIi4iKSlbc109dGhpcy5nc0NsYXNzPV8uYXBwbHkoXyxjKSx1JiYocFtzXT1yLCEobj0idW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMpJiYiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZSgoZi5HcmVlblNvY2tBTURQYXRoP2YuR3JlZW5Tb2NrQU1EUGF0aCsiLyI6IiIpK2wuc3BsaXQoIi4iKS5wb3AoKSxbXSxmdW5jdGlvbigpe3JldHVybiByfSk6IlR3ZWVuTWF4Ij09PWwmJm4mJihtb2R1bGUuZXhwb3J0cz1yKSksYT0wO3RoaXMuc2MubGVuZ3RoPmE7YSsrKXRoaXMuc2NbYV0uY2hlY2soKX0sdGhpcy5jaGVjayghMCl9LGE9Zi5fZ3NEZWZpbmU9ZnVuY3Rpb24odCxlLGkscyl7cmV0dXJuIG5ldyBiKHQsZSxpLHMpfSxjPXUuX2NsYXNzPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gZT1lfHxmdW5jdGlvbigpe30sYSh0LFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGV9LGkpLGV9O2EuZ2xvYmFscz1wO3ZhciBvPVswLDAsMSwxXSxoPVtdLF89YygiZWFzaW5nLkVhc2UiLGZ1bmN0aW9uKHQsZSxpLHMpe3RoaXMuX2Z1bmM9dCx0aGlzLl90eXBlPWl8fDAsdGhpcy5fcG93ZXI9c3x8MCx0aGlzLl9wYXJhbXM9ZT9vLmNvbmNhdChlKTpvfSwhMCksdz1fLm1hcD17fSxQPV8ucmVnaXN0ZXI9ZnVuY3Rpb24odCxlLGkscyl7Zm9yKHZhciByLG4sYSxvLGw9ZS5zcGxpdCgiLCIpLGg9bC5sZW5ndGgsXz0oaXx8ImVhc2VJbixlYXNlT3V0LGVhc2VJbk91dCIpLnNwbGl0KCIsIik7LTE8LS1oOylmb3Iobj1sW2hdLHI9cz9jKCJlYXNpbmcuIituLG51bGwsITApOnUuZWFzaW5nW25dfHx7fSxhPV8ubGVuZ3RoOy0xPC0tYTspbz1fW2FdLHdbbisiLiIrb109d1tvK25dPXJbb109dC5nZXRSYXRpbz90OnRbb118fG5ldyB0fTtmb3IoKG49Xy5wcm90b3R5cGUpLl9jYWxjRW5kPSExLG4uZ2V0UmF0aW89ZnVuY3Rpb24odCl7aWYodGhpcy5fZnVuYylyZXR1cm4gdGhpcy5fcGFyYW1zWzBdPXQsdGhpcy5fZnVuYy5hcHBseShudWxsLHRoaXMuX3BhcmFtcyk7dmFyIGU9dGhpcy5fdHlwZSxpPXRoaXMuX3Bvd2VyLHM9MT09PWU/MS10OjI9PT1lP3Q6dDwuNT8yKnQ6MiooMS10KTtyZXR1cm4gMT09PWk/cyo9czoyPT09aT9zKj1zKnM6Mz09PWk/cyo9cypzKnM6ND09PWkmJihzKj1zKnMqcypzKSwxPT09ZT8xLXM6Mj09PWU/czp0PC41P3MvMjoxLXMvMn0scj0ocz1bIkxpbmVhciIsIlF1YWQiLCJDdWJpYyIsIlF1YXJ0IiwiUXVpbnQsU3Ryb25nIl0pLmxlbmd0aDstMTwtLXI7KW49c1tyXSsiLFBvd2VyIityLFAobmV3IF8obnVsbCxudWxsLDEsciksbiwiZWFzZU91dCIsITApLFAobmV3IF8obnVsbCxudWxsLDIsciksbiwiZWFzZUluIisoMD09PXI/IixlYXNlTm9uZSI6IiIpKSxQKG5ldyBfKG51bGwsbnVsbCwzLHIpLG4sImVhc2VJbk91dCIpO3cubGluZWFyPXUuZWFzaW5nLkxpbmVhci5lYXNlSW4sdy5zd2luZz11LmVhc2luZy5RdWFkLmVhc2VJbk91dDt2YXIgTz1jKCJldmVudHMuRXZlbnREaXNwYXRjaGVyIixmdW5jdGlvbih0KXt0aGlzLl9saXN0ZW5lcnM9e30sdGhpcy5fZXZlbnRUYXJnZXQ9dHx8dGhpc30pOyhuPU8ucHJvdG90eXBlKS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKHQsZSxpLHMscil7cj1yfHwwO3ZhciBuLGEsbz10aGlzLl9saXN0ZW5lcnNbdF0sbD0wO2ZvcihudWxsPT1vJiYodGhpcy5fbGlzdGVuZXJzW3RdPW89W10pLGE9by5sZW5ndGg7LTE8LS1hOykobj1vW2FdKS5jPT09ZSYmbi5zPT09aT9vLnNwbGljZShhLDEpOjA9PT1sJiZyPm4ucHImJihsPWErMSk7by5zcGxpY2UobCwwLHtjOmUsczppLHVwOnMscHI6cn0pLHRoaXMhPT1kfHxtfHxkLndha2UoKX0sbi5yZW1vdmVFdmVudExpc3RlbmVyPWZ1bmN0aW9uKHQsZSl7dmFyIGkscz10aGlzLl9saXN0ZW5lcnNbdF07aWYocylmb3IoaT1zLmxlbmd0aDstMTwtLWk7KWlmKHNbaV0uYz09PWUpcmV0dXJuIHZvaWQgcy5zcGxpY2UoaSwxKX0sbi5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKHQpe3ZhciBlLGkscyxyPXRoaXMuX2xpc3RlbmVyc1t0XTtpZihyKWZvcihlPXIubGVuZ3RoLGk9dGhpcy5fZXZlbnRUYXJnZXQ7LTE8LS1lOykocz1yW2VdKSYmKHMudXA/cy5jLmNhbGwocy5zfHxpLHt0eXBlOnQsdGFyZ2V0Oml9KTpzLmMuY2FsbChzLnN8fGkpKX07dmFyIFM9Zi5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsaz1mLmNhbmNlbEFuaW1hdGlvbkZyYW1lLFI9RGF0ZS5ub3d8fGZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9LEE9UigpO2ZvcihyPShzPVsibXMiLCJtb3oiLCJ3ZWJraXQiLCJvIl0pLmxlbmd0aDstMTwtLXImJiFTOylTPWZbc1tyXSsiUmVxdWVzdEFuaW1hdGlvbkZyYW1lIl0saz1mW3Nbcl0rIkNhbmNlbEFuaW1hdGlvbkZyYW1lIl18fGZbc1tyXSsiQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lIl07YygiVGlja2VyIixmdW5jdGlvbih0LGUpe3ZhciByLG4sYSxvLGwsaD10aGlzLF89UigpLGk9ITEhPT1lJiZTLHU9NTAwLGM9MzMsZj1mdW5jdGlvbih0KXt2YXIgZSxpLHM9UigpLUE7dTxzJiYoXys9cy1jKSxBKz1zLGgudGltZT0oQS1fKS8xZTMsZT1oLnRpbWUtbCwoIXJ8fDA8ZXx8ITA9PT10KSYmKGguZnJhbWUrKyxsKz1lKyhvPD1lPy4wMDQ6by1lKSxpPSEwKSwhMCE9PXQmJihhPW4oZikpLGkmJmguZGlzcGF0Y2hFdmVudCgidGljayIpfTtPLmNhbGwoaCksaC50aW1lPWguZnJhbWU9MCxoLnRpY2s9ZnVuY3Rpb24oKXtmKCEwKX0saC5sYWdTbW9vdGhpbmc9ZnVuY3Rpb24odCxlKXt1PXR8fDFlMTAsYz1NYXRoLm1pbihlLHUsMCl9LGguc2xlZXA9ZnVuY3Rpb24oKXtudWxsIT1hJiYoaSYmaz9rKGEpOmNsZWFyVGltZW91dChhKSxuPXksYT1udWxsLGg9PT1kJiYobT0hMSkpfSxoLndha2U9ZnVuY3Rpb24oKXtudWxsIT09YT9oLnNsZWVwKCk6MTA8aC5mcmFtZSYmKEE9UigpLXUrNSksbj0wPT09cj95OmkmJlM/UzpmdW5jdGlvbih0KXtyZXR1cm4gc2V0VGltZW91dCh0LDB8MWUzKihsLWgudGltZSkrMSl9LGg9PT1kJiYobT0hMCksZigyKX0saC5mcHM9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KG89MS8oKHI9dCl8fDYwKSxsPXRoaXMudGltZStvLHZvaWQgaC53YWtlKCkpOnJ9LGgudXNlUkFGPWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhoLnNsZWVwKCksaT10LHZvaWQgaC5mcHMocikpOml9LGguZnBzKHQpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpJiZoLmZyYW1lPDUmJmgudXNlUkFGKCExKX0sMTUwMCl9KSwobj11LlRpY2tlci5wcm90b3R5cGU9bmV3IHUuZXZlbnRzLkV2ZW50RGlzcGF0Y2hlcikuY29uc3RydWN0b3I9dS5UaWNrZXI7dmFyIEM9YygiY29yZS5BbmltYXRpb24iLGZ1bmN0aW9uKHQsZSl7aWYodGhpcy52YXJzPWU9ZXx8e30sdGhpcy5fZHVyYXRpb249dGhpcy5fdG90YWxEdXJhdGlvbj10fHwwLHRoaXMuX2RlbGF5PU51bWJlcihlLmRlbGF5KXx8MCx0aGlzLl90aW1lU2NhbGU9MSx0aGlzLl9hY3RpdmU9ITA9PT1lLmltbWVkaWF0ZVJlbmRlcix0aGlzLmRhdGE9ZS5kYXRhLHRoaXMuX3JldmVyc2VkPSEwPT09ZS5yZXZlcnNlZCxHKXttfHxkLndha2UoKTt2YXIgaT10aGlzLnZhcnMudXNlRnJhbWVzP1o6RztpLmFkZCh0aGlzLGkuX3RpbWUpLHRoaXMudmFycy5wYXVzZWQmJnRoaXMucGF1c2VkKCEwKX19KTtkPUMudGlja2VyPW5ldyB1LlRpY2tlciwobj1DLnByb3RvdHlwZSkuX2RpcnR5PW4uX2djPW4uX2luaXR0ZWQ9bi5fcGF1c2VkPSExLG4uX3RvdGFsVGltZT1uLl90aW1lPTAsbi5fcmF3UHJldlRpbWU9LTEsbi5fbmV4dD1uLl9sYXN0PW4uX29uVXBkYXRlPW4uX3RpbWVsaW5lPW4udGltZWxpbmU9bnVsbCxuLl9wYXVzZWQ9ITE7dmFyIEQ9ZnVuY3Rpb24oKXttJiYyZTM8UigpLUEmJmQud2FrZSgpLHNldFRpbWVvdXQoRCwyZTMpfTtEKCksbi5wbGF5PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGwhPXQmJnRoaXMuc2Vlayh0LGUpLHRoaXMucmV2ZXJzZWQoITEpLnBhdXNlZCghMSl9LG4ucGF1c2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbCE9dCYmdGhpcy5zZWVrKHQsZSksdGhpcy5wYXVzZWQoITApfSxuLnJlc3VtZT1mdW5jdGlvbih0LGUpe3JldHVybiBudWxsIT10JiZ0aGlzLnNlZWsodCxlKSx0aGlzLnBhdXNlZCghMSl9LG4uc2Vlaz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRvdGFsVGltZShOdW1iZXIodCksITEhPT1lKX0sbi5yZXN0YXJ0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMucmV2ZXJzZWQoITEpLnBhdXNlZCghMSkudG90YWxUaW1lKHQ/LXRoaXMuX2RlbGF5OjAsITEhPT1lLCEwKX0sbi5yZXZlcnNlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGwhPXQmJnRoaXMuc2Vlayh0fHx0aGlzLnRvdGFsRHVyYXRpb24oKSxlKSx0aGlzLnJldmVyc2VkKCEwKS5wYXVzZWQoITEpfSxuLnJlbmRlcj1mdW5jdGlvbigpe30sbi5pbnZhbGlkYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lPTAsdGhpcy5faW5pdHRlZD10aGlzLl9nYz0hMSx0aGlzLl9yYXdQcmV2VGltZT0tMSwodGhpcy5fZ2N8fCF0aGlzLnRpbWVsaW5lKSYmdGhpcy5fZW5hYmxlZCghMCksdGhpc30sbi5pc0FjdGl2ZT1mdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5fdGltZWxpbmUsaT10aGlzLl9zdGFydFRpbWU7cmV0dXJuIWV8fCF0aGlzLl9nYyYmIXRoaXMuX3BhdXNlZCYmZS5pc0FjdGl2ZSgpJiYodD1lLnJhd1RpbWUoKSk+PWkmJmkrdGhpcy50b3RhbER1cmF0aW9uKCkvdGhpcy5fdGltZVNjYWxlPnR9LG4uX2VuYWJsZWQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbXx8ZC53YWtlKCksdGhpcy5fZ2M9IXQsdGhpcy5fYWN0aXZlPXRoaXMuaXNBY3RpdmUoKSwhMCE9PWUmJih0JiYhdGhpcy50aW1lbGluZT90aGlzLl90aW1lbGluZS5hZGQodGhpcyx0aGlzLl9zdGFydFRpbWUtdGhpcy5fZGVsYXkpOiF0JiZ0aGlzLnRpbWVsaW5lJiZ0aGlzLl90aW1lbGluZS5fcmVtb3ZlKHRoaXMsITApKSwhMX0sbi5fa2lsbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbmFibGVkKCExLCExKX0sbi5raWxsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2tpbGwodCxlKSx0aGlzfSxuLl91bmNhY2hlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10P3RoaXM6dGhpcy50aW1lbGluZTtlOyllLl9kaXJ0eT0hMCxlPWUudGltZWxpbmU7cmV0dXJuIHRoaXN9LG4uX3N3YXBTZWxmSW5QYXJhbXM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoLGk9dC5jb25jYXQoKTstMTwtLWU7KSJ7c2VsZn0iPT09dFtlXSYmKGlbZV09dGhpcyk7cmV0dXJuIGl9LG4uX2NhbGxiYWNrPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMudmFycztlW3RdLmFwcGx5KGVbdCsiU2NvcGUiXXx8ZS5jYWxsYmFja1Njb3BlfHx0aGlzLGVbdCsiUGFyYW1zIl18fGgpfSxuLmV2ZW50Q2FsbGJhY2s9ZnVuY3Rpb24odCxlLGkscyl7aWYoIm9uIj09PSh0fHwiIikuc3Vic3RyKDAsMikpe3ZhciByPXRoaXMudmFycztpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gclt0XTtudWxsPT1lP2RlbGV0ZSByW3RdOihyW3RdPWUsclt0KyJQYXJhbXMiXT1UKGkpJiYtMSE9PWkuam9pbigiIikuaW5kZXhPZigie3NlbGZ9Iik/dGhpcy5fc3dhcFNlbGZJblBhcmFtcyhpKTppLHJbdCsiU2NvcGUiXT1zKSwib25VcGRhdGUiPT09dCYmKHRoaXMuX29uVXBkYXRlPWUpfXJldHVybiB0aGlzfSxuLmRlbGF5PWZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyYmdGhpcy5zdGFydFRpbWUodGhpcy5fc3RhcnRUaW1lK3QtdGhpcy5fZGVsYXkpLHRoaXMuX2RlbGF5PXQsdGhpcyk6dGhpcy5fZGVsYXl9LG4uZHVyYXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2R1cmF0aW9uPXRoaXMuX3RvdGFsRHVyYXRpb249dCx0aGlzLl91bmNhY2hlKCEwKSx0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyYmMDx0aGlzLl90aW1lJiZ0aGlzLl90aW1lPHRoaXMuX2R1cmF0aW9uJiYwIT09dCYmdGhpcy50b3RhbFRpbWUodGhpcy5fdG90YWxUaW1lKih0L3RoaXMuX2R1cmF0aW9uKSwhMCksdGhpcyk6KHRoaXMuX2RpcnR5PSExLHRoaXMuX2R1cmF0aW9uKX0sbi50b3RhbER1cmF0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9kaXJ0eT0hMSxhcmd1bWVudHMubGVuZ3RoP3RoaXMuZHVyYXRpb24odCk6dGhpcy5fdG90YWxEdXJhdGlvbn0sbi50aW1lPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKSx0aGlzLnRvdGFsVGltZSh0PnRoaXMuX2R1cmF0aW9uP3RoaXMuX2R1cmF0aW9uOnQsZSkpOnRoaXMuX3RpbWV9LG4udG90YWxUaW1lPWZ1bmN0aW9uKHQsZSxpKXtpZihtfHxkLndha2UoKSwhYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5fdG90YWxUaW1lO2lmKHRoaXMuX3RpbWVsaW5lKXtpZih0PDAmJiFpJiYodCs9dGhpcy50b3RhbER1cmF0aW9uKCkpLHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nKXt0aGlzLl9kaXJ0eSYmdGhpcy50b3RhbER1cmF0aW9uKCk7dmFyIHM9dGhpcy5fdG90YWxEdXJhdGlvbixyPXRoaXMuX3RpbWVsaW5lO2lmKHM8dCYmIWkmJih0PXMpLHRoaXMuX3N0YXJ0VGltZT0odGhpcy5fcGF1c2VkP3RoaXMuX3BhdXNlVGltZTpyLl90aW1lKS0odGhpcy5fcmV2ZXJzZWQ/cy10OnQpL3RoaXMuX3RpbWVTY2FsZSxyLl9kaXJ0eXx8dGhpcy5fdW5jYWNoZSghMSksci5fdGltZWxpbmUpZm9yKDtyLl90aW1lbGluZTspci5fdGltZWxpbmUuX3RpbWUhPT0oci5fc3RhcnRUaW1lK3IuX3RvdGFsVGltZSkvci5fdGltZVNjYWxlJiZyLnRvdGFsVGltZShyLl90b3RhbFRpbWUsITApLHI9ci5fdGltZWxpbmV9dGhpcy5fZ2MmJnRoaXMuX2VuYWJsZWQoITAsITEpLCh0aGlzLl90b3RhbFRpbWUhPT10fHwwPT09dGhpcy5fZHVyYXRpb24pJiYoSS5sZW5ndGgmJlEoKSx0aGlzLnJlbmRlcih0LGUsITEpLEkubGVuZ3RoJiZRKCkpfXJldHVybiB0aGlzfSxuLnByb2dyZXNzPW4udG90YWxQcm9ncmVzcz1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuZHVyYXRpb24oKTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnRvdGFsVGltZShpKnQsZSk6aT90aGlzLl90aW1lL2k6dGhpcy5yYXRpb30sbi5zdGFydFRpbWU9ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHQhPT10aGlzLl9zdGFydFRpbWUmJih0aGlzLl9zdGFydFRpbWU9dCx0aGlzLnRpbWVsaW5lJiZ0aGlzLnRpbWVsaW5lLl9zb3J0Q2hpbGRyZW4mJnRoaXMudGltZWxpbmUuYWRkKHRoaXMsdC10aGlzLl9kZWxheSkpLHRoaXMpOnRoaXMuX3N0YXJ0VGltZX0sbi5lbmRUaW1lPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9zdGFydFRpbWUrKDAhPXQ/dGhpcy50b3RhbER1cmF0aW9uKCk6dGhpcy5kdXJhdGlvbigpKS90aGlzLl90aW1lU2NhbGV9LG4udGltZVNjYWxlPWZ1bmN0aW9uKHQpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiB0aGlzLl90aW1lU2NhbGU7aWYodD10fHx2LHRoaXMuX3RpbWVsaW5lJiZ0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyl7dmFyIGU9dGhpcy5fcGF1c2VUaW1lLGk9ZXx8MD09PWU/ZTp0aGlzLl90aW1lbGluZS50b3RhbFRpbWUoKTt0aGlzLl9zdGFydFRpbWU9aS0oaS10aGlzLl9zdGFydFRpbWUpKnRoaXMuX3RpbWVTY2FsZS90fXJldHVybiB0aGlzLl90aW1lU2NhbGU9dCx0aGlzLl91bmNhY2hlKCExKX0sbi5yZXZlcnNlZD1mdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odCE9dGhpcy5fcmV2ZXJzZWQmJih0aGlzLl9yZXZlcnNlZD10LHRoaXMudG90YWxUaW1lKHRoaXMuX3RpbWVsaW5lJiYhdGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmc/dGhpcy50b3RhbER1cmF0aW9uKCktdGhpcy5fdG90YWxUaW1lOnRoaXMuX3RvdGFsVGltZSwhMCkpLHRoaXMpOnRoaXMuX3JldmVyc2VkfSxuLnBhdXNlZD1mdW5jdGlvbih0KXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5fcGF1c2VkO3ZhciBlLGkscz10aGlzLl90aW1lbGluZTtyZXR1cm4gdCE9dGhpcy5fcGF1c2VkJiZzJiYobXx8dHx8ZC53YWtlKCksaT0oZT1zLnJhd1RpbWUoKSktdGhpcy5fcGF1c2VUaW1lLCF0JiZzLnNtb290aENoaWxkVGltaW5nJiYodGhpcy5fc3RhcnRUaW1lKz1pLHRoaXMuX3VuY2FjaGUoITEpKSx0aGlzLl9wYXVzZVRpbWU9dD9lOm51bGwsdGhpcy5fcGF1c2VkPXQsdGhpcy5fYWN0aXZlPXRoaXMuaXNBY3RpdmUoKSwhdCYmMCE9aSYmdGhpcy5faW5pdHRlZCYmdGhpcy5kdXJhdGlvbigpJiYoZT1zLnNtb290aENoaWxkVGltaW5nP3RoaXMuX3RvdGFsVGltZTooZS10aGlzLl9zdGFydFRpbWUpL3RoaXMuX3RpbWVTY2FsZSx0aGlzLnJlbmRlcihlLGU9PT10aGlzLl90b3RhbFRpbWUsITApKSksdGhpcy5fZ2MmJiF0JiZ0aGlzLl9lbmFibGVkKCEwLCExKSx0aGlzfTt2YXIgTT1jKCJjb3JlLlNpbXBsZVRpbWVsaW5lIixmdW5jdGlvbih0KXtDLmNhbGwodGhpcywwLHQpLHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuPXRoaXMuc21vb3RoQ2hpbGRUaW1pbmc9ITB9KTsobj1NLnByb3RvdHlwZT1uZXcgQykuY29uc3RydWN0b3I9TSxuLmtpbGwoKS5fZ2M9ITEsbi5fZmlyc3Q9bi5fbGFzdD1uLl9yZWNlbnQ9bnVsbCxuLl9zb3J0Q2hpbGRyZW49ITEsbi5hZGQ9bi5pbnNlcnQ9ZnVuY3Rpb24odCxlKXt2YXIgaSxzO2lmKHQuX3N0YXJ0VGltZT1OdW1iZXIoZXx8MCkrdC5fZGVsYXksdC5fcGF1c2VkJiZ0aGlzIT09dC5fdGltZWxpbmUmJih0Ll9wYXVzZVRpbWU9dC5fc3RhcnRUaW1lKyh0aGlzLnJhd1RpbWUoKS10Ll9zdGFydFRpbWUpL3QuX3RpbWVTY2FsZSksdC50aW1lbGluZSYmdC50aW1lbGluZS5fcmVtb3ZlKHQsITApLHQudGltZWxpbmU9dC5fdGltZWxpbmU9dGhpcyx0Ll9nYyYmdC5fZW5hYmxlZCghMCwhMCksaT10aGlzLl9sYXN0LHRoaXMuX3NvcnRDaGlsZHJlbilmb3Iocz10Ll9zdGFydFRpbWU7aSYmaS5fc3RhcnRUaW1lPnM7KWk9aS5fcHJldjtyZXR1cm4gaT8odC5fbmV4dD1pLl9uZXh0LGkuX25leHQ9dCk6KHQuX25leHQ9dGhpcy5fZmlyc3QsdGhpcy5fZmlyc3Q9dCksdC5fbmV4dD90Ll9uZXh0Ll9wcmV2PXQ6dGhpcy5fbGFzdD10LHQuX3ByZXY9aSx0aGlzLl9yZWNlbnQ9dCx0aGlzLl90aW1lbGluZSYmdGhpcy5fdW5jYWNoZSghMCksdGhpc30sbi5fcmVtb3ZlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQudGltZWxpbmU9PT10aGlzJiYoZXx8dC5fZW5hYmxlZCghMSwhMCksdC5fcHJldj90Ll9wcmV2Ll9uZXh0PXQuX25leHQ6dGhpcy5fZmlyc3Q9PT10JiYodGhpcy5fZmlyc3Q9dC5fbmV4dCksdC5fbmV4dD90Ll9uZXh0Ll9wcmV2PXQuX3ByZXY6dGhpcy5fbGFzdD09PXQmJih0aGlzLl9sYXN0PXQuX3ByZXYpLHQuX25leHQ9dC5fcHJldj10LnRpbWVsaW5lPW51bGwsdD09PXRoaXMuX3JlY2VudCYmKHRoaXMuX3JlY2VudD10aGlzLl9sYXN0KSx0aGlzLl90aW1lbGluZSYmdGhpcy5fdW5jYWNoZSghMCkpLHRoaXN9LG4ucmVuZGVyPWZ1bmN0aW9uKHQsZSxpKXt2YXIgcyxyPXRoaXMuX2ZpcnN0O2Zvcih0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT10aGlzLl9yYXdQcmV2VGltZT10O3I7KXM9ci5fbmV4dCwoci5fYWN0aXZlfHx0Pj1yLl9zdGFydFRpbWUmJiFyLl9wYXVzZWQpJiYoci5fcmV2ZXJzZWQ/ci5yZW5kZXIoKHIuX2RpcnR5P3IudG90YWxEdXJhdGlvbigpOnIuX3RvdGFsRHVyYXRpb24pLSh0LXIuX3N0YXJ0VGltZSkqci5fdGltZVNjYWxlLGUsaSk6ci5yZW5kZXIoKHQtci5fc3RhcnRUaW1lKSpyLl90aW1lU2NhbGUsZSxpKSkscj1zfSxuLnJhd1RpbWU9ZnVuY3Rpb24oKXtyZXR1cm4gbXx8ZC53YWtlKCksdGhpcy5fdG90YWxUaW1lfTt2YXIgej1jKCJUd2VlbkxpdGUiLGZ1bmN0aW9uKHQsZSxpKXtpZihDLmNhbGwodGhpcyxlLGkpLHRoaXMucmVuZGVyPXoucHJvdG90eXBlLnJlbmRlcixudWxsPT10KXRocm93IkNhbm5vdCB0d2VlbiBhIG51bGwgdGFyZ2V0LiI7dGhpcy50YXJnZXQ9dD0ic3RyaW5nIiE9dHlwZW9mIHQ/dDp6LnNlbGVjdG9yKHQpfHx0O3ZhciBzLHIsbixhPXQuanF1ZXJ5fHx0Lmxlbmd0aCYmdCE9PWYmJnRbMF0mJih0WzBdPT09Znx8dFswXS5ub2RlVHlwZSYmdFswXS5zdHlsZSYmIXQubm9kZVR5cGUpLG89dGhpcy52YXJzLm92ZXJ3cml0ZTtpZih0aGlzLl9vdmVyd3JpdGU9bz1udWxsPT1vP1dbei5kZWZhdWx0T3ZlcndyaXRlXToibnVtYmVyIj09dHlwZW9mIG8/bz4+MDpXW29dLChhfHx0IGluc3RhbmNlb2YgQXJyYXl8fHQucHVzaCYmVCh0KSkmJiJudW1iZXIiIT10eXBlb2YgdFswXSlmb3IodGhpcy5fdGFyZ2V0cz1uPWwodCksdGhpcy5fcHJvcExvb2t1cD1bXSx0aGlzLl9zaWJsaW5ncz1bXSxzPTA7bi5sZW5ndGg+cztzKyspKHI9bltzXSk/InN0cmluZyIhPXR5cGVvZiByP3IubGVuZ3RoJiZyIT09ZiYmclswXSYmKHJbMF09PT1mfHxyWzBdLm5vZGVUeXBlJiZyWzBdLnN0eWxlJiYhci5ub2RlVHlwZSk/KG4uc3BsaWNlKHMtLSwxKSx0aGlzLl90YXJnZXRzPW49bi5jb25jYXQobChyKSkpOih0aGlzLl9zaWJsaW5nc1tzXT1IKHIsdGhpcywhMSksMT09PW8mJjE8dGhpcy5fc2libGluZ3Nbc10ubGVuZ3RoJiZKKHIsdGhpcyxudWxsLDEsdGhpcy5fc2libGluZ3Nbc10pKToic3RyaW5nIj09dHlwZW9mKHI9bltzLS1dPXouc2VsZWN0b3IocikpJiZuLnNwbGljZShzKzEsMSk6bi5zcGxpY2Uocy0tLDEpO2Vsc2UgdGhpcy5fcHJvcExvb2t1cD17fSx0aGlzLl9zaWJsaW5ncz1IKHQsdGhpcywhMSksMT09PW8mJjE8dGhpcy5fc2libGluZ3MubGVuZ3RoJiZKKHQsdGhpcyxudWxsLDEsdGhpcy5fc2libGluZ3MpOyh0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyfHwwPT09ZSYmMD09PXRoaXMuX2RlbGF5JiYhMSE9PXRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXIpJiYodGhpcy5fdGltZT0tdix0aGlzLnJlbmRlcigtdGhpcy5fZGVsYXkpKX0sITApLEY9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQubGVuZ3RoJiZ0IT09ZiYmdFswXSYmKHRbMF09PT1mfHx0WzBdLm5vZGVUeXBlJiZ0WzBdLnN0eWxlJiYhdC5ub2RlVHlwZSl9OyhuPXoucHJvdG90eXBlPW5ldyBDKS5jb25zdHJ1Y3Rvcj16LG4ua2lsbCgpLl9nYz0hMSxuLnJhdGlvPTAsbi5fZmlyc3RQVD1uLl90YXJnZXRzPW4uX292ZXJ3cml0dGVuUHJvcHM9bi5fc3RhcnRBdD1udWxsLG4uX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQ9bi5fbGF6eT0hMSx6LnZlcnNpb249IjEuMTguMCIsei5kZWZhdWx0RWFzZT1uLl9lYXNlPW5ldyBfKG51bGwsbnVsbCwxLDEpLHouZGVmYXVsdE92ZXJ3cml0ZT0iYXV0byIsei50aWNrZXI9ZCx6LmF1dG9TbGVlcD0xMjAsei5sYWdTbW9vdGhpbmc9ZnVuY3Rpb24odCxlKXtkLmxhZ1Ntb290aGluZyh0LGUpfSx6LnNlbGVjdG9yPWYuJHx8Zi5qUXVlcnl8fGZ1bmN0aW9uKHQpe3ZhciBlPWYuJHx8Zi5qUXVlcnk7cmV0dXJuIGU/KHouc2VsZWN0b3I9ZSkodCk6InVuZGVmaW5lZCI9PXR5cGVvZiBkb2N1bWVudD90OmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGw/ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KTpkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiIyI9PT10LmNoYXJBdCgwKT90LnN1YnN0cigxKTp0KX07dmFyIEk9W10sWD17fSxOPS8oPzooLXwtPXxcKz0pP1xkKlwuP1xkKig/OmVbXC0rXT9cZCspPylbMC05XS9naSxMPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxpPXRoaXMuX2ZpcnN0UFQ7aTspZT1pLmJsb2I/dD90aGlzLmpvaW4oIiIpOnRoaXMuc3RhcnQ6aS5jKnQraS5zLGkucj9lPU1hdGgucm91bmQoZSk6ZTwxZS02JiYtMWUtNjxlJiYoZT0wKSxpLmY/aS5mcD9pLnRbaS5wXShpLmZwLGUpOmkudFtpLnBdKGUpOmkudFtpLnBdPWUsaT1pLl9uZXh0fSxFPWZ1bmN0aW9uKHQsZSxpLHMpe3ZhciByLG4sYSxvLGwsaCxfLHU9W3QsZV0sYz0wLGY9IiIscD0wO2Zvcih1LnN0YXJ0PXQsaSYmKGkodSksdD11WzBdLGU9dVsxXSksdS5sZW5ndGg9MCxyPXQubWF0Y2goTil8fFtdLG49ZS5tYXRjaChOKXx8W10scyYmKHMuX25leHQ9bnVsbCxzLmJsb2I9MSx1Ll9maXJzdFBUPXMpLGw9bi5sZW5ndGgsbz0wO288bDtvKyspXz1uW29dLGYrPShoPWUuc3Vic3RyKGMsZS5pbmRleE9mKF8sYyktYykpfHwhbz9oOiIsIixjKz1oLmxlbmd0aCxwP3A9KHArMSklNToicmdiYSgiPT09aC5zdWJzdHIoLTUpJiYocD0xKSxfPT09cltvXXx8bz49ci5sZW5ndGg/Zis9XzooZiYmKHUucHVzaChmKSxmPSIiKSxhPXBhcnNlRmxvYXQocltvXSksdS5wdXNoKGEpLHUuX2ZpcnN0UFQ9e19uZXh0OnUuX2ZpcnN0UFQsdDp1LHA6dS5sZW5ndGgtMSxzOmEsYzooIj0iPT09Xy5jaGFyQXQoMSk/cGFyc2VJbnQoXy5jaGFyQXQoMCkrIjEiLDEwKSpwYXJzZUZsb2F0KF8uc3Vic3RyKDIpKTpwYXJzZUZsb2F0KF8pLWEpfHwwLGY6MCxyOnAmJnA8NH0pLGMrPV8ubGVuZ3RoO3JldHVybihmKz1lLnN1YnN0cihjKSkmJnUucHVzaChmKSx1LnNldFJhdGlvPUwsdX0sWT1mdW5jdGlvbih0LGUsaSxzLHIsbixhLG8pe3ZhciBsLGg9ImdldCI9PT1pP3RbZV06aSxfPXR5cGVvZiB0W2VdLHU9InN0cmluZyI9PXR5cGVvZiBzJiYiPSI9PT1zLmNoYXJBdCgxKSxjPXt0OnQscDplLHM6aCxmOiJmdW5jdGlvbiI9PV8scGc6MCxuOnJ8fGUscjpuLHByOjAsYzp1P3BhcnNlSW50KHMuY2hhckF0KDApKyIxIiwxMCkqcGFyc2VGbG9hdChzLnN1YnN0cigyKSk6cGFyc2VGbG9hdChzKS1ofHwwfTtyZXR1cm4ibnVtYmVyIiE9XyYmKCJmdW5jdGlvbiI9PV8mJiJnZXQiPT09aSYmKGw9ZS5pbmRleE9mKCJzZXQiKXx8ImZ1bmN0aW9uIiE9dHlwZW9mIHRbImdldCIrZS5zdWJzdHIoMyldP2U6ImdldCIrZS5zdWJzdHIoMyksYy5zPWg9YT90W2xdKGEpOnRbbF0oKSksInN0cmluZyI9PXR5cGVvZiBoJiYoYXx8aXNOYU4oaCkpPyhjLmZwPWEsYz17dDpFKGgscyxvfHx6LmRlZmF1bHRTdHJpbmdGaWx0ZXIsYykscDoic2V0UmF0aW8iLHM6MCxjOjEsZjoyLHBnOjAsbjpyfHxlLHByOjB9KTp1fHwoYy5jPXBhcnNlRmxvYXQocyktcGFyc2VGbG9hdChoKXx8MCkpLGMuYz8oKGMuX25leHQ9dGhpcy5fZmlyc3RQVCkmJihjLl9uZXh0Ll9wcmV2PWMpLHRoaXMuX2ZpcnN0UFQ9Yyk6dm9pZCAwfSxCPXouX2ludGVybmFscz17aXNBcnJheTpULGlzU2VsZWN0b3I6RixsYXp5VHdlZW5zOkksYmxvYkRpZjpFfSxqPXouX3BsdWdpbnM9e30sVT1CLnR3ZWVuTG9va3VwPXt9LFY9MCxxPUIucmVzZXJ2ZWRQcm9wcz17ZWFzZToxLGRlbGF5OjEsb3ZlcndyaXRlOjEsb25Db21wbGV0ZToxLG9uQ29tcGxldGVQYXJhbXM6MSxvbkNvbXBsZXRlU2NvcGU6MSx1c2VGcmFtZXM6MSxydW5CYWNrd2FyZHM6MSxzdGFydEF0OjEsb25VcGRhdGU6MSxvblVwZGF0ZVBhcmFtczoxLG9uVXBkYXRlU2NvcGU6MSxvblN0YXJ0OjEsb25TdGFydFBhcmFtczoxLG9uU3RhcnRTY29wZToxLG9uUmV2ZXJzZUNvbXBsZXRlOjEsb25SZXZlcnNlQ29tcGxldGVQYXJhbXM6MSxvblJldmVyc2VDb21wbGV0ZVNjb3BlOjEsb25SZXBlYXQ6MSxvblJlcGVhdFBhcmFtczoxLG9uUmVwZWF0U2NvcGU6MSxlYXNlUGFyYW1zOjEseW95bzoxLGltbWVkaWF0ZVJlbmRlcjoxLHJlcGVhdDoxLHJlcGVhdERlbGF5OjEsZGF0YToxLHBhdXNlZDoxLHJldmVyc2VkOjEsYXV0b0NTUzoxLGxhenk6MSxvbk92ZXJ3cml0ZToxLGNhbGxiYWNrU2NvcGU6MSxzdHJpbmdGaWx0ZXI6MX0sVz17bm9uZTowLGFsbDoxLGF1dG86Mixjb25jdXJyZW50OjMsYWxsT25TdGFydDo0LHByZWV4aXN0aW5nOjUsdHJ1ZToxLGZhbHNlOjB9LFo9Qy5fcm9vdEZyYW1lc1RpbWVsaW5lPW5ldyBNLEc9Qy5fcm9vdFRpbWVsaW5lPW5ldyBNLCQ9MzAsUT1CLmxhenlSZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdCxlPUkubGVuZ3RoO2ZvcihYPXt9Oy0xPC0tZTspKHQ9SVtlXSkmJiExIT09dC5fbGF6eSYmKHQucmVuZGVyKHQuX2xhenlbMF0sdC5fbGF6eVsxXSwhMCksdC5fbGF6eT0hMSk7SS5sZW5ndGg9MH07Ry5fc3RhcnRUaW1lPWQudGltZSxaLl9zdGFydFRpbWU9ZC5mcmFtZSxHLl9hY3RpdmU9Wi5fYWN0aXZlPSEwLHNldFRpbWVvdXQoUSwxKSxDLl91cGRhdGVSb290PXoucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIHQsZSxpO2lmKEkubGVuZ3RoJiZRKCksRy5yZW5kZXIoKGQudGltZS1HLl9zdGFydFRpbWUpKkcuX3RpbWVTY2FsZSwhMSwhMSksWi5yZW5kZXIoKGQuZnJhbWUtWi5fc3RhcnRUaW1lKSpaLl90aW1lU2NhbGUsITEsITEpLEkubGVuZ3RoJiZRKCksZC5mcmFtZT49JCl7Zm9yKGkgaW4gJD1kLmZyYW1lKyhwYXJzZUludCh6LmF1dG9TbGVlcCwxMCl8fDEyMCksVSl7Zm9yKHQ9KGU9VVtpXS50d2VlbnMpLmxlbmd0aDstMTwtLXQ7KWVbdF0uX2djJiZlLnNwbGljZSh0LDEpOzA9PT1lLmxlbmd0aCYmZGVsZXRlIFVbaV19aWYoKCEoaT1HLl9maXJzdCl8fGkuX3BhdXNlZCkmJnouYXV0b1NsZWVwJiYhWi5fZmlyc3QmJjE9PT1kLl9saXN0ZW5lcnMudGljay5sZW5ndGgpe2Zvcig7aSYmaS5fcGF1c2VkOylpPWkuX25leHQ7aXx8ZC5zbGVlcCgpfX19LGQuYWRkRXZlbnRMaXN0ZW5lcigidGljayIsQy5fdXBkYXRlUm9vdCk7dmFyIEg9ZnVuY3Rpb24odCxlLGkpe3ZhciBzLHIsbj10Ll9nc1R3ZWVuSUQ7aWYoVVtufHwodC5fZ3NUd2VlbklEPW49InQiK1YrKyldfHwoVVtuXT17dGFyZ2V0OnQsdHdlZW5zOltdfSksZSYmKChzPVVbbl0udHdlZW5zKVtyPXMubGVuZ3RoXT1lLGkpKWZvcig7LTE8LS1yOylzW3JdPT09ZSYmcy5zcGxpY2UociwxKTtyZXR1cm4gVVtuXS50d2VlbnN9LEs9ZnVuY3Rpb24odCxlLGkscyl7dmFyIHIsbixhPXQudmFycy5vbk92ZXJ3cml0ZTtyZXR1cm4gYSYmKHI9YSh0LGUsaSxzKSksKGE9ei5vbk92ZXJ3cml0ZSkmJihuPWEodCxlLGkscykpLCExIT09ciYmITEhPT1ufSxKPWZ1bmN0aW9uKHQsZSxpLHMscil7dmFyIG4sYSxvLGw7aWYoMT09PXN8fDQ8PXMpe2ZvcihsPXIubGVuZ3RoLG49MDtuPGw7bisrKWlmKChvPXJbbl0pIT09ZSlvLl9nY3x8by5fa2lsbChudWxsLHQsZSkmJihhPSEwKTtlbHNlIGlmKDU9PT1zKWJyZWFrO3JldHVybiBhfXZhciBoLF89ZS5fc3RhcnRUaW1lK3YsdT1bXSxjPTAsZj0wPT09ZS5fZHVyYXRpb247Zm9yKG49ci5sZW5ndGg7LTE8LS1uOykobz1yW25dKT09PWV8fG8uX2djfHxvLl9wYXVzZWR8fChvLl90aW1lbGluZSE9PWUuX3RpbWVsaW5lPyhoPWh8fHR0KGUsMCxmKSwwPT09dHQobyxoLGYpJiYodVtjKytdPW8pKTpfPj1vLl9zdGFydFRpbWUmJm8uX3N0YXJ0VGltZStvLnRvdGFsRHVyYXRpb24oKS9vLl90aW1lU2NhbGU+XyYmKChmfHwhby5faW5pdHRlZCkmJl8tby5fc3RhcnRUaW1lPD0yZS0xMHx8KHVbYysrXT1vKSkpO2ZvcihuPWM7LTE8LS1uOylpZihvPXVbbl0sMj09PXMmJm8uX2tpbGwoaSx0LGUpJiYoYT0hMCksMiE9PXN8fCFvLl9maXJzdFBUJiZvLl9pbml0dGVkKXtpZigyIT09cyYmIUsobyxlKSljb250aW51ZTtvLl9lbmFibGVkKCExLCExKSYmKGE9ITApfXJldHVybiBhfSx0dD1mdW5jdGlvbih0LGUsaSl7Zm9yKHZhciBzPXQuX3RpbWVsaW5lLHI9cy5fdGltZVNjYWxlLG49dC5fc3RhcnRUaW1lO3MuX3RpbWVsaW5lOyl7aWYobis9cy5fc3RhcnRUaW1lLHIqPXMuX3RpbWVTY2FsZSxzLl9wYXVzZWQpcmV0dXJuLTEwMDtzPXMuX3RpbWVsaW5lfXJldHVybiBlPChuLz1yKT9uLWU6aSYmbj09PWV8fCF0Ll9pbml0dGVkJiZuLWU8Mip2P3Y6KG4rPXQudG90YWxEdXJhdGlvbigpL3QuX3RpbWVTY2FsZS9yKT5lK3Y/MDpuLWUtdn07bi5faW5pdD1mdW5jdGlvbigpe3ZhciB0LGUsaSxzLHIsbj10aGlzLnZhcnMsYT10aGlzLl9vdmVyd3JpdHRlblByb3BzLG89dGhpcy5fZHVyYXRpb24sbD0hIW4uaW1tZWRpYXRlUmVuZGVyLGg9bi5lYXNlO2lmKG4uc3RhcnRBdCl7Zm9yKHMgaW4gdGhpcy5fc3RhcnRBdCYmKHRoaXMuX3N0YXJ0QXQucmVuZGVyKC0xLCEwKSx0aGlzLl9zdGFydEF0LmtpbGwoKSkscj17fSxuLnN0YXJ0QXQpcltzXT1uLnN0YXJ0QXRbc107aWYoci5vdmVyd3JpdGU9ITEsci5pbW1lZGlhdGVSZW5kZXI9ITAsci5sYXp5PWwmJiExIT09bi5sYXp5LHIuc3RhcnRBdD1yLmRlbGF5PW51bGwsdGhpcy5fc3RhcnRBdD16LnRvKHRoaXMudGFyZ2V0LDAsciksbClpZigwPHRoaXMuX3RpbWUpdGhpcy5fc3RhcnRBdD1udWxsO2Vsc2UgaWYoMCE9PW8pcmV0dXJufWVsc2UgaWYobi5ydW5CYWNrd2FyZHMmJjAhPT1vKWlmKHRoaXMuX3N0YXJ0QXQpdGhpcy5fc3RhcnRBdC5yZW5kZXIoLTEsITApLHRoaXMuX3N0YXJ0QXQua2lsbCgpLHRoaXMuX3N0YXJ0QXQ9bnVsbDtlbHNle2ZvcihzIGluIDAhPT10aGlzLl90aW1lJiYobD0hMSksaT17fSxuKXFbc10mJiJhdXRvQ1NTIiE9PXN8fChpW3NdPW5bc10pO2lmKGkub3ZlcndyaXRlPTAsaS5kYXRhPSJpc0Zyb21TdGFydCIsaS5sYXp5PWwmJiExIT09bi5sYXp5LGkuaW1tZWRpYXRlUmVuZGVyPWwsdGhpcy5fc3RhcnRBdD16LnRvKHRoaXMudGFyZ2V0LDAsaSksbCl7aWYoMD09PXRoaXMuX3RpbWUpcmV0dXJufWVsc2UgdGhpcy5fc3RhcnRBdC5faW5pdCgpLHRoaXMuX3N0YXJ0QXQuX2VuYWJsZWQoITEpLHRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXImJih0aGlzLl9zdGFydEF0PW51bGwpfWlmKHRoaXMuX2Vhc2U9aD1oP2ggaW5zdGFuY2VvZiBfP2g6ImZ1bmN0aW9uIj09dHlwZW9mIGg/bmV3IF8oaCxuLmVhc2VQYXJhbXMpOndbaF18fHouZGVmYXVsdEVhc2U6ei5kZWZhdWx0RWFzZSxuLmVhc2VQYXJhbXMgaW5zdGFuY2VvZiBBcnJheSYmaC5jb25maWcmJih0aGlzLl9lYXNlPWguY29uZmlnLmFwcGx5KGgsbi5lYXNlUGFyYW1zKSksdGhpcy5fZWFzZVR5cGU9dGhpcy5fZWFzZS5fdHlwZSx0aGlzLl9lYXNlUG93ZXI9dGhpcy5fZWFzZS5fcG93ZXIsdGhpcy5fZmlyc3RQVD1udWxsLHRoaXMuX3RhcmdldHMpZm9yKHQ9dGhpcy5fdGFyZ2V0cy5sZW5ndGg7LTE8LS10Oyl0aGlzLl9pbml0UHJvcHModGhpcy5fdGFyZ2V0c1t0XSx0aGlzLl9wcm9wTG9va3VwW3RdPXt9LHRoaXMuX3NpYmxpbmdzW3RdLGE/YVt0XTpudWxsKSYmKGU9ITApO2Vsc2UgZT10aGlzLl9pbml0UHJvcHModGhpcy50YXJnZXQsdGhpcy5fcHJvcExvb2t1cCx0aGlzLl9zaWJsaW5ncyxhKTtpZihlJiZ6Ll9vblBsdWdpbkV2ZW50KCJfb25Jbml0QWxsUHJvcHMiLHRoaXMpLGEmJih0aGlzLl9maXJzdFBUfHwiZnVuY3Rpb24iIT10eXBlb2YgdGhpcy50YXJnZXQmJnRoaXMuX2VuYWJsZWQoITEsITEpKSxuLnJ1bkJhY2t3YXJkcylmb3IoaT10aGlzLl9maXJzdFBUO2k7KWkucys9aS5jLGkuYz0taS5jLGk9aS5fbmV4dDt0aGlzLl9vblVwZGF0ZT1uLm9uVXBkYXRlLHRoaXMuX2luaXR0ZWQ9ITB9LG4uX2luaXRQcm9wcz1mdW5jdGlvbih0LGUsaSxzKXt2YXIgcixuLGEsbyxsLGg7aWYobnVsbD09dClyZXR1cm4hMTtmb3IociBpbiBYW3QuX2dzVHdlZW5JRF0mJlEoKSx0aGlzLnZhcnMuY3NzfHx0LnN0eWxlJiZ0IT09ZiYmdC5ub2RlVHlwZSYmai5jc3MmJiExIT09dGhpcy52YXJzLmF1dG9DU1MmJmZ1bmN0aW9uKHQsZSl7dmFyIGkscz17fTtmb3IoaSBpbiB0KXFbaV18fGkgaW4gZSYmInRyYW5zZm9ybSIhPT1pJiYieCIhPT1pJiYieSIhPT1pJiYid2lkdGgiIT09aSYmImhlaWdodCIhPT1pJiYiY2xhc3NOYW1lIiE9PWkmJiJib3JkZXIiIT09aXx8ISghaltpXXx8altpXSYmaltpXS5fYXV0b0NTUyl8fChzW2ldPXRbaV0sZGVsZXRlIHRbaV0pO3QuY3NzPXN9KHRoaXMudmFycyx0KSx0aGlzLnZhcnMpaWYoaD10aGlzLnZhcnNbcl0scVtyXSloJiYoaCBpbnN0YW5jZW9mIEFycmF5fHxoLnB1c2gmJlQoaCkpJiYtMSE9PWguam9pbigiIikuaW5kZXhPZigie3NlbGZ9IikmJih0aGlzLnZhcnNbcl09aD10aGlzLl9zd2FwU2VsZkluUGFyYW1zKGgsdGhpcykpO2Vsc2UgaWYoaltyXSYmKG89bmV3IGpbcl0pLl9vbkluaXRUd2Vlbih0LHRoaXMudmFyc1tyXSx0aGlzKSl7Zm9yKHRoaXMuX2ZpcnN0UFQ9bD17X25leHQ6dGhpcy5fZmlyc3RQVCx0Om8scDoic2V0UmF0aW8iLHM6MCxjOjEsZjoxLG46cixwZzoxLHByOm8uX3ByaW9yaXR5fSxuPW8uX292ZXJ3cml0ZVByb3BzLmxlbmd0aDstMTwtLW47KWVbby5fb3ZlcndyaXRlUHJvcHNbbl1dPXRoaXMuX2ZpcnN0UFQ7KG8uX3ByaW9yaXR5fHxvLl9vbkluaXRBbGxQcm9wcykmJihhPSEwKSwoby5fb25EaXNhYmxlfHxvLl9vbkVuYWJsZSkmJih0aGlzLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkPSEwKSxsLl9uZXh0JiYobC5fbmV4dC5fcHJldj1sKX1lbHNlIGVbcl09WS5jYWxsKHRoaXMsdCxyLCJnZXQiLGgsciwwLG51bGwsdGhpcy52YXJzLnN0cmluZ0ZpbHRlcik7cmV0dXJuIHMmJnRoaXMuX2tpbGwocyx0KT90aGlzLl9pbml0UHJvcHModCxlLGkscyk6MTx0aGlzLl9vdmVyd3JpdGUmJnRoaXMuX2ZpcnN0UFQmJjE8aS5sZW5ndGgmJkoodCx0aGlzLGUsdGhpcy5fb3ZlcndyaXRlLGkpPyh0aGlzLl9raWxsKGUsdCksdGhpcy5faW5pdFByb3BzKHQsZSxpLHMpKToodGhpcy5fZmlyc3RQVCYmKCExIT09dGhpcy52YXJzLmxhenkmJnRoaXMuX2R1cmF0aW9ufHx0aGlzLnZhcnMubGF6eSYmIXRoaXMuX2R1cmF0aW9uKSYmKFhbdC5fZ3NUd2VlbklEXT0hMCksYSl9LG4ucmVuZGVyPWZ1bmN0aW9uKHQsZSxpKXt2YXIgcyxyLG4sYSxvPXRoaXMuX3RpbWUsbD10aGlzLl9kdXJhdGlvbixoPXRoaXMuX3Jhd1ByZXZUaW1lO2lmKGw8PXQpdGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9bCx0aGlzLnJhdGlvPXRoaXMuX2Vhc2UuX2NhbGNFbmQ/dGhpcy5fZWFzZS5nZXRSYXRpbygxKToxLHRoaXMuX3JldmVyc2VkfHwocz0hMCxyPSJvbkNvbXBsZXRlIixpPWl8fHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiksMD09PWwmJih0aGlzLl9pbml0dGVkfHwhdGhpcy52YXJzLmxhenl8fGkpJiYodGhpcy5fc3RhcnRUaW1lPT09dGhpcy5fdGltZWxpbmUuX2R1cmF0aW9uJiYodD0wKSwoMD09PXR8fGg8MHx8aD09PXYmJiJpc1BhdXNlIiE9PXRoaXMuZGF0YSkmJmghPT10JiYoaT0hMCx2PGgmJihyPSJvblJldmVyc2VDb21wbGV0ZSIpKSx0aGlzLl9yYXdQcmV2VGltZT1hPSFlfHx0fHxoPT09dD90OnYpO2Vsc2UgaWYodDwxZS03KXRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPTAsdGhpcy5yYXRpbz10aGlzLl9lYXNlLl9jYWxjRW5kP3RoaXMuX2Vhc2UuZ2V0UmF0aW8oMCk6MCwoMCE9PW98fDA9PT1sJiYwPGgpJiYocj0ib25SZXZlcnNlQ29tcGxldGUiLHM9dGhpcy5fcmV2ZXJzZWQpLHQ8MCYmKHRoaXMuX2FjdGl2ZT0hMSwwPT09bCYmKHRoaXMuX2luaXR0ZWR8fCF0aGlzLnZhcnMubGF6eXx8aSkmJigwPD1oJiYoaCE9PXZ8fCJpc1BhdXNlIiE9PXRoaXMuZGF0YSkmJihpPSEwKSx0aGlzLl9yYXdQcmV2VGltZT1hPSFlfHx0fHxoPT09dD90OnYpKSx0aGlzLl9pbml0dGVkfHwoaT0hMCk7ZWxzZSBpZih0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT10LHRoaXMuX2Vhc2VUeXBlKXt2YXIgXz10L2wsdT10aGlzLl9lYXNlVHlwZSxjPXRoaXMuX2Vhc2VQb3dlcjsoMT09PXV8fDM9PT11JiYuNTw9XykmJihfPTEtXyksMz09PXUmJihfKj0yKSwxPT09Yz9fKj1fOjI9PT1jP18qPV8qXzozPT09Yz9fKj1fKl8qXzo0PT09YyYmKF8qPV8qXypfKl8pLHRoaXMucmF0aW89MT09PXU/MS1fOjI9PT11P186dC9sPC41P18vMjoxLV8vMn1lbHNlIHRoaXMucmF0aW89dGhpcy5fZWFzZS5nZXRSYXRpbyh0L2wpO2lmKHRoaXMuX3RpbWUhPT1vfHxpKXtpZighdGhpcy5faW5pdHRlZCl7aWYodGhpcy5faW5pdCgpLCF0aGlzLl9pbml0dGVkfHx0aGlzLl9nYylyZXR1cm47aWYoIWkmJnRoaXMuX2ZpcnN0UFQmJighMSE9PXRoaXMudmFycy5sYXp5JiZ0aGlzLl9kdXJhdGlvbnx8dGhpcy52YXJzLmxhenkmJiF0aGlzLl9kdXJhdGlvbikpcmV0dXJuIHRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lPW8sdGhpcy5fcmF3UHJldlRpbWU9aCxJLnB1c2godGhpcyksdm9pZCh0aGlzLl9sYXp5PVt0LGVdKTt0aGlzLl90aW1lJiYhcz90aGlzLnJhdGlvPXRoaXMuX2Vhc2UuZ2V0UmF0aW8odGhpcy5fdGltZS9sKTpzJiZ0aGlzLl9lYXNlLl9jYWxjRW5kJiYodGhpcy5yYXRpbz10aGlzLl9lYXNlLmdldFJhdGlvKDA9PT10aGlzLl90aW1lPzA6MSkpfWZvcighMSE9PXRoaXMuX2xhenkmJih0aGlzLl9sYXp5PSExKSx0aGlzLl9hY3RpdmV8fCF0aGlzLl9wYXVzZWQmJnRoaXMuX3RpbWUhPT1vJiYwPD10JiYodGhpcy5fYWN0aXZlPSEwKSwwPT09byYmKHRoaXMuX3N0YXJ0QXQmJigwPD10P3RoaXMuX3N0YXJ0QXQucmVuZGVyKHQsZSxpKTpyfHwocj0iX2R1bW15R1MiKSksdGhpcy52YXJzLm9uU3RhcnQmJigwIT09dGhpcy5fdGltZXx8MD09PWwpJiYoZXx8dGhpcy5fY2FsbGJhY2soIm9uU3RhcnQiKSkpLG49dGhpcy5fZmlyc3RQVDtuOyluLmY/bi50W24ucF0obi5jKnRoaXMucmF0aW8rbi5zKTpuLnRbbi5wXT1uLmMqdGhpcy5yYXRpbytuLnMsbj1uLl9uZXh0O3RoaXMuX29uVXBkYXRlJiYodDwwJiZ0aGlzLl9zdGFydEF0JiYtMWUtNCE9PXQmJnRoaXMuX3N0YXJ0QXQucmVuZGVyKHQsZSxpKSxlfHwodGhpcy5fdGltZSE9PW98fHMpJiZ0aGlzLl9jYWxsYmFjaygib25VcGRhdGUiKSksciYmKCF0aGlzLl9nY3x8aSkmJih0PDAmJnRoaXMuX3N0YXJ0QXQmJiF0aGlzLl9vblVwZGF0ZSYmLTFlLTQhPT10JiZ0aGlzLl9zdGFydEF0LnJlbmRlcih0LGUsaSkscyYmKHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiYmdGhpcy5fZW5hYmxlZCghMSwhMSksdGhpcy5fYWN0aXZlPSExKSwhZSYmdGhpcy52YXJzW3JdJiZ0aGlzLl9jYWxsYmFjayhyKSwwPT09bCYmdGhpcy5fcmF3UHJldlRpbWU9PT12JiZhIT09diYmKHRoaXMuX3Jhd1ByZXZUaW1lPTApKX19LG4uX2tpbGw9ZnVuY3Rpb24odCxlLGkpe2lmKCJhbGwiPT09dCYmKHQ9bnVsbCksbnVsbD09dCYmKG51bGw9PWV8fGU9PT10aGlzLnRhcmdldCkpcmV0dXJuIHRoaXMuX2xhenk9ITEsdGhpcy5fZW5hYmxlZCghMSwhMSk7ZT0ic3RyaW5nIiE9dHlwZW9mIGU/ZXx8dGhpcy5fdGFyZ2V0c3x8dGhpcy50YXJnZXQ6ei5zZWxlY3RvcihlKXx8ZTt2YXIgcyxyLG4sYSxvLGwsaCxfLHUsYz1pJiZ0aGlzLl90aW1lJiZpLl9zdGFydFRpbWU9PT10aGlzLl9zdGFydFRpbWUmJnRoaXMuX3RpbWVsaW5lPT09aS5fdGltZWxpbmU7aWYoKFQoZSl8fEYoZSkpJiYibnVtYmVyIiE9dHlwZW9mIGVbMF0pZm9yKHM9ZS5sZW5ndGg7LTE8LS1zOyl0aGlzLl9raWxsKHQsZVtzXSxpKSYmKGw9ITApO2Vsc2V7aWYodGhpcy5fdGFyZ2V0cyl7Zm9yKHM9dGhpcy5fdGFyZ2V0cy5sZW5ndGg7LTE8LS1zOylpZihlPT09dGhpcy5fdGFyZ2V0c1tzXSl7bz10aGlzLl9wcm9wTG9va3VwW3NdfHx7fSx0aGlzLl9vdmVyd3JpdHRlblByb3BzPXRoaXMuX292ZXJ3cml0dGVuUHJvcHN8fFtdLHI9dGhpcy5fb3ZlcndyaXR0ZW5Qcm9wc1tzXT10P3RoaXMuX292ZXJ3cml0dGVuUHJvcHNbc118fHt9OiJhbGwiO2JyZWFrfX1lbHNle2lmKGUhPT10aGlzLnRhcmdldClyZXR1cm4hMTtvPXRoaXMuX3Byb3BMb29rdXAscj10aGlzLl9vdmVyd3JpdHRlblByb3BzPXQ/dGhpcy5fb3ZlcndyaXR0ZW5Qcm9wc3x8e306ImFsbCJ9aWYobyl7aWYoaD10fHxvLF89dCE9PXImJiJhbGwiIT09ciYmdCE9PW8mJigib2JqZWN0IiE9dHlwZW9mIHR8fCF0Ll90ZW1wS2lsbCksaSYmKHoub25PdmVyd3JpdGV8fHRoaXMudmFycy5vbk92ZXJ3cml0ZSkpe2ZvcihuIGluIGgpb1tuXSYmKHV8fCh1PVtdKSx1LnB1c2gobikpO2lmKCh1fHwhdCkmJiFLKHRoaXMsaSxlLHUpKXJldHVybiExfWZvcihuIGluIGgpKGE9b1tuXSkmJihjJiYoYS5mP2EudFthLnBdKGEucyk6YS50W2EucF09YS5zLGw9ITApLGEucGcmJmEudC5fa2lsbChoKSYmKGw9ITApLGEucGcmJjAhPT1hLnQuX292ZXJ3cml0ZVByb3BzLmxlbmd0aHx8KGEuX3ByZXY/YS5fcHJldi5fbmV4dD1hLl9uZXh0OmE9PT10aGlzLl9maXJzdFBUJiYodGhpcy5fZmlyc3RQVD1hLl9uZXh0KSxhLl9uZXh0JiYoYS5fbmV4dC5fcHJldj1hLl9wcmV2KSxhLl9uZXh0PWEuX3ByZXY9bnVsbCksZGVsZXRlIG9bbl0pLF8mJihyW25dPTEpOyF0aGlzLl9maXJzdFBUJiZ0aGlzLl9pbml0dGVkJiZ0aGlzLl9lbmFibGVkKCExLCExKX19cmV0dXJuIGx9LG4uaW52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkJiZ6Ll9vblBsdWdpbkV2ZW50KCJfb25EaXNhYmxlIix0aGlzKSx0aGlzLl9maXJzdFBUPXRoaXMuX292ZXJ3cml0dGVuUHJvcHM9dGhpcy5fc3RhcnRBdD10aGlzLl9vblVwZGF0ZT1udWxsLHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQ9dGhpcy5fYWN0aXZlPXRoaXMuX2xhenk9ITEsdGhpcy5fcHJvcExvb2t1cD10aGlzLl90YXJnZXRzP3t9OltdLEMucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKSx0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyJiYodGhpcy5fdGltZT0tdix0aGlzLnJlbmRlcigtdGhpcy5fZGVsYXkpKSx0aGlzfSxuLl9lbmFibGVkPWZ1bmN0aW9uKHQsZSl7aWYobXx8ZC53YWtlKCksdCYmdGhpcy5fZ2Mpe3ZhciBpLHM9dGhpcy5fdGFyZ2V0cztpZihzKWZvcihpPXMubGVuZ3RoOy0xPC0taTspdGhpcy5fc2libGluZ3NbaV09SChzW2ldLHRoaXMsITApO2Vsc2UgdGhpcy5fc2libGluZ3M9SCh0aGlzLnRhcmdldCx0aGlzLCEwKX1yZXR1cm4gQy5wcm90b3R5cGUuX2VuYWJsZWQuY2FsbCh0aGlzLHQsZSksISghdGhpcy5fbm90aWZ5UGx1Z2luc09mRW5hYmxlZHx8IXRoaXMuX2ZpcnN0UFQpJiZ6Ll9vblBsdWdpbkV2ZW50KHQ/Il9vbkVuYWJsZSI6Il9vbkRpc2FibGUiLHRoaXMpfSx6LnRvPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gbmV3IHoodCxlLGkpfSx6LmZyb209ZnVuY3Rpb24odCxlLGkpe3JldHVybiBpLnJ1bkJhY2t3YXJkcz0hMCxpLmltbWVkaWF0ZVJlbmRlcj0wIT1pLmltbWVkaWF0ZVJlbmRlcixuZXcgeih0LGUsaSl9LHouZnJvbVRvPWZ1bmN0aW9uKHQsZSxpLHMpe3JldHVybiBzLnN0YXJ0QXQ9aSxzLmltbWVkaWF0ZVJlbmRlcj0wIT1zLmltbWVkaWF0ZVJlbmRlciYmMCE9aS5pbW1lZGlhdGVSZW5kZXIsbmV3IHoodCxlLHMpfSx6LmRlbGF5ZWRDYWxsPWZ1bmN0aW9uKHQsZSxpLHMscil7cmV0dXJuIG5ldyB6KGUsMCx7ZGVsYXk6dCxvbkNvbXBsZXRlOmUsb25Db21wbGV0ZVBhcmFtczppLGNhbGxiYWNrU2NvcGU6cyxvblJldmVyc2VDb21wbGV0ZTplLG9uUmV2ZXJzZUNvbXBsZXRlUGFyYW1zOmksaW1tZWRpYXRlUmVuZGVyOiExLGxhenk6ITEsdXNlRnJhbWVzOnIsb3ZlcndyaXRlOjB9KX0sei5zZXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHoodCwwLGUpfSx6LmdldFR3ZWVuc09mPWZ1bmN0aW9uKHQsZSl7aWYobnVsbD09dClyZXR1cm5bXTt2YXIgaSxzLHIsbjtpZih0PSJzdHJpbmciIT10eXBlb2YgdD90Onouc2VsZWN0b3IodCl8fHQsKFQodCl8fEYodCkpJiYibnVtYmVyIiE9dHlwZW9mIHRbMF0pe2ZvcihpPXQubGVuZ3RoLHM9W107LTE8LS1pOylzPXMuY29uY2F0KHouZ2V0VHdlZW5zT2YodFtpXSxlKSk7Zm9yKGk9cy5sZW5ndGg7LTE8LS1pOylmb3Iobj1zW2ldLHI9aTstMTwtLXI7KW49PT1zW3JdJiZzLnNwbGljZShpLDEpfWVsc2UgZm9yKGk9KHM9SCh0KS5jb25jYXQoKSkubGVuZ3RoOy0xPC0taTspKHNbaV0uX2djfHxlJiYhc1tpXS5pc0FjdGl2ZSgpKSYmcy5zcGxpY2UoaSwxKTtyZXR1cm4gc30sei5raWxsVHdlZW5zT2Y9ei5raWxsRGVsYXllZENhbGxzVG89ZnVuY3Rpb24odCxlLGkpeyJvYmplY3QiPT10eXBlb2YgZSYmKGk9ZSxlPSExKTtmb3IodmFyIHM9ei5nZXRUd2VlbnNPZih0LGUpLHI9cy5sZW5ndGg7LTE8LS1yOylzW3JdLl9raWxsKGksdCl9O3ZhciBldD1jKCJwbHVnaW5zLlR3ZWVuUGx1Z2luIixmdW5jdGlvbih0LGUpe3RoaXMuX292ZXJ3cml0ZVByb3BzPSh0fHwiIikuc3BsaXQoIiwiKSx0aGlzLl9wcm9wTmFtZT10aGlzLl9vdmVyd3JpdGVQcm9wc1swXSx0aGlzLl9wcmlvcml0eT1lfHwwLHRoaXMuX3N1cGVyPWV0LnByb3RvdHlwZX0sITApO2lmKG49ZXQucHJvdG90eXBlLGV0LnZlcnNpb249IjEuMTguMCIsZXQuQVBJPTIsbi5fZmlyc3RQVD1udWxsLG4uX2FkZFR3ZWVuPVksbi5zZXRSYXRpbz1MLG4uX2tpbGw9ZnVuY3Rpb24odCl7dmFyIGUsaT10aGlzLl9vdmVyd3JpdGVQcm9wcyxzPXRoaXMuX2ZpcnN0UFQ7aWYobnVsbCE9dFt0aGlzLl9wcm9wTmFtZV0pdGhpcy5fb3ZlcndyaXRlUHJvcHM9W107ZWxzZSBmb3IoZT1pLmxlbmd0aDstMTwtLWU7KW51bGwhPXRbaVtlXV0mJmkuc3BsaWNlKGUsMSk7Zm9yKDtzOyludWxsIT10W3Mubl0mJihzLl9uZXh0JiYocy5fbmV4dC5fcHJldj1zLl9wcmV2KSxzLl9wcmV2PyhzLl9wcmV2Ll9uZXh0PXMuX25leHQscy5fcHJldj1udWxsKTp0aGlzLl9maXJzdFBUPT09cyYmKHRoaXMuX2ZpcnN0UFQ9cy5fbmV4dCkpLHM9cy5fbmV4dDtyZXR1cm4hMX0sbi5fcm91bmRQcm9wcz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgaT10aGlzLl9maXJzdFBUO2k7KSh0W3RoaXMuX3Byb3BOYW1lXXx8bnVsbCE9aS5uJiZ0W2kubi5zcGxpdCh0aGlzLl9wcm9wTmFtZSsiXyIpLmpvaW4oIiIpXSkmJihpLnI9ZSksaT1pLl9uZXh0fSx6Ll9vblBsdWdpbkV2ZW50PWZ1bmN0aW9uKHQsZSl7dmFyIGkscyxyLG4sYSxvPWUuX2ZpcnN0UFQ7aWYoIl9vbkluaXRBbGxQcm9wcyI9PT10KXtmb3IoO287KXtmb3IoYT1vLl9uZXh0LHM9cjtzJiZzLnByPm8ucHI7KXM9cy5fbmV4dDsoby5fcHJldj1zP3MuX3ByZXY6bik/by5fcHJldi5fbmV4dD1vOnI9bywoby5fbmV4dD1zKT9zLl9wcmV2PW86bj1vLG89YX1vPWUuX2ZpcnN0UFQ9cn1mb3IoO287KW8ucGcmJiJmdW5jdGlvbiI9PXR5cGVvZiBvLnRbdF0mJm8udFt0XSgpJiYoaT0hMCksbz1vLl9uZXh0O3JldHVybiBpfSxldC5hY3RpdmF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5sZW5ndGg7LTE8LS1lOyl0W2VdLkFQST09PWV0LkFQSSYmKGpbKG5ldyB0W2VdKS5fcHJvcE5hbWVdPXRbZV0pO3JldHVybiEwfSxhLnBsdWdpbj1mdW5jdGlvbih0KXtpZighKHQmJnQucHJvcE5hbWUmJnQuaW5pdCYmdC5BUEkpKXRocm93ImlsbGVnYWwgcGx1Z2luIGRlZmluaXRpb24uIjt2YXIgZSxpPXQucHJvcE5hbWUscz10LnByaW9yaXR5fHwwLHI9dC5vdmVyd3JpdGVQcm9wcyxuPXtpbml0OiJfb25Jbml0VHdlZW4iLHNldDoic2V0UmF0aW8iLGtpbGw6Il9raWxsIixyb3VuZDoiX3JvdW5kUHJvcHMiLGluaXRBbGw6Il9vbkluaXRBbGxQcm9wcyJ9LGE9YygicGx1Z2lucy4iK2kuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkraS5zdWJzdHIoMSkrIlBsdWdpbiIsZnVuY3Rpb24oKXtldC5jYWxsKHRoaXMsaSxzKSx0aGlzLl9vdmVyd3JpdGVQcm9wcz1yfHxbXX0sITA9PT10Lmdsb2JhbCksbz1hLnByb3RvdHlwZT1uZXcgZXQoaSk7Zm9yKGUgaW4oby5jb25zdHJ1Y3Rvcj1hKS5BUEk9dC5BUEksbikiZnVuY3Rpb24iPT10eXBlb2YgdFtlXSYmKG9bbltlXV09dFtlXSk7cmV0dXJuIGEudmVyc2lvbj10LnZlcnNpb24sZXQuYWN0aXZhdGUoW2FdKSxhfSxzPWYuX2dzUXVldWUpe2ZvcihyPTA7cy5sZW5ndGg+cjtyKyspc1tyXSgpO2ZvcihuIGluIHgpeFtuXS5mdW5jfHxmLmNvbnNvbGUubG9nKCJHU0FQIGVuY291bnRlcmVkIG1pc3NpbmcgZGVwZW5kZW5jeTogY29tLmdyZWVuc29jay4iK24pfW09ITF9fSgidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDp0aGlzfHx3aW5kb3cpPC9zY3JpcHQ+PHNjcmlwdCBpZD1yZW5kZXJlZC1qcz4idXNlIHN0cmljdCI7Y29uc29sZS5jbGVhcigpO3ZhciBTdGFnZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt2YXIgdD10aGlzO3RoaXMucmVuZGVyPWZ1bmN0aW9uKCl7dGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSx0aGlzLmNhbWVyYSl9LHRoaXMuYWRkPWZ1bmN0aW9uKHQpe3RoaXMuc2NlbmUuYWRkKHQpfSx0aGlzLnJlbW92ZT1mdW5jdGlvbih0KXt0aGlzLnNjZW5lLnJlbW92ZSh0KX0sdGhpcy5jb250YWluZXI9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImdhbWUiKSx0aGlzLnJlbmRlcmVyPW5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHthbnRpYWxpYXM6ITAsYWxwaGE6ITF9KSx0aGlzLnJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsd2luZG93LmlubmVySGVpZ2h0KSx0aGlzLnJlbmRlcmVyLnNldENsZWFyQ29sb3IoIiNEMENCQzciLDEpLHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMucmVuZGVyZXIuZG9tRWxlbWVudCksdGhpcy5zY2VuZT1uZXcgVEhSRUUuU2NlbmU7dmFyIGk9d2luZG93LmlubmVyV2lkdGgvd2luZG93LmlubmVySGVpZ2h0O3RoaXMuY2FtZXJhPW5ldyBUSFJFRS5PcnRob2dyYXBoaWNDYW1lcmEoLTIwKmksMjAqaSwyMCwtMjAsLTEwMCwxZTMpLHRoaXMuY2FtZXJhLnBvc2l0aW9uLng9Mix0aGlzLmNhbWVyYS5wb3NpdGlvbi55PTIsdGhpcy5jYW1lcmEucG9zaXRpb24uej0yLHRoaXMuY2FtZXJhLmxvb2tBdChuZXcgVEhSRUUuVmVjdG9yMygwLDAsMCkpLHRoaXMubGlnaHQ9bmV3IFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQoMTY3NzcyMTUsLjUpLHRoaXMubGlnaHQucG9zaXRpb24uc2V0KDAsNDk5LDApLHRoaXMuc2NlbmUuYWRkKHRoaXMubGlnaHQpLHRoaXMuc29mdExpZ2h0PW5ldyBUSFJFRS5BbWJpZW50TGlnaHQoMTY3NzcyMTUsLjQpLHRoaXMuc2NlbmUuYWRkKHRoaXMuc29mdExpZ2h0KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIixmdW5jdGlvbigpe3JldHVybiB0Lm9uUmVzaXplKCl9KSx0aGlzLm9uUmVzaXplKCl9cmV0dXJuIHQucHJvdG90eXBlLnNldENhbWVyYT1mdW5jdGlvbih0LGkpe3ZvaWQgMD09PWkmJihpPS4zKSxUd2VlbkxpdGUudG8odGhpcy5jYW1lcmEucG9zaXRpb24saSx7eTp0KzQsZWFzZTpQb3dlcjEuZWFzZUluT3V0fSksVHdlZW5MaXRlLnRvKHRoaXMuY2FtZXJhLmxvb2tBdCxpLHt5OnQsZWFzZTpQb3dlcjEuZWFzZUluT3V0fSl9LHQucHJvdG90eXBlLm9uUmVzaXplPWZ1bmN0aW9uKCl7dGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLHdpbmRvdy5pbm5lckhlaWdodCksdGhpcy5jYW1lcmEubGVmdD13aW5kb3cuaW5uZXJXaWR0aC8tMzAsdGhpcy5jYW1lcmEucmlnaHQ9d2luZG93LmlubmVyV2lkdGgvMzAsdGhpcy5jYW1lcmEudG9wPXdpbmRvdy5pbm5lckhlaWdodC8zMCx0aGlzLmNhbWVyYS5ib3R0b209d2luZG93LmlubmVySGVpZ2h0Ly0zMCx0aGlzLmNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCl9LHR9KCksQmxvY2s9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMuU1RBVEVTPXtBQ1RJVkU6ImFjdGl2ZSIsU1RPUFBFRDoic3RvcHBlZCIsTUlTU0VEOiJtaXNzZWQifSx0aGlzLk1PVkVfQU1PVU5UPTEyLHRoaXMuZGltZW5zaW9uPXt3aWR0aDowLGhlaWdodDowLGRlcHRoOjB9LHRoaXMucG9zaXRpb249e3g6MCx5OjAsejowfSx0aGlzLnRhcmdldEJsb2NrPXQsdGhpcy5pbmRleD0odGhpcy50YXJnZXRCbG9jaz90aGlzLnRhcmdldEJsb2NrLmluZGV4OjApKzEsdGhpcy53b3JraW5nUGxhbmU9dGhpcy5pbmRleCUyPyJ4IjoieiIsdGhpcy53b3JraW5nRGltZW5zaW9uPXRoaXMuaW5kZXglMj8id2lkdGgiOiJkZXB0aCIsdGhpcy5kaW1lbnNpb24ud2lkdGg9dGhpcy50YXJnZXRCbG9jaz90aGlzLnRhcmdldEJsb2NrLmRpbWVuc2lvbi53aWR0aDoxMCx0aGlzLmRpbWVuc2lvbi5oZWlnaHQ9dGhpcy50YXJnZXRCbG9jaz90aGlzLnRhcmdldEJsb2NrLmRpbWVuc2lvbi5oZWlnaHQ6Mix0aGlzLmRpbWVuc2lvbi5kZXB0aD10aGlzLnRhcmdldEJsb2NrP3RoaXMudGFyZ2V0QmxvY2suZGltZW5zaW9uLmRlcHRoOjEwLHRoaXMucG9zaXRpb24ueD10aGlzLnRhcmdldEJsb2NrP3RoaXMudGFyZ2V0QmxvY2sucG9zaXRpb24ueDowLHRoaXMucG9zaXRpb24ueT10aGlzLmRpbWVuc2lvbi5oZWlnaHQqdGhpcy5pbmRleCx0aGlzLnBvc2l0aW9uLno9dGhpcy50YXJnZXRCbG9jaz90aGlzLnRhcmdldEJsb2NrLnBvc2l0aW9uLno6MCx0aGlzLmNvbG9yT2Zmc2V0PXRoaXMudGFyZ2V0QmxvY2s/dGhpcy50YXJnZXRCbG9jay5jb2xvck9mZnNldDpNYXRoLnJvdW5kKDEwMCpNYXRoLnJhbmRvbSgpKSx0aGlzLnRhcmdldEJsb2NrKXt2YXIgaT10aGlzLmluZGV4K3RoaXMuY29sb3JPZmZzZXQsZT01NSpNYXRoLnNpbiguMyppKSsyMDAscz01NSpNYXRoLnNpbiguMyppKzIpKzIwMCxuPTU1Kk1hdGguc2luKC4zKmkrNCkrMjAwO3RoaXMuY29sb3I9bmV3IFRIUkVFLkNvbG9yKGUvMjU1LHMvMjU1LG4vMjU1KX1lbHNlIHRoaXMuY29sb3I9MzM1NTQ2MDt0aGlzLnN0YXRlPTE8dGhpcy5pbmRleD90aGlzLlNUQVRFUy5BQ1RJVkU6dGhpcy5TVEFURVMuU1RPUFBFRCx0aGlzLnNwZWVkPS0uMS0uMDA1KnRoaXMuaW5kZXgsdGhpcy5zcGVlZDwtNCYmKHRoaXMuc3BlZWQ9LTQpLHRoaXMuZGlyZWN0aW9uPXRoaXMuc3BlZWQ7dmFyIG89bmV3IFRIUkVFLkJveEdlb21ldHJ5KHRoaXMuZGltZW5zaW9uLndpZHRoLHRoaXMuZGltZW5zaW9uLmhlaWdodCx0aGlzLmRpbWVuc2lvbi5kZXB0aCk7by5hcHBseU1hdHJpeCgobmV3IFRIUkVFLk1hdHJpeDQpLm1ha2VUcmFuc2xhdGlvbih0aGlzLmRpbWVuc2lvbi53aWR0aC8yLHRoaXMuZGltZW5zaW9uLmhlaWdodC8yLHRoaXMuZGltZW5zaW9uLmRlcHRoLzIpKSx0aGlzLm1hdGVyaWFsPW5ldyBUSFJFRS5NZXNoVG9vbk1hdGVyaWFsKHtjb2xvcjp0aGlzLmNvbG9yLHNoYWRpbmc6VEhSRUUuRmxhdFNoYWRpbmd9KSx0aGlzLm1lc2g9bmV3IFRIUkVFLk1lc2gobyx0aGlzLm1hdGVyaWFsKSx0aGlzLm1lc2gucG9zaXRpb24uc2V0KHRoaXMucG9zaXRpb24ueCx0aGlzLnBvc2l0aW9uLnkrKHRoaXMuc3RhdGUsdGhpcy5TVEFURVMuQUNUSVZFLDApLHRoaXMucG9zaXRpb24ueiksdGhpcy5zdGF0ZT09dGhpcy5TVEFURVMuQUNUSVZFJiYodGhpcy5wb3NpdGlvblt0aGlzLndvcmtpbmdQbGFuZV09LjU8TWF0aC5yYW5kb20oKT8tdGhpcy5NT1ZFX0FNT1VOVDp0aGlzLk1PVkVfQU1PVU5UKX1yZXR1cm4gdC5wcm90b3R5cGUucmV2ZXJzZURpcmVjdGlvbj1mdW5jdGlvbigpe3RoaXMuZGlyZWN0aW9uPTA8dGhpcy5kaXJlY3Rpb24/dGhpcy5zcGVlZDpNYXRoLmFicyh0aGlzLnNwZWVkKX0sdC5wcm90b3R5cGUucGxhY2U9ZnVuY3Rpb24oKXt0aGlzLnN0YXRlPXRoaXMuU1RBVEVTLlNUT1BQRUQ7dmFyIHQ9dGhpcy50YXJnZXRCbG9jay5kaW1lbnNpb25bdGhpcy53b3JraW5nRGltZW5zaW9uXS1NYXRoLmFicyh0aGlzLnBvc2l0aW9uW3RoaXMud29ya2luZ1BsYW5lXS10aGlzLnRhcmdldEJsb2NrLnBvc2l0aW9uW3RoaXMud29ya2luZ1BsYW5lXSksaT17cGxhbmU6dGhpcy53b3JraW5nUGxhbmUsZGlyZWN0aW9uOnRoaXMuZGlyZWN0aW9ufTtpZih0aGlzLmRpbWVuc2lvblt0aGlzLndvcmtpbmdEaW1lbnNpb25dLXQ8LjMmJih0PXRoaXMuZGltZW5zaW9uW3RoaXMud29ya2luZ0RpbWVuc2lvbl0saS5ib251cz0hMCx0aGlzLnBvc2l0aW9uLng9dGhpcy50YXJnZXRCbG9jay5wb3NpdGlvbi54LHRoaXMucG9zaXRpb24uej10aGlzLnRhcmdldEJsb2NrLnBvc2l0aW9uLnosdGhpcy5kaW1lbnNpb24ud2lkdGg9dGhpcy50YXJnZXRCbG9jay5kaW1lbnNpb24ud2lkdGgsdGhpcy5kaW1lbnNpb24uZGVwdGg9dGhpcy50YXJnZXRCbG9jay5kaW1lbnNpb24uZGVwdGgpLDA8dCl7dmFyIGU9e3dpZHRoOnRoaXMuZGltZW5zaW9uLndpZHRoLGhlaWdodDp0aGlzLmRpbWVuc2lvbi5oZWlnaHQsZGVwdGg6dGhpcy5kaW1lbnNpb24uZGVwdGh9O2VbdGhpcy53b3JraW5nRGltZW5zaW9uXS09dCx0aGlzLmRpbWVuc2lvblt0aGlzLndvcmtpbmdEaW1lbnNpb25dPXQ7dmFyIHM9bmV3IFRIUkVFLkJveEdlb21ldHJ5KHRoaXMuZGltZW5zaW9uLndpZHRoLHRoaXMuZGltZW5zaW9uLmhlaWdodCx0aGlzLmRpbWVuc2lvbi5kZXB0aCk7cy5hcHBseU1hdHJpeCgobmV3IFRIUkVFLk1hdHJpeDQpLm1ha2VUcmFuc2xhdGlvbih0aGlzLmRpbWVuc2lvbi53aWR0aC8yLHRoaXMuZGltZW5zaW9uLmhlaWdodC8yLHRoaXMuZGltZW5zaW9uLmRlcHRoLzIpKTt2YXIgbj1uZXcgVEhSRUUuTWVzaChzLHRoaXMubWF0ZXJpYWwpLG89bmV3IFRIUkVFLkJveEdlb21ldHJ5KGUud2lkdGgsZS5oZWlnaHQsZS5kZXB0aCk7by5hcHBseU1hdHJpeCgobmV3IFRIUkVFLk1hdHJpeDQpLm1ha2VUcmFuc2xhdGlvbihlLndpZHRoLzIsZS5oZWlnaHQvMixlLmRlcHRoLzIpKTt2YXIgaD1uZXcgVEhSRUUuTWVzaChvLHRoaXMubWF0ZXJpYWwpLGE9e3g6dGhpcy5wb3NpdGlvbi54LHk6dGhpcy5wb3NpdGlvbi55LHo6dGhpcy5wb3NpdGlvbi56fTt0aGlzLnBvc2l0aW9uW3RoaXMud29ya2luZ1BsYW5lXTx0aGlzLnRhcmdldEJsb2NrLnBvc2l0aW9uW3RoaXMud29ya2luZ1BsYW5lXT90aGlzLnBvc2l0aW9uW3RoaXMud29ya2luZ1BsYW5lXT10aGlzLnRhcmdldEJsb2NrLnBvc2l0aW9uW3RoaXMud29ya2luZ1BsYW5lXTphW3RoaXMud29ya2luZ1BsYW5lXSs9dCxuLnBvc2l0aW9uLnNldCh0aGlzLnBvc2l0aW9uLngsdGhpcy5wb3NpdGlvbi55LHRoaXMucG9zaXRpb24ueiksaC5wb3NpdGlvbi5zZXQoYS54LGEueSxhLnopLGkucGxhY2VkPW4saS5ib251c3x8KGkuY2hvcHBlZD1oKX1lbHNlIHRoaXMuc3RhdGU9dGhpcy5TVEFURVMuTUlTU0VEO3JldHVybiB0aGlzLmRpbWVuc2lvblt0aGlzLndvcmtpbmdEaW1lbnNpb25dPXQsaX0sdC5wcm90b3R5cGUudGljaz1mdW5jdGlvbigpe2lmKHRoaXMuc3RhdGU9PXRoaXMuU1RBVEVTLkFDVElWRSl7dmFyIHQ9dGhpcy5wb3NpdGlvblt0aGlzLndvcmtpbmdQbGFuZV07KHQ+dGhpcy5NT1ZFX0FNT1VOVHx8dDwtdGhpcy5NT1ZFX0FNT1VOVCkmJnRoaXMucmV2ZXJzZURpcmVjdGlvbigpLHRoaXMucG9zaXRpb25bdGhpcy53b3JraW5nUGxhbmVdKz10aGlzLmRpcmVjdGlvbix0aGlzLm1lc2gucG9zaXRpb25bdGhpcy53b3JraW5nUGxhbmVdPXRoaXMucG9zaXRpb25bdGhpcy53b3JraW5nUGxhbmVdfX0sdH0oKSxHYW1lPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3ZhciBpPXRoaXM7dGhpcy5TVEFURVM9e0xPQURJTkc6ImxvYWRpbmciLFBMQVlJTkc6InBsYXlpbmciLFJFQURZOiJyZWFkeSIsRU5ERUQ6ImVuZGVkIixSRVNFVFRJTkc6InJlc2V0dGluZyJ9LHRoaXMuYmxvY2tzPVtdLHRoaXMuc3RhdGU9dGhpcy5TVEFURVMuTE9BRElORyx0aGlzLnN0YWdlPW5ldyBTdGFnZSx0aGlzLm1haW5Db250YWluZXI9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvbnRhaW5lciIpLHRoaXMuc2NvcmVDb250YWluZXI9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNjb3JlIiksdGhpcy5zdGFydEJ1dHRvbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3RhcnQtYnV0dG9uIiksdGhpcy5pbnN0cnVjdGlvbnM9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImluc3RydWN0aW9ucyIpLHRoaXMuc2NvcmVDb250YWluZXIuaW5uZXJIVE1MPSIwIix0aGlzLm5ld0Jsb2Nrcz1uZXcgVEhSRUUuR3JvdXAsdGhpcy5wbGFjZWRCbG9ja3M9bmV3IFRIUkVFLkdyb3VwLHRoaXMuY2hvcHBlZEJsb2Nrcz1uZXcgVEhSRUUuR3JvdXAsdGhpcy5zdGFnZS5hZGQodGhpcy5uZXdCbG9ja3MpLHRoaXMuc3RhZ2UuYWRkKHRoaXMucGxhY2VkQmxvY2tzKSx0aGlzLnN0YWdlLmFkZCh0aGlzLmNob3BwZWRCbG9ja3MpLHRoaXMuYWRkQmxvY2soKSx0aGlzLnRpY2soKSx0aGlzLnVwZGF0ZVN0YXRlKHRoaXMuU1RBVEVTLlJFQURZKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJrZXlkb3duIixmdW5jdGlvbih0KXszMj09dC5rZXlDb2RlJiZpLm9uQWN0aW9uKCl9KSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsZnVuY3Rpb24odCl7aS5vbkFjdGlvbigpfSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpfSl9cmV0dXJuIHQucHJvdG90eXBlLnVwZGF0ZVN0YXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgaSBpbiB0aGlzLlNUQVRFUyl0aGlzLm1haW5Db250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLlNUQVRFU1tpXSk7dGhpcy5tYWluQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQodCksdGhpcy5zdGF0ZT10fSx0LnByb3RvdHlwZS5vbkFjdGlvbj1mdW5jdGlvbigpe3N3aXRjaCh0aGlzLnN0YXRlKXtjYXNlIHRoaXMuU1RBVEVTLlJFQURZOnRoaXMuc3RhcnRHYW1lKCk7YnJlYWs7Y2FzZSB0aGlzLlNUQVRFUy5QTEFZSU5HOnRoaXMucGxhY2VCbG9jaygpO2JyZWFrO2Nhc2UgdGhpcy5TVEFURVMuRU5ERUQ6dGhpcy5yZXN0YXJ0R2FtZSgpfX0sdC5wcm90b3R5cGUuc3RhcnRHYW1lPWZ1bmN0aW9uKCl7dGhpcy5zdGF0ZSE9dGhpcy5TVEFURVMuUExBWUlORyYmKHRoaXMuc2NvcmVDb250YWluZXIuaW5uZXJIVE1MPSIwIix0aGlzLnVwZGF0ZVN0YXRlKHRoaXMuU1RBVEVTLlBMQVlJTkcpLHRoaXMuYWRkQmxvY2soKSl9LHQucHJvdG90eXBlLnJlc3RhcnRHYW1lPWZ1bmN0aW9uKCl7dmFyIGk9dGhpczt0aGlzLnVwZGF0ZVN0YXRlKHRoaXMuU1RBVEVTLlJFU0VUVElORyk7Zm9yKHZhciBlPXRoaXMucGxhY2VkQmxvY2tzLmNoaWxkcmVuLHQ9ZnVuY3Rpb24odCl7VHdlZW5MaXRlLnRvKGVbdF0uc2NhbGUsLjIse3g6MCx5OjAsejowLGRlbGF5Oi4wMiooZS5sZW5ndGgtdCksZWFzZTpQb3dlcjEuZWFzZUluLG9uQ29tcGxldGU6ZnVuY3Rpb24oKXtyZXR1cm4gaS5wbGFjZWRCbG9ja3MucmVtb3ZlKGVbdF0pfX0pLFR3ZWVuTGl0ZS50byhlW3RdLnJvdGF0aW9uLC4yLHt5Oi41LGRlbGF5Oi4wMiooZS5sZW5ndGgtdCksZWFzZTpQb3dlcjEuZWFzZUlufSl9LHM9MDtzPGUubGVuZ3RoO3MrKyl0KHMpO3ZhciBuPS40Ky4wMiplLmxlbmd0aDt0aGlzLnN0YWdlLnNldENhbWVyYSgyLG4pO3ZhciBvPXt2YWx1ZTp0aGlzLmJsb2Nrcy5sZW5ndGgtMX07VHdlZW5MaXRlLnRvKG8sbix7dmFsdWU6MCxvblVwZGF0ZTpmdW5jdGlvbigpe2kuc2NvcmVDb250YWluZXIuaW5uZXJIVE1MPVN0cmluZyhNYXRoLnJvdW5kKG8udmFsdWUpKX19KSx0aGlzLmJsb2Nrcz10aGlzLmJsb2Nrcy5zbGljZSgwLDEpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLnN0YXJ0R2FtZSgpfSwxZTMqbil9LHQucHJvdG90eXBlLnBsYWNlQmxvY2s9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGk9dGhpcy5ibG9ja3NbdGhpcy5ibG9ja3MubGVuZ3RoLTFdLGU9aS5wbGFjZSgpO2lmKHRoaXMubmV3QmxvY2tzLnJlbW92ZShpLm1lc2gpLGUucGxhY2VkJiZ0aGlzLnBsYWNlZEJsb2Nrcy5hZGQoZS5wbGFjZWQpLGUuY2hvcHBlZCl7dGhpcy5jaG9wcGVkQmxvY2tzLmFkZChlLmNob3BwZWQpO3ZhciBzPXt5OiItPTMwIixlYXNlOlBvd2VyMS5lYXNlSW4sb25Db21wbGV0ZTpmdW5jdGlvbigpe3JldHVybiB0LmNob3BwZWRCbG9ja3MucmVtb3ZlKGUuY2hvcHBlZCl9fSxuPXtkZWxheTouMDUseDoieiI9PWUucGxhbmU/MTAqTWF0aC5yYW5kb20oKS01Oi4xLHo6IngiPT1lLnBsYW5lPzEwKk1hdGgucmFuZG9tKCktNTouMSx5Oi4xKk1hdGgucmFuZG9tKCl9O2UuY2hvcHBlZC5wb3NpdGlvbltlLnBsYW5lXT5lLnBsYWNlZC5wb3NpdGlvbltlLnBsYW5lXT9zW2UucGxhbmVdPSIrPSIrNDAqTWF0aC5hYnMoZS5kaXJlY3Rpb24pOnNbZS5wbGFuZV09Ii09Iis0MCpNYXRoLmFicyhlLmRpcmVjdGlvbiksVHdlZW5MaXRlLnRvKGUuY2hvcHBlZC5wb3NpdGlvbiwxLHMpLFR3ZWVuTGl0ZS50byhlLmNob3BwZWQucm90YXRpb24sMSxuKX10aGlzLmFkZEJsb2NrKCl9LHQucHJvdG90eXBlLmFkZEJsb2NrPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5ibG9ja3NbdGhpcy5ibG9ja3MubGVuZ3RoLTFdO2lmKHQmJnQuc3RhdGU9PXQuU1RBVEVTLk1JU1NFRClyZXR1cm4gdGhpcy5lbmRHYW1lKCk7dGhpcy5zY29yZUNvbnRhaW5lci5pbm5lckhUTUw9U3RyaW5nKHRoaXMuYmxvY2tzLmxlbmd0aC0xKTt2YXIgaT1uZXcgQmxvY2sodCk7dGhpcy5uZXdCbG9ja3MuYWRkKGkubWVzaCksdGhpcy5ibG9ja3MucHVzaChpKSx0aGlzLnN0YWdlLnNldENhbWVyYSgyKnRoaXMuYmxvY2tzLmxlbmd0aCksNTw9dGhpcy5ibG9ja3MubGVuZ3RoJiZ0aGlzLmluc3RydWN0aW9ucy5jbGFzc0xpc3QuYWRkKCJoaWRlIil9LHQucHJvdG90eXBlLmVuZEdhbWU9ZnVuY3Rpb24oKXt0aGlzLnVwZGF0ZVN0YXRlKHRoaXMuU1RBVEVTLkVOREVEKX0sdC5wcm90b3R5cGUudGljaz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5ibG9ja3NbdGhpcy5ibG9ja3MubGVuZ3RoLTFdLnRpY2soKSx0aGlzLnN0YWdlLnJlbmRlcigpLHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe3QudGljaygpfSl9LHR9KCksZ2FtZT1uZXcgR2FtZTwvc2NyaXB0Pg==')
document.getElementsByTagName("body")[0].appendChild(mg).focus()
var thestyle = document.createElement("style")
thestyle.innerText += "#mgid {position: fixed; left: 0px; top: 0px; width: 100%; height:100%; background: black; z-index: 9999999999; border: none;}"
thestyle.innerText += "body {overflow: hidden;}"
document.getElementsByTagName("body")[0].appendChild(thestyle)
